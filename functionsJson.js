/*  PHPFunctions - Информация о PHP функциях

    Version 2014-02-18
*/

var functionsJson = {"abs":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041c\u043e\u0434\u0443\u043b\u044c \u0447\u0438\u0441\u043b\u0430","syntax":"\n   number <b>abs<\/b>\n    ( mixed $number\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 number.\n  "},"acos":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0410\u0440\u043a\u043a\u043e\u0441\u0438\u043d\u0443\u0441","syntax":"\n    float <b>acos<\/b>\n     ( float $arg\n    )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0430\u0440\u043a\u043a\u043e\u0441\u0438\u043d\u0443\u0441 \u0447\u0438\u0441\u043b\u0430 arg \u0432 \u0440\u0430\u0434\u0438\u0430\u043d\u0430\u0445.\n    acos() - \u043e\u0431\u0440\u0430\u0442\u043d\u0430\u044f \u0442\u0440\u0438\u0433\u043e\u043d\u043e\u043c\u0435\u0442\u0440\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043a\n    cos(), \u0442.\u0435.\n   a==cos(acos(a)) \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0430, \u0432\u0445\u043e\u0434\u044f\u0449\u0435\u0433\u043e \u0432 \u043e\u0431\u043b\u0430\u0441\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    acos().\n  "},"acosh":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0413\u0438\u043f\u0435\u0440\u0431\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0430\u0440\u043a\u043a\u043e\u0441\u0438\u043d\u0443\u0441","syntax":"\n   float <b>acosh<\/b>\n    ( float $arg\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0433\u0438\u043f\u0435\u0440\u0431\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0430\u0440\u043a\u043a\u043e\u0441\u0438\u043d\u0443\u0441\n   arg, \u0442.\u0435. \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0447\u0435\u0439 \u0433\u0438\u043f\u0435\u0440\u0431\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043a\u043e\u0441\u0438\u043d\u0443\u0441\n   \u0440\u0430\u0432\u0435\u043d arg.\n  "},"addcslashes":{"version":"(PHP 4, PHP 5)","shortdesc":"\u042d\u043a\u0440\u0430\u043d\u0438\u0440\u0443\u0435\u0442 c\u0442\u0440\u043e\u043a\u0443 \u0441\u043b\u044d\u0448\u0430\u043c\u0438 \u0432 \u0441\u0442\u0438\u043b\u0435 \u044f\u0437\u044b\u043a\u0430 C","syntax":"\n   string <b>addcslashes<\/b>\n    ( string $str\n   , string $charlist\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u044d\u043a\u0440\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u043e\u0431\u0440\u0430\u0442\u043d\u044b\u043c\u0438 \u0441\u043b\u044d\u0448\u0430\u043c\u0438 \u043f\u0435\u0440\u0435\u0434 \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c\u0438,\n   \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c\u0438 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 charlist.\n  "},"addslashes":{"version":"(PHP 4, PHP 5)","shortdesc":"\u042d\u043a\u0440\u0430\u043d\u0438\u0440\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0441\u043b\u044d\u0448\u0435\u0439","syntax":"\n   string <b>addslashes<\/b>\n    ( string $str\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043f\u0435\u0440\u0435\u0434 \u043a\u0430\u0436\u0434\u044b\u043c \u0441\u043f\u0435\u0446\u0441\u0438\u043c\u0432\u043e\u043b\u043e\u043c \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\n   \u043e\u0431\u0440\u0430\u0442\u043d\u044b\u0439 \u0441\u043b\u044d\u0448, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0434\u043b\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u044d\u0442\u043e\u0439\n   \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043a \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0442.\u043f. \u042d\u043a\u0440\u0430\u043d\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u043e\u0434\u0438\u043d\u043e\u0447\u043d\u0430\u044f\n   \u043a\u0430\u0432\u044b\u0447\u043a\u0430 ('), \u0434\u0432\u043e\u0439\u043d\u0430\u044f \u043a\u0430\u0432\u044b\u0447\u043a\u0430\n   (\"), \u043e\u0431\u0440\u0430\u0442\u043d\u044b\u0439 \u0441\u043b\u044d\u0448 (\\) \u0438\n   NUL (\u0431\u0430\u0439\u0442 NULL).\n  "},"aggregate_info":{"version":"(PHP 4 >= 4.3.0)","shortdesc":"\n   Gets aggregation information for a given object\n  ","syntax":"\n   array <b>aggregate_info<\/b>\n    ( object $object\n   )","desc":"\n   Gets the aggregation information for the given\n   object.\n  "},"aggregate_methods_by_list":{"version":"(PHP 4 >= 4.2.0)","shortdesc":"\n   Selective dynamic class methods aggregation to an object\n  ","syntax":"\n   void <b>aggregate_methods_by_list<\/b>\n    ( object $object\n   , string $class_name\n   , array $methods_list\n   [, bool $exclude = false\n  ] )","desc":"\n   Aggregates methods from a class to an existing object using a list of\n   method names.\n  "},"aggregate_methods_by_regexp":{"version":"(PHP 4 >= 4.2.0)","shortdesc":"\n   Selective class methods aggregation to an object using a regular\n   expression\n  ","syntax":"\n   void <b>aggregate_methods_by_regexp<\/b>\n    ( object $object\n   , string $class_name\n   , string $regexp\n   [, bool $exclude = false\n  ] )","desc":"\n   Aggregates methods from a class to an existing object using a regular\n   expression to match method names. \n  "},"aggregate_methods":{"version":"(PHP 4 >= 4.2.0)","shortdesc":"\n   Dynamic class and object aggregation of methods\n  ","syntax":"\n   void <b>aggregate_methods<\/b>\n    ( object $object\n   , string $class_name\n   )","desc":"\n   Aggregates all methods defined in a class to an existing object, except\n   for the class constructor, or methods whose names start with an underscore\n   character (_) which are considered private to the aggregated class.\n  "},"aggregate_properties_by_list":{"version":"(PHP 4 >= 4.2.0)","shortdesc":"\n   Selective dynamic class properties aggregation to an object\n  ","syntax":"\n   void <b>aggregate_properties_by_list<\/b>\n    ( object $object\n   , string $class_name\n   , array $properties_list\n   [, bool $exclude = false\n  ] )","desc":"\n   Aggregates properties from a class to an existing object using a list of\n   property names. \n  "},"aggregate_properties_by_regexp":{"version":"(PHP 4 >= 4.2.0)","shortdesc":"\n   Selective class properties aggregation to an object using a regular\n   expression\n  ","syntax":"\n   void <b>aggregate_properties_by_regexp<\/b>\n    ( object $object\n   , string $class_name\n   , string $regexp\n   [, bool $exclude = false\n  ] )","desc":"\n   Aggregates properties from a class to an existing object using a regular\n   expression to match their names. \n  "},"aggregate_properties":{"version":"(PHP 4 >= 4.2.0)","shortdesc":"\n   Dynamic aggregation of  class properties to an object\n  ","syntax":"\n   void <b>aggregate_properties<\/b>\n    ( object $object\n   , string $class_name\n   )","desc":"\n   Aggregates all properties defined in a class to an existing object, except\n   for properties whose names start with an underscore character (_) which\n   are considered private to the aggregated class.\n  "},"aggregate":{"version":"(PHP 4 >= 4.2.0)","shortdesc":"\n   Dynamic class and object aggregation of methods and properties\n  ","syntax":"\n   void <b>aggregate<\/b>\n    ( object $object\n   , string $class_name\n   )","desc":"\n   Aggregates methods and properties defined in a class to an existing\n   object. Methods and properties with names starting with an underscore\n   character (_) are considered private to the aggregated class and are not\n   used, constructors are also excluded from the aggregation procedure.\n  "},"aggregation_info":{"version":"(PHP 4 >= 4.2.0 and < 4.3.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  aggregate_info()","syntax":"","desc":""},"apache_child_terminate":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u043f\u0440\u043e\u0446\u0435\u0441\u0441 Apache \u043f\u043e \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u0438 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430","syntax":"\n   bool <b>apache_child_terminate<\/b>\n    ( void\n   )","desc":"\n    apache_child_terminate() \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u043f\u0440\u043e\u0446\u0435\u0441\u0441 Apache,\n   \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u044e\u0449\u0438\u0439 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 PHP \u0441 \u0442\u0435\u043c, \u0447\u0442\u043e\u0431\u044b \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u0435\u0433\u043e \u043f\u043e \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u0438\n   \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f PHP \u0441\u043a\u0440\u0438\u043f\u0442\u0430. \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0430 \u0434\u043b\u044f\n   \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430, \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u043b\u043e\u0441\u044c \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435\n   \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u043f\u0435\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u0438, \u043d\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u043d\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u0435\n   \u043f\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0438 \u0440\u0430\u0431\u043e\u0442\u044b PHP \u0441\u043a\u0440\u0438\u043f\u0442\u0430.\n  "},"apache_get_modules":{"version":"(PHP 4 >= 4.3.2, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0445 \u043c\u043e\u0434\u0443\u043b\u0435\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 Apache","syntax":"\n   array <b>apache_get_modules<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0445 \u043c\u043e\u0434\u0443\u043b\u0435\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 Apache.\n  "},"apache_get_version":{"version":"(PHP 4 >= 4.3.2, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0435\u0440\u0441\u0438\u044e Apache","syntax":"\n   string <b>apache_get_version<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0435\u0440\u0441\u0438\u044e Apache.\n  "},"apache_getenv":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u043f\u043e\u0434\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 Apache","syntax":"\n   string <b>apache_getenv<\/b>\n    ( string $variable\n   [, bool $walk_to_top = false\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430 Apache, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c\n   variable.\n  "},"apache_lookup_uri":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0438\u0442\u044c \u0447\u0430\u0441\u0442\u0438\u0447\u043d\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 URI \u0438 \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u0432\u0441\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u044f","syntax":"\n   object <b>apache_lookup_uri<\/b>\n    ( string $filename\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442 \u0447\u0430\u0441\u0442\u0438\u0447\u043d\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 URI. \n   \u042d\u0442\u043e\u0433\u043e \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u0439 \u0432\u0430\u0436\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \n   \u043e \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0440\u0435\u0441\u0443\u0440\u0441\u0435.\n  "},"apache_note":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u043a \u0437\u0430\u043f\u0440\u043e\u0441\u0443 Apache","syntax":"\n   string <b>apache_note<\/b>\n    ( string $note_name\n   [, string $note_value = \"\"\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0431\u0435\u0440\u0442\u043a\u043e\u0439 \u0434\u043b\u044f table_get \u0438\n   table_set. \u0421 \u0435\u0451 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u043e\u0436\u043d\u043e \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439 \n   (apache notes table), \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u043e\u0437\u0434\u0430\u0451\u0442\u0441\u044f \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n   \u0422\u0430\u0431\u043b\u0438\u0446\u0430 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043c\u043e\u0434\u0443\u043b\u044f\u043c Apache \u043e\u0431\u043c\u0435\u043d\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u0430\u043d\u043d\u044b\u043c\u0438.\n  "},"apache_request_headers":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u0430","syntax":"\n   array <b>apache_request_headers<\/b>\n    ( void\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 HTTP \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n  "},"apache_reset_timeout":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\u0421\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442 \u0442\u0430\u0439\u043c\u0435\u0440 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 Apache","syntax":"\n   bool <b>apache_reset_timeout<\/b>\n    ( void\n   )","desc":"\n    apache_reset_timeout() \u0441\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442 \u0442\u0430\u0439\u043c\u0435\u0440 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 Apache,\n   \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e-\u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u0432 300 \u0441\u0435\u043a\u0443\u043d\u0434. \u041f\u0440\u0438 set_time_limit(0);\n   ignore_user_abort(true) \u0438 \u043f\u0435\u0440\u0438\u043e\u0434\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0432\u044b\u0437\u043e\u0432\u0430\u0445\n    apache_reset_timeout(), Apache \u0442\u0435\u043e\u0440\u0435\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043c\u043e\u0436\u0435\u0442\n   \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0432\u0435\u0447\u043d\u043e.\n  "},"apache_response_headers":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 HTTP \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 \u043e\u0442\u0432\u0435\u0442\u0430 Apache","syntax":"\n   array <b>apache_response_headers<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 HTTP \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 \u043e\u0442\u0432\u0435\u0442\u0430 Apache\n  "},"apache_setenv":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e subprocess_env Apache","syntax":"\n   bool <b>apache_setenv<\/b>\n    ( string $variable\n   , string $value\n   [, bool $walk_to_top = false\n  ] )","desc":"\n    apache_setenv() \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\n   \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f Apache, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0439 \u043a\u0430\u043a\n   variable.\n  "},"apc_add":{"version":"(PECL apc >= 3.0.13)","shortdesc":"\n   Cache a new variable in the data store\n  ","syntax":"\n   bool <b>apc_add<\/b>\n    ( string $key\n   , mixed $var\n   [, int $ttl = 0\n  ] )\n\n   array <b>apc_add<\/b>\n    ( array $values\n   [, mixed $unused = NULL\n   [, int $ttl = 0\n  ]] )\n","desc":"\n   Caches a variable in the data store, only if it's not already stored.\n  "},"apc_bin_dump":{"version":"(PECL apc >= 3.1.4)","shortdesc":"Get a binary dump of the given files and user variables","syntax":"\n   string <b>apc_bin_dump<\/b>\n    ([ array $files = NULL\n   [, array $user_vars = NULL\n  ]] )","desc":"\n   Returns a binary dump of the given files and user variables from the APC cache.\n   A NULL for files or user_vars signals a dump of every entry, whereas array() will dump\n   nothing.\n  "},"apc_bin_dumpfile":{"version":"(PECL apc >= 3.1.4)","shortdesc":"Output a binary dump of cached files and user variables to a file","syntax":"\n   int <b>apc_bin_dumpfile<\/b>\n    ( array $files\n   , array $user_vars\n   , string $filename\n   [, int $flags = 0\n   [, resource $context = NULL\n  ]] )","desc":"\n   Outputs a binary dump of the given files and user variables from the APC\n   cache to the named file.\n  "},"apc_bin_load":{"version":"(PECL apc >= 3.1.4)","shortdesc":"Load a binary dump into the APC file\/user cache","syntax":"\n   bool <b>apc_bin_load<\/b>\n    ( string $data\n   [, int $flags = 0\n  ] )","desc":"\n   Loads the given binary dump into the APC file\/user cache.\n  "},"apc_bin_loadfile":{"version":"(PECL apc >= 3.1.4)","shortdesc":"Load a binary dump from a file into the APC file\/user cache","syntax":"\n   bool <b>apc_bin_loadfile<\/b>\n    ( string $filename\n   [, resource $context = NULL\n   [, int $flags = 0\n  ]] )","desc":"\n   Loads a binary dump from a file into the APC file\/user cache.\n  "},"apc_cache_info":{"version":"(PECL apc >= 2.0.0)","shortdesc":"\n   Retrieves cached information from APC's data store\n  ","syntax":"\n   array <b>apc_cache_info<\/b>\n    ([ string $cache_type = \"\"\n   [, bool $limited = false\n  ]] )","desc":"\n   Retrieves cached information and meta-data from APC's data store.\n  "},"apc_cas":{"version":"(PECL apc >= 3.1.1)","shortdesc":"Updates an old value with a new value","syntax":"\n   bool <b>apc_cas<\/b>\n    ( string $key\n   , int $old\n   , int $new\n   )","desc":"\n    apc_cas() updates an already existing integer value if the \n   old parameter matches the currently stored value \n   with the value of the new parameter.\n  "},"apc_clear_cache":{"version":"(PECL apc >= 2.0.0)","shortdesc":"\n   Clears the APC cache\n  ","syntax":"\n   bool <b>apc_clear_cache<\/b>\n    ([ string $cache_type = \"\"\n  ] )","desc":"\n   Clears the user\/system cache.\n  "},"apc_compile_file":{"version":"(PECL apc >= 3.0.13)","shortdesc":"\n   Stores a file in the bytecode cache, bypassing all filters.\n  ","syntax":"\n   mixed <b>apc_compile_file<\/b>\n    ( string $filename\n   [, bool $atomic = true\n  ] )","desc":"\n   Stores a file in the bytecode cache, bypassing all filters.\n  "},"apc_dec":{"version":"(PECL apc >= 3.1.1)","shortdesc":"Decrease a stored number","syntax":"\n   int <b>apc_dec<\/b>\n    ( string $key\n   [, int $step = 1\n   [, bool &$success\n  ]] )","desc":"\n   Decreases a stored integer value.\n  "},"apc_define_constants":{"version":"(PECL apc >= 3.0.0)","shortdesc":"\n   Defines a set of constants for retrieval and mass-definition \n  ","syntax":"\n   bool <b>apc_define_constants<\/b>\n    ( string $key\n   , array $constants\n   [, bool $case_sensitive = true\n  ] )","desc":"\n    define() is notoriously slow. Since the main benefit of\n   APC is to increase the performance of scripts\/applications, this mechanism\n   is provided to streamline the process of mass constant definition. However,\n   this function does not perform as well as anticipated.\n  "},"apc_delete_file":{"version":"(PECL apc >= 3.1.1)","shortdesc":"Deletes files from the opcode cache","syntax":"\n   mixed <b>apc_delete_file<\/b>\n    ( mixed $keys\n   )","desc":"\n   Deletes the given files from the opcode cache.\n  "},"apc_delete":{"version":"(PECL apc >= 3.0.0)","shortdesc":"\n   Removes a stored variable from the cache\n  ","syntax":"\n   mixed <b>apc_delete<\/b>\n    ( string $key\n   )","desc":"\n   Removes a stored variable from the cache.\n  "},"apc_exists":{"version":"(PECL apc >= 3.1.4)","shortdesc":"Checks if APC key exists","syntax":"\n   mixed <b>apc_exists<\/b>\n    ( mixed $keys\n   )","desc":"\n   Checks if one or more APC keys exist.\n  "},"apc_fetch":{"version":"(PECL apc >= 3.0.0)","shortdesc":"\n   Fetch a stored variable from the cache\n  ","syntax":"\n   mixed <b>apc_fetch<\/b>\n    ( mixed $key\n   [, bool &$success\n  ] )","desc":"\n   Fetchs a stored variable from the cache.\n  "},"apc_inc":{"version":"(PECL apc >= 3.1.1)","shortdesc":"Increase a stored number","syntax":"\n   int <b>apc_inc<\/b>\n    ( string $key\n   [, int $step = 1\n   [, bool &$success\n  ]] )","desc":"\n   Increases a stored number.\n  "},"apc_load_constants":{"version":"(PECL apc >= 3.0.0)","shortdesc":"\n   Loads a set of constants from the cache\n  ","syntax":"\n   bool <b>apc_load_constants<\/b>\n    ( string $key\n   [, bool $case_sensitive = true\n  ] )","desc":"\n   Loads a set of constants from the cache.\n  "},"apc_sma_info":{"version":"(PECL apc >= 2.0.0)","shortdesc":"\n   Retrieves APC's Shared Memory Allocation information\n  ","syntax":"\n   array <b>apc_sma_info<\/b>\n    ([ bool $limited = false\n  ] )","desc":"\n   Retrieves APC's Shared Memory Allocation information.\n  "},"apc_store":{"version":"(PECL apc >= 3.0.0)","shortdesc":"\n   Cache a variable in the data store\n  ","syntax":"\n   bool <b>apc_store<\/b>\n    ( string $key\n   , mixed $var\n   [, int $ttl = 0\n  ] )\n\n   array <b>apc_store<\/b>\n    ( array $values\n   [, mixed $unused = NULL\n   [, int $ttl = 0\n  ]] )\n","desc":"\n   Cache a variable in the data store.\n  "},"apd_breakpoint":{"version":"(PECL apd >= 0.2)","shortdesc":"\u041e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440 \u0438 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u0441\u0438\u043c\u0432\u043e\u043b \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0430 \u043a\u0430\u0440\u0435\u0442\u043a\u0438 (CR) \u0438\u0437 \u0441\u043e\u043a\u0435\u0442\u0430","syntax":"\n   bool <b>apd_breakpoint<\/b>\n    ( int $debug_level\n   )","desc":"\n   \u042d\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0440\u0430\u043d\u0435\u0435 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u043d\u043e\u0433\u043e \u0432\u0430\u043c\u0438 \u0441\u043a\u0440\u0438\u043f\u0442\u0430\n   \u0438 \u043e\u0436\u0438\u0434\u0430\u0442\u044c \u043e\u0442\u0432\u0435\u0442 \u0441 \u0441\u043e\u043a\u0435\u0442\u0430. \u0414\u043b\u044f \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c\n   \"Enter\" (\u043f\u0443\u0441\u0442\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430) \u0438\u043b\u0438 \u0432\u0432\u0435\u0441\u0442\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 php \u043d\u0430 \u0438\u0441\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435.\n  "},"apd_callstack":{"version":"(PECL apd 0.2-0.4)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0432\u044b\u0437\u043e\u0432 \u0441\u0442\u0435\u043a\u0430 \u0432 \u0432\u0438\u0434\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u0430","syntax":"\n   array <b>apd_callstack<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0432\u044b\u0437\u043e\u0432 \u0441\u0442\u0435\u043a\u0430 \u0432 \u0432\u0438\u0434\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u0430\n  "},"apd_clunk":{"version":"(PECL apd 0.2-0.4)","shortdesc":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435 \u0438 \u0441\u0442\u0435\u043a \u0432\u044b\u0437\u043e\u0432\u0430","syntax":"\n   void <b>apd_clunk<\/b>\n    ( string $warning\n   [, string $delimiter\n  ] )","desc":"\n   \u0412 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0438 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u0435\u043d Carp::cluck \u0432 PERL. \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435\n   \u0438 \u0441\u0442\u0435\u043a \u0432\u044b\u0437\u043e\u0432\u0430.\n  "},"apd_continue":{"version":"(PECL apd >= 0.2)","shortdesc":"Restarts the interpreter","syntax":"\n   bool <b>apd_continue<\/b>\n    ( int $debug_level\n   )","desc":"\n   Usually sent via the socket to restart the interpreter.\n  "},"apd_croak":{"version":"(PECL apd 0.2-0.4)","shortdesc":"Throw an error, a callstack and then exit","syntax":"\n   void <b>apd_croak<\/b>\n    ( string $warning\n   [, string $delimiter = \"<BR \/>\"\n  ] )","desc":"\n   Behaves like perl's Carp::croak. Throw an error, a callstack and then\n   exit.\n  "},"apd_dump_function_table":{"version":"(Unknown)","shortdesc":"Outputs the current function table","syntax":"\n   void <b>apd_dump_function_table<\/b>\n    ( void\n   )","desc":"\n   Outputs the current function table.\n  "},"apd_dump_persistent_resources":{"version":"(PECL apd 0.2-0.4)","shortdesc":"Return all persistent resources as an array","syntax":"\n   array <b>apd_dump_persistent_resources<\/b>\n    ( void\n   )","desc":"\n   Return all persistent resources as an array.\n  "},"apd_dump_regular_resources":{"version":"(PECL apd 0.2-0.4)","shortdesc":"Return all current regular resources as an array","syntax":"\n   array <b>apd_dump_regular_resources<\/b>\n    ( void\n   )","desc":"\n   Return all current regular resources as an array.\n  "},"apd_echo":{"version":"(PECL apd >= 0.2)","shortdesc":"Echo to the debugging socket","syntax":"\n   bool <b>apd_echo<\/b>\n    ( string $output\n   )","desc":"\n   Usually sent via the socket to request information about the running \n   script.\n  "},"apd_get_active_symbols":{"version":"(PECL apd 0.2)","shortdesc":"Get an array of the current variables names in the local scope","syntax":"\n   array <b>apd_get_active_symbols<\/b>\n    ( void\n   )","desc":"\n   Returns the names of all the variables defined in the active scope, (not \n   their values).\n  "},"apd_set_pprof_trace":{"version":"(PECL apd >= 0.2)","shortdesc":"Starts the session debugging","syntax":"\n   string <b>apd_set_pprof_trace<\/b>\n    ([ string $dump_directory = ini_get(\"apd.dumpdir\")\n   [, string $fragment = \"pprof\"\n  ]] )","desc":"\n   Starts debugging to pprof_{process_id} in the\n   dump directory.\n  "},"apd_set_session_trace_socket":{"version":"(PECL apd >= 0.2)","shortdesc":"Starts the remote session debugging","syntax":"\n   bool <b>apd_set_session_trace_socket<\/b>\n    ( string $tcp_server\n   , int $socket_type\n   , int $port\n   , int $debug_level\n   )","desc":"\n   Connects to the specified tcp_server (eg. tcplisten)\n   and sends debugging data to the socket. \n  "},"apd_set_session_trace":{"version":"(PECL apd 0.2-0.4)","shortdesc":"Starts the session debugging","syntax":"\n   void <b>apd_set_session_trace<\/b>\n    ( int $debug_level\n   [, string $dump_directory = ini_get(\"apd.dumpdir\")\n  ] )","desc":"\n   Starts debugging to apd_dump_{process_id} in the\n   dump directory.\n  "},"apd_set_session":{"version":"(PECL apd 0.2-0.4)","shortdesc":"Changes or sets the current debugging level","syntax":"\n   void <b>apd_set_session<\/b>\n    ( int $debug_level\n   )","desc":"\n   This can be used to increase or decrease debugging in a different area of \n   your application.\n  "},"array_change_key_case":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u041c\u0435\u043d\u044f\u0435\u0442 \u0440\u0435\u0433\u0438\u0441\u0442\u0440 \u043a\u043b\u044e\u0447\u0435\u0439 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435","syntax":"\n   array <b>array_change_key_case<\/b>\n    ( array $input\n   [, int $case = CASE_LOWER\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 input, \u0432\u0441\u0435 \u043a\u043b\u044e\u0447\u0438\n   \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u044b \u0432 \u043d\u0438\u0436\u043d\u0438\u0439 \u0438\u043b\u0438 \u0432\u0435\u0440\u0445\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440. \u0427\u0438\u0441\u043b\u043e\u0432\u044b\u0435\n   \u043a\u043b\u044e\u0447\u0438 \u043e\u0441\u0442\u0430\u043d\u0443\u0442\u0441\u044f \u043d\u0435\u0442\u0440\u043e\u043d\u0443\u0442\u044b\u043c\u0438.\n  "},"array_chunk":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0420\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u043d\u0430 \u0447\u0430\u0441\u0442\u0438","syntax":"\n   array <b>array_chunk<\/b>\n    ( array $input\n   , int $size\n   [, bool $preserve_keys = false\n  ] )","desc":"\n   \u0420\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u043d\u0430 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0447\u0430\u0441\u0442\u0435\u0439 \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u043c size.\n   \u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0438\u0437 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0445 \u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043c\u0435\u043d\u044c\u0448\u0435\u0435\n   \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, \u0447\u0435\u043c \u0443\u043a\u0430\u0437\u0430\u043d\u043e \u0432 size.\n  "},"array_column":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Return the values from a single column in the input array","syntax":"\n   array <b>array_column<\/b>\n    ( array $array\n   , mixed $column_key\n   [, mixed $index_key = null\n  ] )","desc":"\n    array_column() returns the values from a single column of\n   the array, identified by the\n   column_key. Optionally, you may provide an\n   index_key to index the values in the returned array by\n   the values from the index_key column in the input\n   array.\n  "},"array_combine":{"version":"(PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043e\u0434\u0438\u043d \u043c\u0430\u0441\u0441\u0438\u0432 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043a\u043b\u044e\u0447\u0435\u0439, \u0430 \u0434\u0440\u0443\u0433\u043e\u0439 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439","syntax":"\n   array <b>array_combine<\/b>\n    ( array $keys\n   , array $values\n   )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 array, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u0430\n   keys \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043a\u043b\u044e\u0447\u0435\u0439 \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043c\u0430\u0441\u0441\u0441\u0438\u0432\u0430\n   values \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439.\n  "},"array_count_values":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0441\u0435\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043c\u0430\u0441\u0441\u0438\u0432\u0430","syntax":"\n   array <b>array_count_values<\/b>\n    ( array $input\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  array_count_values() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432,\n   \u043a\u043b\u044e\u0447\u0430\u043c\u0438 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u0430 input,\n   \u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 - \u0447\u0430\u0441\u0442\u043e\u0442\u0430 \u043f\u043e\u0432\u0442\u043e\u0440\u0435\u043d\u0438\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 input.\n  "},"array_diff_assoc":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0440\u0430\u0441\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 \u0441 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u043e\u0439 \u0438\u043d\u0434\u0435\u043a\u0441\u0430","syntax":"\n   array <b>array_diff_assoc<\/b>\n    ( array $array1\n   , array $array2\n   [, array $...\n  ] )","desc":"\n   \u0421\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u0442 array1 \u0441 array2\n   \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0430\u0437\u043d\u0438\u0446\u0443. \u0412 \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u043e\u0442  array_diff(),\n   \u043a\u043b\u044e\u0447\u0438 \u0442\u0430\u043a\u0436\u0435 \u0443\u0447\u0430\u0441\u0442\u0432\u0443\u044e\u0442 \u0432 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0438.\n  "},"array_diff_key":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0440\u0430\u0441\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432, \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u044f \u043a\u043b\u044e\u0447\u0438","syntax":"\n   array <b>array_diff_key<\/b>\n    ( array $array1\n   , array $array2\n   [, array $...\n  ] )","desc":"\n   \u0421\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u0442 \u043a\u043b\u044e\u0447\u0438 array1 \u0441 \u043a\u043b\u044e\u0447\u0430\u043c\u0438\n   array2 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0430\u0437\u043d\u0438\u0446\u0443.\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u0445\u043e\u0436\u0430 \u0441  array_diff() \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c\n   \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u043a\u043b\u044e\u0447\u0438, \u0430 \u043d\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.\n  "},"array_diff_uassoc":{"version":"(PHP 5)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0440\u0430\u0441\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 \u0441 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u043e\u0439 \u0438\u043d\u0434\u0435\u043a\u0441\u0430,\n     \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u043c\u043e\u0439 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 callback-\u0444\u0443\u043d\u043a\u0446\u0438\u0438\n  ","syntax":"\n   array <b>array_diff_uassoc<\/b>\n    ( array $array1\n   , array $array2\n   [, array $...\n   ], callable $key_compare_func\n   )\nint callback ( mixed $a, mixed $b )\n","desc":"\n   \u0421\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u0442 array1 c array2\n   \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0430\u0437\u043d\u0438\u0446\u0443. \u0412 \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u043e\u0442  array_diff(),\n   \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u043a\u043b\u044e\u0447\u0438.\n  "},"array_diff_ukey":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0440\u0430\u0441\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f callback-\u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u043a\u043b\u044e\u0447\u0435\u0439","syntax":"\n   array <b>array_diff_ukey<\/b>\n    ( array $array1\n   , array $array2\n   [, array $ ...\n   ], callable $key_compare_func\n   )\nint callback ( mixed $a, mixed $b )\n","desc":"\n   \u0421\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u0442 \u043a\u043b\u044e\u0447\u0438 array1 \u0441 \u043a\u043b\u044e\u0447\u0430\u043c\u0438\n   array2 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0430\u0437\u043d\u0438\u0446\u0443.\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u0445\u043e\u0436\u0430 \u043d\u0430  array_diff() \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0442\u043e\u0433\u043e,\n   \u0447\u0442\u043e \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u043a\u043b\u044e\u0447\u0438, \u0430 \u043d\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.\n  "},"array_diff":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u044c \u0440\u0430\u0441\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432","syntax":"\n   array <b>array_diff<\/b>\n    ( array $array1\n   , array $array2\n   [, array $...\n  ] )","desc":"\n   \u0421\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u0442 array1 \u0441 array2\n   \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0430\u0437\u043d\u0438\u0446\u0443.\n  "},"array_fill_keys":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0438 \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0435\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438, \u0441 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043a\u043b\u044e\u0447\u0430\u043c\u0438","syntax":"\n   array <b>array_fill_keys<\/b>\n    ( array $keys\n   , mixed $value\n   )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0438 \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 value,\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u0430 keys \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043a\u043b\u044e\u0447\u0435\u0439.\n  "},"array_fill":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0417\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438","syntax":"\n   array <b>array_fill<\/b>\n    ( int $start_index\n   , int $num\n   , mixed $value\n   )","desc":"\n   \u0417\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 num \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438 \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c\n   value, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u043a\u043b\u044e\u0447\u0430 start_index.\n  "},"array_filter":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u0424\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e callback-\u0444\u0443\u043d\u043a\u0446\u0438\u0438","syntax":"\n   array <b>array_filter<\/b>\n    ( array $input\n   [, callable $callback = \"\"\n  ] )","desc":"\n   \u041e\u0431\u0445\u043e\u0434\u0438\u0442 \u043a\u0430\u0436\u0434\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 input,\n   \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u044f \u0435\u0433\u043e \u0432 callback-\u0444\u0443\u043d\u043a\u0446\u0438\u044e. \u0415\u0441\u043b\u0438\n   callback-\u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 true, \u0434\u0430\u043d\u043d\u043e\u0435\n   \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0432 \u043c\u0430\u0441\u0441\u0438\u0432 input.\n   \u041a\u043b\u044e\u0447\u0438 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044e\u0442\u0441\u044f.\n  "},"array_flip":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041c\u0435\u043d\u044f\u0435\u0442 \u043c\u0435\u0441\u0442\u0430\u043c\u0438 \u043a\u043b\u044e\u0447\u0438 \u0441 \u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435","syntax":"\n   array <b>array_flip<\/b>\n    ( array $trans\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  array_flip() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 array\n   \u043d\u0430\u043e\u0431\u043e\u0440\u043e\u0442, \u0442\u043e \u0435\u0441\u0442\u044c \u043a\u043b\u044e\u0447\u0438 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 trans \u0441\u0442\u0430\u043d\u043e\u0432\u044f\u0442\u0441\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438,\n   \u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u0430 trans \u0441\u0442\u0430\u043d\u043e\u0432\u044f\u0442\u0441\u044f \u043a\u043b\u044e\u0447\u0430\u043c\u0438.\n  "},"array_intersect_assoc":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0441\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 \u0441 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u043e\u0439 \u0438\u043d\u0434\u0435\u043a\u0441\u0430","syntax":"\n   array <b>array_intersect_assoc<\/b>\n    ( array $array1\n   , array $array2\n   [, array $ ...\n  ] )","desc":""},"array_intersect_key":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u044c \u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432, \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u044f \u043a\u043b\u044e\u0447\u0438","syntax":"\n   array <b>array_intersect_key<\/b>\n    ( array $array1\n   , array $array2\n   [, array $ ...\n  ] )","desc":"\n    array_intersect_key() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432,\n   \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0432\u0441\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b array1,\n   \u0438\u043c\u0435\u044e\u0449\u0438\u0435 \u043a\u043b\u044e\u0447\u0438, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0435\u0441\u044f \u0432\u043e \u0432\u0441\u0435\u0445 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445..\n  "},"array_intersect_uassoc":{"version":"(PHP 5)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0441\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 \u0441 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u043e\u0439 \u0438\u043d\u0434\u0435\u043a\u0441\u0430,\n   \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u043c\u043e\u0439 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 callback-\u0444\u0443\u043d\u043a\u0446\u0438\u0438","syntax":"\n   array <b>array_intersect_uassoc<\/b>\n    ( array $array1\n   , array $array2\n   [, array $ ...\n   ], callable $key_compare_func\n   )\nint callback ( mixed $a, mixed $b )\n","desc":"\n    array_intersect_uassoc() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432,\n   \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f array1,\n   \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0435\u0441\u044f \u0432\u043e \u0432\u0441\u0435\u0445 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445. \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0432 \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u043e\u0442\n    array_intersect(), \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u043a\u043b\u044e\u0447\u0438.\n  "},"array_intersect_ukey":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0441\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f callback-\u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u043a\u043b\u044e\u0447\u0435\u0439","syntax":"\n   array <b>array_intersect_ukey<\/b>\n    ( array $array1\n   , array $array2\n   [, array $...\n   ], callable $key_compare_func\n   )\nint callback ( mixed $a, mixed $b )\n","desc":"\n    array_intersect_ukey() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432,\n   \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f array1,\n   \u0438\u043c\u0435\u044e\u0449\u0438\u0435 \u043a\u043b\u044e\u0447\u0438, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0435\u0441\u044f \u0432\u043e \u0432\u0441\u0435\u0445 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445.\n  "},"array_intersect":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0441\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432","syntax":"\n   array <b>array_intersect<\/b>\n    ( array $array1\n   , array $array2\n   [, array $ ...\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  array_intersect() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432,\n   \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0432\u0441\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u0430 array1,\n   \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u0441\u044f \u0432\u043e \u0432\u0441\u0435\u0445 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430\u0445.\n   \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u043a\u043b\u044e\u0447\u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044e\u0442\u0441\u044f.\n  "},"array_key_exists":{"version":"(PHP 4 >= 4.0.7, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043b\u0438 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043a\u043b\u044e\u0447 \u0438\u043b\u0438 \u0438\u043d\u0434\u0435\u043a\u0441","syntax":"\n   bool <b>array_key_exists<\/b>\n    ( mixed $key\n   , array $search\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  array_key_exists() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE, \u0435\u0441\u043b\u0438\n   \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043a\u043b\u044e\u0447 key.\n   \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 key \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043b\u044e\u0431\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c,\n   \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u0430.\n  "},"array_keys":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0441\u0435 \u0438\u043b\u0438 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u043e\u0434\u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u043a\u043b\u044e\u0447\u0435\u0439 \u043c\u0430\u0441\u0441\u0438\u0432\u0430","syntax":"\n   array <b>array_keys<\/b>\n    ( array $input\n   [, mixed $search_value = NULL\n   [, bool $strict = false\n  ]] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  array_keys() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u0438 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0435 \u043a\u043b\u044e\u0447\u0438,\n   \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0435\u0441\u044f \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435 input.\n  "},"array_map":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u041f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442 callback-\u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043a\u043e \u0432\u0441\u0435\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0445 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432","syntax":"\n   array <b>array_map<\/b>\n    ( callable $callback\n   , array $arr1\n   [, array $...\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  array_map() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439\n   \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b arr1 \u043f\u043e\u0441\u043b\u0435 \u0438\u0445 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438\n   callback-\u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439. \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432,\n   \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0435\u043c\u044b\u0445 callback-\u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u0434\u043e\u043b\u0436\u043d\u043e \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0442\u044c \u0441\n   \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432, \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u0438  array_map().\n  "},"array_merge_recursive":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\u0420\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u043e\u0435 \u0441\u043b\u0438\u044f\u043d\u0438\u0435 \u0434\u0432\u0443\u0445 \u0438\u043b\u0438 \u0431\u043e\u043b\u0435\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432","syntax":"\n   array <b>array_merge_recursive<\/b>\n    ( array $array1\n   [, array $...\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  array_merge_recursive() \u0441\u043b\u0438\u0432\u0430\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b\n   \u0434\u0432\u0443\u0445 \u0438\u043b\u0438 \u0431\u043e\u043b\u0435\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0447\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043e\u0434\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430\n   \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u044f\u044e\u0442\u0441\u044f \u0432 \u043a\u043e\u043d\u0435\u0446 \u0434\u0440\u0443\u0433\u043e\u0433\u043e. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0438\u0440\u0443\u044e\u0449\u0438\u0439 \u043c\u0430\u0441\u0441\u0438\u0432.\n  "},"array_merge":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043b\u0438\u0432\u0430\u0435\u0442 \u043e\u0434\u0438\u043d \u0438\u043b\u0438 \u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432","syntax":"\n   array <b>array_merge<\/b>\n    ( array $array1\n   [, array $...\n  ] )","desc":"\n   \u0421\u043b\u0438\u0432\u0430\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043e\u0434\u043d\u043e\u0433\u043e \u0438\u043b\u0438 \u0431\u043e\u043b\u044c\u0448\u0435\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0447\u0442\u043e\n   \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043e\u0434\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u044f\u044e\u0442\u0441\u044f \u043a \u043a\u043e\u043d\u0446\u0443 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0433\u043e.\n   \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c \u0440\u0430\u0431\u043e\u0442\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u043e\u0432\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432.\n  "},"array_multisort":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 \u0438\u043b\u0438 \u043c\u043d\u043e\u0433\u043e\u043c\u0435\u0440\u043d\u044b\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u044b","syntax":"\n   bool <b>array_multisort<\/b>\n    ( array &$arr\n   [, mixed $arg = SORT_ASC\n   [, mixed $arg = SORT_REGULAR\n   [, mixed $...\n  ]]] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  array_multisort() \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0430 \u0434\u043b\u044f\n   \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438 \u0441\u0440\u0430\u0437\u0443 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 \u0438\u043b\u0438 \u043e\u0434\u043d\u043e\u0433\u043e \u043c\u043d\u043e\u0433\u043e\u043c\u0435\u0440\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430\n   \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u043e\u0434\u043d\u043e\u0439 \u0438\u043b\u0438 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u043c\u0438 \u0440\u0430\u0437\u043c\u0435\u0440\u043d\u043e\u0441\u0442\u044f\u043c\u0438.\n  "},"array_pad":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u0434\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u044b","syntax":"\n   array <b>array_pad<\/b>\n    ( array $input\n   , int $pad_size\n   , mixed $pad_value\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  array_pad() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043f\u0438\u044e \u043c\u0430\u0441\u0441\u0438\u0432\u0430\n   input, \u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u043e\u0433\u043e \u0434\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430\n   pad_size \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438\n   \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c pad_value. \u0415\u0441\u043b\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n   pad_size \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u0435\u043d, \u0442\u043e \u043c\u0430\u0441\u0441\u0438\u0432 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f\n   \u0432\u043f\u0440\u0430\u0432\u043e, \u0435\u0441\u043b\u0438 \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u0435\u043d - \u0432\u043b\u0435\u0432\u043e. \u0415\u0441\u043b\u0438 \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\n   \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 pad_size \u043c\u0435\u043d\u044c\u0448\u0435 \u0438\u043b\u0438 \u0440\u0430\u0432\u043d\u043e\n   \u0440\u0430\u0437\u043c\u0435\u0440\u0443 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 input,\n   \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043d\u0435 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442 \u043d\u0438\u043a\u0430\u043a\u0438\u0445 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439.\n   \u0417\u0430 \u043e\u0434\u0438\u043d \u0440\u0430\u0437 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c 1048576 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432.\n  "},"array_pop":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0418\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043c\u0430\u0441\u0441\u0438\u0432\u0430","syntax":"\n   mixed <b>array_pop<\/b>\n    ( array &$array\n   )","desc":"\n    array_pop() \u0438\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u0442 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\n   \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 array, \u0443\u043c\u0435\u043d\u044c\u0448\u0430\u044f \u0440\u0430\u0437\u043c\u0435\u0440\n   array \u043d\u0430 \u043e\u0434\u0438\u043d \u044d\u043b\u0435\u043c\u0435\u043d\u0442.\n   \u0415\u0441\u043b\u0438 array \u043f\u0443\u0441\u0442 (\u0438\u043b\u0438 \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u043c),\n   \u0431\u0443\u0434\u0435\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0451\u043d NULL. \u041a\u0440\u043e\u043c\u0435 \u044d\u0442\u043e\u0433\u043e, \u0435\u0441\u043b\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u043d \u043d\u0435 \u043c\u0430\u0441\u0441\u0438\u0432, \u0431\u0443\u0434\u0435\u0442\n   \u0432\u044b\u0437\u0432\u0430\u043d\u043e \u043f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435.\n  "},"array_product":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u044c \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043c\u0430\u0441\u0441\u0438\u0432\u0430","syntax":"\n   number <b>array_product<\/b>\n    ( array $array\n   )","desc":"\n    array_product() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043c\u0430\u0441\u0441\u0438\u0432\u0430.\n  "},"array_push":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0434\u0438\u043d \u0438\u043b\u0438 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u044d\u043b\u0435\u043c\u0435\u0442\u043e\u0432 \u0432 \u043a\u043e\u043d\u0435\u0446 \u043c\u0430\u0441\u0441\u0438\u0432\u0430","syntax":"\n   int <b>array_push<\/b>\n    ( array &$array\n   , mixed $var\n   [, mixed $...\n  ] )","desc":"\n    array_push() \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 array\n   \u043a\u0430\u043a \u0441\u0442\u044d\u043a, \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u043a\u043e\u043d\u0435\u0446 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 array.\n   \u0414\u043b\u0438\u043d\u0430 array \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\n   \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439. \u0418\u043c\u0435\u0435\u0442 \u0442\u043e\u0442 \u0436\u0435 \u044d\u0444\u0444\u0435\u043a\u0442, \u0447\u0442\u043e \u0438 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435:\n   "},"array_rand":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u043e\u0434\u043d\u043e \u0438\u043b\u0438 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430","syntax":"\n   mixed <b>array_rand<\/b>\n    ( array $input\n   [, int $num_req = 1\n  ] )","desc":"\n   \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u043e\u0434\u043d\u043e \u0438\u043b\u0438 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\n   \u043a\u043b\u044e\u0447 (\u0438\u043b\u0438 \u043a\u043b\u044e\u0447\u0438) \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432.\n  "},"array_reduce":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\u0418\u0442\u0435\u0440\u0430\u0442\u0438\u0432\u043d\u043e \u0443\u043c\u0435\u043d\u044c\u0448\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u043a \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f callback-\u0444\u0443\u043d\u043a\u0446\u0438\u044e","syntax":"\n   mixed <b>array_reduce<\/b>\n    ( array $input\n   , callable $function\n   [, mixed $initial = NULL\n  ] )\n\n       mixed callback\n        ( mixed &$result\n       , mixed $item\n       )\n","desc":"\n    array_reduce() \u0438\u0442\u0435\u0440\u0430\u0442\u0438\u0432\u043d\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442 callback-\u0444\u0443\u043d\u043a\u0446\u0438\u044e\n   function \u043a \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c \u043c\u0430\u0441\u0441\u0438\u0432\u0430\n   input \u0438, \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0441\u0432\u043e\u0434\u0438\u0442 \u043c\u0430\u0441\u0441\u0438\u0432\n   \u043a \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e.\n  "},"array_replace_recursive":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u0420\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u043e \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432","syntax":"\n   array <b>array_replace_recursive<\/b>\n    ( array $array\n   , array $array1\n   [, array $...\n  ] )","desc":"\n    array_replace_recursive() \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430\n   array  \u043d\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043f\u043e \u043a\u043b\u044e\u0447\u0430\u043c\n   \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438\u0437 \u0432\u0441\u0435\u0445 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432.\n   \u0415\u0441\u043b\u0438 \u043a\u043b\u044e\u0447 \u0438\u0437 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0435\u0441\u0442\u044c \u0432\u043e \u0432\u0442\u043e\u0440\u043e\u043c, \u0435\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u043c\u0435\u043d\u0435\u043d\u043e\n   \u043d\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0438\u0437 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430. \u0415\u0441\u043b\u0438 \u043a\u043b\u044e\u0447 \u0435\u0441\u0442\u044c \u0432\u043e \u0432\u0442\u043e\u0440\u043e\u043c \u043c\u0430\u0441\u0441\u0438\u0432\u0435, \u043d\u043e \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0432 \u043f\u0435\u0440\u0432\u043e\u043c,\n   \u043e\u043d \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u043d \u0432 \u043f\u0435\u0440\u0432\u043e\u043c \u043c\u0430\u0441\u0441\u0438\u0432\u0435. \u0415\u0441\u043b\u0438 \u043a\u043b\u044e\u0447 \u0435\u0441\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u043f\u0435\u0440\u0432\u043e\u043c \u043c\u0430\u0441\u0441\u0438\u0432\u0435, \u0442\u043e \u043e\u043d \u043e\u0441\u0442\u0430\u0435\u0442\u0441\u044f \u043a\u0430\u043a \u0435\u0441\u0442\u044c.\n   \u0415\u0441\u043b\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043e \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432, \u043e\u043d\u0438 \u0431\u0443\u0434\u0443\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u044b \u043f\u043e \u043f\u043e\u0440\u044f\u0434\u043a\u0443, \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0442\n   \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.\n  "},"array_replace":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u0417\u0430\u043c\u0435\u043d\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438 \u0434\u0440\u0443\u0433\u0438\u0445 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432","syntax":"\n   array <b>array_replace<\/b>\n    ( array $array\n   , array $array1\n   [, array $...\n  ] )","desc":"\n    array_replace() \u0437\u0430\u043c\u0435\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430\n   array \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c\u0438 \u043f\u043e \u043a\u043b\u044e\u0447\u0430\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 \u0438\u0437 \n   \u0434\u0440\u0443\u0433\u0438\u0445 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432. \u0415\u0441\u043b\u0438 \u043a\u043b\u044e\u0447 \u0438\u0437 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \n   \u0432\u043e \u0432\u0442\u043e\u0440\u043e\u043c \u043c\u0430\u0441\u0441\u0438\u0432\u0435, \u0435\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0438\u0437 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430.\n   \u0415\u0441\u043b\u0438 \u043a\u043b\u044e\u0447 \u0435\u0441\u0442\u044c \u0432\u043e \u0432\u0442\u043e\u0440\u043e\u043c \u043c\u0430\u0441\u0441\u0438\u0432\u0435, \u043d\u043e \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0432 \u043f\u0435\u0440\u0432\u043e\u043c - \u043e\u043d \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u043d \n   \u0432 \u043f\u0435\u0440\u0432\u043e\u043c \u043c\u0430\u0441\u0441\u0438\u0432\u0435. \u0415\u0441\u043b\u0438 \u043a\u043b\u044e\u0447 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u043f\u0435\u0440\u0432\u043e\u043c \u043c\u0430\u0441\u0441\u0438\u0432\u0435, \u0442\u043e \n   \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u043a\u0430\u043a \u0435\u0441\u0442\u044c. \u0415\u0441\u043b\u0438 \u0434\u043b\u044f \u0437\u0430\u043c\u0435\u043d\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043e \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432, \u043e\u043d\u0438 \n   \u0431\u0443\u0434\u0443\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u044b \u0432 \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u0438 \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u0437\u0434\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u044b \u0431\u0443\u0434\u0443\u0442 \n   \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438\u0437 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0445.\n  "},"array_reverse":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438 \u0432 \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435","syntax":"\n   array <b>array_reverse<\/b>\n    ( array $array\n   [, bool $preserve_keys = false\n  ] )","desc":"\n   \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 array \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432, \n   \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0432 \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435.\n  "},"array_search":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\u041e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442 \u043f\u043e\u0438\u0441\u043a \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\n   \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u043a\u043b\u044e\u0447 \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0434\u0430\u0447\u0438","syntax":"\n   mixed <b>array_search<\/b>\n    ( mixed $needle\n   , array $haystack\n   [, bool $strict = false\n  ] )","desc":"\n   \u0418\u0449\u0435\u0442 \u0432 haystack \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 needle.\n  "},"array_shift":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0418\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u0442 \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043c\u0430\u0441\u0441\u0438\u0432\u0430","syntax":"\n   mixed <b>array_shift<\/b>\n    ( array &$array\n   )","desc":"\n    array_shift() \u0438\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u0442 \u043f\u0435\u0440\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u0430\n   array \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0435\u0433\u043e, \u0441\u043e\u043a\u0440\u0430\u0449\u0430\u044f \u0440\u0430\u0437\u043c\u0435\u0440\n   array \u043d\u0430 \u043e\u0434\u0438\u043d \u044d\u043b\u0435\u043c\u0435\u043d\u0442.\n   \u0412\u0441\u0435 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u043a\u043b\u044e\u0447\u0438 \u0431\u0443\u0434\u0443\u0442 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u044b \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0447\u0442\u043e \u043d\u0443\u043c\u0435\u0440\u0430\u0446\u0438\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043d\u0430\u0447\u043d\u0451\u0442\u0441\u044f \u0441 \u043d\u0443\u043b\u044f,\n   \u0432 \u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043a\u0430\u043a \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0435 \u043a\u043b\u044e\u0447\u0438 \u043e\u0441\u0442\u0430\u043d\u0443\u0442\u0441\u044f \u043f\u0440\u0435\u0436\u043d\u0438\u043c\u0438.\n  "},"array_slice":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0441\u0440\u0435\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430","syntax":"\n   array <b>array_slice<\/b>\n    ( array $array\n   , int $offset\n   [, int $length = NULL\n   [, bool $preserve_keys = false\n  ]] )","desc":"\n    array_slice() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c\n   \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 array, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u0443\u044e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438\n   offset \u0438 length.\n  "},"array_splice":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0447\u0430\u0441\u0442\u044c \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0438 \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u0435\u0451 \u0447\u0435\u043c-\u043d\u0438\u0431\u0443\u0434\u044c \u0435\u0449\u0451","syntax":"\n   array <b>array_splice<\/b>\n    ( array &$input\n   , int $offset\n   [, int $length = 0\n   [, mixed $replacement\n  ]] )","desc":"\n   \u0423\u0434\u0430\u043b\u044f\u0435\u0442 length \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432, \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0445 \n   \u043d\u0430 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0438 offset \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \n   input, \u0438 \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u0438\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438\n   \u043c\u0430\u0441\u0441\u0438\u0432\u0430 replacement, \u0435\u0441\u043b\u0438 \u043e\u043d \u043f\u0435\u0440\u0435\u0434\u0430\u043d \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430.\n  "},"array_sum":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0441\u0443\u043c\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043c\u0430\u0441\u0441\u0438\u0432\u0430","syntax":"\n   number <b>array_sum<\/b>\n    ( array $array\n   )","desc":"\n    array_sum() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0443\u043c\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043c\u0430\u0441\u0441\u0438\u0432\u0430.\n  "},"array_udiff_assoc":{"version":"(PHP 5)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0440\u0430\u0441\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0430\u0445 \u0441 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u043e\u0439 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432,\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 callback-\u0444\u0443\u043d\u043a\u0446\u0438\u044e","syntax":"\n   array <b>array_udiff_assoc<\/b>\n    ( array $array1\n   , array $array2\n   [, array $ ...\n   ], callable $data_compare_func\n   )\nint callback ( mixed $a, mixed $b )\n","desc":"\n   \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0440\u0430\u0441\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 \u0441 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u043e\u0439 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432,\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 callback-\u0444\u0443\u043d\u043a\u0446\u0438\u044e.\n  "},"array_udiff_uassoc":{"version":"(PHP 5)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0440\u0430\u0441\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0430\u0445 \u0441 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u043e\u0439 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432,\n  \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0438 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432 callback-\u0444\u0443\u043d\u043a\u0446\u0438\u044e","syntax":"\n   array <b>array_udiff_uassoc<\/b>\n    ( array $array1\n   , array $array2\n   [, array $ ...\n   ], callable $data_compare_func\n   , callable $key_compare_func\n   )\nint callback ( mixed $a, mixed $b )\n","desc":"\n   \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0440\u0430\u0441\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0430\u0445 \u0441 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u043e\u0439 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432,\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0438 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432 callback-\u0444\u0443\u043d\u043a\u0446\u0438\u044e.\n  "},"array_udiff":{"version":"(PHP 5)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0440\u0430\u0441\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f callback-\u0444\u0443\u043d\u043a\u0446\u0438\u044e","syntax":"\n   array <b>array_udiff<\/b>\n    ( array $array1\n   , array $array2\n   [, array $ ...\n   ], callable $data_compare_func\n   )\nint callback ( mixed $a, mixed $b )\n","desc":"\n   \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0440\u0430\u0441\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445\n   callback-\u0444\u0443\u043d\u043a\u0446\u0438\u044e. \u042d\u0442\u043e \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f \u043e\u0442 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f  array_diff(),\n   \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445.\n  "},"array_uintersect_assoc":{"version":"(PHP 5)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 \u0441 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u043e\u0439 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432,\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 callback-\u0444\u0443\u043d\u043a\u0446\u0438\u044e","syntax":"\n   array <b>array_uintersect_assoc<\/b>\n    ( array $array1\n   , array $array2\n   [, array $ ...\n   ], callable $data_compare_func\n   )\nint callback ( mixed $a, mixed $b )\n","desc":"\n   \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 \u0441 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u043e\u0439 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432,\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 callback-\u0444\u0443\u043d\u043a\u0446\u0438\u044e.\n  "},"array_uintersect_uassoc":{"version":"(PHP 5)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 \u0441 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u043e\u0439 \u0438\u043d\u0434\u0435\u043a\u0441\u0430,\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432 \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 callback-\u0444\u0443\u043d\u043a\u0446\u0438\u044e","syntax":"\n   array <b>array_uintersect_uassoc<\/b>\n    ( array $array1\n   , array $array2\n   [, array $ ...\n   ], callable $data_compare_func\n   , callable $key_compare_func\n   )\nint callback ( mixed $a, mixed $b )\n","desc":"\n   \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 \u0441 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u043e\u0439 \u0438\u043d\u0434\u0435\u043a\u0441\u0430,\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432 \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 callback-\u0444\u0443\u043d\u043a\u0446\u0438\u044e.\n   \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0432 \u043e\u0442\u043b\u0438\u0447\u0438\u0438 \u043e\u0442  array_uintersect(),\n   \u0432 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0438 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u044e\u0442 \u0443\u0447\u0430\u0441\u0442\u0438\u0435 \u043a\u043b\u044e\u0447\u0438.\n   \u0414\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0438 \u043a\u043b\u044e\u0447\u0435\u0439, \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f callback-\u0444\u0443\u043d\u043a\u0446\u0438\u044f.\n  "},"array_uintersect":{"version":"(PHP 5)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 callback-\u0444\u0443\u043d\u043a\u0446\u0438\u044e","syntax":"\n   array <b>array_uintersect<\/b>\n    ( array $array1\n   , array $array2\n   [, array $ ...\n   ], callable $data_compare_func\n   )\nint callback ( mixed $a, mixed $b )\n","desc":"\n   \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 callback-\u0444\u0443\u043d\u043a\u0446\u0438\u044e.\n  "},"array_unique":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\u0423\u0431\u0438\u0440\u0430\u0435\u0442 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0435\u0441\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430","syntax":"\n   array <b>array_unique<\/b>\n    ( array $array\n   [, int $sort_flags = SORT_STRING\n  ] )","desc":"\n   \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0432\u0445\u043e\u0434\u043d\u043e\u0439 array \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432\n   \u0431\u0435\u0437 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0445\u0441\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439.\n  "},"array_unshift":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0434\u0438\u043d \u0438\u043b\u0438 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 \u043d\u0430\u0447\u0430\u043b\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430","syntax":"\n   int <b>array_unshift<\/b>\n    ( array &$array\n   , mixed $var\n   [, mixed $...\n  ] )","desc":"\n    array_unshift() \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432\n   \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0432 \u043d\u0430\u0447\u0430\u043b\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430 array. \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e\n   \u0441\u043f\u0438\u0441\u043e\u043a \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0446\u0435\u043b\u0438\u043a\u043e\u043c, \u0442\u043e \u0435\u0441\u0442\u044c \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442\u0441\u044f.\n   \u0412\u0441\u0435 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u043a\u043b\u044e\u0447\u0438 \u0431\u0443\u0434\u0443\u0442 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u044b \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0447\u0442\u043e \u043d\u0443\u043c\u0435\u0440\u0430\u0446\u0438\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0431\u0443\u0434\u0435\u0442\n   \u043d\u0430\u0447\u0438\u043d\u0430\u0442\u044c\u0441\u044f \u0441 \u043d\u0443\u043b\u044f, \u0432 \u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043a\u0430\u043a \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0435 \u043a\u043b\u044e\u0447\u0438 \u043e\u0441\u0442\u0430\u043d\u0443\u0442\u0441\u044f \u043f\u0440\u0435\u0436\u043d\u0438\u043c\u0438.\n  "},"array_values":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0432\u0441\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u0430","syntax":"\n   array <b>array_values<\/b>\n    ( array $input\n   )","desc":"\n    array_values() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 c\u043e \u0432\u0441\u0435\u043c\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438\n   \u043c\u0430\u0441\u0441\u0438\u0432\u0430 input. \u041e\u043d\u0430 \u0442\u0430\u043a\u0436\u0435 \u0437\u0430\u043d\u043e\u0432\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0438\u0440\u0443\u0435\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u0439\n   \u043c\u0430\u0441\u0441\u0438\u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u043c\u0438 \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u043c\u0438.\n  "},"array_walk_recursive":{"version":"(PHP 5)","shortdesc":"\u0420\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043a \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0443 \u043c\u0430\u0441\u0441\u0438\u0432\u0430","syntax":"\n   bool <b>array_walk_recursive<\/b>\n    ( array &$input\n   , callable $funcname\n   [, mixed $userdata = NULL\n  ] )","desc":"\n   \u041f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e funcname \u043a \u043a\u0430\u0436\u0434\u043e\u043c\u0443\n   \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0443 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 input. \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442\n   \u043a\u0430\u0436\u0434\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043c\u043d\u043e\u0433\u043e\u043c\u0435\u0440\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430.\n  "},"array_walk":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043a \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0443 \u043c\u0430\u0441\u0441\u0438\u0432\u0430","syntax":"\n   bool <b>array_walk<\/b>\n    ( array &$array\n   , callable $funcname\n   [, mixed $userdata = NULL\n  ] )","desc":""},"array":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432","syntax":"\n   <b>array<\/b> <b>array<\/b>\n    ([ mixed $...\n  ] )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432. \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430\u0445 \u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u0432 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\n   \"\u041c\u0430\u0441\u0441\u0438\u0432\u044b\".\n  "},"arsort":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0432 \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435, \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044f \u043a\u043b\u044e\u0447\u0438","syntax":"\n   bool <b>arsort<\/b>\n    ( array &$array\n   [, int $sort_flags = SORT_REGULAR\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0432 \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c,\n   \u0447\u0442\u043e \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044e\u0442\u0441\u044f \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u044f \u043c\u0435\u0436\u0434\u0443 \u043a\u043b\u044e\u0447\u0430\u043c\u0438 \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438.\n  "},"asin":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0410\u0440\u043a\u0441\u0438\u043d\u0443\u0441","syntax":"\n    float <b>asin<\/b>\n     ( float $arg\n    )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0430\u0440\u043a\u0441\u0438\u043d\u0443\u0441 \u0447\u0438\u0441\u043b\u0430 arg \u0432 \u0440\u0430\u0434\u0438\u0430\u043d\u0430\u0445.\n    asin() - \u043e\u0431\u0440\u0430\u0442\u043d\u0430\u044f \u0442\u0440\u0438\u0433\u043e\u043d\u043e\u043c\u0435\u0442\u0440\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043a\n    sin(), \u0442.\u0435.\n   a==sin(asin(a)) \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f a, \u0432\u0445\u043e\u0434\u044f\u0449\u0435\u0433\u043e \u0432 \u043e\u0431\u043b\u0430\u0441\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    asin().\n  "},"asinh":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0413\u0438\u043f\u0435\u0440\u0431\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0430\u0440\u043a\u0441\u0438\u043d\u0443\u0441","syntax":"\n    float <b>asinh<\/b>\n     ( float $arg\n    )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0433\u0438\u043f\u0435\u0440\u0431\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0430\u0440\u043a\u0441\u0438\u043d\u0443\u0441\n   arg, \u0442.\u0435. \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0447\u0435\u0439 \u0433\u0438\u043f\u0435\u0440\u0431\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0441\u0438\u043d\u0443\u0441\n   \u0440\u0430\u0432\u0435\u043d arg.\n  "},"asort":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432, \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044f \u043a\u043b\u044e\u0447\u0438","syntax":"\n   bool <b>asort<\/b>\n    ( array &$array\n   [, int $sort_flags = SORT_REGULAR\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0447\u0442\u043e \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044e\u0442\u0441\u044f\n   \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u044f \u043c\u0435\u0436\u0434\u0443 \u043a\u043b\u044e\u0447\u0430\u043c\u0438 \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438. \u041e\u043d\u0430 \u043f\u043e\u043b\u0435\u0437\u043d\u0430, \u0432 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u043c,\n   \u043f\u0440\u0438 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0435 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u044b\u0445 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432, \u043a\u043e\u0433\u0434\u0430 \u0432\u0430\u0436\u043d\u043e \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c\n   \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0435 \u043a\u043b\u044e\u0447 => \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.\n  "},"assert_options":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430\/\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043e\u043a \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0443\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0439\n  ","syntax":"\n   mixed <b>assert_options<\/b>\n    ( int $what\n   [, mixed $value\n  ] )","desc":"\n   \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043e\u043a \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0443\u0442\u0432\u0435\u0436\u0434\u0435\u043d\u0438\u0439\n    assert() \u0438\u043b\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0443\u0449\u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439.\n  "},"assert":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0443\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f (\u0440\u0430\u0432\u0435\u043d \u043b\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 FALSE)","syntax":"\n   bool <b>assert<\/b>\n    ( mixed $<b>assert<\/b>ion\n   [, string $description\n  ] )","desc":"\n    assert() \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0435 \u0443\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435\n   assertion \u0438 \u0441\u043e\u0432\u0435\u0440\u0448\u0438\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435, \u0435\u0441\u043b\u0438 \n   \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043e\u043a\u0430\u0436\u0435\u0442\u0441\u044f FALSE.\n  "},"atan":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0410\u0440\u043a\u0442\u0430\u043d\u0433\u0435\u043d\u0441","syntax":"\n    float <b>atan<\/b>\n     ( float $arg\n    )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0430\u0440\u043a\u0442\u0430\u043d\u0433\u0435\u043d\u0441 \u0447\u0438\u0441\u043b\u0430 arg \u0432 \u0440\u0430\u0434\u0438\u0430\u043d\u0430\u0445.\n    atan() - \u043e\u0431\u0440\u0430\u0442\u043d\u0430\u044f \u0442\u0440\u0438\u0433\u043e\u043d\u043e\u043c\u0435\u0442\u0440\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043a\n    tan(), \u0442.\u0435.\n   a==tan(atan(a)) \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f a, \u0432\u0445\u043e\u0434\u044f\u0449\u0435\u0433\u043e \u0432 \u043e\u0431\u043b\u0430\u0441\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    atan().\n  "},"atan2":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0410\u0440\u043a\u0442\u0430\u043d\u0433\u0435\u043d\u0441 \u0434\u0432\u0443\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445","syntax":"\n    float <b>atan2<\/b>\n     ( float $y\n    , float $x\n    )","desc":""},"atanh":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0413\u0438\u043f\u0435\u0440\u0431\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0430\u0440\u043a\u0442\u0430\u043d\u0433\u0435\u043d\u0441","syntax":"\n   float <b>atanh<\/b>\n    ( float $arg\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0433\u0438\u043f\u0435\u0440\u0431\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0430\u0440\u043a\u0442\u0430\u043d\u0433\u0435\u043d\u0441\n   arg, \u0442.\u0435. \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0447\u0435\u0439\n   \u0433\u0438\u043f\u0435\u0440\u0431\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0442\u0430\u043d\u0433\u0435\u043d\u0441 \u0440\u0430\u0432\u0435\u043d arg.\n  "},"__autoload":{"version":"(PHP 5)","shortdesc":"Attempt to load undefined class","syntax":"\n   void <b>__autoload<\/b>\n    ( string $class\n   )","desc":"\n   You can define this function to enable classes autoloading.\n  "},"base_convert":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0447\u0438\u0441\u043b\u0430 \u043c\u0435\u0436\u0434\u0443 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u044b\u043c\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438 \u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f","syntax":"\n    string <b>base_convert<\/b>\n     ( string $number\n    , int $frombase\n    , int $tobase\n    )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0443\u044e \u0447\u0438\u0441\u043b\u043e number\n   \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0435 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0435 \u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f tobase.  \u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0434\u0430\u043d\u043e \u0447\u0438\u0441\u043b\u043e\n   number \u0443\u043a\u0430\u0437\u0430\u043d\u0430 \u0432 frombase.  \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n   frombase \u0438 tobase\n   \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043c\u0435\u0436\u0434\u0443 2 \u0438 36 (\u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e).  \u0426\u0438\u0444\u0440\u044b \u0432 \u0447\u0438\u0441\u043b\u0430\u0445, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0435 \u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f\n   \u0432\u044b\u0448\u0435 \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u043e\u0439, \u0431\u0443\u0434\u0443\u0442 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0431\u0443\u043a\u0432\u0430\u043c\u0438 a-z,\n   \u0433\u0434\u0430 a \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442 10, b \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442 11 \u0438 z - 35.\n  "},"base64_decode":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0414\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435, \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u043c MIME base64","syntax":"\n   string <b>base64_decode<\/b>\n    ( string $data\n   [, bool $strict = false\n  ] )","desc":"\n   \u0414\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 data, \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 base64.\n  "},"base64_encode":{"version":"(PHP 4, PHP 5)","shortdesc":"K\u043e\u0434\u0438\u0440\u0443\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u043c MIME base64","syntax":"\n   string <b>base64_encode<\/b>\n    ( string $data\n   )","desc":"\n   \u041a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 data \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u043c base64.\n  "},"basename":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 \u0438\u043c\u0435\u043d\u0438 \u0438\u0437 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u0443\u0442\u0438","syntax":"\n   string <b>basename<\/b>\n    ( string $path\n   [, string $suffix\n  ] )","desc":"\n   \u041f\u0440\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0441 \u043f\u0443\u0442\u0435\u043c \u043a \u0444\u0430\u0439\u043b\u0443 \u0438\u043b\u0438 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0443, \u0434\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f\n   \u0432\u0435\u0440\u043d\u0435\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 \u0438\u043c\u0435\u043d\u0438 \u0438\u0437 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u0443\u0442\u0438.\n  "},"bbcode_add_element":{"version":"(PECL bbcode >= 0.9.0)","shortdesc":"\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 bbcode","syntax":"\n   bool <b>bbcode_add_element<\/b>\n    ( resource $bbcode_container\n   , string $tag_name\n   , array $tag_rules\n   )","desc":"\n   \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0442\u0435\u0433 \u0432 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u043d\u0430\u0431\u043e\u0440 \u0442\u0435\u0433\u043e\u0432 (tag_set) BBCode_Container \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f tag_rules.\n  "},"bbcode_add_smiley":{"version":"(PECL bbcode >= 0.10.2)","shortdesc":"\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043c\u0430\u0439\u043b\u044b \u0434\u043b\u044f \u0440\u0430\u0437\u0431\u043e\u0440\u0430 \u043f\u0430\u0440\u0441\u0435\u0440\u043e\u043c","syntax":"\n   bool <b>bbcode_add_smiley<\/b>\n    ( resource $bbcode_container\n   , string $smiley\n   , string $replace_by\n   )","desc":"\n   \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043c\u0430\u0439\u043b\u044b \u0434\u043b\u044f \u0440\u0430\u0437\u0431\u043e\u0440\u0430 \u043f\u0430\u0440\u0441\u0435\u0440\u043e\u043c\n  "},"bbcode_create":{"version":"(PECL bbcode >= 0.9.0)","shortdesc":"Create a BBCode Resource","syntax":"\n   resource <b>bbcode_create<\/b>\n    ([ array $bbcode_initial_tags = NULL\n  ] )","desc":"\n   This function returns a new BBCode Resource used to parse BBCode strings.\n  "},"bbcode_destroy":{"version":"(PECL bbcode >= 0.9.0)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0440\u0435\u0441\u0443\u0440\u0441 BBCode_container","syntax":"\n   bool <b>bbcode_destroy<\/b>\n    ( resource $bbcode_container\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 resource, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439  bbcode_create().\n  "},"bbcode_parse":{"version":"(PECL bbcode >= 0.9.0)","shortdesc":"\u041f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442 \u0440\u0430\u0437\u0431\u043e\u0440 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u043d\u0430\u0431\u043e\u0440\u043e\u043c \u043f\u0440\u0430\u0432\u0438\u043b","syntax":"\n   string <b>bbcode_parse<\/b>\n    ( resource $bbcode_container\n   , string $to_parse\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442 \u0440\u0430\u0437\u0431\u043e\u0440 \u0441\u0442\u0440\u043e\u043a\u0438 to_parse \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u043f\u0440\u0430\u0432\u0438\u043b\u0430\u043c\u0438 \u0432 \n   bbcode_container, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439  bbcode_create()\n  "},"bbcode_set_arg_parser":{"version":"(PECL bbcode >= 0.10.2)","shortdesc":"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0434\u0440\u0443\u0433\u043e\u0439 \u043f\u0430\u0440\u0441\u0435\u0440 \u0434\u043b\u044f \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0438\u043d\u043e\u0433\u043e \u043d\u0430\u0431\u043e\u0440\u0430 \u043f\u0440\u0430\u0432\u0438\u043b \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0440\u0430\u0437\u0431\u043e\u0440\u0430","syntax":"\n   bool <b>bbcode_set_arg_parser<\/b>\n    ( resource $bbcode_container\n   , resource $bbcode_arg_parser\n   )","desc":"\n   \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0434\u0440\u0443\u0433\u043e\u0439 \u043f\u0430\u0440\u0441\u0435\u0440 \u0434\u043b\u044f bbcode_container.\n   \u042d\u0442\u043e\u0442 \u043f\u0430\u0440\u0441\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0440\u0430\u0437\u0431\u043e\u0440\u0430.\n   \u0415\u0441\u043b\u0438 \u044d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f, \u043f\u0430\u0440\u0441\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \n   \u0434\u043b\u044f \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u043f\u0430\u0440\u0441\u0435\u0440\u0430.\n  "},"bbcode_set_flags":{"version":"(PECL bbcode >= 0.10.2)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0438\u043b\u0438 \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043f\u0430\u0440\u0441\u0435\u0440\u0430","syntax":"\n   bool <b>bbcode_set_flags<\/b>\n    ( resource $bbcode_container\n   , int $flags\n   [, int $mode = BBCODE_SET_FLAGS_SET\n  ] )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0438\u043b\u0438 \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043f\u0430\u0440\u0441\u0435\u0440\u0430\n  "},"bcadd":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0421\u043b\u043e\u0436\u0438\u0442\u044c 2 \u0447\u0438\u0441\u043b\u0430 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u043e\u0439 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438\n  ","syntax":"\n   string <b>bcadd<\/b>\n    ( string $left_operand\n   , string $right_operand\n   [, int $scale\n  ] )","desc":"\n   \u0421\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0435\u0442 left_operand \u0441\n   right_operand.\n  "},"bccomp":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0421\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u0434\u0432\u0443\u0445 \u0447\u0438\u0441\u0435\u043b \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u043e\u0439 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438\n  ","syntax":"\n   int <b>bccomp<\/b>\n    ( string $left_operand\n   , string $right_operand\n   [, int $scale\n  ] )","desc":"\n   \u0421\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u0442 left_operand \u0441\n   right_operand \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0446\u0435\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.\n  "},"bcdiv":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0447\u0438\u0441\u0435\u043b \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u043e\u0439 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438\n  ","syntax":"\n   string <b>bcdiv<\/b>\n    ( string $left_operand\n   , string $right_operand\n   [, int $scale\n  ] )","desc":"\n   \u0414\u0435\u043b\u0438\u0442 left_operand \u043d\u0430\n   right_operand.\n  "},"bcmod":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043e\u0441\u0442\u0430\u0442\u043e\u043a \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0447\u0438\u0441\u0435\u043b \u0441 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u043e\u0439 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c\u044e\n  ","syntax":"\n   string <b>bcmod<\/b>\n    ( string $left_operand\n   , string $modulus\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043e\u0441\u0442\u0430\u0442\u043e\u043a \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f left_operand \u043d\u0430\n   modulus.\n  "},"bcmul":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0423\u043c\u043d\u043e\u0436\u0435\u043d\u0438\u0435 \u0434\u0432\u0443\u0445 \u0447\u0438\u0441\u0435\u043b \u0441 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u043e\u0439 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c\u044e\n  ","syntax":"\n   string <b>bcmul<\/b>\n    ( string $left_operand\n   , string $right_operand\n   [, int $scale\n  ] )","desc":"\n   \u0423\u043c\u043d\u043e\u0436\u0430\u0435\u0442 left_operand \u043d\u0430\n   right_operand.\n  "},"bcompiler_load_exe":{"version":"(PECL bcompiler >= 0.4)","shortdesc":"Reads and creates classes from a bcompiler exe file","syntax":"\n   bool <b>bcompiler_load_exe<\/b>\n    ( string $filename\n   )","desc":"\n   Reads data from a bcompiler exe file and creates classes from the bytecodes.\n  "},"bcompiler_load":{"version":"(PECL bcompiler >= 0.4)","shortdesc":"Reads and creates classes from a bz compressed file","syntax":"\n   bool <b>bcompiler_load<\/b>\n    ( string $filename\n   )","desc":"\n   Reads data from a bzcompressed file and creates classes from the bytecodes.\n  "},"bcompiler_parse_class":{"version":"(PECL bcompiler >= 0.4)","shortdesc":"Reads the bytecodes of a class and calls back to a user function","syntax":"\n   bool <b>bcompiler_parse_class<\/b>\n    ( string $class\n   , string $callback\n   )","desc":"\n   Reads the bytecodes of a class and calls back to a user function.\n  "},"bcompiler_read":{"version":"(PECL bcompiler >= 0.4)","shortdesc":"Reads and creates classes from a filehandle","syntax":"\n   bool <b>bcompiler_read<\/b>\n    ( resource $filehandle\n   )","desc":"\n   Reads data from a open file handle and creates classes from the bytecodes.\n  "},"bcompiler_write_class":{"version":"(PECL bcompiler >= 0.4)","shortdesc":"Writes a defined class as bytecodes","syntax":"\n   bool <b>bcompiler_write_class<\/b>\n    ( resource $filehandle\n   , string $className\n   [, string $extends\n  ] )","desc":"\n   Reads the bytecodes from PHP for an existing class, and writes them to the\n   open file handle.\n  "},"bcompiler_write_constant":{"version":"(PECL bcompiler >= 0.5)","shortdesc":"Writes a defined constant as bytecodes","syntax":"\n   bool <b>bcompiler_write_constant<\/b>\n    ( resource $filehandle\n   , string $constantName\n   )","desc":"\n   Reads the bytecodes from PHP for an existing constant, and writes them to\n   the open file handle.\n  "},"bcompiler_write_exe_footer":{"version":"(PECL bcompiler >= 0.4)","shortdesc":"Writes the start pos, and sig to the end of a exe type file","syntax":"\n   bool <b>bcompiler_write_exe_footer<\/b>\n    ( resource $filehandle\n   , int $startpos\n   )","desc":"\n   An EXE (or self executable) file consists of 3 parts:\n   "},"bcompiler_write_file":{"version":"(PECL bcompiler >= 0.6)","shortdesc":"Writes a php source file as bytecodes","syntax":"\n   bool <b>bcompiler_write_file<\/b>\n    ( resource $filehandle\n   , string $filename\n   )","desc":"\n   This function complies specified source file into bytecodes, and writes\n   them to the open file handle.\n  "},"bcompiler_write_footer":{"version":"(PECL bcompiler >= 0.4)","shortdesc":"Writes the single character \\x00 to indicate End of compiled data","syntax":"\n   bool <b>bcompiler_write_footer<\/b>\n    ( resource $filehandle\n   )","desc":"\n   Writes the single character \\x00 to indicate End of compiled data.\n  "},"bcompiler_write_function":{"version":"(PECL bcompiler >= 0.5)","shortdesc":"Writes a defined function as bytecodes","syntax":"\n   bool <b>bcompiler_write_function<\/b>\n    ( resource $filehandle\n   , string $functionName\n   )","desc":"\n   Reads the bytecodes from PHP for an existing function, and writes them to\n   the open file handle. Order is not important, (eg. if function b uses \n   function a, and you compile it like the example below, it will work\n   perfectly OK).\n  "},"bcompiler_write_functions_from_file":{"version":"(PECL bcompiler >= 0.5)","shortdesc":"Writes all functions defined in a file as bytecodes","syntax":"\n   bool <b>bcompiler_write_functions_from_file<\/b>\n    ( resource $filehandle\n   , string $fileName\n   )","desc":"\n   Searches for all functions declared in the given file, and writes their\n   correspondent bytecodes to the open file handle. \n  "},"bcompiler_write_header":{"version":"(PECL bcompiler >= 0.3)","shortdesc":"Writes the bcompiler header","syntax":"\n   bool <b>bcompiler_write_header<\/b>\n    ( resource $filehandle\n   [, string $write_ver\n  ] )","desc":"\n   Writes the header part of a bcompiler file.\n  "},"bcompiler_write_included_filename":{"version":"(PECL bcompiler >= 0.5)","shortdesc":"Writes an included file as bytecodes","syntax":"\n   bool <b>bcompiler_write_included_filename<\/b>\n    ( resource $filehandle\n   , string $filename\n   )","desc":""},"bcpow":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0432 \u0441\u0442\u0435\u043f\u0435\u043d\u044c \u0447\u0438\u0441\u0435\u043b \u0441 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u043e\u0439 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c\u044e\n  ","syntax":"\n   string <b>bcpow<\/b>\n    ( string $left_operand\n   , string $right_operand\n   [, int $scale\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u043e\u0434\u0438\u0442 left_operand \u0432 \u0441\u0442\u0435\u043f\u0435\u043d\u044c\n   right_operand. \n  "},"bcpowmod":{"version":"(PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u043e\u0434\u0438\u0442 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u0432 \u0441\u0442\u0435\u043f\u0435\u043d\u044c \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0441\u0442\u0430\u0442\u043e\u043a \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f\n   \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u043d\u0430 \u0442\u0440\u0435\u0442\u044c\u0435 \u0447\u0438\u0441\u043b\u043e\n  ","syntax":"\n   string <b>bcpowmod<\/b>\n    ( string $left_operand\n   , string $right_operand\n   , string $modulus\n   [, int $scale\n  ] )","desc":"\n   \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043c\u0435\u0442\u043e\u0434 \u0431\u044b\u0441\u0442\u0440\u043e\u0433\u043e \u0432\u043e\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0447\u0438\u0441\u043b\u0430\n   left_operand \u0432 \u0441\u0442\u0435\u043f\u0435\u043d\u044c\n   right_operand \u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043e\u0441\u0442\u0430\u0442\u043a\u0430 \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043d\u0430\n   modulus.\n  "},"bcscale":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0447\u0438\u0441\u0435\u043b \u043f\u043e\u0441\u043b\u0435 \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u043e\u0439 \u0442\u043e\u0447\u043a\u0438 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0434\u043b\u044f \u0432\u0441\u0435\u0445\n   bc math \u0444\u0443\u043d\u043a\u0446\u0438\u0439.\n  ","syntax":"\n   bool <b>bcscale<\/b>\n    ( int $scale\n   )","desc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0447\u0438\u0441\u0435\u043b \u043f\u043e\u0441\u043b\u0435 \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u043e\u0439 \u0442\u043e\u0447\u043a\u0438 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0434\u043b\u044f\n   bc math \u0444\u0443\u043d\u043a\u0446\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435 \u043c\u043e\u0433\u0443\u0442 \u044f\u0432\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u0442\u043e \u0447\u0438\u0441\u043b\u043e \u0432 \u0432\u0438\u0434\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430.\n  "},"bcsqrt":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0418\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u0442 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u043a\u043e\u0440\u0435\u043d\u044c \u0438\u0437 \u0447\u0438\u0441\u043b\u0430 \u0441 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u043e\u0439 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c\u044e\n  ","syntax":"\n   string <b>bcsqrt<\/b>\n    ( string $operand\n   [, int $scale\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u043a\u043e\u0440\u0435\u043d\u044c \u0438\u0437 operand.\n  "},"bcsub":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0412\u044b\u0447\u0438\u0442\u0430\u0435\u0442 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u0441 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u043e\u0439 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c\u044e \u0438\u0437 \u0434\u0440\u0443\u0433\u043e\u0433\u043e\n  ","syntax":"\n   string <b>bcsub<\/b>\n    ( string $left_operand\n   , string $right_operand\n   [, int $scale\n  ] )","desc":"\n   \u0412\u044b\u0447\u0438\u0442\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e right_operand \u0438\u0437\n   left_operand.\n  "},"bin2hex":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0448\u0435\u0441\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u0438\u0440\u0438\u0447\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435","syntax":"\n   string <b>bin2hex<\/b>\n    ( string $str\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 ASCII-\u0441\u0442\u0440\u043e\u043a\u0443, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0443\u044e \u0448\u0435\u0441\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u0438\u0440\u0438\u0447\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435\n   \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430 str. \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0441\u044f\n   \u043f\u043e\u0431\u0430\u0439\u0442\u043d\u043e, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u0432\u0435\u0440\u0445\u043d\u0435\u0433\u043e \u043f\u043e\u043b\u0443\u0431\u0430\u0439\u0442\u0430.\n  "},"bind_textdomain_codeset":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0431\u0443\u0434\u0443\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c\u0441\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0438\u0437 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0434\u043e\u043c\u0435\u043d\u0430","syntax":"\n   string <b>bind_textdomain_codeset<\/b>\n    ( string $domain\n   , string $codeset\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  bind_textdomain_codeset() \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443, \n   \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0431\u0443\u0434\u0443\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c\u0441\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0438\u0437 domain, \n   \u0442\u0430\u043a\u0438\u043c\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438 \u043a\u0430\u043a  gettext().\n  "},"bindec":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0414\u0432\u043e\u0438\u0447\u043d\u043e\u0435 \u0432 \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u043e\u0435","syntax":"\n   number <b>bindec<\/b>\n    ( string $binary_string\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u044b\u0439 \u044d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442 \u0434\u0432\u043e\u0438\u0447\u043d\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430 binary_string.\n  "},"bindtextdomain":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043f\u0443\u0442\u044c \u0434\u043b\u044f \u0434\u043e\u043c\u0435\u043d\u0430","syntax":"\n   string <b>bindtextdomain<\/b>\n    ( string $domain\n   , string $directory\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  bindtextdomain() \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043f\u0443\u0442\u044c \u0434\u043b\u044f \u0434\u043e\u043c\u0435\u043d\u0430.\n  "},"blenc_encrypt":{"version":"(PECL blenc >= 5)","shortdesc":"\n   Encrypt a PHP script with BLENC.\n  ","syntax":"\n   string <b>blenc_encrypt<\/b>\n    ( string $plaintext\n   , string $encodedfile\n   [, string $encryption_key\n  ] )","desc":"\n   Encrypt the plaintext content and write it into encodedfile\n  "},"boolval":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Get the boolean value of a variable","syntax":"\n   boolean <b>boolval<\/b>\n    ( mixed $var\n   )","desc":"\n   Returns the boolean value of var.\n  "},"bson_decode":{"version":"(PECL mongo >=1.0.1)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0443\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 BSON \u0432 \u043c\u0430\u0441\u0441\u0438\u0432 PHP","syntax":"\n   array <b>bson_decode<\/b>\n    ( string $bson\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043d\u0435\u0441\u0442\u0430\u0431\u0438\u043b\u044c\u043d\u0430\u044f \u0438 \u0441\u043e\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u043e \u0431\u0435\u0441\u043f\u043e\u043b\u0435\u0437\u043d\u0430 \u0434\u043b\u044f 99% \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u041c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u043e\u043b\u0435\u0437\u043d\u0430 \u0442\u043e\u043b\u044c\u043a\u043e\n   \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0435\u0441\u043b\u0438 \u0432\u044b \u043f\u0438\u0448\u0435\u0442\u0435 \u0447\u0442\u043e-\u043d\u0438\u0431\u0443\u0434\u044c \u0441\u0442\u0440\u0430\u043d\u043d\u043e\u0435, \u043a\u0430\u043a, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0433\u043e \u0434\u0440\u0430\u0439\u0432\u0435\u0440\u0430 \n   \u043f\u043e\u0432\u0435\u0440\u0445 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0433\u043e \u0434\u0440\u0430\u0439\u0432\u0435\u0440\u0430 PHP.\n  "},"bson_encode":{"version":"(PECL mongo >=1.0.1)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e PHP \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 BSON","syntax":"\n   string <b>bson_encode<\/b>\n    ( mixed $anything\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043d\u0435\u0441\u0442\u0430\u0431\u0438\u043b\u044c\u043d\u0430 \u0438 \u0441\u043e\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u043e \u0431\u0435\u0441\u043f\u043e\u043b\u0435\u0437\u043d\u0430 \u0434\u043b\u044f 99% \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u041c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u043e\u043b\u0435\u0437\u043d\u0430 \u0442\u043e\u043b\u044c\u043a\u043e\n   \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0435\u0441\u043b\u0438 \u0432\u044b \u043f\u0438\u0448\u0435\u0442\u0435 \u0447\u0442\u043e-\u043d\u0438\u0431\u0443\u0434\u044c \u0441\u0442\u0440\u0430\u043d\u043d\u043e\u0435, \u043a\u0430\u043a, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0433\u043e \u0434\u0440\u0430\u0439\u0432\u0435\u0440\u0430 \n   \u043f\u043e\u0432\u0435\u0440\u0445 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0433\u043e \u0434\u0440\u0430\u0439\u0432\u0435\u0440\u0430 PHP. \n  "},"bzclose":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0444\u0430\u0439\u043b bzip2","syntax":"\n   int <b>bzclose<\/b>\n    ( resource $bz\n   )","desc":"\n   \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043d\u0430 \u0444\u0430\u0439\u043b bzip2.\n  "},"bzcompress":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0421\u0436\u0438\u043c\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c bzip2","syntax":"\n   mixed <b>bzcompress<\/b>\n    ( string $source\n   [, int $blocksize = 4\n   [, int $workfactor = 0\n  ]] )","desc":"\n    bzcompress() \u0441\u0436\u0438\u043c\u0430\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\n   \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0435\u0435 \u0432 \u0432\u0438\u0434\u0435 \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 bzip2.\n  "},"bzdecompress":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0420\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435, \u0441\u0436\u0430\u0442\u044b\u0435 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c bzip2","syntax":"\n   mixed <b>bzdecompress<\/b>\n    ( string $source\n   [, int $small = 0\n  ] )","desc":"\n    bzdecompress() \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443,\n   \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0443\u044e \u0441\u0436\u0430\u0442\u044b\u0435 bzip2 \u0434\u0430\u043d\u043d\u044b\u0435.\n  "},"bzerrno":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u0434 \u043e\u0448\u0438\u0431\u043a\u0438 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 bzip2","syntax":"\n   int <b>bzerrno<\/b>\n    ( resource $bz\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u0434 \u043b\u044e\u0431\u043e\u0439 bzip2 \u043e\u0448\u0438\u0431\u043a\u0438, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u0435\u0434\u0448\u0435\u0439 \u0441 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u043c\n   \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u043c \u043d\u0430 \u0444\u0430\u0439\u043b.\n  "},"bzerror":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u0434 \u0438 \u0441\u0442\u0440\u043e\u043a\u0443 \u043e\u0448\u0438\u0431\u043a\u0438 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 bzip2 \u0432 \u0432\u0438\u0434\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u0430","syntax":"\n   array <b>bzerror<\/b>\n    ( resource $bz\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u043a\u043e\u0434\u043e\u043c \u0438 \u0441\u0442\u0440\u043e\u043a\u043e\u0439 \u043e\u0448\u0438\u0431\u043a\u0438, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u0435\u0434\u0448\u0435\u0439 \u0441\n   \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u043c \u0444\u0430\u0439\u043b\u043e\u0432\u044b\u043c \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u043c.\n  "},"bzerrstr":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u043e\u0448\u0438\u0431\u043a\u0438 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 bzip2","syntax":"\n   string <b>bzerrstr<\/b>\n    ( resource $bz\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 \u043e\u0448\u0438\u0431\u043a\u043e\u0439 bzip2, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u0435\u0434\u0448\u0435\u0439 \u0441 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u043c\n   \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u043c \u043d\u0430 \u0444\u0430\u0439\u043b.\n  "},"bzflush":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0424\u043e\u0440\u0441\u0438\u0440\u0443\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u044c \u0432\u0441\u0435\u0445 \u0431\u0443\u0444\u0435\u0440\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445","syntax":"\n   int <b>bzflush<\/b>\n    ( resource $bz\n   )","desc":"\n   \u0424\u043e\u0440\u0441\u0438\u0440\u0443\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u044c \u0432\u0441\u0435\u0445 \u0431\u0443\u0444\u0435\u0440\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 bzip2 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0444\u0430\u0439\u043b, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0439\n   \u0441\u0441\u044b\u043b\u0430\u0435\u0442\u0441\u044f \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c bz.\n  "},"bzopen":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0444\u0430\u0439\u043b, \u0441\u0436\u0430\u0442\u044b\u0439 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c bzip2","syntax":"\n   resource <b>bzopen<\/b>\n    ( string $filename\n   , string $mode\n   )","desc":"\n    bzopen() \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 bzip2 (.bz2) \u0444\u0430\u0439\u043b \u0434\u043b\u044f \u0447\u0442\u0435\u043d\u0438\u044f \u0438 \u0437\u0430\u043f\u0438\u0441\u0438.\n  "},"bzread":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0411\u0438\u043d\u0430\u0440\u043d\u043e-\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0435 \u0447\u0442\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 bzip2","syntax":"\n   string <b>bzread<\/b>\n    ( resource $bz\n   [, int $length = 1024\n  ] )","desc":"\n    bzread() \u0447\u0438\u0442\u0430\u0435\u0442 \u0438\u0437 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0433\u043e bzip2 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0433\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f.\n  "},"bzwrite":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0411\u0438\u043d\u0430\u0440\u043d\u043e-\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u0430\u044f \u0437\u0430\u043f\u0438\u0441\u044c bzip2 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   int <b>bzwrite<\/b>\n    ( resource $bz\n   , string $data\n   [, int $length\n  ] )","desc":"\n    bzwrite() \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 bzip2 \u0444\u0430\u0439\u043b\u043e\u0432\u044b\u0439 \u043f\u043e\u0442\u043e\u043a.\n  "},"cairo_create":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Returns a new CairoContext object on the requested surface.","syntax":"\n   CairoContext <b>cairo_create<\/b>\n    ( CairoSurface $surface\n   )","desc":"\n   The function description goes here.\n  "},"cairo_font_face_get_type":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   int <b>cairo_font_face_get_type<\/b>\n    ( CairoFontFace $fontface\n   )","desc":"\n   The function description goes here.\n  "},"cairo_font_face_status":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   int <b>cairo_font_face_status<\/b>\n    ( CairoFontFace $fontface\n   )","desc":"\n   The function description goes here.\n  "},"cairo_font_options_create":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   CairoFontOptions <b>cairo_font_options_create<\/b>\n    ( void\n   )","desc":"\n   The function description goes here.\n  "},"cairo_font_options_equal":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   bool <b>cairo_font_options_equal<\/b>\n    ( CairoFontOptions $options\n   , CairoFontOptions $other\n   )","desc":"\n   The function description goes here.\n  "},"cairo_font_options_get_antialias":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   int <b>cairo_font_options_get_antialias<\/b>\n    ( CairoFontOptions $options\n   )","desc":"\n   The function description goes here.\n  "},"cairo_font_options_get_hint_metrics":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   int <b>cairo_font_options_get_hint_metrics<\/b>\n    ( CairoFontOptions $options\n   )","desc":"\n   The function description goes here.\n  "},"cairo_font_options_get_hint_style":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   int <b>cairo_font_options_get_hint_style<\/b>\n    ( CairoFontOptions $options\n   )","desc":"\n   The function description goes here.\n  "},"cairo_font_options_get_subpixel_order":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   int <b>cairo_font_options_get_subpixel_order<\/b>\n    ( CairoFontOptions $options\n   )","desc":"\n   The function description goes here.\n  "},"cairo_font_options_hash":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   int <b>cairo_font_options_hash<\/b>\n    ( CairoFontOptions $options\n   )","desc":"\n   The function description goes here.\n  "},"cairo_font_options_merge":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_font_options_merge<\/b>\n    ( CairoFontOptions $options\n   , CairoFontOptions $other\n   )","desc":"\n   The function description goes here.\n  "},"cairo_font_options_set_antialias":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_font_options_set_antialias<\/b>\n    ( CairoFontOptions $options\n   , int $antialias\n   )","desc":"\n   The function description goes here.\n  "},"cairo_font_options_set_hint_metrics":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_font_options_set_hint_metrics<\/b>\n    ( CairoFontOptions $options\n   , int $hint_metrics\n   )","desc":"\n   The function description goes here.\n  "},"cairo_font_options_set_hint_style":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_font_options_set_hint_style<\/b>\n    ( CairoFontOptions $options\n   , int $hint_style\n   )","desc":"\n   The function description goes here.\n  "},"cairo_font_options_set_subpixel_order":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_font_options_set_subpixel_order<\/b>\n    ( CairoFontOptions $options\n   , int $subpixel_order\n   )","desc":"\n   The function description goes here.\n  "},"cairo_font_options_status":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   int <b>cairo_font_options_status<\/b>\n    ( CairoFontOptions $options\n   )","desc":"\n   The function description goes here.\n  "},"cairo_format_stride_for_width":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   int <b>cairo_format_stride_for_width<\/b>\n    ( int $format\n   , int $width\n   )","desc":"\n   The function description goes here.\n  "},"cairo_image_surface_create_for_data":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   CairoImageSurface <b>cairo_image_surface_create_for_data<\/b>\n    ( string $data\n   , int $format\n   , int $width\n   , int $height\n   [, int $stride = -1\n  ] )","desc":"\n   The function description goes here.\n  "},"cairo_image_surface_create_from_png":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   CairoImageSurface <b>cairo_image_surface_create_from_png<\/b>\n    ( string $file\n   )","desc":"\n   The function description goes here.\n  "},"cairo_image_surface_create":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   CairoImageSurface <b>cairo_image_surface_create<\/b>\n    ( int $format\n   , int $width\n   , int $height\n   )","desc":"\n   The function description goes here.\n  "},"cairo_image_surface_get_data":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   string <b>cairo_image_surface_get_data<\/b>\n    ( CairoImageSurface $surface\n   )","desc":"\n   The function description goes here.\n  "},"cairo_image_surface_get_format":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   int <b>cairo_image_surface_get_format<\/b>\n    ( CairoImageSurface $surface\n   )","desc":"\n   The function description goes here.\n  "},"cairo_image_surface_get_height":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   int <b>cairo_image_surface_get_height<\/b>\n    ( CairoImageSurface $surface\n   )","desc":"\n   The function description goes here.\n  "},"cairo_image_surface_get_stride":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   int <b>cairo_image_surface_get_stride<\/b>\n    ( CairoImageSurface $surface\n   )","desc":"\n   The function description goes here.\n  "},"cairo_image_surface_get_width":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   int <b>cairo_image_surface_get_width<\/b>\n    ( CairoImageSurface $surface\n   )","desc":"\n   The function description goes here.\n  "},"cairo_matrix_create_scale":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  CairoMatrix::initScale()","syntax":"","desc":""},"cairo_matrix_create_translate":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  CairoMatrix::initTranslate()","syntax":"","desc":""},"cairo_matrix_invert":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_matrix_invert<\/b>\n    ( CairoMatrix $matrix\n   )","desc":"\n   The function description goes here.\n  "},"cairo_matrix_multiply":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   CairoMatrix <b>cairo_matrix_multiply<\/b>\n    ( CairoMatrix $matrix1\n   , CairoMatrix $matrix2\n   )","desc":"\n   The function description goes here.\n  "},"cairo_matrix_rotate":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_matrix_rotate<\/b>\n    ( CairoMatrix $matrix\n   , float $radians\n   )","desc":"\n   The function description goes here.\n  "},"cairo_matrix_transform_distance":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   array <b>cairo_matrix_transform_distance<\/b>\n    ( CairoMatrix $matrix\n   , float $dx\n   , float $dy\n   )","desc":"\n   The function description goes here.\n  "},"cairo_matrix_transform_point":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   array <b>cairo_matrix_transform_point<\/b>\n    ( CairoMatrix $matrix\n   , float $dx\n   , float $dy\n   )","desc":"\n   The function description goes here.\n  "},"cairo_matrix_translate":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_matrix_translate<\/b>\n    ( CairoMatrix $matrix\n   , float $tx\n   , float $ty\n   )","desc":"\n   The function description goes here.\n  "},"cairo_pattern_add_color_stop_rgb":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_pattern_add_color_stop_rgb<\/b>\n    ( CairoGradientPattern $pattern\n   , float $offset\n   , float $red\n   , float $green\n   , float $blue\n   )","desc":"\n   The function description goes here.\n  "},"cairo_pattern_add_color_stop_rgba":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_pattern_add_color_stop_rgba<\/b>\n    ( CairoGradientPattern $pattern\n   , float $offset\n   , float $red\n   , float $green\n   , float $blue\n   , float $alpha\n   )","desc":"\n   The function description goes here.\n  "},"cairo_pattern_create_for_surface":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   CairoPattern <b>cairo_pattern_create_for_surface<\/b>\n    ( CairoSurface $surface\n   )","desc":"\n   The function description goes here.\n  "},"cairo_pattern_create_linear":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   CairoPattern <b>cairo_pattern_create_linear<\/b>\n    ( float $x0\n   , float $y0\n   , float $x1\n   , float $y1\n   )","desc":"\n   The function description goes here.\n  "},"cairo_pattern_create_radial":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   CairoPattern <b>cairo_pattern_create_radial<\/b>\n    ( float $x0\n   , float $y0\n   , float $r0\n   , float $x1\n   , float $y1\n   , float $r1\n   )","desc":"\n   The function description goes here.\n  "},"cairo_pattern_create_rgb":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   CairoPattern <b>cairo_pattern_create_rgb<\/b>\n    ( float $red\n   , float $green\n   , float $blue\n   )","desc":"\n   The function description goes here.\n  "},"cairo_pattern_create_rgba":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   CairoPattern <b>cairo_pattern_create_rgba<\/b>\n    ( float $red\n   , float $green\n   , float $blue\n   , float $alpha\n   )","desc":"\n   The function description goes here.\n  "},"cairo_pattern_get_color_stop_count":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   int <b>cairo_pattern_get_color_stop_count<\/b>\n    ( CairoGradientPattern $pattern\n   )","desc":"\n   The function description goes here.\n  "},"cairo_pattern_get_color_stop_rgba":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   array <b>cairo_pattern_get_color_stop_rgba<\/b>\n    ( CairoGradientPattern $pattern\n   , int $index\n   )","desc":"\n   The function description goes here.\n  "},"cairo_pattern_get_extend":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   int <b>cairo_pattern_get_extend<\/b>\n    ( string $pattern\n   )","desc":"\n   The function description goes here.\n  "},"cairo_pattern_get_filter":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   int <b>cairo_pattern_get_filter<\/b>\n    ( CairoSurfacePattern $pattern\n   )","desc":"\n   The function description goes here.\n  "},"cairo_pattern_get_linear_points":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   array <b>cairo_pattern_get_linear_points<\/b>\n    ( CairoLinearGradient $pattern\n   )","desc":"\n   The function description goes here.\n  "},"cairo_pattern_get_matrix":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   CairoMatrix <b>cairo_pattern_get_matrix<\/b>\n    ( CairoPattern $pattern\n   )","desc":"\n   The function description goes here.\n  "},"cairo_pattern_get_radial_circles":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   array <b>cairo_pattern_get_radial_circles<\/b>\n    ( CairoRadialGradient $pattern\n   )","desc":"\n   The function description goes here.\n  "},"cairo_pattern_get_rgba":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   array <b>cairo_pattern_get_rgba<\/b>\n    ( CairoSolidPattern $pattern\n   )","desc":"\n   The function description goes here.\n  "},"cairo_pattern_get_surface":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   CairoSurface <b>cairo_pattern_get_surface<\/b>\n    ( CairoSurfacePattern $pattern\n   )","desc":"\n   The function description goes here.\n  "},"cairo_pattern_get_type":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   int <b>cairo_pattern_get_type<\/b>\n    ( CairoPattern $pattern\n   )","desc":"\n   The function description goes here.\n  "},"cairo_pattern_set_extend":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_pattern_set_extend<\/b>\n    ( string $pattern\n   , string $extend\n   )","desc":"\n   The function description goes here.\n  "},"cairo_pattern_set_filter":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_pattern_set_filter<\/b>\n    ( CairoSurfacePattern $pattern\n   , int $filter\n   )","desc":"\n   The function description goes here.\n  "},"cairo_pattern_set_matrix":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_pattern_set_matrix<\/b>\n    ( CairoPattern $pattern\n   , CairoMatrix $matrix\n   )","desc":"\n   The function description goes here.\n  "},"cairo_pattern_status":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   int <b>cairo_pattern_status<\/b>\n    ( CairoPattern $pattern\n   )","desc":"\n   The function description goes here.\n  "},"cairo_pdf_surface_create":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   CairoPdfSurface <b>cairo_pdf_surface_create<\/b>\n    ( string $file\n   , float $width\n   , float $height\n   )","desc":"\n   The function description goes here.\n  "},"cairo_pdf_surface_set_size":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_pdf_surface_set_size<\/b>\n    ( CairoPdfSurface $surface\n   , float $width\n   , float $height\n   )","desc":"\n   The function description goes here.\n  "},"cairo_ps_get_levels":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   array <b>cairo_ps_get_levels<\/b>\n    ( void\n   )","desc":"\n   The function description goes here.\n  "},"cairo_ps_level_to_string":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   string <b>cairo_ps_level_to_string<\/b>\n    ( int $level\n   )","desc":"\n   The function description goes here.\n  "},"cairo_ps_surface_create":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   CairoPsSurface <b>cairo_ps_surface_create<\/b>\n    ( string $file\n   , float $width\n   , float $height\n   )","desc":"\n   The function description goes here.\n  "},"cairo_ps_surface_dsc_begin_page_setup":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_ps_surface_dsc_begin_page_setup<\/b>\n    ( CairoPsSurface $surface\n   )","desc":"\n   The function description goes here.\n  "},"cairo_ps_surface_dsc_begin_setup":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_ps_surface_dsc_begin_setup<\/b>\n    ( CairoPsSurface $surface\n   )","desc":"\n   The function description goes here.\n  "},"cairo_ps_surface_dsc_comment":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_ps_surface_dsc_comment<\/b>\n    ( CairoPsSurface $surface\n   , string $comment\n   )","desc":"\n   The function description goes here.\n  "},"cairo_ps_surface_get_eps":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   bool <b>cairo_ps_surface_get_eps<\/b>\n    ( CairoPsSurface $surface\n   )","desc":"\n   The function description goes here.\n  "},"cairo_ps_surface_restrict_to_level":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_ps_surface_restrict_to_level<\/b>\n    ( CairoPsSurface $surface\n   , int $level\n   )","desc":"\n   The function description goes here.\n  "},"cairo_ps_surface_set_eps":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_ps_surface_set_eps<\/b>\n    ( CairoPsSurface $surface\n   , bool $level\n   )","desc":"\n   The function description goes here.\n  "},"cairo_ps_surface_set_size":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_ps_surface_set_size<\/b>\n    ( CairoPsSurface $surface\n   , float $width\n   , float $height\n   )","desc":"\n   The function description goes here.\n  "},"cairo_scaled_font_create":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   CairoScaledFont <b>cairo_scaled_font_create<\/b>\n    ( CairoFontFace $fontface\n   , CairoMatrix $matrix\n   , CairoMatrix $ctm\n   , CairoFontOptions $fontoptions\n   )","desc":"\n   The function description goes here.\n  "},"cairo_scaled_font_extents":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   array <b>cairo_scaled_font_extents<\/b>\n    ( CairoScaledFont $scaledfont\n   )","desc":"\n   The function description goes here.\n  "},"cairo_scaled_font_get_ctm":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   CairoMatrix <b>cairo_scaled_font_get_ctm<\/b>\n    ( CairoScaledFont $scaledfont\n   )","desc":"\n   The function description goes here.\n  "},"cairo_scaled_font_get_font_face":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   CairoFontFace <b>cairo_scaled_font_get_font_face<\/b>\n    ( CairoScaledFont $scaledfont\n   )","desc":"\n   The function description goes here.\n  "},"cairo_scaled_font_get_font_matrix":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   CairoFontOptions <b>cairo_scaled_font_get_font_matrix<\/b>\n    ( CairoScaledFont $scaledfont\n   )","desc":"\n   The function description goes here.\n  "},"cairo_scaled_font_get_font_options":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   CairoFontOptions <b>cairo_scaled_font_get_font_options<\/b>\n    ( CairoScaledFont $scaledfont\n   )","desc":"\n   The function description goes here.\n  "},"cairo_scaled_font_get_scale_matrix":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   CairoMatrix <b>cairo_scaled_font_get_scale_matrix<\/b>\n    ( CairoScaledFont $scaledfont\n   )","desc":"\n   The function description goes here.\n  "},"cairo_scaled_font_get_type":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   int <b>cairo_scaled_font_get_type<\/b>\n    ( CairoScaledFont $scaledfont\n   )","desc":"\n   The function description goes here.\n  "},"cairo_scaled_font_glyph_extents":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   array <b>cairo_scaled_font_glyph_extents<\/b>\n    ( CairoScaledFont $scaledfont\n   , array $glyphs\n   )","desc":"\n   The function description goes here.\n  "},"cairo_scaled_font_status":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   int <b>cairo_scaled_font_status<\/b>\n    ( CairoScaledFont $scaledfont\n   )","desc":"\n   The function description goes here.\n  "},"cairo_scaled_font_text_extents":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   array <b>cairo_scaled_font_text_extents<\/b>\n    ( CairoScaledFont $scaledfont\n   , string $text\n   )","desc":"\n   The function description goes here.\n  "},"cairo_surface_copy_page":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_surface_copy_page<\/b>\n    ( CairoSurface $surface\n   )","desc":"\n   The function description goes here.\n  "},"cairo_surface_create_similar":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   CairoSurface <b>cairo_surface_create_similar<\/b>\n    ( CairoSurface $surface\n   , int $content\n   , float $width\n   , float $height\n   )","desc":"\n   The function description goes here.\n  "},"cairo_surface_finish":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_surface_finish<\/b>\n    ( CairoSurface $surface\n   )","desc":"\n   The function description goes here.\n  "},"cairo_surface_flush":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_surface_flush<\/b>\n    ( CairoSurface $surface\n   )","desc":"\n   The function description goes here.\n  "},"cairo_surface_get_content":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   int <b>cairo_surface_get_content<\/b>\n    ( CairoSurface $surface\n   )","desc":"\n   The function description goes here.\n  "},"cairo_surface_get_device_offset":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   array <b>cairo_surface_get_device_offset<\/b>\n    ( CairoSurface $surface\n   )","desc":"\n   The function description goes here.\n  "},"cairo_surface_get_font_options":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   CairoFontOptions <b>cairo_surface_get_font_options<\/b>\n    ( CairoSurface $surface\n   )","desc":"\n   The function description goes here.\n  "},"cairo_surface_get_type":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   int <b>cairo_surface_get_type<\/b>\n    ( CairoSurface $surface\n   )","desc":"\n   The function description goes here.\n  "},"cairo_surface_mark_dirty_rectangle":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_surface_mark_dirty_rectangle<\/b>\n    ( CairoSurface $surface\n   , float $x\n   , float $y\n   , float $width\n   , float $height\n   )","desc":"\n   The function description goes here.\n  "},"cairo_surface_mark_dirty":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_surface_mark_dirty<\/b>\n    ( CairoSurface $surface\n   )","desc":"\n   The function description goes here.\n  "},"cairo_surface_set_device_offset":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_surface_set_device_offset<\/b>\n    ( CairoSurface $surface\n   , float $x\n   , float $y\n   )","desc":"\n   The function description goes here.\n  "},"cairo_surface_set_fallback_resolution":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_surface_set_fallback_resolution<\/b>\n    ( CairoSurface $surface\n   , float $x\n   , float $y\n   )","desc":"\n   The function description goes here.\n  "},"cairo_surface_show_page":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_surface_show_page<\/b>\n    ( CairoSurface $surface\n   )","desc":"\n   The function description goes here.\n  "},"cairo_surface_status":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   int <b>cairo_surface_status<\/b>\n    ( CairoSurface $surface\n   )","desc":"\n   The function description goes here.\n  "},"cairo_surface_write_to_png":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_surface_write_to_png<\/b>\n    ( CairoSurface $surface\n   , resource $stream\n   )","desc":"\n   The function description goes here.\n  "},"cairo_svg_surface_create":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   CairoSvgSurface <b>cairo_svg_surface_create<\/b>\n    ( string $file\n   , float $width\n   , float $height\n   )","desc":"\n   The function description goes here.\n  "},"cairo_svg_surface_restrict_to_version":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   void <b>cairo_svg_surface_restrict_to_version<\/b>\n    ( CairoSvgSurface $surface\n   , int $version\n   )","desc":"\n   The function description goes here.\n  "},"cairo_svg_version_to_string":{"version":"(PECL cairo >= 0.1.0)","shortdesc":"Description","syntax":"\n   string <b>cairo_svg_version_to_string<\/b>\n    ( int $version\n   )","desc":"\n   The function description goes here.\n  "},"cal_days_in_month":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0432 \u043c\u0435\u0441\u044f\u0446\u0435 \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0433\u043e\u0434\u0430 \u0438 \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044f","syntax":"\n   int <b>cal_days_in_month<\/b>\n    ( int $calendar\n   , int $month\n   , int $year\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0438\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0432 \u043c\u0435\u0441\u044f\u0446\u0435\n   month \u0433\u043e\u0434\u0430 year \u0434\u043b\u044f\n   \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044f calendar.\n  "},"cal_from_jd":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0434\u0430\u0442\u0443, \u0437\u0430\u0434\u0430\u043d\u043d\u0443\u044e \u0432 \u044e\u043b\u0438\u0430\u043d\u0441\u043a\u043e\u043c \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u0435, \u0432 \u0434\u0430\u0442\u0443 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044f","syntax":"\n   array <b>cal_from_jd<\/b>\n    ( int $jd\n   , int $calendar\n   )","desc":"\n    cal_from_jd() \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0434\u0430\u0442\u0443 \u044e\u043b\u0438\u0430\u043d\u0441\u043a\u043e\u0433\u043e \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044f, \u0437\u0430\u0434\u0430\u043d\u043d\u0443\u044e \u0432\n   jd, \u0432 \u0434\u0430\u0442\u0443 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044f\n   calendar. \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n   calendar: \n   CAL_GREGORIAN,\n   CAL_JULIAN,\n   CAL_JEWISH \u0438\n   CAL_FRENCH.\n  "},"cal_info":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u0435","syntax":"\n   array <b>cal_info<\/b>\n    ([ int $calendar = -1\n  ] )","desc":"\n    cal_info() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u0435\n   calendar.\n  "},"cal_to_jd":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\n   \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0437\u0430\u0434\u0430\u043d\u043d\u0443\u044e \u0434\u0430\u0442\u0443 \u0432 \u042e\u043b\u0438\u0430\u043d\u0441\u043a\u043e\u0435 \u0438\u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435\n  ","syntax":"\n   int <b>cal_to_jd<\/b>\n    ( int $calendar\n   , int $month\n   , int $day\n   , int $year\n   )","desc":"\n    cal_to_jd() \u0440\u0430\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0441 \u043d\u0430\u0447\u0430\u043b\u0430 \n   \u042e\u043b\u0438\u0430\u043d\u0441\u043a\u043e\u0439 \u044d\u043f\u043e\u0445\u0438 \u0434\u043e \u0434\u0430\u0442\u044b \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u0435 \n   calendar. \u0421\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0445 \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u0435\u0439 \n   calendar: \n   CAL_GREGORIAN,\n   CAL_JULIAN,\n   CAL_JEWISH \u0438\n   CAL_FRENCH.\n  "},"calcul_hmac":{"version":"(PECL spplus >= 1.0.0)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c HMAC-\u043a\u043b\u044e\u0447 (\u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e 8 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432)","syntax":"\n   string <b>calcul_hmac<\/b>\n    ( string $clent\n   , string $siretcode\n   , string $price\n   , string $reference\n   , string $validity\n   , string $taxation\n   , string $devise\n   , string $language\n   )","desc":""},"calculhmac":{"version":"(PECL spplus >= 1.0.0)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c HMAC-\u043a\u043b\u044e\u0447 (\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e 2 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430)","syntax":"\n   string <b>calculhmac<\/b>\n    ( string $clent\n   , string $data\n   )","desc":""},"call_user_func_array":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0441 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432","syntax":"\n   mixed <b>call_user_func_array<\/b>\n    ( callable $callback\n   , array $param_arr\n   )","desc":"\n   \u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e callback,\n   \u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 param_arr.\n  "},"call_user_func":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u0432 \u043f\u0435\u0440\u0432\u043e\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435","syntax":"\n   mixed <b>call_user_func<\/b>\n    ( callable $callback\n   [, mixed $parameter\n   [, mixed $...\n  ]] )","desc":"\n   \u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u0443\u044e \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435\n   callback.\n  "},"call_user_method_array":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442 \u043c\u0435\u0442\u043e\u0434 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0441 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 [\u0443\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0435\u0435]","syntax":"\n   mixed <b>call_user_method_array<\/b>\n    ( string $method_name\n   , object &$obj\n   , array $params\n   )","desc":""},"call_user_method":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442 \u043c\u0435\u0442\u043e\u0434 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 [\u0443\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0435\u0435]","syntax":"\n   mixed <b>call_user_method<\/b>\n    ( string $method_name\n   , object &$obj\n   [, mixed $parameter\n   [, mixed $...\n  ]] )","desc":""},"ceil":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u043a\u0440\u0443\u0433\u043b\u044f\u0435\u0442 \u0434\u0440\u043e\u0431\u044c \u0432 \u0431\u043e\u043b\u044c\u0448\u0443\u044e \u0441\u0442\u043e\u0440\u043e\u043d\u0443","syntax":"\n    float <b>ceil<\/b>\n     ( float $value\n    )","desc":""},"chdb_create":{"version":"(PECL chdb >= 0.1.0)","shortdesc":"Creates a chdb file","syntax":"\n   bool <b>chdb_create<\/b>\n    ( string $pathname\n   , array $data\n   )","desc":"\n    chdb_create() creates a chdb file containing the\n   specified key-value pairs.\n  "},"chdir":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u043a\u0430\u0442\u0430\u043b\u043e\u0433","syntax":"\n   bool <b>chdir<\/b>\n    ( string $directory\n   )","desc":"\n   \u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043a\u0430\u0442\u0430\u043b\u043e\u0433 PHP \u043d\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435\n   \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 directory.\n  "},"checkdate":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0441\u0442\u044c \u0434\u0430\u0442\u044b \u043f\u043e \u0433\u0440\u0438\u0433\u043e\u0440\u0438\u0430\u043d\u0441\u043a\u043e\u043c\u0443 \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044e","syntax":"\n   bool <b>checkdate<\/b>\n    ( int $month\n   , int $day\n   , int $year\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0441\u0442\u044c \u0434\u0430\u0442\u044b \u043f\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u043c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430\u043c.\n   \u0414\u0430\u0442\u0430 \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0439, \u0435\u0441\u043b\u0438 \u0432\u0441\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u044e\u0442 \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.\n  "},"checkdnsrr":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u0438 DNS, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0438\u043c\u0435\u043d\u0438 \u0443\u0437\u043b\u0430 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u0430 \u0438\u043b\u0438 IP-\u0430\u0434\u0440\u0435\u0441\u0443","syntax":"\n   bool <b>checkdnsrr<\/b>\n    ( string $host\n   [, string $type = \"MX\"\n  ] )","desc":"\n   \u0418\u0449\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u0438 DNS \u0442\u0438\u043f\u0430 type,\n   \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 host.\n  "},"chgrp":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u0433\u0440\u0443\u043f\u043f\u0443 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   bool <b>chgrp<\/b>\n    ( string $filename\n   , mixed $group\n   )","desc":"\n   \u041e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442 \u043f\u043e\u043f\u044b\u0442\u043a\u0443 \u0441\u043c\u0435\u043d\u044b \u0433\u0440\u0443\u043f\u043f\u044b \u0444\u0430\u0439\u043b\u0430 filename\n   \u043d\u0430 \u0433\u0440\u0443\u043f\u043f\u0443 group.\n  "},"chmod":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u0440\u0435\u0436\u0438\u043c \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0444\u0430\u0439\u043b\u0443","syntax":"\n   bool <b>chmod<\/b>\n    ( string $filename\n   , int $mode\n   )","desc":"\n   \u041e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442 \u043f\u043e\u043f\u044b\u0442\u043a\u0443 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0440\u0435\u0436\u0438\u043c\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430\n   \u043d\u0430 \u0440\u0435\u0436\u0438\u043c, \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 mode.\n  "},"chop":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  rtrim()","syntax":"","desc":""},"chown":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   bool <b>chown<\/b>\n    ( string $filename\n   , mixed $user\n   )","desc":"\n   \u041e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442 \u043f\u043e\u043f\u044b\u0442\u043a\u0443 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u0444\u0430\u0439\u043b\u0430 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c\n   filename \u043d\u0430 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430, \u0447\u044c\u0435 \u0438\u043c\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043e\n   \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 user (\u0432 \u0432\u0438\u0434\u0435 \u0447\u0438\u0441\u043b\u0430 \u0438\u043b\u0438 \u0441\u0442\u0440\u043e\u043a\u0438).\n   \u0422\u043e\u043b\u044c\u043a\u043e \u0441\u0443\u043f\u0435\u0440\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u0444\u0430\u0439\u043b\u0430.\n  "},"chr":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0438\u043c\u0432\u043e\u043b \u043f\u043e \u0435\u0433\u043e \u043a\u043e\u0434\u0443","syntax":"\n   string <b>chr<\/b>\n    ( int $ascii\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u043e\u0434\u043d\u043e\u0433\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430, \u043a\u043e\u0434 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0437\u0430\u0434\u0430\u043d \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c\n   ascii.\n  "},"chroot":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u043a\u043e\u0440\u043d\u0435\u0432\u043e\u0439 \u043a\u0430\u0442\u0430\u043b\u043e\u0433","syntax":"\n   bool <b>chroot<\/b>\n    ( string $directory\n   )","desc":"\n   \u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u043a\u043e\u0440\u043d\u0435\u0432\u043e\u0439 \u043a\u0430\u0442\u0430\u043b\u043e\u0433 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430 \u043d\u0430\n   \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 directory\n   \u0438 \u043c\u0435\u043d\u044f\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043a\u0430\u0442\u0430\u043b\u043e\u0433 \u043d\u0430 \"\/\".\n  "},"chunk_split":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0420\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u043d\u0430 \u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442\u044b","syntax":"\n   string <b>chunk_split<\/b>\n    ( string $body\n   [, int $chunklen = 76\n   [, string $end = \"\\r\\n\"\n  ]] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0440\u0430\u0437\u0431\u0438\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u043a\u0438 \u043d\u0430 \u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442\u044b, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0434\u043b\u044f\n   \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  base64_encode()\n   \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435 \u0441 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c\u0438 RFC 2045. \u041e\u043d\u0430 \u0432\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443\n   end \u043f\u043e\u0441\u043b\u0435 \u043a\u0430\u0436\u0434\u044b\u0445 chunklen\n   \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.\n  "},"class_alias":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430","syntax":"\n   bool <b>class_alias<\/b>\n    ( string $original\n   , string $alias\n   [, bool $autoload = TRUE\n  ] )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c alias\n   \u0434\u043b\u044f \u043a\u043b\u0430\u0441\u0441\u0430 original.\n   \u041d\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 \u0441 \u043f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c\u043e\u043c \u0431\u0443\u0434\u0435\u0442 \u0442\u043e\u0447\u043d\u043e \u0442\u0430\u043a\u0438\u043c \u0436\u0435,\n   \u043a\u0430\u043a \u0438 \u043e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441.\n  "},"class_exists":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0431\u044b\u043b \u043b\u0438 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d \u043a\u043b\u0430\u0441\u0441","syntax":"\n   bool <b>class_exists<\/b>\n    ( string $class_name\n   [, bool $autoload = true\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0431\u044b\u043b \u043b\u0438 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 \u0438\u043b\u0438 \u043d\u0435\u0442.\n  "},"class_implements":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432, \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u043a\u043b\u0430\u0441\u0441\u0435\n  ","syntax":"\n   array <b>class_implements<\/b>\n    ( mixed $class\n   [, bool $autoload = true\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0438\u043c\u0435\u043d \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432, \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u043a\u043b\u0430\u0441\u0441\u0435\n   class \u0438 \u0435\u0433\u043e \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u043a\u043b\u0430\u0441\u0441\u0430\u0445.\n  "},"class_parents":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430\n  ","syntax":"\n   array <b>class_parents<\/b>\n    ( mixed $class\n   [, bool $autoload = true\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u0438\u043c\u0435\u043d\u0430\u043c\u0438 \u0431\u0430\u0437\u043e\u0432\u044b\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430\n   class.\n  "},"class_uses":{"version":"(PHP 5 >= 5.4.0)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0442\u0440\u044d\u0439\u0442\u043e\u0432, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0445 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u043a\u043b\u0430\u0441\u0441\u043e\u043c\n  ","syntax":"\n   array <b>class_uses<\/b>\n    ( mixed $class\n   [, bool $autoload = true\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u0438\u043c\u0435\u043d\u0430\u043c\u0438 \u0442\u0440\u044d\u0439\u0442\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439\n   \u043a\u043b\u0430\u0441\u0441 class. \u0412 \u044d\u0442\u043e\u0442 \u043c\u0430\u0441\u0441\u0438\u0432, \u043e\u0434\u043d\u0430\u043a\u043e, \u043d\u0435 \u043f\u043e\u043f\u0430\u0434\u0443\u0442 \u0442\u0440\u044d\u0439\u0442\u044b,\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u0432 \u043a\u043b\u0430\u0441\u0441\u0430\u0445-\u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044f\u0445.\n  "},"classkit_import":{"version":"(PECL classkit >= 0.3)","shortdesc":"\u0418\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u043d\u043e\u0432\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   array <b>classkit_import<\/b>\n    ( string $filename\n   )","desc":""},"classkit_method_add":{"version":"(PECL classkit >= 0.1)","shortdesc":"\u0414\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441","syntax":"\n   bool <b>classkit_method_add<\/b>\n    ( string $classname\n   , string $methodname\n   , string $args\n   , string $code\n   [, int $flags = CLASSKIT_ACC_PUBLIC\n  ] )","desc":""},"classkit_method_copy":{"version":"(PECL classkit >= 0.2)","shortdesc":"\u041a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u043c\u0435\u0442\u043e\u0434 \u0438\u0437 \u043e\u0434\u043d\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 \u0432 \u0434\u0440\u0443\u0433\u043e\u0439","syntax":"\n   bool <b>classkit_method_copy<\/b>\n    ( string $dClass\n   , string $dMethod\n   , string $sClass\n   [, string $sMethod\n  ] )","desc":""},"classkit_method_redefine":{"version":"(PECL classkit >= 0.1)","shortdesc":"\u0414\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438 \u043c\u0435\u043d\u044f\u0435\u0442 \u043a\u043e\u0434 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430","syntax":"\n   bool <b>classkit_method_redefine<\/b>\n    ( string $classname\n   , string $methodname\n   , string $args\n   , string $code\n[, int $flags = CLASSKIT_ACC_PUBLIC\n  ] )","desc":""},"classkit_method_remove":{"version":"(PECL classkit >= 0.1)","shortdesc":"\u0414\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438 \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434","syntax":"\n   bool <b>classkit_method_remove<\/b>\n    ( string $classname\n   , string $methodname\n   )","desc":""},"classkit_method_rename":{"version":"(PECL classkit >= 0.1)","shortdesc":"\u0414\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438 \u043c\u0435\u043d\u044f\u0435\u0442 \u0438\u043c\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430","syntax":"\n   bool <b>classkit_method_rename<\/b>\n    ( string $classname\n   , string $methodname\n   , string $newname\n   )","desc":""},"clearstatcache":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0447\u0438\u0449\u0430\u0435\u0442 \u043a\u044d\u0448 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0444\u0430\u0439\u043b\u043e\u0432","syntax":"\n   void <b>clearstatcache<\/b>\n    ([ bool $clear_realpath_cache = false\n   [, string $filename\n  ]] )","desc":"\n   \u0414\u043b\u044f \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u0438\u044f \u0431\u043e\u043b\u044c\u0448\u0435\u0439 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438\n   \u0444\u0443\u043d\u043a\u0446\u0438\u0439  stat(),  lstat()\n   \u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0445 \u0432 \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u043d\u043e\u043c \u043d\u0438\u0436\u0435 \u0441\u043f\u0438\u0441\u043a\u0435,\n   PHP \u043a\u0435\u0448\u0438\u0440\u0443\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0438\u0445 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f. \u041e\u0434\u043d\u0430\u043a\u043e, \u0432 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445\n   \u0441\u043b\u0443\u0447\u0430\u044f\u0445 \u0432\u0430\u043c \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0442\u0440\u0435\u0431\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043e\u0447\u0438\u0441\u0442\u043a\u0430 \u044d\u0442\u043e\u0433\u043e \u043a\u044d\u0448\u0430. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440,\n   \u043a\u043e\u0433\u0434\u0430 \u0432\u0430\u0448 \u0441\u043a\u0440\u0438\u043f\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0437 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043e\u0434\u043d\u043e\u0433\u043e \u0438 \u0442\u043e\u0433\u043e \u0436\u0435 \u0444\u0430\u0439\u043b\u0430,\n   \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d \u0438\u043b\u0438 \u0443\u0434\u0430\u043b\u0435\u043d \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0441\u043a\u0440\u0438\u043f\u0442\u0430,\n   \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0437\u0430\u0445\u043e\u0442\u0435\u0442\u044c \u043e\u0447\u0438\u0441\u0442\u0438\u0442\u044c \u043a\u044d\u0448 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u044e  clearstatcache() \u0434\u043b\u044f \u043e\u0447\u0438\u0441\u0442\u043a\u0438\n   \u0432 PHP \u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c \u0444\u0430\u0439\u043b\u0435.\n  "},"cli_get_process_title":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Returns the current process title","syntax":"\n   string <b>cli_get_process_title<\/b>\n    ( void\n   )","desc":"\n   Returns the current process title, as set by\n    cli_set_process_title(). Note that this may not exactly\n   match what is shown in ps or top,\n   depending on your operating system.\n  "},"cli_set_process_title":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Sets the process title","syntax":"\n   bool <b>cli_set_process_title<\/b>\n    ( string $title\n   )","desc":"\n   Sets the process title visible in tools such as top and\n   ps. This function is available only in\n   CLI mode.\n  "},"closedir":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u0435\u0442 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430","syntax":"\n   void <b>closedir<\/b>\n    ([ resource $dir_handle\n  ] )","desc":"\n   \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u0442\u043e\u043a, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0439 \u0441 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u043e\u043c \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0432\n   \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 dir_handle.\n   \u041f\u0435\u0440\u0435\u0434 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0434\u0430\u043d\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u043f\u043e\u0442\u043e\u043a \u0434\u043e\u043b\u0436\u0435\u043d\n   \u0431\u044b\u0442\u044c \u043e\u0442\u043a\u0440\u044b\u0442 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0438  opendir().\n  "},"closelog":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0417\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u043c \u0436\u0443\u0440\u043d\u0430\u043b\u043e\u043c","syntax":"\n   bool <b>closelog<\/b>\n    ( void\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  closelog() \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0439 \u0434\u043b\u044f \u0437\u0430\u043f\u0438\u0441\u0438\n   \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0439 \u0436\u0443\u0440\u043d\u0430\u043b. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435  closelog() \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c.\n  "},"com_addref":{"version":"(PHP 4 >= 4.1.0)","shortdesc":"Increases the components reference counter [deprecated]","syntax":"\n    void <b>com_addref<\/b>\n     ( void\n   )","desc":"\n   Increases the components reference counter.\n  "},"com_create_guid":{"version":"(PHP 5)","shortdesc":"Generate a globally unique identifier (GUID)","syntax":"\n   string <b>com_create_guid<\/b>\n    ( void\n   )","desc":"\n   Generates a Globally Unique Identifier (GUID).\n  "},"com_event_sink":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Connect events from a COM object to a PHP object","syntax":"\n   bool <b>com_event_sink<\/b>\n    ( variant $comobject\n   , object $sinkobject\n   [, mixed $sinkinterface\n  ] )","desc":"\n   Instructs COM to sink events generated by\n   comobject into the PHP object\n   sinkobject.\n  "},"com_get_active_object":{"version":"(PHP 5)","shortdesc":"Returns a handle to an already running instance of a COM object","syntax":"\n   variant <b>com_get_active_object<\/b>\n    ( string $progid\n   [, int $code_page\n  ] )","desc":"\n    com_get_active_object() is similar to creating a new\n   instance of a COM object, except that it will\n   only return an object to your script if the object is already running.\n   OLE applications use something known as the \"Running Object Table\" to\n   allow well-known applications to be launched only once; this function\n   exposes the COM library function GetActiveObject() to get a handle on a\n   running instance.\n  "},"com_get":{"version":"(PHP 4)","shortdesc":"Gets the value of a COM Component's property [deprecated]","syntax":"","desc":""},"com_invoke":{"version":"(PHP 4)","shortdesc":"Calls a COM component's method [deprecated]","syntax":"\n   mixed <b>com_invoke<\/b>\n    ( resource $com_object\n   , string $function_name\n   [, mixed $function_parameters\n  ] )","desc":"\n    com_invoke() invokes the method\n   named function_name of the COM\n   component referenced by com_object.\n    com_invoke() returns FALSE on error,\n   returns the function_name's return\n   value on success. All the extra parameters\n   function_parameters are passed to\n   the method function_name.\n  "},"com_isenum":{"version":"(PHP 4 >= 4.1.0)","shortdesc":"Indicates if a COM object has an IEnumVariant interface for iteration [deprecated]","syntax":"\n   bool <b>com_isenum<\/b>\n    ( variant $com_module\n   )","desc":"\n   Checks to see if a COM object can be enumerated using the\n   Next()  method hack.\n   See COM class for more details on these\n   methods.\n  "},"com_load_typelib":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"Loads a Typelib","syntax":"\n   bool <b>com_load_typelib<\/b>\n    ( string $typelib_name\n   [, bool $case_insensitive = true\n  ] )","desc":"\n   Loads a type-library and registers its constants in the engine, as though\n   they were defined using  define().\n  "},"com_load":{"version":"(PHP 4)","shortdesc":"Creates a new reference to a COM component [deprecated]","syntax":"","desc":""},"com_message_pump":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Process COM messages, sleeping for up to timeoutms milliseconds","syntax":"\n   bool <b>com_message_pump<\/b>\n    ([ int $timeoutms = 0\n  ] )","desc":"\n   This function will sleep for up to timeoutms\n   milliseconds, or until a message arrives in the queue.\n  "},"com_print_typeinfo":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Print out a PHP class definition for a dispatchable interface","syntax":"\n   bool <b>com_print_typeinfo<\/b>\n    ( object $comobject\n   [, string $dispinterface\n   [, bool $wantsink = false\n  ]] )","desc":"\n   The purpose of this function is to help generate a skeleton class for use\n   as an event sink.  You may also use it to generate a dump of any COM\n   object, provided that it supports enough of the introspection interfaces,\n   and that you know the name of the interface you want to display.\n  "},"com_propget":{"version":"(PHP 4)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  com_get()","syntax":"","desc":""},"com_propput":{"version":"(PHP 4)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  com_set()","syntax":"","desc":""},"com_propset":{"version":"(PHP 4)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  com_set()","syntax":"","desc":""},"com_release":{"version":"(PHP 4 >= 4.1.0)","shortdesc":"Decreases the components reference counter [deprecated]","syntax":"\n   void <b>com_release<\/b>\n    ( void\n   )","desc":"\n   Decreases the components reference counter.\n  "},"com_set":{"version":"(PHP 4)","shortdesc":"Assigns a value to a COM component's property","syntax":"","desc":""},"compact":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0438 \u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f","syntax":"\n   array <b>compact<\/b>\n    ( mixed $varname\n   [, mixed $...\n  ] )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0438 \u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.\n  "},"connection_aborted":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430","syntax":"\n   int <b>connection_aborted<\/b>\n    ( void\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d \u043b\u0438 \u043a\u043b\u0438\u0435\u043d\u0442.\n  "},"connection_status":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0430\u0442\u0443\u0441 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0432 \u0431\u0438\u0442\u0430\u0445","syntax":"\n   int <b>connection_status<\/b>\n    ( void\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u0442\u0430\u0442\u0443\u0441 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0432 \u0431\u0438\u0442\u0430\u0445.  \n  "},"connection_timeout":{"version":"(PHP 4 <= 4.0.4)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043f\u0440\u0435\u0432\u044b\u0448\u0435\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u043c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f","syntax":"\n   int <b>connection_timeout<\/b>\n    ( void\n   )","desc":"\n   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u043d\u0435 \u043f\u0440\u0435\u0432\u044b\u0441\u0438\u043b\u043e \u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u0430 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f.\n  "},"constant":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u044b","syntax":"\n   mixed <b>constant<\/b>\n    ( string $name\n   )","desc":""},"convert_cyr_string":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u043e\u0434\u043d\u043e\u0439 \u043a\u0438\u0440\u0438\u043b\u043b\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 \u0432 \u0434\u0440\u0443\u0433\u0443\u044e","syntax":"\n   string <b>convert_cyr_string<\/b>\n    ( string $str\n   , string $from\n   , string $to\n   )","desc":"\n   \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u043e\u0434\u043d\u043e\u0439 \u043a\u0438\u0440\u0438\u043b\u043b\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 \u0432 \u0434\u0440\u0443\u0433\u0443\u044e.\n  "},"convert_uudecode":{"version":"(PHP 5)","shortdesc":"\u0414\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u0444\u043e\u0440\u043c\u0430\u0442\u0430 uuencode \u0432 \u043e\u0431\u044b\u0447\u043d\u044b\u0439 \u0432\u0438\u0434","syntax":"\n   string <b>convert_uudecode<\/b>\n    ( string $data\n   )","desc":"\n    convert_uudecode() \u0434\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u0444\u043e\u0440\u043c\u0430\u0442\u0430 uuencode \u0432 \u043e\u0431\u044b\u0447\u043d\u044b\u0439 \u0432\u0438\u0434.\n  "},"convert_uuencode":{"version":"(PHP 5)","shortdesc":"\u041a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442 uuencode","syntax":"\n   string <b>convert_uuencode<\/b>\n    ( string $data\n   )","desc":"\n    convert_uuencode() \u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 uuencode.\n  "},"copy":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u0444\u0430\u0439\u043b","syntax":"\n   bool <b>copy<\/b>\n    ( string $source\n   , string $dest\n   [, resource $context\n  ] )","desc":"\n   \u041a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u0444\u0430\u0439\u043b source \u0432 \u0444\u0430\u0439\u043b \u0441 \u0438\u043c\u0435\u043d\u0435\u043c\n   dest.\n  "},"cos":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041a\u043e\u0441\u0438\u043d\u0443\u0441","syntax":"\n    float <b>cos<\/b>\n     ( float $arg\n    )","desc":"\n    cos() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u0441\u0438\u043d\u0443\u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 arg\n   .  \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 arg \u0437\u0430\u0434\u0430\u0451\u0442\u0441\u044f \u0432 \u0440\u0430\u0434\u0438\u0430\u043d\u0430\u0445.\n  "},"cosh":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0413\u0438\u043f\u0435\u0440\u0431\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043a\u043e\u0441\u0438\u043d\u0443\u0441","syntax":"\n   float <b>cosh<\/b>\n    ( float $arg\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0433\u0438\u043f\u0435\u0440\u0431\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043a\u043e\u0441\u0438\u043d\u0443\u0441 arg,\n   \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c\u044b\u0439 \u043a\u0430\u043a (exp(arg) + exp(-arg))\/2.\n  "},"count_chars":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u0445, \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0432 \u0441\u0442\u0440\u043e\u043a\u0443","syntax":"\n   mixed <b>count_chars<\/b>\n    ( string $string\n   [, int $mode = 0\n  ] )","desc":"\n   \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0439 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0438\u0437 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0441 ASII-\u043a\u043e\u0434\u0430\u043c\u0438 \u0432\n   \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0435 (0..255) \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 string \u0438\n   \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u044d\u0442\u0443 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0432 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0444\u043e\u0440\u043c\u0430\u0442\u0430\u0445.\n  "},"count":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0438\u043b\u0438 \u0447\u0442\u043e-\u0442\u043e \u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u0435","syntax":"\n   int <b>count<\/b>\n    ( mixed $var\n   [, int $mode = COUNT_NORMAL\n  ] )","desc":"\n   \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0438\u043b\u0438 \u0447\u0442\u043e-\u0442\u043e \u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u0435.\n  "},"crack_check":{"version":"(PECL crack >= 0.1)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0432\u0437\u043b\u043e\u043c\u043e\u0441\u0442\u043e\u0439\u043a\u043e\u0441\u0442\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u0430\u0440\u043e\u043b\u044f","syntax":"\n   bool <b>crack_check<\/b>\n    ( resource $dictionary\n   , string $password\n   )\n\n   bool <b>crack_check<\/b>\n    ( string $password\n   )\n","desc":" \n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0432\u0437\u043b\u043e\u043c\u043e\u0441\u0442\u043e\u0439\u043a\u043e\u0441\u0442\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u0430\u0440\u043e\u043b\u044f \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u043c\u0443 \u0441\u043b\u043e\u0432\u0430\u0440\u044e.\n  "},"crack_closedict":{"version":"(PECL crack >= 0.1)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u043e\u0442\u043a\u0440\u044b\u0442\u044b\u0439 \u0440\u0430\u043d\u0435\u0435 \u0441\u043b\u043e\u0432\u0430\u0440\u044c CrackLib","syntax":"\n   bool <b>crack_closedict<\/b>\n    ([ resource $dictionary\n  ] )","desc":"\n    crack_closedict() \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u043b\u043e\u0432\u0430\u0440\u044c, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435\n   dictionary.\n  "},"crack_getlastmessage":{"version":"(PECL crack >= 0.1)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0435 \u0432\u0437\u043b\u043e\u043c\u043e\u0441\u0442\u043e\u0439\u043a\u043e\u0441\u0442\u0438 \u043f\u0430\u0440\u043e\u043b\u044f","syntax":"\n   string <b>crack_getlastmessage<\/b>\n    ( void\n   )","desc":"\n    crack_getlastmessage() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0435 \n   \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0435 \u0432\u0437\u043b\u043e\u043c\u043e\u0441\u0442\u043e\u0439\u043a\u043e\u0441\u0442\u0438 \u043f\u0430\u0440\u043e\u043b\u044f.\n  "},"crack_opendict":{"version":"(PECL crack >= 0.1)","shortdesc":"\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u0441\u043b\u043e\u0432\u0430\u0440\u044c CrackLib","syntax":"\n   resource <b>crack_opendict<\/b>\n    ( string $dictionary\n   )","desc":"\n    crack_opendict() \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u043b\u043e\u0432\u0430\u0440\u044c CrackLib, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439\n   \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 dictionary \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    crack_check().\n  "},"crc32":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u0438\u043d\u043e\u043c CRC32 \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   int <b>crc32<\/b>\n    ( string $str\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0446\u0438\u043a\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0438\u0437\u0431\u044b\u0442\u043e\u0447\u043d\u044b\u0439 \u043a\u043e\u0434 32-\u0431\u0438\u0442\u043d\u044b\u0445\n   \u043f\u043e\u043b\u0438\u043d\u043e\u043c\u043e\u0432 (CRC32) \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u043a\u0438 str.\n   \u042d\u0442\u043e \u043e\u0431\u044b\u0447\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044f \u0446\u0435\u043b\u043e\u0441\u0442\u043d\u043e\u0441\u0442\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0435\u043c\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445.\n  "},"create_function":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u0430\u043d\u043e\u043d\u0438\u043c\u043d\u0443\u044e (\u043b\u044f\u043c\u0431\u0434\u0430) \u0444\u0443\u043d\u043a\u0446\u0438\u044e","syntax":"\n   string <b>create_function<\/b>\n    ( string $args\n   , string $code\n   )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u0430\u043d\u043e\u043d\u0438\u043c\u043d\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0438\u0437 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432\n   \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0435\u0451 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0435 \u0438\u043c\u044f.\n  "},"crypt":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041d\u0435\u043e\u0431\u0440\u0430\u0442\u0438\u043c\u043e\u0435 \u0445\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   string <b>crypt<\/b>\n    ( string $str\n   [, string $salt\n  ] )","desc":"\n    crypt() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0445\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443,\n   \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u0443\u044e \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0433\u043e \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 UNIX, \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e\n   \u043d\u0430 DES, \u0438\u043b\u0438 \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430, \u0438\u043c\u0435\u044e\u0449\u0435\u0433\u043e\u0441\u044f \u0432\n   \u0441\u0438\u0441\u0442\u0435\u043c\u0435.\n  "},"ctype_alnum":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0431\u0443\u043a\u0432\u0435\u043d\u043d\u043e-\u0446\u0438\u0444\u0440\u043e\u0432\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432","syntax":"\n   bool <b>ctype_alnum<\/b>\n    ( string $text\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0432\u0441\u0435 \u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435\n   text \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0431\u0443\u043a\u0432\u0435\u043d\u043d\u043e-\u0446\u0438\u0444\u0440\u043e\u0432\u044b\u043c\u0438.\n  "},"ctype_alpha":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0431\u0443\u043a\u0432\u0435\u043d\u043d\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432","syntax":"\n   bool <b>ctype_alpha<\/b>\n    ( string $text\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0432\u0441\u0435 \u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435\n   text \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0431\u0443\u043a\u0432\u0435\u043d\u043d\u044b\u043c\u0438.\n   \u0412 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0439 \u043b\u043e\u043a\u0430\u043b\u0438 C \u0431\u0443\u043a\u0432\u0430\u043c\u0438 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \n   [A-Za-z] \u0438  ctype_alpha()\n   \u044d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442\u043d\u0430 (ctype_upper($text) || ctype_lower($text)),\n   \u0435\u0441\u043b\u0438 $text \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0432\u0441\u0435\u0433\u043e \u0438\u0437 \u043e\u0434\u043d\u043e\u0433\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430, \u043d\u043e \u0432 \u0434\u0440\u0443\u0433\u0438\u0445 \u044f\u0437\u044b\u043a\u0430\u0445 \u0435\u0441\u0442\u044c \u0431\u0443\u043a\u0432\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \n   \u043d\u0435 \u0441\u0447\u0438\u0442\u0430\u044e\u0442\u0441\u044f \u043d\u0438 \u0432\u0435\u0440\u0445\u043d\u0438\u043c, \u043d\u0438 \u043d\u0438\u0436\u043d\u0438\u043c \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u043e\u043c.\n  "},"ctype_cntrl":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432","syntax":"\n   bool <b>ctype_cntrl<\/b>\n    ( string $text\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0432\u0441\u0435 \u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435\n   text \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u043c\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c\u0438.\n   \u0423\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u043c\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c\u0438, \u043a \u043f\u0440\u0438\u043c\u0435\u0440\u0443, \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u0432\u043e\u0434 \u0441\u0442\u0440\u043e\u043a\u0438, \u0441\u0438\u043c\u0432\u043e\u043b \u0442\u0430\u0431\u0443\u043b\u044f\u0446\u0438\u0438, escape.\n  "},"ctype_digit":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0446\u0438\u0444\u0440\u043e\u0432\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435","syntax":"\n   bool <b>ctype_digit<\/b>\n    ( string $text\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043b\u0438 \u0432\u0441\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 text\n   \u0446\u0438\u0444\u0440\u043e\u0432\u044b\u043c\u0438.\n  "},"ctype_graph":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0432\u0441\u0435\u0445 \u043f\u0435\u0447\u0430\u0442\u043d\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u043a\u0440\u043e\u043c\u0435 \u043f\u0440\u043e\u0431\u0435\u043b\u0430","syntax":"\n   bool <b>ctype_graph<\/b>\n    ( string $text\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0432\u0441\u0435 \u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435\n   text \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0432\u0438\u0434\u0438\u043c\u044b\u043c\u0438 \u043f\u0440\u0438 \u043f\u0435\u0447\u0430\u0442\u0438.\n  "},"ctype_lower":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 \u043d\u0438\u0436\u043d\u0435\u043c \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0435","syntax":"\n   bool <b>ctype_lower<\/b>\n    ( string $text\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0432\u0441\u0435 \u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435\n   text \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0431\u0443\u043a\u0432\u0430\u043c\u0438 \u0432 \u043d\u0438\u0436\u043d\u0435\u043c \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0435.\n  "},"ctype_print":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u043f\u0435\u0447\u0430\u0442\u043d\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432","syntax":"\n   bool <b>ctype_print<\/b>\n    ( string $text\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0432\u0441\u0435 \u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435\n   text \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043f\u0435\u0447\u0430\u0442\u043d\u044b\u043c\u0438.\n  "},"ctype_punct":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u043f\u0435\u0447\u0430\u0442\u043d\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432 \u0442\u043e \u0436\u0435 \u0432\u0440\u0435\u043c\u044f\n   \u043d\u0435 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043f\u0440\u043e\u0431\u0435\u043b\u044c\u043d\u044b\u043c\u0438 \u0438\u043b\u0438 \u0431\u0443\u043a\u0432\u0435\u043d\u043d\u043e-\u0446\u0438\u0444\u0440\u043e\u0432\u044b\u043c\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c\u0438\n  ","syntax":"\n   bool <b>ctype_punct<\/b>\n    ( string $text\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0432\u0441\u0435 \u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435\n   text \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0437\u043d\u0430\u043a\u0430\u043c\u0438 \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0438\u0438.\n  "},"ctype_space":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u043f\u0440\u043e\u0431\u0435\u043b\u044c\u043d\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432","syntax":"\n   bool <b>ctype_space<\/b>\n    ( string $text\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0432\u0441\u0435 \u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435\n   text \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043f\u0440\u043e\u0431\u0435\u043b\u044c\u043d\u044b\u043c\u0438.\n  "},"ctype_upper":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 \u0432\u0435\u0440\u0445\u043d\u0435\u043c \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0435","syntax":"\n   bool <b>ctype_upper<\/b>\n    ( string $text\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0432\u0441\u0435 \u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435\n   text \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0431\u0443\u043a\u0432\u0430\u043c\u0438 \u0432 \u0432\u0435\u0440\u0445\u043d\u0435\u043c \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0435.\n  "},"ctype_xdigit":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0448\u0435\u0441\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u0438\u0440\u0438\u0447\u043d\u044b\u0445 \u0446\u0438\u0444\u0440","syntax":"\n   bool <b>ctype_xdigit<\/b>\n    ( string $text\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043b\u0438 \u0432\u0441\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 text \n   \u0448\u0435\u0441\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u0438\u0440\u0438\u0447\u043d\u044b\u043c\u0438 '\u0446\u0438\u0444\u0440\u0430\u043c\u0438'.\n  "},"cubrid_affected_rows":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Return the number of rows affected by the last SQL statement","syntax":"\n   int <b>cubrid_affected_rows<\/b>\n    ([ resource $conn_identifier\n  ] )\n\n   int <b>cubrid_affected_rows<\/b>\n    ([ resource $req_identifier\n  ] )\n","desc":"\n    The  cubrid_affected_rows() function is used to get the\n    number of rows affected by the SQL statement (INSERT, DELETE, UPDATE).\n  "},"cubrid_bind":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Bind variables to a prepared statement as parameters","syntax":"\n   bool <b>cubrid_bind<\/b>\n    ( resource $req_identifier\n   , int $bind_index\n   , mixed $bind_value\n   [, string $bind_value_type\n  ] )","desc":"\n   The  cubrid_bind() function is used to bind values to a\n   corresponding named or question mark placeholder in the SQL statement that\n   was passed to  cubrid_prepare(). If\n   bind_value_type is not given, string will be the\n   default.\n  "},"cubrid_client_encoding":{"version":"(PECL CUBRID >= 8.3.1)","shortdesc":"Return the current CUBRID connection charset","syntax":"\n   string <b>cubrid_client_encoding<\/b>\n    ([ resource $conn_identifier  \n  ] )","desc":"\n   This function returns the current CUBRID connection charset and is similar\n   to the CUBRID function  cubrid_get_charset().\n  "},"cubrid_close_prepare":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Close the request handle ","syntax":"\n   bool <b>cubrid_close_prepare<\/b>\n    ( resource $req_identifier\n   )","desc":"\n   The  cubrid_close_prepare() function closes the request\n   handle given by the req_identifier argument, and\n   releases the memory region related to the handle. It is an alias of\n    cubrid_close_request().\n  "},"cubrid_close_request":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Close the request handle ","syntax":"\n   bool <b>cubrid_close_request<\/b>\n    ( resource $req_identifier\n   )","desc":"\n    The  cubrid_close_request() function closes the request\n    handle given by the req_identifier argument, and\n    releases the memory region related to the handle. It is an alias of\n     cubrid_close_prepare().\n  "},"cubrid_close":{"version":"(PECL CUBRID >= 8.3.1)","shortdesc":"Close CUBRID connection","syntax":"\n   bool <b>cubrid_close<\/b>\n    ([ resource $conn_identifier  \n  ] )","desc":"\n    The  cubrid_close() function ends the transaction\n    currently in process, closes the connection handle and disconnects from\n    server. If there is any request handles not closed yet at this point,\n    they will be closed. It is similar to the CUBRID function\n     cubrid_disconnect().\n  "},"cubrid_col_get":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Get contents of collection type column using OID","syntax":"\n   array <b>cubrid_col_get<\/b>\n    ( resource $conn_identifier\n   , string $oid\n   , string $attr_name\n   )","desc":"\n    The  cubrid_col_get() function is used to get contents\n    of the elements of the collection type (set, multiset, sequence) attribute\n    you requested as an array.\n  "},"cubrid_col_size":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Get the number of elements in collection type column using OID","syntax":"\n   int <b>cubrid_col_size<\/b>\n        ( resource $conn_identifier\n       , string $oid\n       , string $attr_name\n   )","desc":"\n    The  cubrid_col_size() function is used to get the\n    number of elements in a collection type (set, multiset, sequence)\n    attribute.\n  "},"cubrid_column_names":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Get the column names in result","syntax":"\n   array <b>cubrid_column_names<\/b>\n    ( resource $req_identifier\n   )","desc":"\n    The  cubrid_column_names() function is used to get the\n    column names of the query result by using req_identifier.\n  "},"cubrid_column_types":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Get column types in result","syntax":"\n   array <b>cubrid_column_types<\/b>\n     ( resource $req_identifier\n   )","desc":"\n    The  cubrid_column_types() function gets column types of\n    query results by using req_identifier.\n  "},"cubrid_commit":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Commit a transaction","syntax":"\n   bool <b>cubrid_commit<\/b>\n    ( resource $conn_identifier )","desc":"\n    The  cubrid_commit() function is used to execute commit\n    on the transaction pointed by conn_identifier,\n    currently in progress. Connection to the server is closed after the\n     cubrid_commit() function is called; However, \n    the connection handle is still valid.\n  "},"cubrid_connect_with_url":{"version":"(PECL CUBRID >= 8.3.1)","shortdesc":"Establish the environment for connecting to CUBRID server","syntax":"\n   resource <b>cubrid_connect_with_url<\/b>\n    ( string $conn_url  \n   [, string $userid  \n   [, string $passwd  \n   [, bool $new_link = false\n  ]]] )","desc":"\n   The  cubrid_connect_with_url() function is used to\n   establish the environment for connecting to your server by using connection\n   information passed with an url string argument. If the HA feature is\n   enabled in CUBRID, you must specify the connection information of the\n   standby server, which is used for failover when failure occurs, in the url\n   string argument of this function. If the user name and password is not\n   given, then the \"PUBLIC\" connection will be made by default.\n  "},"cubrid_connect":{"version":"(PECL CUBRID >= 8.3.1)","shortdesc":"Open a connection to a CUBRID Server","syntax":"\n   resource <b>cubrid_connect<\/b>\n    ( string $host  \n   , int $port  \n   , string $dbname  \n   [, string $userid  \n   [, string $passwd  \n   [, bool $new_link = false  \n  ]]] )","desc":"\n    The  cubrid_connect() function is used to establish the\n    environment for connecting to your server by using your server address,\n    port number, database name, user name, and password. If the user name and\n    password is not given, then the \"PUBLIC\" connection will be made by\n    default. \n  "},"cubrid_current_oid":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Get OID of the current cursor location","syntax":"\n   string <b>cubrid_current_oid<\/b>\n    ( resource $req_identifier\n   )","desc":"\n    The  cubrid_current_oid() function is used to get the\n    oid of the current cursor location from the query result.  To use\n     cubrid_current_oid(), the query executed must be a\n    updatable query, and the CUBRID_INCLUDE_OID option must be included during\n    the query execution.\n  "},"cubrid_data_seek":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Move the internal row pointer of the CUBRID result","syntax":"\n   bool <b>cubrid_data_seek<\/b>\n    ( resource $result\n   , int $row_number\n   )","desc":"\n    This function performs the moving of the internal row pointer of the\n    CUBRID result (associated with the specified result identifier) to point\n    to a specific row number. There are functions, such as\n     cubrid_fetch_assoc(), which use the current stored\n    value of row number. \n  "},"cubrid_db_name":{"version":"(PECL CUBRID >= 8.3.1)","shortdesc":"Get db name from results of cubrid_list_dbs","syntax":"\n   string <b>cubrid_db_name<\/b>\n    ( array $result\n   , int $index\n   )","desc":"\n   Retrieve the database name from a call to  cubrid_list_dbs().\n  "},"cubrid_disconnect":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Close a database connection","syntax":"\n   bool <b>cubrid_disconnect<\/b>\n    ([ resource $conn_identifier\n  ] )","desc":"\n    The  cubrid_disconnect() function closes the connection\n    handle and disconnects from server. If any request handle is not closed at this point, \n    it will be closed. It is similar to the CUBRID MySQL compatible function  cubrid_close().\n  "},"cubrid_drop":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Delete an instance using OID","syntax":"\n   bool <b>cubrid_drop<\/b>\n    ( resource $conn_identifier  \n   , string $oid  \n   )","desc":"\n    The  cubrid_drop() function is used to delete an\n    instance from database by using the oid of the instance.\n  "},"cubrid_errno":{"version":"(PECL CUBRID >= 8.3.1)","shortdesc":"Return the numerical value of the error message from previous CUBRID operation","syntax":"\n   int <b>cubrid_errno<\/b>\n    ([ resource $conn_identifier\n  ] )","desc":"\n   Returns the error number from the last CUBRID function. \n  "},"cubrid_error_code_facility":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Get the facility code of error","syntax":"\n   int <b>cubrid_error_code_facility<\/b>\n    ( void\n   )","desc":"\n    The  cubrid_error_code_facility() function is used to\n    get the facility code (level in which the error occurred) from the error\n    code of the error that occurred during the API execution. Usually, you can\n    get the error code when API returns false as its return value.\n  "},"cubrid_error_code":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Get error code for the most recent function call","syntax":"\n   int <b>cubrid_error_code<\/b>\n    ( void\n   )","desc":"\n    The  cubrid_error_code() function is used to get the\n    error code of the error that occurred during the API execution. Usually,\n    it gets the error code when API returns false as its return value.\n  "},"cubrid_error_msg":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Get last error message for the most recent function call","syntax":"\n   string <b>cubrid_error_msg<\/b>\n    ( void\n   )","desc":"\n    The  cubrid_error_msg() function is used to get the\n    error message that occurred during the use of CUBRID API. Usually, it gets\n    error message when API returns false as its return value.\n  "},"cubrid_error":{"version":"(PECL CUBRID >= 8.3.1)","shortdesc":"Get the error message","syntax":"\n   string <b>cubrid_error<\/b>\n    ([ resource $connection\n  ] )","desc":"\n    The  cubrid_error() function is used to get the error\n    message that occurred during the use of CUBRID API. Usually, it gets error\n    message when API returns false as its return value.\n  "},"cubrid_execute":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Execute a prepared SQL statement","syntax":"\n   resource <b>cubrid_execute<\/b>\n    ( resource $conn_identifier  \n   , string $sql  \n   [, int $option  \n  ] )\n\n   bool <b>cubrid_execute<\/b>\n    ( resource $request_identifier  \n   [, int $option  \n  ] )\n","desc":"\n      The  cubrid_execute() function is used to execute the\n      given SQL statement. It executes the query by using\n      conn_identifier and SQL, and then returns the\n      request identifier created. It is used for simple execution of query,\n      where the parameter binding is not needed. In addition, the\n       cubrid_execute() function is used to execute the\n      prepared statement by means of  cubrid_prepare() and\n       cubrid_bind(). At this time, you need to specify\n      arguments of request_identifier and\n      option.\n    "},"cubrid_fetch_array":{"version":"(PECL CUBRID >=8.3.0)","shortdesc":"Fetch a result row as an associative array, a numeric array, or both","syntax":"\n   array <b>cubrid_fetch_array<\/b>\n    ( resource $result  \n   [, int $type = CUBRID_BOTH\n  ] )","desc":"\n    The  cubrid_fetch_array() function is used to get a\n    single row from the query result and returns an array. The cursor\n    automatically moves to the next row after getting the result.\n  "},"cubrid_fetch_assoc":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Return the associative array that corresponds to the fetched row","syntax":"\n   array <b>cubrid_fetch_assoc<\/b>\n    ( resource $result\n   [, int $type\n  ] )","desc":"\n    This function returns the associative array, that corresponds to the\n    fetched row, and then moves the internal data pointer ahead, or returns\n    FALSE when the end is reached.\n  "},"cubrid_fetch_field":{"version":"(PECL CUBRID >= 8.3.1)","shortdesc":"Get column information from a result and return as an object","syntax":"\n   object <b>cubrid_fetch_field<\/b>\n    ( resource $result\n   [, int $field_offset = 0\n  ] )","desc":"\n    This function returns an object with certain properties of the specific\n    column. The properties of the object are:\n  "},"cubrid_fetch_lengths":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Return an array with the lengths of the values of each field from the current row","syntax":"\n   array <b>cubrid_fetch_lengths<\/b>\n    ( resource $result\n   )","desc":"\n    This function returns an numeric array with the lengths of the values of\n    each field from the current row of the result set or it returns FALSE on\n    failure.\n  "},"cubrid_fetch_object":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Fetche the next row and returns it as an object","syntax":"\n   object <b>cubrid_fetch_object<\/b>\n    ( resource $result\n   [, string $class_name\n   [, array $params\n   [, int $type\n  ]]] )","desc":"\n    This function returns an object with the column names of the result set as\n    properties. The values of these properties are extracted from the current\n    row of the result. \n  "},"cubrid_fetch_row":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Return a numerical array with the values of the current row","syntax":"\n   array <b>cubrid_fetch_row<\/b>\n    ( resource $result\n   [, int $type\n  ] )","desc":"\n    This function returns a numerical array with the values of the current row\n    from the result set, starting from 0, and moves the internal data pointer\n    ahead.\n  "},"cubrid_fetch":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Fetch the next row from a result set","syntax":"\n   mixed <b>cubrid_fetch<\/b>\n    ( resource $result  \n   [, int $type = CUBRID_BOTH  \n  ] )","desc":"\n    The  cubrid_fetch() function is used to get a single row from the query result.  The cursor automatically moves to the next row after getting the result.\n  "},"cubrid_field_flags":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Return a string with the flags of the given field offset","syntax":"\n   string <b>cubrid_field_flags<\/b>\n    ( resource $result\n   , int $field_offset\n   )","desc":"\n    This function returns a string with the flags of the given field offset\n    separated by space. You can split the returned value using explode. The\n    possible flags could be: not_null,\n    primary_key, unique_key,\n    foreign_key, auto_increment,\n    shared, reverse_index,\n    reverse_unique and timestamp.\n  "},"cubrid_field_len":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Get the maximum length of the specified field","syntax":"\n   int <b>cubrid_field_len<\/b>\n    ( resource $result\n   , int $field_offset\n   )","desc":"\n    This function returns the maximum length of the specified field on success, or it returns FALSE on failure.\n  "},"cubrid_field_name":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Return the name of the specified field index","syntax":"\n   string <b>cubrid_field_name<\/b>\n    ( resource $result\n   , int $field_offset\n   )","desc":"\n    This function returns the name of the specified field index on success or\n    it returns FALSE on failure.\n  "},"cubrid_field_seek":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Move the result set cursor to the specified field offset","syntax":"\n   bool <b>cubrid_field_seek<\/b>\n    ( resource $result\n   [, int $field_offset = 0\n  ] )","desc":"\n    This function moves the result set cursor to the specified field offset.\n    This offset is used by  cubrid_fetch_field() if it\n    doesn't include a field offset. It returns TRUE on success or FALSE on\n    failure.\n  "},"cubrid_field_table":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Return the name of the table of the specified field","syntax":"\n   string <b>cubrid_field_table<\/b>\n    ( resource $result\n   , int $field_offset\n   )","desc":"\n    This function returns the name of the table of the specified field. This is useful when using large select queries with JOINS. \n  "},"cubrid_field_type":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Return the type of the column corresponding to the given field offset","syntax":"\n   string <b>cubrid_field_type<\/b>\n     ( resource $result\n   , int $field_offset\n   )","desc":"\n    This function returns the type of the column corresponding to the given\n    field offset. The returned field type could be one of the following:\n    \"int\", \"real\", \"string\", etc.\n  "},"cubrid_free_result":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Free the memory occupied by the result data","syntax":"\n   bool <b>cubrid_free_result<\/b>\n    ( resource $req_identifier  \n   )","desc":"\n    This function frees the memory occupied by the result data. It returns\n    TRUE on success or FALSE on failure. Note that it can only frees the\n    client fetch buffer now, and if you want free all memory, use function\n     cubrid_close_request().\n  "},"cubrid_get_autocommit":{"version":"(PECL CUBRID >= 8.4.0)","shortdesc":"Get auto-commit mode of the connection","syntax":"\n   bool <b>cubrid_get_autocommit<\/b>\n    ( resource $conn_identifier\n   )","desc":"\n   The  cubrid_get_autocommit() function is used to get the status of CUBRID\n   database connection auto-commit mode.\n  "},"cubrid_get_charset":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Return the current CUBRID connection charset","syntax":"\n   string <b>cubrid_get_charset<\/b>\n    ( resource $conn_identifier  \n   )","desc":"\n   This function returns the current CUBRID connection charset and is similar\n   to the CUBRID MySQL compatible function\n    cubrid_client_encoding().\n  "},"cubrid_get_class_name":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Get the class name using OID","syntax":"\n   string <b>cubrid_get_class_name<\/b>\n    ( resource $conn_identifier  \n   , string $oid  \n   )","desc":"\n    The  cubrid_get_class_name() function is used to get the\n    class name from oid. It doesn't work when selecting data from the system tables,\n    for example db_class.\n  "},"cubrid_get_client_info":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Return the client library version","syntax":"\n   string <b>cubrid_get_client_info<\/b>\n    ( void\n   )","desc":"\n    This function returns a string that represents the client library version.\n  "},"cubrid_get_db_parameter":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Returns the CUBRID database parameters","syntax":"\n   array <b>cubrid_get_db_parameter<\/b>\n    ( resource $conn_identifier  \n   )","desc":"\n   This function returns the CUBRID database parameters or it returns FALSE on\n   failure. It returns an associative array with the values for the following\n   parameters:\n  "},"cubrid_get_query_timeout":{"version":"(PECL CUBRID >= 8.4.1)","shortdesc":"Get the query timeout value of the request","syntax":"\n   int <b>cubrid_get_query_timeout<\/b>\n    ( resource $req_identifier\n   )","desc":"\n   The  cubrid_get_query_timeout() function is used to get\n   the query timeout of the request.\n  "},"cubrid_get_server_info":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Return the CUBRID server version","syntax":"\n   string <b>cubrid_get_server_info<\/b>\n    ( resource $conn_identifier  \n   )","desc":"\n    This function returns a string that represents the CUBRID server version.\n  "},"cubrid_get":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Get a column using OID","syntax":"\n   mixed <b>cubrid_get<\/b>\n    ( resource $conn_identifier  \n   , string $oid  \n   [, mixed $attr  \n  ] )","desc":"\n    The  cubrid_get() function is used to get the attribute\n    of the instance of the given oid.  You can get\n    single attribute by using string data type for the\n    attr argument, or many attributes by using array\n    data type for the attr argument.\n  "},"cubrid_insert_id":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Return the ID generated for the last updated AUTO_INCREMENT column","syntax":"\n   string <b>cubrid_insert_id<\/b>\n    ([ resource $conn_identifier\n  ] )","desc":"\n   The  cubrid_insert_id() function retrieves the ID\n   generated for the AUTO_INCREMENT column which is updated by the previous\n   INSERT query. It returns 0 if the previous query does not generate new\n   rows, or FALSE on failure. \n  "},"cubrid_is_instance":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Check whether the instance pointed by OID exists","syntax":"\n   int <b>cubrid_is_instance<\/b>\n    ( resource $conn_identifier  \n   , string $oid  \n   )","desc":"\n    The  cubrid_is_instance() function is used to check\n    whether the instance pointed by the given oid\n    exists or not.\n  "},"cubrid_list_dbs":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Return an array with the list of all existing CUBRID databases","syntax":"\n   array <b>cubrid_list_dbs<\/b>\n    ([ resource $conn_identifier  \n  ] )","desc":"\n   This function returns an array with the list of all existing Cubrid\n   databases.\n  "},"cubrid_load_from_glo":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Read data from a GLO instance and save it in a file","syntax":"\n   int <b>cubrid_load_from_glo<\/b>\n    ( resource $conn_identifier  \n   , string $oid  \n   , string $file_name  \n   )","desc":"\n    The  cubrid_load_from_glo() function is used to read a\n    data from a glo instance, and saves it in a designated file.\n  "},"cubrid_lob_close":{"version":"(PECL CUBRID >= 8.3.1)","shortdesc":"Close BLOB\/CLOB data","syntax":"\n   bool <b>cubrid_lob_close<\/b>\n    ( array $lob_identifier_array  \n   )","desc":"\n    cubrid_lob_close() is used to close all BLOB\/CLOB\n   returned from  cubrid_lob_get(). \n  "},"cubrid_lob_export":{"version":"(PECL CUBRID >= 8.3.1)","shortdesc":"Export BLOB\/CLOB data to file","syntax":"\n   bool <b>cubrid_lob_export<\/b>\n    ( resource $conn_identifier  \n   , resource $lob_identifier  \n   , string $path_name  \n   )","desc":"\n    cubrid_lob_export() is used to get BLOB\/CLOB data from CUBRID database, and saves its contents to a file.\n   To use this function, you must use  cubrid_lob_get() first to get BLOB\/CLOB info from CUBRID.\n  "},"cubrid_lob_get":{"version":"(PECL CUBRID >= 8.3.1)","shortdesc":"Get BLOB\/CLOB data","syntax":"\n   array <b>cubrid_lob_get<\/b>\n    ( resource $conn_identifier  \n   , string $sql  \n   )","desc":"\n    cubrid_lob_get() is used to get BLOB\/CLOB meta info from CUBRID database, \n   CUBRID gets BLOB\/CLOB by executing the SQL statement, and returns all LOBs as a resource array. \n   Be sure that the SQL retrieves only one column and its data type is BLOB or CLOB.\n  "},"cubrid_lob_send":{"version":"(PECL CUBRID >= 8.3.1)","shortdesc":"Read BLOB\/CLOB data and send straight to browser","syntax":"\n   bool <b>cubrid_lob_send<\/b>\n    ( resource $conn_identifier  \n   , resource $lob_identifier  \n   )","desc":"\n    cubrid_lob_send() reads BLOB\/CLOB data and passes it straight through to the browser.  \n   To use this function, you must use  cubrid_lob_get() first to get BLOB\/CLOB info from CUBRID.\n  "},"cubrid_lob_size":{"version":"(PECL CUBRID >= 8.3.1)","shortdesc":"Get BLOB\/CLOB data size","syntax":"\n   string <b>cubrid_lob_size<\/b>\n    ( resource $lob_identifier  \n   )","desc":"\n    cubrid_lob_size() is used to get BLOB\/CLOB data size.\n  "},"cubrid_lob2_bind":{"version":"(PECL CUBRID >= 8.4.1)","shortdesc":"Bind a lob object or a string as a lob object to a prepared statement as parameters.","syntax":"\n   bool <b>cubrid_lob2_bind<\/b>\n    ( resource $req_identifier\n   , int $bind_index\n   , mixed $bind_value\n   [, string $bind_value_type\n  ] )","desc":"\n   The  cubrid_lob2_bind() function is used to bind BLOB\/CLOB datas\n   to a corresponding question mark placeholder in the SQL statement that was passed \n   to  cubrid_prepare(). If bind_value_type \n   is not given, string will be \"BLOB\" as the default. But if you use\n    cubrid_lob2_new() before, bind_value_type\n   will be consistent with type in  cubrid_lob2_new() as the default.\n  "},"cubrid_lob2_close":{"version":"(PECL CUBRID >= 8.4.1)","shortdesc":"Close LOB object.","syntax":"\n   bool <b>cubrid_lob2_close<\/b>\n    ( resource $lob_identifier\n   )","desc":"\n   The  cubrid_lob2_close() function is used to close LOB object\n   returned from  cubrid_lob2_new() or got from the result set.\n  "},"cubrid_lob2_export":{"version":"(PECL CUBRID >= 8.4.1)","shortdesc":"Export the lob object to a file.","syntax":"\n   bool <b>cubrid_lob2_export<\/b>\n    ( resource $lob_identifier\n   , string $file_name\n   )","desc":"\n   The  cubrid_lob2_export() function is used to save the \n   contents of BLOB\/CLOB data to a file. To use this function, you must use\n    cubrid_lob2_new() or fetch a lob object from CUBRID \n   database first. If the file already exists, the operation will fail. \n   This function will not influence the cursor position of the lob object. \n   It operates the entire lob object.\n  "},"cubrid_lob2_import":{"version":"(PECL CUBRID >= 8.4.1)","shortdesc":"Import BLOB\/CLOB data from a file.","syntax":"\n   bool <b>cubrid_lob2_import<\/b>\n    ( resource $lob_identifier\n   , string $file_name\n   )","desc":"\n   The  cubrid_lob2_import() function is used to save the\n   contents of BLOB\/CLOB data from a file. To use this function, you must use\n    cubrid_lob2_new() or fetch a lob object from CUBRID database\n   first. If the file already exists, the operation will fail. \n   This function will not influence the cursor position of the lob object. \n   It operates the entire lob object.\n  "},"cubrid_lob2_new":{"version":"(PECL CUBRID >= 8.4.1)","shortdesc":"Create a lob object.","syntax":"\n   resource <b>cubrid_lob2_new<\/b>\n    ([ resource $conn_identifier\n   [, string $type = \"BLOB\"  \n  ]] )","desc":"\n   The  cubrid_lob2_new() function is used to create a lob object (both BLOB and CLOB). \n   This function should be used before you bind a lob object.\n  "},"cubrid_lob2_read":{"version":"(PECL CUBRID >= 8.4.1)","shortdesc":"Read from BLOB\/CLOB data.","syntax":"\n   string <b>cubrid_lob2_read<\/b>\n    ( resource $lob_identifier\n   , int $len\n   )","desc":"\n   The  cubrid_lob2_read() function reads len bytes from the \n   LOB data and returns the bytes read.\n  "},"cubrid_lob2_seek":{"version":"(PECL CUBRID >= 8.4.1)","shortdesc":"Move the cursor of a lob object.","syntax":"\n   bool <b>cubrid_lob2_seek<\/b>\n    ( resource $lob_identifier\n   , int $offset\n   [, int $origin = CUBRID_CURSOR_CURRENT\n  ] )","desc":"\n   The  cubrid_lob2_seek() function is used to move the cursor\n   position of a lob object by the value set in the offset\n   argument, to the direction set in the origin argument.\n  "},"cubrid_lob2_seek64":{"version":"(PECL CUBRID >= 8.4.1)","shortdesc":"Move the cursor of a lob object.","syntax":"\n   bool <b>cubrid_lob2_seek64<\/b>\n    ( resource $lob_identifier\n   , string $offset\n   [, int $origin = CUBRID_CURSOR_CURRENT\n  ] )","desc":"\n   The  cubrid_lob2_seek64() function is used to move the cursor\n   position of a lob object by the value set in the offset \n   argument, to the direction set in the origin argument. \n   If the offset you want to move is larger than an integer \n   data can be stored, you can use this function.\n  "},"cubrid_lob2_size":{"version":"(PECL CUBRID >= 8.4.1)","shortdesc":"Get a lob object's size.","syntax":"\n   int <b>cubrid_lob2_size<\/b>\n    ( resource $lob_identifier\n   )","desc":"\n   The  cubrid_lob2_size() function is used to get the size of a lob object.\n  "},"cubrid_lob2_size64":{"version":"(PECL CUBRID >= 8.4.1)","shortdesc":"Get a lob object's size.","syntax":"\n   string <b>cubrid_lob2_size64<\/b>\n    ( resource $lob_identifier\n   )","desc":"\n   The  cubrid_lob2_size64() function is used to get the\n   size of a lob object.  If the size of a lob object is larger than an\n   integer data can be stored, you can use this function and it will return\n   the size as a string.\n  "},"cubrid_lob2_tell":{"version":"(PECL CUBRID >= 8.4.1)","shortdesc":"Tell the cursor position of the LOB object.","syntax":"\n   int <b>cubrid_lob2_tell<\/b>\n    ( resource $lob_identifier\n   )","desc":"\n   The  cubrid_lob2_tell() function is used to tell the cursor position of the LOB object.\n  "},"cubrid_lob2_tell64":{"version":"(PECL CUBRID >= 8.4.1)","shortdesc":"Tell the cursor position of the LOB object.","syntax":"\n   string <b>cubrid_lob2_tell64<\/b>\n    ( resource $lob_identifier\n   )","desc":"\n   The  cubrid_lob2_tell64() function is used to tell the \n   cursor position of the LOB object. If the size of a lob object is larger\n   than an integer data can be stored, you can use this function and it will\n   return the position information as a string.\n  "},"cubrid_lob2_write":{"version":"(PECL CUBRID >= 8.4.1)","shortdesc":"Write to a lob object.","syntax":"\n   bool <b>cubrid_lob2_write<\/b>\n    ( resource $lob_identifier\n   , string $buf\n   )","desc":"\n   The  cubrid_lob2_write() function reads as much as data\n   from buf and stores it to the LOB object. Note that\n   this function can only append characters now.\n  "},"cubrid_lock_read":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Set a read lock on the given OID","syntax":"\n   bool <b>cubrid_lock_read<\/b>\n    ( resource $conn_identifier  \n   , string $oid  \n   )","desc":"\n    The  cubrid_lock_read() function is used to put read\n    lock on the instance pointed by given oid.\n  "},"cubrid_lock_write":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Set a write lock on the given OID","syntax":"\n   bool <b>cubrid_lock_write<\/b>\n    ( resource $conn_identifier  \n   , string $oid  \n   )","desc":"\n    The  cubrid_lock_write() function is used to put write\n    lock on the instance pointed by the given oid.\n  "},"cubrid_move_cursor":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Move the cursor in the result","syntax":"\n   int <b>cubrid_move_cursor<\/b>\n    ( resource $req_identifier  \n   , int $offset  \n   [, int $origin = CUBRID_CURSOR_CURRENT  \n  ] )","desc":"\n    The  cubrid_move_cursor() function is used to move the\n    current cursor location of req_identifier by the\n    value set in the offset argument, to the direction\n    set in the origin argument. To set the\n    origin argument, you can use CUBRID_CURSOR_FIRST\n    for the first part of the result, CUBRID_CURSOR_CURRENT for the current\n    location of the result, or CUBRID_CURSOR_LAST for the last part of the\n    result.  If origin argument is not explicitly\n    designated, then the function uses CUBRID_CURSOR_CURRENT as its default\n    value.\n  "},"cubrid_new_glo":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Create a glo instance","syntax":"\n   string <b>cubrid_new_glo<\/b>\n    ( resource $conn_identifier  \n   , string $class_name  \n   , string $file_name  \n   )","desc":"\n    The  cubrid_new_glo() function is used to create a glo instance in the requested class (glo class).  The glo created is a LO type, and is stored in the file_name file.\n  "},"cubrid_next_result":{"version":"(PECL CUBRID >= 8.4.0)","shortdesc":"Get result of next query when executing multiple SQL statements","syntax":"\n   bool <b>cubrid_next_result<\/b>\n    ( resource $result  \n   )","desc":"\n    The  cubrid_next_result() function is used to get\n    results of next query if multiple SQL statements are executed and\n    CUBRID_EXEC_QUERY_ALL flag is set upon\n     cubrid_execute().\n   "},"cubrid_num_cols":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Return the number of columns in the result set","syntax":"\n   int <b>cubrid_num_cols<\/b>\n    ( resource $result  \n   )","desc":"\n    The  cubrid_num_cols() function is used to get the\n    number of columns from the query result. It can only be used when the\n    query executed is a select statement.\n  "},"cubrid_num_fields":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Return the number of columns in the result set","syntax":"\n   int <b>cubrid_num_fields<\/b>\n    ( resource $result\n   )","desc":"\n    This function returns the number of columns in the result set, on success,\n    or it returns FALSE on failure.\n  "},"cubrid_num_rows":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Get the number of rows in the result set","syntax":"\n   int <b>cubrid_num_rows<\/b>\n    ( resource $result  \n   )","desc":"\n    The  cubrid_num_rows() function is used to get the\n    number of rows from the query result.  You can use it only when the query\n    executed is a select statement.  When you want to know such value for\n    INSERT, UPDATE, or DELETE query, you have to use the\n     cubrid_affected_rows() function.\n  "},"cubrid_pconnect_with_url":{"version":"(PECL CUBRID >= 8.3.1)","shortdesc":"Open a persistent connection to CUBRID server","syntax":"\n   resource <b>cubrid_pconnect_with_url<\/b>\n    ( string $conn_url  \n   [, string $userid  \n   [, string $passwd  \n  ]] )","desc":"\n   Establishes a persistent connection to a CUBRID server.\n  "},"cubrid_pconnect":{"version":"(PECL CUBRID >= 8.3.1)","shortdesc":"Open a persistent connection to a CUBRID server","syntax":"\n   resource <b>cubrid_pconnect<\/b>\n    ( string $host  \n   , int $port  \n   , string $dbname  \n   [, string $userid  \n   [, string $passwd  \n  ]] )","desc":"\n   Establishes a persistent connection to a CUBRID server.\n  "},"cubrid_ping":{"version":"(PECL CUBRID >= 8.3.1)","shortdesc":"Ping a server connection or reconnect if there is no connection","syntax":"\n   bool <b>cubrid_ping<\/b>\n    ([ resource $conn_identifier\n  ] )","desc":"\n   Checks whether or not the connection to the server is working.\n  "},"cubrid_prepare":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Prepare a SQL statement for execution","syntax":"\n   resource <b>cubrid_prepare<\/b>\n    ( resource $conn_identifier  \n   , string $prepare_stmt  \n   [, int $option = 0  \n  ] )","desc":"\n      The  cubrid_prepare() function is a sort of API which represents SQL statements \n      compiled previously to a given connection handle. This pre-compiled SQL statement will be included \n      in the  cubrid_prepare(). \n  "},"cubrid_put":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Update a column using OID","syntax":"\n   int <b>cubrid_put<\/b>\n    ( resource $conn_identifier  \n   , string $oid  \n   [, string $attr \n   ], mixed $value  \n   )","desc":"\n      The  cubrid_put() function is used to update an\n      attribute of the instance of the given oid.\n  "},"cubrid_query":{"version":"(PECL CUBRID >= 8.3.1)","shortdesc":"Send a CUBRID query","syntax":"\n   resource <b>cubrid_query<\/b>\n    ( string $query\n   [, resource $conn_identifier\n  ] )","desc":"\n    cubrid_query() sends a unique query (multiple queries are not supported) to the \n   currently active database on the server that's associated with the specified conn_identifier.\n  "},"cubrid_real_escape_string":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Escape special characters in a string for use in an SQL statement","syntax":"\n   string <b>cubrid_real_escape_string<\/b>\n    ( string $unescaped_string\n   [, resource $conn_identifier\n  ] )","desc":"\n    This function returns the escaped string version of the given string. It\n    will escape the following characters: '. \n\n    In general, single quotations are used to enclose character string. Double\n    quotations may be used as well depending on the value of ansi_quotes,\n    which is a parameter related to SQL statement. If the ansi_quotes value is\n    set to no, character string enclosed by double quotations is handled as\n    character string, not as an identifier. The default value is yes.\n\n    If you want to include a single quote as part of a character string, enter\n    two single quotes in a row.\n  "},"cubrid_result":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Return the value of a specific field in a specific row","syntax":"\n   string <b>cubrid_result<\/b>\n    ( resource $result\n   , int $row\n   [, mixed $field = 0\n  ] )","desc":"\n    This function returns the value of a specific field in a specific row from\n    a result set. \n  "},"cubrid_rollback":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Roll back a transaction","syntax":"\n   bool <b>cubrid_rollback<\/b>\n    ( resource $conn_identifier  \n   )","desc":"\n    The  cubrid_rollback() function executes rollback on the\n    transaction pointed by conn_identifier, currently in\n    progress.\n  "},"cubrid_save_to_glo":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Save requested file in a GLO instance","syntax":"\n   int <b>cubrid_save_to_glo<\/b>\n    ( resource $conn_identifier  \n   , string $oid  \n   , string $file_name  \n   )","desc":"\n    The  cubrid_save_to_glo() function is used to save requested file in a glo instance.\n  "},"cubrid_schema":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Get the requested schema information","syntax":"\n   array <b>cubrid_schema<\/b>\n    ( resource $conn_identifier  \n   , int $schema_type  \n   [, string $class_name \n   [, string $attr_name  \n  ]] )","desc":"\n    The  cubrid_schema() function is used to get the\n    requested schema information from database. You have to designate\n    class_name, if you want to get information on\n    certain class, attr_name, if you want to get\n    information on certain attribute (can be used only with CUBRID_\n    SCH_ATTR_PRIVILEGE).\n  "},"cubrid_send_glo":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Read data from glo and send it to std output","syntax":"\n   int <b>cubrid_send_glo<\/b>\n    ( resource $conn_identifier  \n   , string $oid  \n   )","desc":"\n    The  cubrid_send_glo() function is used to read data from glo instance and sends it to the PHP standard output.\n  "},"cubrid_seq_drop":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Delete an element from sequence type column using OID","syntax":"\n   bool <b>cubrid_seq_drop<\/b>\n    ( resource $conn_identifier  \n   , string $oid  \n   , string $attr_name  \n   , int $index  \n   )","desc":"\n    The  cubrid_seq_drop() function is used to delete an\n    element you request from the given sequence type attribute in the\n    database.\n  "},"cubrid_seq_insert":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Insert an element to a sequence type column using OID","syntax":"\n   bool <b>cubrid_seq_insert<\/b>\n    ( resource $conn_identifier  \n   , string $oid  \n   , string $attr_name  \n   , int $index  \n   , string $seq_element  \n   )","desc":"\n    The  cubrid_col_insert() function is used to insert an\n    element to a sequence type attribute in a requested location.\n  "},"cubrid_seq_put":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Update the element value of sequence type column using OID","syntax":"\n   bool <b>cubrid_seq_put<\/b>\n    ( resource $conn_identifier  \n   , string $oid  \n   , string $attr_name  \n   , int $index  \n   , string $seq_element  \n   )","desc":"\n    The  cubrid_seq_put() function is used to update the\n    content of the requested element in a sequent type attribute using OID.\n  "},"cubrid_set_add":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Insert a single element to set type column using OID","syntax":"\n   bool <b>cubrid_set_add<\/b>\n    ( resource $conn_identifier  \n   , string $oid  \n   , string $attr_name  \n   , string $set_element \n   )","desc":"\n    The  cubrid_set_add() function is used to insert a\n    single element to a set type attribute (set, multiset, sequence) you\n    requested.\n  "},"cubrid_set_autocommit":{"version":"(PECL CUBRID >= 8.4.0)","shortdesc":"Set autocommit mode of the connection","syntax":"\n   bool <b>cubrid_set_autocommit<\/b>\n    ( resource $conn_identifier\n   , bool $mode  \n   )","desc":"\n   The  cubrid_set_autocommit() function is used to set the\n   CUBRID database auto-commit mode of the current database connection. \n  "},"cubrid_set_db_parameter":{"version":"(PECL CUBRID >= 8.4.0)","shortdesc":"Sets the CUBRID database parameters","syntax":"\n   bool <b>cubrid_set_db_parameter<\/b>\n    ( resource $conn_identifier  \n   , int $param_type  \n   , int $param_value  \n   )","desc":"\n   The  cubrid_set_db_parameter() function is used to set\n   the CUBRID database parameters. It can set the following CUBRID database\n   parameters:\n  "},"cubrid_set_drop":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Delete an element from set type column using OID","syntax":"\n   bool <b>cubrid_set_drop<\/b>\n    ( resource $conn_identifier  \n   , string $oid  \n   , string $attr_name  \n   , string $set_element \n   )","desc":"\n    The  cubrid_set_drop() function is used to delete an\n    element that you request from the given set type (set, multiset) attribute\n    of the database.\n  "},"cubrid_set_query_timeout":{"version":"(PECL CUBRID >= 8.4.1)","shortdesc":"Set the timeout time of query execution","syntax":"\n   bool <b>cubrid_set_query_timeout<\/b>\n    ( resource $req_identifier\n   , int $timeout  \n   )","desc":"\n   The  cubrid_set_query_timeout() function is used to set\n   the timeout time of query execution.\n  "},"cubrid_unbuffered_query":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Perform a query without fetching the results into memory","syntax":"\n   resource <b>cubrid_unbuffered_query<\/b>\n    ( string $query\n   [, resource $conn_identifier\n  ] )","desc":"\n    This function performs a query without waiting for that all query results have been complete. It will return \n    when the results are being generated. \n  "},"cubrid_version":{"version":"(PECL CUBRID >= 8.3.0)","shortdesc":"Get the CUBRID PHP module's version","syntax":"\n   string <b>cubrid_version<\/b>\n    ( void\n   )","desc":"\n    The  cubrid_version() function is used to get the CUBRID\n    PHP module's version.\n  "},"curl_close":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u0417\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u0441\u0435\u0430\u043d\u0441 cURL","syntax":"\n   void <b>curl_close<\/b>\n    ( resource $ch\n   )","desc":"\n   \u0417\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u0441\u0435\u0430\u043d\u0441 cURL \u0438 \u043e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u0435\u0442 \u0432\u0441\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u044b.\n   \u0414\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 ch \u0442\u0430\u043a\u0436\u0435 \u0443\u043d\u0438\u0447\u0442\u043e\u0436\u0430\u0435\u0442\u0441\u044f.\n  "},"curl_copy_handle":{"version":"(PHP 5)","shortdesc":"\u041a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 cURL \u0432\u043c\u0435\u0441\u0442\u0435 \u0441\u043e \u0432\u0441\u0435\u043c\u0438 \u0435\u0433\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u043c\u0438","syntax":"\n   resource <b>curl_copy_handle<\/b>\n    ( resource $ch\n   )","desc":"\n   \u041a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 cURL \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044f \u0435\u0433\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438.\n  "},"curl_errno":{"version":"(PHP 4 >= 4.0.3, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u0434 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043e\u0448\u0438\u0431\u043a\u0438","syntax":"\n   int <b>curl_errno<\/b>\n    ( resource $ch\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u0434 \u043e\u0448\u0438\u0431\u043a\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 cURL.\n  "},"curl_error":{"version":"(PHP 4 >= 4.0.3, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043e\u0448\u0438\u0431\u043a\u0438 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0441\u0435\u0430\u043d\u0441\u0430","syntax":"\n   string <b>curl_error<\/b>\n    ( resource $ch\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u043d\u044f\u0442\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435 \u0434\u043b\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 cURL.\n  "},"curl_escape":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"URL encodes the given string","syntax":"\n   string <b>curl_escape<\/b>\n    ( resource $ch\n   , string $str\n   )","desc":"\n   This function URL encodes the given string according to \u00bb\u00a0RFC 3986.\n  "},"curl_exec":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 cURL","syntax":"\n   mixed <b>curl_exec<\/b>\n    ( resource $ch\n   )","desc":"\n   \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 cURL.\n  "},"curl_file_create":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Create a CURLFile object","syntax":"","desc":""},"curl_getinfo":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438","syntax":"\n   mixed <b>curl_getinfo<\/b>\n    ( resource $ch\n   [, int $opt = 0\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438.\n  "},"curl_init":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0441\u0435\u0430\u043d\u0441 cURL","syntax":"\n   resource <b>curl_init<\/b>\n    ([ string $url = NULL\n  ] )","desc":"\n   \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u0441\u0435\u0430\u043d\u0441 cURL \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440,\n   \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0441 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438  curl_setopt(),\n    curl_exec() \u0438  curl_close().\n  "},"curl_multi_add_handle":{"version":"(PHP 5)","shortdesc":"\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0431\u044b\u0447\u043d\u044b\u0439 cURL \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 \u043a \u043d\u0430\u0431\u043e\u0440\u0443 cURL \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u043e\u0432","syntax":"\n   int <b>curl_multi_add_handle<\/b>\n    ( resource $mh\n   , resource $ch\n   )","desc":"\n   \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 ch \u043a \u043d\u0430\u0431\u043e\u0440\u0443 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u043e\u0432\n   mh\n  "},"curl_multi_close":{"version":"(PHP 5)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u043d\u0430\u0431\u043e\u0440 cURL \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u043e\u0432","syntax":"\n   void <b>curl_multi_close<\/b>\n    ( resource $mh\n   )","desc":"\n   \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u043d\u0430\u0431\u043e\u0440 cURL \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u043e\u0432.\n  "},"curl_multi_exec":{"version":"(PHP 5)","shortdesc":"\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u043f\u043e\u0434-\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0430 cURL","syntax":"\n   int <b>curl_multi_exec<\/b>\n    ( resource $mh\n   , int &$still_running\n   )","desc":"\n   \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043a\u0430\u0436\u0434\u044b\u0439 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 \u0432 \u0441\u0442\u0435\u043a\u0435. \u042d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0432\u044b\u0437\u0432\u0430\u043d \u0432\u043d\u0435\n   \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0430 \u0447\u0438\u0442\u0430\u0442\u044c \u0438\u043b\u0438 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435.\n  "},"curl_multi_getcontent":{"version":"(PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u0435\u0441\u043b\u0438 \u0431\u044b\u043b\u0430 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430 \u043e\u043f\u0446\u0438\u044f\n   CURLOPT_RETURNTRANSFER","syntax":"\n   string <b>curl_multi_getcontent<\/b>\n    ( resource $ch\n   )","desc":"\n   \u0415\u0441\u043b\u0438 \u0434\u043b\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0430 \u0431\u044b\u043b\u0430 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430 \u043e\u043f\u0446\u0438\u044f CURLOPT_RETURNTRANSFER,\n   \u0442\u043e \u044d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u0435\u0440\u043d\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u044d\u0442\u043e\u0433\u043e cURL \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0430 \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a\u0438.\n  "},"curl_multi_info_read":{"version":"(PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0442\u0435\u043a\u0443\u0449\u0438\u0445 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u0445","syntax":"\n   array <b>curl_multi_info_read<\/b>\n    ( resource $mh\n   [, int &$msgs_in_queue = NULL\n  ] )","desc":"\n   \u041e\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u043d\u0430\u0431\u043e\u0440 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u043e\u0432 \u043e \u043d\u0430\u043b\u0438\u0447\u0438\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0438\u043b\u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438\n   \u043e\u0442 \u0438\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u0434\u0430\u0447. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043c\u043e\u0433\u0443\u0442 \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0442\u0430\u043a\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e\n   \u043a\u0430\u043a \u043a\u043e\u0434 \u043e\u0448\u0438\u0431\u043a\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u0438\u043b\u0438 \u043f\u0440\u043e\u0441\u0442 \u0444\u0430\u043a\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438.\n  "},"curl_multi_init":{"version":"(PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u0430\u0431\u043e\u0440 cURL-\u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u043e\u0432","syntax":"\n   resource <b>curl_multi_init<\/b>\n    ( void\n   )","desc":"\n   \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u044c\u043d\u0443\u044e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0430 cURL-\u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u043e\u0432.\n  "},"curl_multi_remove_handle":{"version":"(PHP 5)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 cURL \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 \u0438\u0437 \u043d\u0430\u0431\u043e\u0440\u0430 cURL \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u043e\u0432","syntax":"\n   int <b>curl_multi_remove_handle<\/b>\n    ( resource $mh\n   , resource $ch\n   )","desc":"\n   \u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 ch \u0438\u0437 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e\n   \u043d\u0430\u0431\u043e\u0440\u0430 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u043e\u0432 mh.\n   \u041f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e, \u043a\u0430\u043a \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 ch \u0443\u0434\u0430\u043b\u0435\u043d,\n   \u0435\u0433\u043e \u043c\u043e\u0436\u043d\u043e \u0441\u043d\u043e\u0432\u0430 \u0441\u043e\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u043e \u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    curl_exec().  \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0430 ch\n   \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0442\u0430\u043a\u0436\u0435 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0443,\n   \u0438\u0434\u0443\u0449\u0443\u044e \u043d\u0430 \u044d\u0442\u043e\u043c \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0435.\n  "},"curl_multi_select":{"version":"(PHP 5)","shortdesc":"\u0416\u0434\u0435\u0442 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u043b\u044e\u0431\u043e\u043c curl_multi \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0438","syntax":"\n   int <b>curl_multi_select<\/b>\n    ( resource $mh\n   [, float $timeout = 1.0\n  ] )","desc":"\n    \u0411\u043b\u043e\u043a\u0438\u0440\u0443\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u0430, \u043f\u043e\u043a\u0430 \u043a\u0430\u043a\u043e\u0435-\u043b\u0438\u0431\u043e \u0438\u0437 curl_multi \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439 \u043d\u0435 \u0441\u0442\u0430\u043d\u0435\u0442 \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u043c.\n  "},"curl_multi_setopt":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Set an option for the cURL multi handle","syntax":"\n   bool <b>curl_multi_setopt<\/b>\n    ( resource $mh\n   , int $option\n   , mixed $value\n   )","desc":"\n\n  "},"curl_multi_strerror":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Return string describing error code","syntax":"\n   string <b>curl_multi_strerror<\/b>\n    ( int $errornum\n   )","desc":"\n   Returns a text error message describing the given CURLM error code.\n  "},"curl_pause":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Pause and unpause a connection","syntax":"\n   int <b>curl_pause<\/b>\n    ( resource $ch\n   , int $bitmask\n   )","desc":"\n\n  "},"curl_reset":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Reset all options of a libcurl session handle","syntax":"\n   void <b>curl_reset<\/b>\n    ( resource $ch\n   )","desc":"\n   This function re-initializes all options set on the given cURL handle to the default values.\n  "},"curl_setopt_array":{"version":"(PHP 5 >= 5.1.3)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0434\u043b\u044f \u0441\u0435\u0430\u043d\u0441\u0430 cURL","syntax":"\n   bool <b>curl_setopt_array<\/b>\n    ( resource $ch\n   , array $options\n   )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0434\u043b\u044f \u0441\u0435\u0430\u043d\u0441\u0430 cURL. \u042d\u0442\u0430\n   \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u043b\u0435\u0437\u043d\u0430 \u043f\u0440\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0435 \u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 cURL-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432\n   \u0431\u0435\u0437 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u043e \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c  curl_setopt().\n  "},"curl_setopt":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u0434\u043b\u044f \u0441\u0435\u0430\u043d\u0441\u0430 CURL","syntax":"\n   bool <b>curl_setopt<\/b>\n    ( resource $ch\n   , int $option\n   , mixed $value\n   )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0441\u0435\u0430\u043d\u0441\u0430 cURL.\n  "},"curl_share_close":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Close a cURL share handle","syntax":"\n   void <b>curl_share_close<\/b>\n    ( resource $sh\n   )","desc":"\n   Closes a cURL share handle and frees all resources.\n  "},"curl_share_init":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Initialize a cURL share handle","syntax":"\n   resource <b>curl_share_init<\/b>\n    ( void\n   )","desc":"\n   Allows to share data between cURL handles.\n  "},"curl_share_setopt":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Set an option for a cURL share handle.","syntax":"\n   bool <b>curl_share_setopt<\/b>\n    ( resource $sh\n   , int $option\n   , string $value\n   )","desc":"\n   Sets an option on the given cURL share handle.\n  "},"curl_strerror":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Return string describing the given error code","syntax":"\n   string <b>curl_strerror<\/b>\n    ( int $errornum\n   )","desc":"\n   Returns a text error message describing the given error code.\n  "},"curl_unescape":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Decodes the given URL encoded string","syntax":"\n   string <b>curl_unescape<\/b>\n    ( resource $ch\n   , string $str\n   )","desc":"\n   This function decodes the given URL encoded string.\n  "},"curl_version":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0435\u0440\u0441\u0438\u044e cURL","syntax":"\n   array <b>curl_version<\/b>\n    ([ int $age = CURLVERSION_NOW\n  ] )","desc":"\n  \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0432\u0435\u0440\u0441\u0438\u0438 cURL.\n  "},"current":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043c\u0430\u0441\u0441\u0438\u0432\u0430","syntax":"\n   mixed <b>current<\/b>\n    ( array &$array\n   )","desc":"\n   \u0423 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0438\u043c\u0435\u0435\u0442\u0441\u044f \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043d\u0430 \u0435\u0433\u043e \"\u0442\u0435\u043a\u0443\u0449\u0438\u0439\" \u044d\u043b\u0435\u043c\u0435\u043d\u0442,\n   \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d \u043f\u0435\u0440\u0432\u044b\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u043c, \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u043c \u0432 \u043c\u0430\u0441\u0441\u0438\u0432.\n  "},"cyrus_authenticate":{"version":"(PHP 4 >= 4.1.0, PECL cyrus 1.0)","shortdesc":"\u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435 Cyrus IMAP","syntax":"\n   void <b>cyrus_authenticate<\/b>\n    ( resource $connection\n   [, string $mechlist\n   [, string $service\n   [, string $user\n   [, int $minssf\n   [, int $maxssf\n   [, string $authname\n   [, string $password\n  ]]]]]]] )","desc":""},"cyrus_bind":{"version":"(PHP 4 >= 4.1.0, PECL cyrus 1.0)","shortdesc":"\u041f\u0440\u0438\u0432\u044f\u0437\u0430\u0442\u044c \u043e\u0431\u0440\u0430\u0442\u043d\u044b\u0435 \u0432\u044b\u0437\u043e\u0432\u044b \u0434\u043b\u044f Cyrus IMAP \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f","syntax":"\n   bool <b>cyrus_bind<\/b>\n    ( resource $connection\n   , array $callbacks\n   )","desc":"\n   \u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u043e\u0431\u0440\u0430\u0442\u043d\u044b\u0435 \u0432\u044b\u0437\u043e\u0432\u044b \u0434\u043b\u044f Cyrus IMAP \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f.\n  "},"cyrus_close":{"version":"(PHP 4 >= 4.1.0, PECL cyrus 1.0)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c Cyrus IMAP","syntax":"\n   bool <b>cyrus_close<\/b>\n    ( resource $connection\n   )","desc":"\n   \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c Cyrus IMAP.\n  "},"cyrus_connect":{"version":"(PHP 4 >= 4.1.0, PECL cyrus 1.0)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c Cyrus IMAP","syntax":"\n   resource <b>cyrus_connect<\/b>\n    ([ string $host\n   [, string $port\n   [, int $flags\n  ]]] )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c Cyrus IMAP.\n  "},"cyrus_query":{"version":"(PHP 4 >= 4.1.0, PECL cyrus 1.0)","shortdesc":"\u041f\u043e\u0441\u043b\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441 Cyrus IMAP \u0441\u0435\u0440\u0432\u0435\u0440\u0443","syntax":"\n   array <b>cyrus_query<\/b>\n    ( resource $connection\n   , string $query\n   )","desc":"\n   \u041f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 Cyrus IMAP \u0441\u0435\u0440\u0432\u0435\u0440\u0443.\n  "},"cyrus_unbind":{"version":"(PHP 4 >= 4.1.0, PECL cyrus 1.0)","shortdesc":"\u0423\u0431\u0440\u0430\u0442\u044c \u043f\u0440\u0438\u0432\u044f\u0437\u043a\u0438 \u043e\u0431\u0440\u0430\u0442\u043d\u044b\u0445 \u0432\u044b\u0437\u043e\u0432\u043e\u0432 \u0434\u043b\u044f Cyrus IMAP \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f","syntax":"\n   bool <b>cyrus_unbind<\/b>\n    ( resource $connection\n   , string $trigger_name\n   )","desc":""},"date_add":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateTime::add()","syntax":"","desc":""},"date_create_from_format":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateTime::createFromFormat()","syntax":"","desc":""},"date_create_immutable_from_format":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateTimeImmutable::createFromFormat()","syntax":"","desc":""},"date_create_immutable":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateTimeImmutable::__construct()","syntax":"","desc":""},"date_create":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateTime::__construct()","syntax":"","desc":""},"date_date_set":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateTime::setDate()","syntax":"","desc":""},"date_default_timezone_get":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0437\u043e\u043d\u0443, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u043e\u0439 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432\u0441\u0435\u043c\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438\n   \u0434\u0430\u0442\u044b\/\u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432 \u0441\u043a\u0440\u0438\u043f\u0442\u0435\n  ","syntax":"\n   string <b>date_default_timezone_get<\/b>\n    ( void\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u044b\u0442\u0430\u0435\u0442\u0441\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0437\u043e\u043d\u0443 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043f\u043e \u043f\u043e\u0440\u044f\u0434\u043a\u0443\n   \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c\u0438 \u0441\u043f\u043e\u0441\u043e\u0431\u0430\u043c\u0438:\n   "},"date_default_timezone_set":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0437\u043e\u043d\u0443 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \n   \u0434\u0430\u0442\u044b\/\u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432 \u0441\u043a\u0440\u0438\u043f\u0442\u0435\n  ","syntax":"\n   bool <b>date_default_timezone_set<\/b>\n    ( string $timezone_identifier\n   )","desc":"\n    date_default_timezone_set() \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \n   \u0437\u043e\u043d\u0443 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u0434\u0430\u0442\u044b\/\u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432 \u0441\u043a\u0440\u0438\u043f\u0442\u0435 .\n  "},"date_diff":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateTime::diff()","syntax":"","desc":""},"date_format":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateTime::format()","syntax":"","desc":""},"date_get_last_errors":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateTime::getLastErrors()","syntax":"","desc":""},"date_interval_create_from_date_string":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateInterval::createFromDateString()","syntax":"","desc":""},"date_interval_format":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateInterval::format()","syntax":"","desc":""},"date_isodate_set":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateTime::setISODate()","syntax":"","desc":""},"date_modify":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateTime::modify()","syntax":"","desc":""},"date_offset_get":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateTime::getOffset()","syntax":"","desc":""},"date_parse_from_format":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \u0434\u0430\u0442\u0435\n  ","syntax":"\n   array <b>date_parse_from_format<\/b>\n    ( string $format\n   , string $date\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0434\u0430\u0442\u0435.\n  "},"date_parse":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0434\u0430\u0442\u0435\n  ","syntax":"\n   array <b>date_parse<\/b>\n    ( string $date\n   )","desc":""},"date_sub":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateTime::sub()","syntax":"","desc":""},"date_sun_info":{"version":"(PHP 5 >= 5.1.2)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u0437\u0430\u043a\u0430\u0442\u0435\/\u0440\u0430\u0441\u0441\u0432\u0435\u0442\u0435 \u0438 \u043d\u0430\u0447\u0430\u043b\u0435\/\u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u0438 \u0441\u0443\u043c\u0435\u0440\u0435\u043a\n  ","syntax":"\n   array <b>date_sun_info<\/b>\n    ( int $time\n   , float $latitude\n   , float $longitude\n   )","desc":""},"date_sunrise":{"version":"(PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u044f \u0440\u0430\u0441\u0441\u0432\u0435\u0442\u0430 \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043d\u044f \u0438 \u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u044f\n  ","syntax":"\n   mixed <b>date_sunrise<\/b>\n    ( int $timestamp\n   [, int $format = SUNFUNCS_RET_STRING\n   [, float $latitude = ini_get(\"date.default_latitude\")\n   [, float $longitude = ini_get(\"date.default_longitude\")\n   [, float $zenith = ini_get(\"date.sunrise_zenith\")\n   [, float $gmt_offset = 0\n  ]]]]] )","desc":"\n    date_sunrise() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u044f \u0440\u0430\u0441\u0441\u0432\u0435\u0442\u0430 \u0434\u043b\u044f \n   \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u0434\u043d\u044f (\u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c timestamp) \n   \u0438 \u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\n  "},"date_sunset":{"version":"(PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u044f \u0437\u0430\u0445\u043e\u0434\u0430 \u0441\u043e\u043b\u043d\u0446\u0430 \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043d\u044f \u0438 \u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u044f\n  ","syntax":"\n   mixed <b>date_sunset<\/b>\n    ( int $timestamp\n   [, int $format = SUNFUNCS_RET_STRING\n   [, float $latitude = ini_get(\"date.default_latitude\")\n   [, float $longitude = ini_get(\"date.default_longitude\")\n   [, float $zenith = ini_get(\"date.sunset_zenith\")\n   [, float $gmt_offset = 0\n   ]]]]] )","desc":"\n     date_sunset() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u044f \u0437\u0430\u0445\u043e\u0434\u0430 \u0441\u043e\u043b\u043d\u0446\u0430 \u0434\u043b\u044f \n    \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u0434\u043d\u044f (\u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c timestamp) \n    \u0438 \u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\n   "},"date_time_set":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateTime::setTime()","syntax":"","desc":""},"date_timestamp_get":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateTime::getTimestamp()","syntax":"","desc":""},"date_timestamp_set":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateTime::setTimestamp()","syntax":"","desc":""},"date_timezone_get":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateTime::getTimezone()","syntax":"","desc":""},"date_timezone_set":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateTime::setTimezone()","syntax":"","desc":""},"date":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0424\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u0443\u0435\u0442 \u0432\u044b\u0432\u043e\u0434 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u0439 \u0434\u0430\u0442\u044b\/\u0432\u0440\u0435\u043c\u0435\u043d\u0438","syntax":"\n   string <b>date<\/b>\n    ( string $format\n   [, int $timestamp = time()\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u043e\u0442\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u043c format.\n   \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043c\u0435\u0442\u043a\u0430 \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u0437\u0430\u0434\u0430\u043d\u043d\u0430\u044f \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c timestamp, \u0438\u043b\u0438 \n   \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f, \u0435\u0441\u043b\u0438 timestamp \u043d\u0435 \u0437\u0430\u0434\u0430\u043d.\n   \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, timestamp \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f\n   \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0438 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0440\u0430\u0432\u0435\u043d \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u043c\u0443 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439\n    time().\n  "},"db2_autocommit":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns or sets the AUTOCOMMIT state for a database connection\n  ","syntax":"\n   mixed <b>db2_autocommit<\/b>\n    ( resource $connection\n   [, bool $value\n  ] )","desc":"\n   Sets or gets the AUTOCOMMIT behavior of the specified connection resource.\n  "},"db2_bind_param":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Binds a PHP variable to an SQL statement parameter\n  ","syntax":"\n   bool <b>db2_bind_param<\/b>\n    ( resource $stmt\n   , int $parameter-number\n   , string $variable-name\n   [, int $parameter-type\n   [, int $data-type = 0\n   [, int $precision = -1\n   [, int $scale = 0\n  ]]]] )","desc":"\n   Binds a PHP variable to an SQL statement parameter in a statement resource\n   returned by  db2_prepare(). This function gives you more\n   control over the parameter type, data type, precision, and scale for the\n   parameter than simply passing the variable as part of the optional input\n   array to  db2_execute().\n  "},"db2_client_info":{"version":"(PECL ibm_db2 >= 1.1.1)","shortdesc":"Returns an object with properties that describe the DB2 database client","syntax":"\n   object <b>db2_client_info<\/b>\n    ( resource $connection\n   )","desc":"\n   This function returns an object with read-only properties that return\n   information about the DB2 database client. The following table lists\n   the DB2 client properties:\n   "},"db2_close":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Closes a database connection\n  ","syntax":"\n   bool <b>db2_close<\/b>\n    ( resource $connection\n   )","desc":"\n   This function closes a DB2 client connection created with\n    db2_connect() and returns the corresponding\n   resources to the database server.\n  "},"db2_column_privileges":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns a result set listing the columns and associated privileges for a table\n  ","syntax":"\n   resource <b>db2_column_privileges<\/b>\n    ( resource $connection\n   [, string $qualifier\n   [, string $schema\n   [, string $table-name\n   [, string $column-name\n  ]]]] )","desc":"\n   Returns a result set listing the columns and associated privileges for a\n   table.\n  "},"db2_columns":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns a result set listing the columns and associated metadata for a table\n  ","syntax":"\n   resource <b>db2_columns<\/b>\n    ( resource $connection\n   [, string $qualifier\n   [, string $schema\n   [, string $table-name\n   [, string $column-name\n  ]]]] )","desc":"\n   Returns a result set listing the columns and associated metadata for a\n   table.\n  "},"db2_commit":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Commits a transaction\n  ","syntax":"\n   bool <b>db2_commit<\/b>\n    ( resource $connection\n   )","desc":"\n   Commits an in-progress transaction on the specified connection resource and\n   begins a new transaction. PHP applications normally default to AUTOCOMMIT\n   mode, so  db2_commit() is not necessary unless AUTOCOMMIT\n   has been turned off for the connection resource.\n  "},"db2_conn_error":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns a string containing the SQLSTATE returned by the last connection attempt\n  ","syntax":"\n   string <b>db2_conn_error<\/b>\n    ([ resource $connection\n  ] )","desc":"\n    db2_conn_error() returns an SQLSTATE value representing\n   the reason the last attempt to connect to a database failed. As\n    db2_connect() returns FALSE in the event of a failed\n   connection attempt, you do not pass any parameters to\n    db2_conn_error() to retrieve the SQLSTATE value.\n  "},"db2_conn_errormsg":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns the last connection error message and SQLCODE value\n  ","syntax":"\n   string <b>db2_conn_errormsg<\/b>\n    ([ resource $connection\n  ] )","desc":"\n    db2_conn_errormsg() returns an error message and SQLCODE\n   value representing the reason the last database connection attempt failed.\n   As  db2_connect() returns FALSE in the event of a failed\n   connection attempt, do not pass any parameters to\n    db2_conn_errormsg() to retrieve the associated error\n   message and SQLCODE value.\n  "},"db2_connect":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns a connection to a database\n  ","syntax":"\n   resource <b>db2_connect<\/b>\n    ( string $database\n   , string $username\n   , string $password\n   [, array $options\n  ] )","desc":"\n   Creates a new connection to an IBM DB2 Universal Database, IBM Cloudscape,\n   or Apache Derby database.\n  "},"db2_cursor_type":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns the cursor type used by a statement resource\n  ","syntax":"\n   int <b>db2_cursor_type<\/b>\n    ( resource $stmt\n   )","desc":"\n   Returns the cursor type used by a statement resource. Use this to determine\n   if you are working with a forward-only cursor or scrollable cursor.\n  "},"db2_escape_string":{"version":"(PECL ibm_db2 >= 1.6.0)","shortdesc":"\n   Used to escape certain characters\n  ","syntax":"\n   string <b>db2_escape_string<\/b>\n    ( string $string_literal\n   )","desc":"\n   Prepends backslashes to special characters in the string argument.\n  "},"db2_exec":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Executes an SQL statement directly\n  ","syntax":"\n   resource <b>db2_exec<\/b>\n    ( resource $connection\n   , string $statement\n   [, array $options\n  ] )","desc":"\n   Executes an SQL statement directly.\n  "},"db2_execute":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Executes a prepared SQL statement\n  ","syntax":"\n   bool <b>db2_execute<\/b>\n    ( resource $stmt\n   [, array $parameters\n  ] )","desc":"\n    db2_execute() executes an SQL statement that was\n   prepared by  db2_prepare().\n  "},"db2_fetch_array":{"version":"(PECL ibm_db2 >= 1.0.1)","shortdesc":"\n   Returns an array, indexed by column position, representing a row in a result set\n  ","syntax":"\n   array <b>db2_fetch_array<\/b>\n    ( resource $stmt\n   [, int $row_number = -1\n  ] )","desc":"\n   Returns an array, indexed by column position, representing a row in a result\n   set. The columns are 0-indexed.\n  "},"db2_fetch_assoc":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns an array, indexed by column name, representing a row in a result set\n  ","syntax":"\n   array <b>db2_fetch_assoc<\/b>\n    ( resource $stmt\n   [, int $row_number = -1\n  ] )","desc":"\n   Returns an array, indexed by column name, representing a row in a result\n   set.\n  "},"db2_fetch_both":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns an array, indexed by both column name and position, representing a row in a result set\n  ","syntax":"\n   array <b>db2_fetch_both<\/b>\n    ( resource $stmt\n   [, int $row_number = -1\n  ] )","desc":"\n   Returns an array, indexed by both column name and position, representing a\n   row in a result set. Note that the row returned by\n    db2_fetch_both() requires more memory than the\n   single-indexed arrays returned by  db2_fetch_assoc() or\n    db2_fetch_array().\n  "},"db2_fetch_object":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns an object with properties representing columns in the fetched row\n  ","syntax":"\n   object <b>db2_fetch_object<\/b>\n    ( resource $stmt\n   [, int $row_number = -1\n  ] )","desc":"\n   Returns an object in which each property represents a column returned in\n   the row fetched from a result set.\n  "},"db2_fetch_row":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Sets the result set pointer to the next row or requested row\n  ","syntax":"\n   bool <b>db2_fetch_row<\/b>\n    ( resource $stmt\n   [, int $row_number\n  ] )","desc":"\n   Use  db2_fetch_row() to iterate through a result set, or\n   to point to a specific row in a result set if you requested a scrollable\n   cursor.\n  "},"db2_field_display_size":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns the maximum number of bytes required to display a column\n  ","syntax":"\n   int <b>db2_field_display_size<\/b>\n    ( resource $stmt\n   , mixed $column\n   )","desc":"\n   Returns the maximum number of bytes required to display a column in a\n   result set.\n  "},"db2_field_name":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns the name of the column in the result set\n  ","syntax":"\n   string <b>db2_field_name<\/b>\n    ( resource $stmt\n   , mixed $column\n   )","desc":"\n   Returns the name of the specified column in the result set.\n  "},"db2_field_num":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns the position of the named column in a result set\n  ","syntax":"\n   int <b>db2_field_num<\/b>\n    ( resource $stmt\n   , mixed $column\n   )","desc":"\n   Returns the position of the named column in a result set.\n  "},"db2_field_precision":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns the precision of the indicated column in a result set\n  ","syntax":"\n   int <b>db2_field_precision<\/b>\n    ( resource $stmt\n   , mixed $column\n   )","desc":"\n   Returns the precision of the indicated column in a result set.\n  "},"db2_field_scale":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns the scale of the indicated column in a result set\n  ","syntax":"\n   int <b>db2_field_scale<\/b>\n    ( resource $stmt\n   , mixed $column\n   )","desc":"\n   Returns the scale of the indicated column in a result set.\n  "},"db2_field_type":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns the data type of the indicated column in a result set\n  ","syntax":"\n   string <b>db2_field_type<\/b>\n    ( resource $stmt\n   , mixed $column\n   )","desc":"\n   Returns the data type of the indicated column in a result set.\n  "},"db2_field_width":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns the width of the current value of the indicated column in a result set\n  ","syntax":"\n   int <b>db2_field_width<\/b>\n    ( resource $stmt\n   , mixed $column\n   )","desc":"\n   Returns the width of the current value of the indicated column in a result\n   set. This is the maximum width of the column for a fixed-length data type,\n   or the actual width of the column for a variable-length data type. \n  "},"db2_foreign_keys":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns a result set listing the foreign keys for a table\n  ","syntax":"\n   resource <b>db2_foreign_keys<\/b>\n    ( resource $connection\n   , string $qualifier\n   , string $schema\n   , string $table-name\n   )","desc":"\n   Returns a result set listing the foreign keys for a table.\n  "},"db2_free_result":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Frees resources associated with a result set\n  ","syntax":"\n   bool <b>db2_free_result<\/b>\n    ( resource $stmt\n   )","desc":"\n   Frees the system and database resources that are associated with a result\n   set. These resources are freed implicitly when a script finishes, but you\n   can call  db2_free_result() to explicitly free the result\n   set resources before the end of the script.\n  "},"db2_free_stmt":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Frees resources associated with the indicated statement resource\n  ","syntax":"\n   bool <b>db2_free_stmt<\/b>\n    ( resource $stmt\n   )","desc":"\n   Frees the system and database resources that are associated with a statement\n   resource. These resources are freed implicitly when a script finishes, but\n   you can call  db2_free_stmt() to explicitly free the\n   statement resources before the end of the script.\n  "},"db2_get_option":{"version":"(PECL ibm_db2 >= 1.6.0)","shortdesc":"Retrieves an option value for a statement resource or a connection resource","syntax":"\n   string <b>db2_get_option<\/b>\n    ( resource $resource      \n   , string $option\n   )","desc":"\n   Retrieves the value of a specified option value for a statement resource \n   or a connection resource.\n  "},"db2_last_insert_id":{"version":"(PECL ibm_db2 >= 1.7.1)","shortdesc":"Returns the auto generated ID of the last insert query that successfully \n  executed on this connection","syntax":"\n   string <b>db2_last_insert_id<\/b>\n    ( resource $resource      \n   )","desc":"\n   Returns the auto generated ID of the last insert query that successfully \n  executed on this connection.\n  "},"db2_lob_read":{"version":"(PECL ibm_db2 >= 1.6.0)","shortdesc":"\n   Gets a user defined size of LOB files with each invocation\n  ","syntax":"\n   string <b>db2_lob_read<\/b>\n    ( resource $stmt\n   , int $colnum\n   , int $length\n   )","desc":"\n   Use  db2_lob_read() to iterate through a specified column of \n   a result set and retrieve a user defined size of LOB data.\n  "},"db2_next_result":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Requests the next result set from a stored procedure\n  ","syntax":"\n   resource <b>db2_next_result<\/b>\n    ( resource $stmt\n   )","desc":"\n   A stored procedure can return zero or more result sets. While you handle\n   the first result set in exactly the same way you would handle the results\n   returned by a simple SELECT statement, to fetch the second and subsequent\n   result sets from a stored procedure you must call the\n    db2_next_result() function and return the result to a\n   uniquely named PHP variable.\n  "},"db2_num_fields":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns the number of fields contained in a result set\n  ","syntax":"\n   int <b>db2_num_fields<\/b>\n    ( resource $stmt\n   )","desc":"\n   Returns the number of fields contained in a result set. This is most useful\n   for handling the result sets returned by dynamically generated queries, or\n   for result sets returned by stored procedures, where your application cannot\n   otherwise know how to retrieve and use the results.\n  "},"db2_num_rows":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns the number of rows affected by an SQL statement\n  ","syntax":"\n   int <b>db2_num_rows<\/b>\n    ( resource $stmt\n   )","desc":"\n   Returns the number of rows deleted, inserted, or updated by an SQL\n   statement.\n  "},"db2_pclose":{"version":"(PECL ibm_db2 >= 1.8.0)","shortdesc":"Closes a persistent database connection","syntax":"\n   bool <b>db2_pclose<\/b>\n    ( resource $resource      \n   )","desc":"\n   This function closes a DB2 client connection created with \n    db2_pconnect() and returns the corresponding resources \n   to the database server.  \n   "},"db2_pconnect":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns a persistent connection to a database\n  ","syntax":"\n   resource <b>db2_pconnect<\/b>\n    ( string $database\n   , string $username\n   , string $password\n   [, array $options\n  ] )","desc":"\n   Returns a persistent connection to an IBM DB2 Universal Database, IBM\n   Cloudscape, or Apache Derby database. \n  "},"db2_prepare":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Prepares an SQL statement to be executed\n  ","syntax":"\n   resource <b>db2_prepare<\/b>\n    ( resource $connection\n   , string $statement\n   [, array $options\n  ] )","desc":"\n    db2_prepare() creates a prepared SQL statement which can\n   include 0 or more parameter markers (? characters)\n   representing parameters for input, output, or input\/output. You can pass\n   parameters to the prepared statement using\n    db2_bind_param(), or for input values only, as an array\n   passed to  db2_execute().\n  "},"db2_primary_keys":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns a result set listing primary keys for a table\n  ","syntax":"\n   resource <b>db2_primary_keys<\/b>\n    ( resource $connection\n   , string $qualifier\n   , string $schema\n   , string $table-name\n   )","desc":"\n   Returns a result set listing the primary keys for a table.\n  "},"db2_procedure_columns":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns a result set listing stored procedure parameters\n  ","syntax":"\n   resource <b>db2_procedure_columns<\/b>\n    ( resource $connection\n   , string $qualifier\n   , string $schema\n   , string $procedure\n   , string $parameter\n   )","desc":"\n   Returns a result set listing the parameters for one or more stored\n   procedures.\n  "},"db2_procedures":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns a result set listing the stored procedures registered in a database\n  ","syntax":"\n   resource <b>db2_procedures<\/b>\n    ( resource $connection\n   , string $qualifier\n   , string $schema\n   , string $procedure\n   )","desc":"\n   Returns a result set listing the stored procedures registered in a\n   database.\n  "},"db2_result":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns a single column from a row in the result set\n  ","syntax":"\n   mixed <b>db2_result<\/b>\n    ( resource $stmt\n   , mixed $column\n   )","desc":"\n   Use  db2_result() to return the value of a specified\n   column in the current row of a result set. You must call\n    db2_fetch_row() before calling\n    db2_result() to set the location of the result set\n   pointer.\n  "},"db2_rollback":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Rolls back a transaction\n  ","syntax":"\n   bool <b>db2_rollback<\/b>\n    ( resource $connection\n   )","desc":"\n   Rolls back an in-progress transaction on the specified connection resource and\n   begins a new transaction. PHP applications normally default to AUTOCOMMIT\n   mode, so  db2_rollback() normally has no effect unless\n   AUTOCOMMIT has been turned off for the connection resource.\n  "},"db2_server_info":{"version":"(PECL ibm_db2 >= 1.1.1)","shortdesc":"Returns an object with properties that describe the DB2 database server","syntax":"\n   object <b>db2_server_info<\/b>\n    ( resource $connection\n   )","desc":"\n   This function returns an object with read-only properties that return\n   information about the IBM DB2, Cloudscape, or Apache Derby database server.\n   The following table lists the database server properties:\n   "},"db2_set_option":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"Set options for connection or statement resources","syntax":"\n      bool <b>db2_set_option<\/b>\n       ( resource $resource      \n      , array $options\n      , int $type\n     )","desc":"\n     Sets options for a statement resource or a connection resource. You\n     cannot set options for result set resources. \n    "},"db2_special_columns":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns a result set listing the unique row identifier columns for a table\n  ","syntax":"\n   resource <b>db2_special_columns<\/b>\n    ( resource $connection\n   , string $qualifier\n   , string $schema\n   , string $table_name\n   , int $scope\n   )","desc":"\n   Returns a result set listing the unique row identifier columns for a table.\n  "},"db2_statistics":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns a result set listing the index and statistics for a table\n  ","syntax":"\n   resource <b>db2_statistics<\/b>\n    ( resource $connection\n   , string $qualifier\n   , string $schema\n   , string $table-name\n   , bool $unique\n   )","desc":"\n   Returns a result set listing the index and statistics for a table.\n  "},"db2_stmt_error":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns a string containing the SQLSTATE returned by an SQL statement\n  ","syntax":"\n   string <b>db2_stmt_error<\/b>\n    ([ resource $stmt\n  ] )","desc":"\n   Returns a string containing the SQLSTATE value returned by an SQL statement.\n  "},"db2_stmt_errormsg":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns a string containing the last SQL statement error message\n  ","syntax":"\n   string <b>db2_stmt_errormsg<\/b>\n    ([ resource $stmt\n  ] )","desc":"\n   Returns a string containing the last SQL statement error message.\n  "},"db2_table_privileges":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns a result set listing the tables and associated privileges in a database\n  ","syntax":"\n   resource <b>db2_table_privileges<\/b>\n    ( resource $connection\n   [, string $qualifier\n   [, string $schema\n   [, string $table_name\n  ]]] )","desc":"\n   Returns a result set listing the tables and associated privileges in a\n   database.\n  "},"db2_tables":{"version":"(PECL ibm_db2 >= 1.0.0)","shortdesc":"\n   Returns a result set listing the tables and associated metadata in a database\n  ","syntax":"\n   resource <b>db2_tables<\/b>\n    ( resource $connection\n   [, string $qualifier\n   [, string $schema\n   [, string $table-name\n   [, string $table-type\n  ]]]] )","desc":"\n   Returns a result set listing the tables and associated metadata in a\n   database.\n  "},"dba_close":{"version":"(PHP 4, PHP 5)","shortdesc":"Close a DBA database","syntax":"\n   void <b>dba_close<\/b>\n    ( resource $handle\n   )","desc":"\n    dba_close() closes the established database and frees\n   all resources of the specified database handle.\n  "},"dba_delete":{"version":"(PHP 4, PHP 5)","shortdesc":"Delete DBA entry specified by key","syntax":"\n   bool <b>dba_delete<\/b>\n    ( string $key\n   , resource $handle\n   )","desc":"\n    dba_delete() deletes the specified entry from the database.\n  "},"dba_exists":{"version":"(PHP 4, PHP 5)","shortdesc":"Check whether key exists","syntax":"\n   bool <b>dba_exists<\/b>\n    ( string $key\n   , resource $handle\n   )","desc":"\n    dba_exists() checks whether the specified\n   key exists in the database.\n  "},"dba_fetch":{"version":"(PHP 4, PHP 5)","shortdesc":"Fetch data specified by key","syntax":"\n   string <b>dba_fetch<\/b>\n    ( string $key\n   , resource $handle\n   )\n\n    string <b>dba_fetch<\/b>\n     ( string $key\n    , int $skip\n    , resource $handle\n    )\n","desc":"\n    dba_fetch() fetches the data specified by\n   key from the database specified with\n   handle.\n  "},"dba_firstkey":{"version":"(PHP 4, PHP 5)","shortdesc":"Fetch first key","syntax":"\n   string <b>dba_firstkey<\/b>\n    ( resource $handle\n   )","desc":"\n    dba_firstkey() returns the first key of the database\n   and resets the internal key pointer. This permits a linear search through\n   the whole database.\n  "},"dba_handlers":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"List all the handlers available","syntax":"\n   array <b>dba_handlers<\/b>\n    ([ bool $full_info = false\n  ] )","desc":"\n    dba_handlers() list all the handlers supported by this\n   extension.\n  "},"dba_insert":{"version":"(PHP 4, PHP 5)","shortdesc":"Insert entry","syntax":"\n   bool <b>dba_insert<\/b>\n    ( string $key\n   , string $value\n   , resource $handle\n   )","desc":"\n    dba_insert() inserts the entry described with\n   key and value into the\n   database.\n  "},"dba_key_split":{"version":"(PHP 5)","shortdesc":"\n   Splits a key in string representation into array representation\n  ","syntax":"\n   mixed <b>dba_key_split<\/b>\n    ( mixed $key\n   )","desc":"\n    dba_key_split() splits a key (string representation)\n   into an array representation.\n  "},"dba_list":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"List all open database files","syntax":"\n   array <b>dba_list<\/b>\n    ( void\n   )","desc":"\n    dba_list() list all open database files.\n  "},"dba_nextkey":{"version":"(PHP 4, PHP 5)","shortdesc":"Fetch next key","syntax":"\n   string <b>dba_nextkey<\/b>\n    ( resource $handle\n   )","desc":"\n    dba_nextkey() returns the next key of the database\n   and advances the internal key pointer.\n  "},"dba_open":{"version":"(PHP 4, PHP 5)","shortdesc":"Open database","syntax":"\n   resource <b>dba_open<\/b>\n    ( string $path\n   , string $mode\n   [, string $handler\n   [, mixed $...\n  ]] )","desc":"\n    dba_open() establishes a database instance for\n   path with mode using\n   handler.\n  "},"dba_optimize":{"version":"(PHP 4, PHP 5)","shortdesc":"Optimize database","syntax":"\n   bool <b>dba_optimize<\/b>\n    ( resource $handle\n   )","desc":"\n    dba_optimize() optimizes the underlying database.\n  "},"dba_popen":{"version":"(PHP 4, PHP 5)","shortdesc":"Open database persistently","syntax":"\n   resource <b>dba_popen<\/b>\n    ( string $path\n   , string $mode\n   [, string $handler\n   [, mixed $...\n  ]] )","desc":"\n    dba_popen() establishes a persistent database instance\n   for path with mode using\n   handler.\n  "},"dba_replace":{"version":"(PHP 4, PHP 5)","shortdesc":"Replace or insert entry","syntax":"\n   bool <b>dba_replace<\/b>\n    ( string $key\n   , string $value\n   , resource $handle\n   )","desc":"\n    dba_replace() replaces or inserts the entry described\n   with key and value into the\n   database specified by handle.\n  "},"dba_sync":{"version":"(PHP 4, PHP 5)","shortdesc":"Synchronize database","syntax":"\n   bool <b>dba_sync<\/b>\n    ( resource $handle\n   )","desc":"\n    dba_sync() synchronizes the database. This will probably \n   trigger a physical write to the disk, if supported.\n  "},"dbase_add_record":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u044c \u0432 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445","syntax":"\n   bool <b>dbase_add_record<\/b>\n    ( int $dbase_identifier\n   , array $record\n   )","desc":"\n   \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445\n  "},"dbase_close":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445","syntax":"\n   bool <b>dbase_close<\/b>\n    ( int $dbase_identifier\n   )","desc":"\n   \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u043e\u0433\u043b\u0430\u0441\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u043c\u0443 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443.\n  "},"dbase_create":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445","syntax":"\n   int <b>dbase_create<\/b>\n    ( string $filename\n   , array $fields\n   )","desc":"\n    dbase_create() \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 dBase \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c\u0438\n   \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430\u043c\u0438.\n  "},"dbase_delete_record":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0438\u0437 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445","syntax":"\n   bool <b>dbase_delete_record<\/b>\n    ( int $dbase_identifier\n   , int $record_number\n   )","desc":"\n   \u041f\u043e\u043c\u0435\u0447\u0430\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0438\u0437 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445.\n  "},"dbase_get_header_info":{"version":"(PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430\u0445 \u043f\u043e\u043b\u0435\u0439 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445","syntax":"\n   array <b>dbase_get_header_info<\/b>\n    ( int $dbase_identifier\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0435 \u043f\u043e\u043b\u0435\u0439 (\u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432) \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445, \u0441\u043e\u0433\u043b\u0430\u0441\u043d\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443.\n  "},"dbase_get_record_with_names":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u044c \u0438\u0437 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0432\u0438\u0434\u0435 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430\n  ","syntax":"\n   array <b>dbase_get_record_with_names<\/b>\n    ( int $dbase_identifier\n   , int $record_number\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u044c \u0438\u0437 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 dBase \u0432 \u0432\u0438\u0434\u0435 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430 (\u0432\u043c\u0435\u0441\u0442\u0435 \u0441\n   \u0438\u043c\u0435\u043d\u0430\u043c\u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043f\u043e\u043b\u0435\u0439).\n  "},"dbase_get_record":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u0437 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445, \u043a\u0430\u043a \u0438\u0437 \u0438\u043d\u0434\u0435\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430\n  ","syntax":"\n   array <b>dbase_get_record<\/b>\n    ( int $dbase_identifier\n   , int $record_number\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u0437 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445, \u043a\u0430\u043a \u0438\u0437 \u0438\u043d\u0434\u0435\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430.\n  "},"dbase_numfields":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u0435\u0439 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445","syntax":"\n   int <b>dbase_numfields<\/b>\n    ( int $dbase_identifier\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u0435\u0439 (\u043a\u043e\u043b\u043e\u043d\u043e\u043a) \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445. \n  "},"dbase_numrecords":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445","syntax":"\n   int <b>dbase_numrecords<\/b>\n    ( int $dbase_identifier\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0438\u0441\u0435\u0439 (\u0441\u0442\u0440\u043e\u043a) \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445.\n  "},"dbase_open":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445","syntax":"\n   int <b>dbase_open<\/b>\n    ( string $filename\n   , int $mode\n   )","desc":"\n    dbase_open() \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 dBase \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \n   \u0440\u0435\u0436\u0438\u043c\u043e\u043c \u0434\u043e\u0441\u0442\u0443\u043f\u0430.   \n  "},"dbase_pack":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0424\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u0442 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0438\u0437 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445","syntax":"\n   bool <b>dbase_pack<\/b>\n    ( int $dbase_identifier\n   )","desc":"\n   \u0424\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u0442 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0438\u0437 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445, \u043e\u043a\u043e\u043d\u0447\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u044b\u043b\u0438 \u043f\u043e\u043c\u0435\u0447\u0435\u043d\u044b\n   \u043d\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e  dbase_delete_record().\n  "},"dbase_replace_record":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0417\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u044c \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445","syntax":"\n   bool <b>dbase_replace_record<\/b>\n    ( int $dbase_identifier\n   , array $record\n   , int $record_number\n   )","desc":"\n   \u0417\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u0443\u044e \u0437\u0430\u043f\u0438\u0441\u044c \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.\n  "},"dbplus_add":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Add a tuple to a relation","syntax":"\n   int <b>dbplus_add<\/b>\n    ( resource $relation\n   , array $tuple\n   )","desc":"\n   Adds a tuple to a relation.\n  "},"dbplus_aql":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Perform AQL query","syntax":"\n   resource <b>dbplus_aql<\/b>\n    ( string $query\n   [, string $server\n   [, string $dbpath\n  ]] )","desc":"\n   Executes an AQL query on the given\n   server and dbpath.\n  "},"dbplus_chdir":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Get\/Set database virtual current directory","syntax":"\n   string <b>dbplus_chdir<\/b>\n    ([ string $newdir\n  ] )","desc":"\n   Changes the virtual current directory where relation files will be looked\n   for by  dbplus_open().\n  "},"dbplus_close":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Close a relation","syntax":"\n   mixed <b>dbplus_close<\/b>\n    ( resource $relation\n   )","desc":"\n   Closes a relation previously opened by  dbplus_open().\n  "},"dbplus_curr":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Get current tuple from relation","syntax":"\n   int <b>dbplus_curr<\/b>\n    ( resource $relation\n   , array &$tuple\n   )","desc":"\n   Reads the data for the current tuple for the given\n   relation.\n  "},"dbplus_errcode":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Get error string for given errorcode or last error","syntax":"\n   string <b>dbplus_errcode<\/b>\n    ([ int $errno\n  ] )","desc":"\n   Returns a clear error string for the given error code.\n  "},"dbplus_errno":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Get error code for last operation","syntax":"\n   int <b>dbplus_errno<\/b>\n    ( void\n   )","desc":"\n   Returns the error code returned by the last db++ operation.\n  "},"dbplus_find":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Set a constraint on a relation","syntax":"\n   int <b>dbplus_find<\/b>\n    ( resource $relation\n   , array $constraints\n   , mixed $tuple\n   )","desc":"\n   Places a constraint on the given relation.\n  "},"dbplus_first":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Get first tuple from relation","syntax":"\n   int <b>dbplus_first<\/b>\n    ( resource $relation\n   , array &$tuple\n   )","desc":"\n   Reads the data for the first tuple for the given\n   relation, makes it the current tuple and pass it\n   back as an associative array in tuple.\n  "},"dbplus_flush":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Flush all changes made on a relation","syntax":"\n   int <b>dbplus_flush<\/b>\n    ( resource $relation\n   )","desc":"\n   Writes all changes applied to relation since the\n   last flush to disk.\n  "},"dbplus_freealllocks":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Free all locks held by this client","syntax":"\n   int <b>dbplus_freealllocks<\/b>\n    ( void\n   )","desc":"\n   Frees all tuple locks held by this client.\n  "},"dbplus_freelock":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Release write lock on tuple","syntax":"\n   int <b>dbplus_freelock<\/b>\n    ( resource $relation\n   , string $tuple\n   )","desc":"\n   Releases a write lock on the given tuple previously\n   obtained by  dbplus_getlock().\n  "},"dbplus_freerlocks":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Free all tuple locks on given relation","syntax":"\n   int <b>dbplus_freerlocks<\/b>\n    ( resource $relation\n   )","desc":"\n   Frees all tuple locks held on the given relation.\n  "},"dbplus_getlock":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Get a write lock on a tuple","syntax":"\n   int <b>dbplus_getlock<\/b>\n    ( resource $relation\n   , string $tuple\n   )","desc":"\n   Requests a write lock on the specified tuple. \n  "},"dbplus_getunique":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Get an id number unique to a relation","syntax":"\n   int <b>dbplus_getunique<\/b>\n    ( resource $relation\n   , int $uniqueid\n   )","desc":"\n   Obtains a number guaranteed to be unique for the given\n   relation and will pass it back in the variable\n   given as uniqueid.\n  "},"dbplus_info":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Get information about a relation","syntax":"\n   int <b>dbplus_info<\/b>\n    ( resource $relation\n   , string $key\n   , array &$result\n   )","desc":""},"dbplus_last":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Get last tuple from relation","syntax":"\n   int <b>dbplus_last<\/b>\n    ( resource $relation\n   , array &$tuple\n   )","desc":"\n   Reads the data for the last tuple for the given\n   relation, makes it the current tuple and pass it\n   back as an associative array in tuple.\n  "},"dbplus_lockrel":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Request write lock on relation","syntax":"\n   int <b>dbplus_lockrel<\/b>\n    ( resource $relation\n   )","desc":"\n   Requests a write lock on the given relation.\n  "},"dbplus_next":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Get next tuple from relation","syntax":"\n   int <b>dbplus_next<\/b>\n    ( resource $relation\n   , array &$tuple\n   )","desc":"\n   Reads the data for the next tuple for the given\n   relation, makes it the current tuple and will pass\n   it back as an associative array in tuple.\n  "},"dbplus_open":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Open relation file","syntax":"\n   resource <b>dbplus_open<\/b>\n    ( string $name\n   )","desc":"\n   Opens the given relation file.\n  "},"dbplus_prev":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Get previous tuple from relation","syntax":"\n   int <b>dbplus_prev<\/b>\n    ( resource $relation\n   , array &$tuple\n   )","desc":"\n   Reads the data for the previous tuple for the given\n   relation, makes it the current tuple and will pass\n   it back as an associative array in tuple.\n  "},"dbplus_rchperm":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Change relation permissions","syntax":"\n   int <b>dbplus_rchperm<\/b>\n    ( resource $relation\n   , int $mask\n   , string $user\n   , string $group\n   )","desc":"\n   Changes access permissions as specified by mask,\n   user and group. The\n   values for these are operating system specific.\n  "},"dbplus_rcreate":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Creates a new DB++ relation","syntax":"\n   resource <b>dbplus_rcreate<\/b>\n    ( string $name\n   , mixed $domlist\n   [, bool $overwrite\n  ] )","desc":"\n   Creates a new relation. Any existing relation sharing the same\n   name will be overwritten if the relation is\n   currently not in use and overwrite is set to TRUE.\n  "},"dbplus_rcrtexact":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Creates an exact but empty copy of a relation including indices","syntax":"\n   mixed <b>dbplus_rcrtexact<\/b>\n    ( string $name\n   , resource $relation\n   [, bool $overwrite\n  ] )","desc":"\n    dbplus_rcrtexact() will create an exact but\n   empty copy of the given relation under a\n   new name.\n  "},"dbplus_rcrtlike":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Creates an empty copy of a relation with default indices","syntax":"\n   mixed <b>dbplus_rcrtlike<\/b>\n    ( string $name\n   , resource $relation\n   [, int $overwrite\n  ] )","desc":"\n    dbplus_rcrtexact() will create an  empty copy\n   of the given relation under a new\n   name, but with default indices.\n  "},"dbplus_resolve":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Resolve host information for relation","syntax":"\n   array <b>dbplus_resolve<\/b>\n    ( string $relation_name\n   )","desc":"\n    dbplus_resolve() will try to resolve the given\n   relation_name and find out internal server\n   id, real hostname and the database path on this host. \n  "},"dbplus_restorepos":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Restore position","syntax":"\n   int <b>dbplus_restorepos<\/b>\n    ( resource $relation\n   , array $tuple\n   )","desc":""},"dbplus_rkeys":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Specify new primary key for a relation","syntax":"\n   mixed <b>dbplus_rkeys<\/b>\n    ( resource $relation\n   , mixed $domlist\n   )","desc":"\n    dbplus_rkeys() will replace the current\n   primary key for relation with the\n   combination of domains specified by domlist.\n  "},"dbplus_ropen":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Open relation file local","syntax":"\n   resource <b>dbplus_ropen<\/b>\n    ( string $name\n   )","desc":"\n    dbplus_ropen() will open the relation\n   file locally for quick access without any\n   client\/server overhead. Access is read only and only\n    dbplus_curr() and\n    dbplus_next() may be applied to the returned\n   relation.\n  "},"dbplus_rquery":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Perform local (raw) AQL query","syntax":"\n   resource <b>dbplus_rquery<\/b>\n    ( string $query\n   [, string $dbpath\n  ] )","desc":"\n    dbplus_rquery() performs a local (raw) AQL\n   query using an AQL interpreter embedded into the db++ client\n   library.  dbplus_rquery() is faster than\n    dbplus_aql() but will work on local data only.\n  "},"dbplus_rrename":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Rename a relation","syntax":"\n   int <b>dbplus_rrename<\/b>\n    ( resource $relation\n   , string $name\n   )","desc":"\n    dbplus_rrename() will change the name of\n   relation to name.\n  "},"dbplus_rsecindex":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Create a new secondary index for a relation","syntax":"\n   mixed <b>dbplus_rsecindex<\/b>\n    ( resource $relation\n   , mixed $domlist\n   , int $type\n   )","desc":"\n    dbplus_rsecindex() will create a new secondary\n   index for relation with consists of the\n   domains specified by domlist and is of\n   type type\n  "},"dbplus_runlink":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Remove relation from filesystem","syntax":"\n   int <b>dbplus_runlink<\/b>\n    ( resource $relation\n   )","desc":"\n    dbplus_runlink() will close and remove the\n   relation.\n  "},"dbplus_rzap":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Remove all tuples from relation","syntax":"\n   int <b>dbplus_rzap<\/b>\n    ( resource $relation\n   )","desc":"\n    dbplus_rzap() will remove all tuples from\n   relation.\n  "},"dbplus_savepos":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Save position","syntax":"\n   int <b>dbplus_savepos<\/b>\n    ( resource $relation\n   )","desc":""},"dbplus_setindex":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Set index","syntax":"\n   int <b>dbplus_setindex<\/b>\n    ( resource $relation\n   , string $idx_name\n   )","desc":""},"dbplus_setindexbynumber":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Set index by number","syntax":"\n   int <b>dbplus_setindexbynumber<\/b>\n    ( resource $relation\n   , int $idx_number\n   )","desc":""},"dbplus_sql":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Perform SQL query","syntax":"\n   resource <b>dbplus_sql<\/b>\n    ( string $query\n   [, string $server\n   [, string $dbpath\n  ]] )","desc":""},"dbplus_tcl":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Execute TCL code on server side","syntax":"\n   string <b>dbplus_tcl<\/b>\n    ( int $sid\n   , string $script\n   )","desc":"\n   A db++ server will prepare a TCL interpreter for each client\n   connection. This interpreter will enable the server to execute\n   TCL code provided by the client as a sort of stored procedures to\n   improve the performance of database operations by avoiding\n   client\/server data transfers and context switches.\n  "},"dbplus_tremove":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Remove tuple and return new current tuple","syntax":"\n   int <b>dbplus_tremove<\/b>\n    ( resource $relation\n   , array $tuple\n   [, array &$current\n  ] )","desc":"\n    dbplus_tremove() removes\n   tuple from relation\n   if it perfectly matches a tuple within the\n   relation. current, if given, will contain\n   the data of the new current tuple after calling\n    dbplus_tremove().\n  "},"dbplus_undo":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Undo","syntax":"\n   int <b>dbplus_undo<\/b>\n    ( resource $relation\n   )","desc":""},"dbplus_undoprepare":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Prepare undo","syntax":"\n   int <b>dbplus_undoprepare<\/b>\n    ( resource $relation\n   )","desc":""},"dbplus_unlockrel":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Give up write lock on relation","syntax":"\n   int <b>dbplus_unlockrel<\/b>\n    ( resource $relation\n   )","desc":"\n   Release a write lock previously obtained by\n    dbplus_lockrel().\n  "},"dbplus_unselect":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Remove a constraint from relation","syntax":"\n   int <b>dbplus_unselect<\/b>\n    ( resource $relation\n   )","desc":"\n   Calling  dbplus_unselect() will remove a\n   constraint previously set by  dbplus_find() on\n   relation.\n  "},"dbplus_update":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Update specified tuple in relation","syntax":"\n   int <b>dbplus_update<\/b>\n    ( resource $relation\n   , array $old\n   , array $new\n   )","desc":"\n    dbplus_update() replaces the old\n   tuple with the data from the new one, only if the\n   old completely matches a tuple within\n   relation.\n  "},"dbplus_xlockrel":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Request exclusive lock on relation","syntax":"\n   int <b>dbplus_xlockrel<\/b>\n    ( resource $relation\n   )","desc":"\n   Request an exclusive lock on relation preventing\n   even read access from other clients.\n  "},"dbplus_xunlockrel":{"version":"(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)","shortdesc":"Free exclusive lock on relation","syntax":"\n   int <b>dbplus_xunlockrel<\/b>\n    ( resource $relation\n   )","desc":"\n   Releases an exclusive lock previously obtained by\n    dbplus_xlockrel().\n  "},"dbx_close":{"version":"(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0)","shortdesc":"Close an open connection\/database","syntax":"\n   int <b>dbx_close<\/b>\n    ( object $link_identifier\n   )","desc":""},"dbx_compare":{"version":"(PHP 4 >= 4.1.0, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0)","shortdesc":"Compare two rows for sorting purposes","syntax":"\n   int <b>dbx_compare<\/b>\n    ( array $row_a\n   , array $row_b\n   , string $column_key\n   [, int $flags = DBX_CMP_ASC | DBX_CMP_NATIVE\n  ] )","desc":"\n    dbx_compare() is a helper function for \n    dbx_sort() to ease the make and use of the custom \n   sorting function.\n  "},"dbx_connect":{"version":"(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0)","shortdesc":"Open a connection\/database","syntax":"\n   object <b>dbx_connect<\/b>\n    ( mixed $module\n   , string $host\n   , string $database\n   , string $username\n   , string $password\n   [, int $persistent\n  ] )","desc":"\n   Opens a connection to a database.\n  "},"dbx_error":{"version":"(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0)","shortdesc":"\n   Report the error message of the latest function call in the module\n  ","syntax":"\n   string <b>dbx_error<\/b>\n    ( object $link_identifier\n   )","desc":"\n    dbx_error() returns the last error message.\n  "},"dbx_escape_string":{"version":"(PHP 4 >= 4.3.0, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0)","shortdesc":"\n   Escape a string so it can safely be used in an sql-statement\n  ","syntax":"\n   string <b>dbx_escape_string<\/b>\n    ( object $link_identifier\n   , string $text\n   )","desc":"\n   Escape the given string so that it can safely be used in an sql-statement.\n  "},"dbx_fetch_row":{"version":"(PHP 5 <= 5.0.5, PECL dbx >= 1.1.0)","shortdesc":"Fetches rows from a query-result that had the \n  DBX_RESULT_UNBUFFERED flag set","syntax":"\n   mixed <b>dbx_fetch_row<\/b>\n    ( object $result_identifier\n   )","desc":"\n    dbx_fetch_row() fetches rows from a result identifier\n   that had the DBX_RESULT_UNBUFFERED flag set.\n  "},"dbx_query":{"version":"(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0)","shortdesc":"Send a query and fetch all results (if any)","syntax":"\n   mixed <b>dbx_query<\/b>\n    ( object $link_identifier\n   , string $sql_statement\n   [, int $flags\n  ] )","desc":"\n   Sends a query and fetch all results.\n  "},"dbx_sort":{"version":"(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0)","shortdesc":"\n   Sort a result from a dbx_query by a custom sort function\n  ","syntax":"\n   bool <b>dbx_sort<\/b>\n    ( object $result\n   , string $user_compare_function\n   )","desc":"\n   Sort a result from a  dbx_query() call with a custom sort\n   function.\n  "},"dcgettext":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u043e\u0434\u043d\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0432 \u0434\u043e\u043c\u0435\u043d\u0435","syntax":"\n   string <b>dcgettext<\/b>\n    ( string $domain\n   , string $message\n   , int $category\n   )","desc":"\n   \u0414\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0434\u043e\u043c\u0435\u043d \u0434\u043b\u044f \u043e\u0434\u043d\u043e\u0433\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f.\n  "},"dcngettext":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0412\u0435\u0440\u0441\u0438\u044f dcgettext \u0434\u043b\u044f \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430","syntax":"\n   string <b>dcngettext<\/b>\n    ( string $domain\n   , string $msgid1\n   , string $msgid2\n   , int $n\n   , int $category\n   )","desc":"\n   \u0414\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u043e\u0434\u043d\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0433\u043e\n   \u0447\u0438\u0441\u043b\u0430 \u0432 \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u0434\u043e\u043c\u0435\u043d\u0435.\n  "},"deaggregate":{"version":"(PHP 4 >= 4.2.0)","shortdesc":"\n   Removes the aggregated methods and properties from an object\n  ","syntax":"\n   void <b>deaggregate<\/b>\n    ( object $object\n   [, string $class_name\n  ] )","desc":"\n   Removes the methods and properties from classes that were aggregated to\n   an object.\n  "},"debug_backtrace":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0441\u0442\u0435\u043a \u0432\u044b\u0437\u043e\u0432\u043e\u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432","syntax":"\n   array <b>debug_backtrace<\/b>\n    ([ int $options = DEBUG_BACKTRACE_PROVIDE_OBJECT\n   [, int $limit = 0\n  ]] )","desc":"\n    debug_backtrace() \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0441\u0442\u0435\u043a \u0432\u044b\u0437\u043e\u0432\u043e\u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 PHP \u0432\n   \u043c\u0430\u0441\u0441\u0438\u0432.\n  "},"debug_print_backtrace":{"version":"(PHP 5)","shortdesc":"\n     \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0441\u0442\u0435\u043a \u0432\u044b\u0437\u043e\u0432\u043e\u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0439\n    ","syntax":"\n     void <b>debug_print_backtrace<\/b>\n      ([ int $options = 0\n     [, int $limit = 0\n    ]] )","desc":"\n      debug_print_backtrace() \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0441\u0442\u0435\u043a \u0432\u044b\u0437\u043e\u0432\u043e\u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0439.\n     \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0432\u044b\u0437\u043e\u0432\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u0439, \u0438\u043c\u0435\u043d\u0430 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044b\u0445\/\u0442\u0440\u0435\u0431\u0443\u0435\u043c\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432 \u0438 \u0434\u0440\u0443\u0433\u0443\u044e\n     \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0438\u0437 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 ( eval()).\n    "},"debug_zval_dump":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f zend","syntax":"\n   void <b>debug_zval_dump<\/b>\n    ( mixed $variable\n   )","desc":"\n   \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f zend.\n  "},"decbin":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0447\u0438\u0441\u043b\u043e \u0438\u0437 \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f \u0432 \u0434\u0432\u043e\u0438\u0447\u043d\u0443\u044e","syntax":"\n   string <b>decbin<\/b>\n    ( int $number\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0443\u044e \u0434\u0432\u043e\u0438\u0447\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430\n   number.\n  "},"dechex":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0447\u0438\u0441\u043b\u043e \u0438\u0437 \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f \u0432 \u0448\u0435\u0441\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u0438\u0440\u0438\u0447\u043d\u0443\u044e","syntax":"\n   string <b>dechex<\/b>\n    ( int $number\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0443\u044e \u0448\u0435\u0441\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u0435\u0440\u0438\u0447\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430\n   number. \u041d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u0447\u0438\u0441\u043b\u043e, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u043e -\n   4294967295, \u0432 \u0448\u0435\u0441\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u0435\u0440\u0438\u0447\u043d\u043e\u043c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0438 - \"ffffffff\".\n  "},"decoct":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0447\u0438\u0441\u043b\u043e \u0438\u0437 \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f \u0432 \u0432\u043e\u0441\u044c\u043c\u0435\u0440\u0438\u0447\u043d\u0443\u044e","syntax":"\n   string <b>decoct<\/b>\n    ( int $number\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0443\u044e \u0432\u043e\u0441\u044c\u043c\u0435\u0440\u0438\u0447\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430                                         \n   number.  \u041d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u0447\u0438\u0441\u043b\u043e, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u043e -\n   4294967295, \u0432 \u0432\u043e\u0441\u044c\u043c\u0435\u0440\u0438\u0447\u043d\u043e\u043c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \"37777777777\".\n  "},"define_syslog_variables":{"version":"(PHP 4, PHP 5 < 5.4.0)","shortdesc":"\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0432\u0441\u0435 syslog \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435","syntax":"\n   void <b>define_syslog_variables<\/b>\n    ( void\n   )","desc":"\n   \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0432\u0441\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u0432 syslog \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u0445.\n  "},"define":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0443","syntax":"\n   bool <b>define<\/b>\n    ( string $name\n   , mixed $value\n   [, bool $case_insensitive = false\n  ] )","desc":"\n   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0443 \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435.\n  "},"defined":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043e\u0432\u0430\u043d\u0438\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u044b","syntax":"\n   bool <b>defined<\/b>\n    ( string $name\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u044b.\n  "},"deg2rad":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0438\u0437 \u0433\u0440\u0430\u0434\u0443\u0441\u043e\u0432 \u0432 \u0440\u0430\u0434\u0438\u0430\u043d\u044b\n  ","syntax":"\n    float <b>deg2rad<\/b>\n     ( float $number\n    )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 number \u0438\u0437 \u0433\u0440\u0430\u0434\u0443\u0441\u043e\u0432 \u0432 \u0440\u0430\u0434\u0438\u0430\u043d\u044b.\n  "},"delete":{"version":"","shortdesc":"\u0421\u043c.\u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  unlink() \u0438\u043b\u0438  unset()","syntax":"\n   void <b>delete<\/b>\n    ( void\n   )","desc":"\n   \u042d\u0442\u043e \u0444\u0438\u043a\u0442\u0438\u0432\u043d\u0430\u044f \u0441\u0435\u043a\u0446\u0438\u044f \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0441\u0442\u0430\u043c,\n   \u0438\u0449\u0443\u0449\u0438\u043c \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  unlink() \u0438\u043b\u0438  unset()\n   \u0432 \u043d\u0435\u0432\u0435\u0440\u043d\u043e\u043c \u043c\u0435\u0441\u0442\u0435.\n  "},"dgettext":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0434\u043e\u043c\u0435\u043d","syntax":"\n   string <b>dgettext<\/b>\n    ( string $domain\n   , string $message\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  dgettext() \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c\n   \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0434\u043e\u043c\u0435\u043d domain \u0434\u043b\u044f \u043e\u0434\u043d\u043e\u0433\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f.\n  "},"die":{"version":"(PHP 4, PHP 5)","shortdesc":"\u042d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 exit","syntax":"","desc":""},"dio_close":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5)","shortdesc":"Closes the file descriptor given by fd","syntax":"\n   void <b>dio_close<\/b>\n    ( resource $fd\n   )","desc":"\n   The function  dio_close() closes the file descriptor\n   fd.\n  "},"dio_fcntl":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5)","shortdesc":"Performs a c library fcntl on fd","syntax":"\n   mixed <b>dio_fcntl<\/b>\n    ( resource $fd\n   , int $cmd\n   [, mixed $args\n  ] )","desc":"\n   The  dio_fcntl() function performs the\n   operation specified by cmd on the file\n   descriptor fd. Some commands require\n   additional arguments args to be supplied.\n  "},"dio_open":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5)","shortdesc":"\n   Opens a file (creating it if necessary) at a lower level than the\n   C library input\/ouput stream functions allow.\n  ","syntax":"\n   resource <b>dio_open<\/b>\n    ( string $filename\n   , int $flags\n   [, int $mode = 0\n   ] )","desc":"\n    dio_open() opens a file and returns a new file\n   descriptor for it.  \n  "},"dio_read":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5)","shortdesc":"Reads bytes from a file descriptor","syntax":"\n   string <b>dio_read<\/b>\n    ( resource $fd\n   [, int $len = 1024\n  ] )","desc":"\n   The function  dio_read() reads and returns\n   len bytes from file with descriptor\n   fd. \n  "},"dio_seek":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5)","shortdesc":"Seeks to pos on fd from whence","syntax":"\n   int <b>dio_seek<\/b>\n    ( resource $fd\n   , int $pos\n   [, int $whence = SEEK_SET\n  ] )","desc":"\n   The function  dio_seek() is used to change the\n   file position of the given file descriptor.  \n  "},"dio_stat":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5)","shortdesc":"\n   Gets stat information about the file descriptor fd\n  ","syntax":"\n   array <b>dio_stat<\/b>\n    ( resource $fd\n   )","desc":"\n    dio_stat() returns information about the given file\n   descriptor.\n  "},"dio_tcsetattr":{"version":"(PHP 4 >= 4.3.0, PHP 5 <= 5.0.5)","shortdesc":"\n   Sets terminal attributes and baud rate for a serial port\n  ","syntax":"\n   bool <b>dio_tcsetattr<\/b>\n    ( resource $fd\n   , array $options\n   )","desc":"\n    dio_tcsetattr() sets the terminal attributes and baud\n   rate of the open fd.\n  "},"dio_truncate":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5)","shortdesc":"\n   Truncates file descriptor fd to offset bytes \n  ","syntax":"\n   bool <b>dio_truncate<\/b>\n    ( resource $fd\n   , int $offset\n   )","desc":"\n    dio_truncate() truncates a file to at most \n   offset bytes in size.\n  "},"dio_write":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5)","shortdesc":"\n   Writes data to fd with optional truncation at length \n  ","syntax":"\n   int <b>dio_write<\/b>\n    ( resource $fd\n   , string $data\n   [, int $len = 0\n  ] )","desc":"\n    dio_write() writes up to len \n   bytes from data to file fd. \n  "},"dir":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043a\u043b\u0430\u0441\u0441\u0430 Directory","syntax":"\n   Directory <b>dir<\/b>\n    ( string $<b>dir<\/b>ectory\n   [, resource $context\n  ] )","desc":"\n   \u041f\u0441\u0435\u0432\u0434\u043e-\u043e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043c\u0435\u0445\u0430\u043d\u0438\u0437\u043c \u0434\u043b\u044f \u0447\u0442\u0435\u043d\u0438\u044f \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430. \u041f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439\n   \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c directory \u043a\u0430\u0442\u0430\u043b\u043e\u0433 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f.\n  "},"dirname":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430 \u0438\u0437 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u0443\u0442\u0438","syntax":"\n   string <b>dirname<\/b>\n    ( string $path\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0438\u0432 \u0441\u0442\u0440\u043e\u043a\u0443, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0443\u044e \u043f\u0443\u0442\u044c \u043a \u0444\u0430\u0439\u043b\u0443 \u0438\u043b\u0438 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0443, \u0434\u0430\u043d\u043d\u0430\u044f\n   \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0438\u0442 \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u043a\u0430\u0442\u0430\u043b\u043e\u0433 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u0443\u0442\u0438.\n  "},"disk_free_space":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0430\u0437\u043c\u0435\u0440 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430 \u0432 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0435 \u0438\u043b\u0438 \u0432 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u0435","syntax":"\n   float <b>disk_free_space<\/b>\n    ( string $directory\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0430\u0437\u043c\u0435\u0440 \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430 \u0432 \u0431\u0430\u0439\u0442\u0430\u0445,\n   \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0433\u043e \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0435 \u0438\u043b\u0438 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0439\n   \u0441\u0438\u0441\u0442\u0435\u043c\u0435.\n  "},"disk_total_space":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u0449\u0438\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430 \u0438\u043b\u0438 \u0440\u0430\u0437\u0434\u0435\u043b\u0430 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b","syntax":"\n   float <b>disk_total_space<\/b>\n    ( string $directory\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u0449\u0438\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0432 \u0431\u0430\u0439\u0442\u0430\u0445 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0430 \u0434\u0438\u0441\u043a\u0430 \u0438\u043b\u0438 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430.\n  "},"diskfreespace":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  disk_free_space()","syntax":"","desc":""},"dl":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 PHP \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f","syntax":"\n   bool <b>dl<\/b>\n    ( string $library\n   )","desc":"\n   \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 PHP \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c library.\n  "},"dngettext":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0412\u0435\u0440\u0441\u0438\u044f dgettext \u0434\u043b\u044f \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430","syntax":"\n   string <b>dngettext<\/b>\n    ( string $domain\n   , string $msgid1\n   , string $msgid2\n   , int $n\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  dngettext() \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c\n   \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0434\u043e\u043c\u0435\u043d domain \u0434\u043b\u044f \u043e\u0434\u043d\u043e\u0433\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0432\u043e\n   \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u043c \u0447\u0438\u0441\u043b\u0435.\n  "},"dns_check_record":{"version":"(PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  checkdnsrr()","syntax":"","desc":""},"dns_get_mx":{"version":"(PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  getmxrr()","syntax":"","desc":""},"dns_get_record":{"version":"(PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 DNS \u0441\u0432\u043e\u0439\u0441\u0442\u0432 \u0438 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a \u0445\u043e\u0441\u0442\u0430\n  ","syntax":"\n   array <b>dns_get_record<\/b>\n    ( string $hostname\n   [, int $type = DNS_ANY\n   [, array &$authns\n   [, array &$addtl\n  ]]] )","desc":"\n   \u041f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442 \u0432\u044b\u0431\u043e\u0440\u043a\u0443 DNS \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430\u043c \u0445\u043e\u0441\u0442\u0430\n   hostname.\n  "},"dom_import_simplexml":{"version":"(PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 DOMElement \u0438\u0437 \u043e\u0431\u044a\u0435\u043a\u0442\u0430\n   \u043a\u043b\u0430\u0441\u0441\u0430 SimpleXMLElement\n  ","syntax":"\n   DOMElement <b>dom_import_simplexml<\/b>\n    ( SimpleXMLElement $node\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0431\u0435\u0440\u0435\u0442 \u0443\u0437\u0435\u043b node \u043a\u043b\u0430\u0441\u0441\u0430\n   SimpleXML \u0438 \u043f\u0440\u0435\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0435\u0433\u043e \u0432 \u0443\u0437\u0435\u043b\n   DOMElement. \u0417\u0430\u0442\u0435\u043c \u044d\u0442\u043e\u0442 \u043d\u043e\u0432\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d \n   \u043a\u0430\u043a \u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u0443\u0437\u0435\u043b DOMElement. \n  "},"dotnet_load":{"version":"(PHP 4)","shortdesc":"\u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u043c\u043e\u0434\u0443\u043b\u044c DOTNET","syntax":"\n   int <b>dotnet_load<\/b>\n    ( string $assembly_name\n   [, string $datatype_name\n   [, int $codepage\n  ]] )","desc":""},"doubleval":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  floatval()","syntax":"","desc":""},"each":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u043f\u0430\u0440\u0443 \u043a\u043b\u044e\u0447\/\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0438 \u0441\u043c\u0435\u0449\u0430\u0435\u0442 \u0435\u0433\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c","syntax":"\n   array <b>each<\/b>\n    ( array &$array\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u043f\u0430\u0440\u0443 \u043a\u043b\u044e\u0447\/\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0438 \u0441\u043c\u0435\u0449\u0430\u0435\u0442 \u0435\u0433\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c.\n  "},"easter_date":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041c\u0435\u0442\u043a\u0430 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 Unix \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0430\u044f \u043f\u043e\u043b\u0443\u043d\u043e\u0447\u0438 \u043d\u0430 \u041f\u0430\u0441\u0445\u0443 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u0433\u043e\u0434\u0443\n  ","syntax":"\n   int <b>easter_date<\/b>\n    ([ int $year\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0435\u0442\u043a\u0443 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 Unix \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0443\u044e \u043f\u043e\u043b\u0443\u043d\u043e\u0447\u0438 \n   \u043d\u0430 \u041f\u0430\u0441\u0445\u0443 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u0433\u043e\u0434\u0443.\n  "},"easter_days":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0434\u043d\u0435\u0439 \u043c\u0435\u0436\u0434\u0443 21 \u043c\u0430\u0440\u0442\u0430 \u0438 \u041f\u0430\u0441\u0445\u043e\u0439 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u0433\u043e\u0434\u0443\n  ","syntax":"\n   int <b>easter_days<\/b>\n    ([ int $year\n   [, int $method = CAL_EASTER_DEFAULT\n  ]] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u043c\u0435\u0436\u0434\u0443 21 \u043c\u0430\u0440\u0442\u0430 \u0438 \u041f\u0430\u0441\u0445\u043e\u0439 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u0433\u043e\u0434\u0443.\n   \u0415\u0441\u043b\u0438 \u0433\u043e\u0434 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d, \u0440\u0430\u0441\u0447\u0435\u0442 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d \u0434\u043b\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0433\u043e\u0434\u0430.\n  "},"echo":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043e\u0434\u043d\u0443 \u0438\u043b\u0438 \u0431\u043e\u043b\u0435\u0435 \u0441\u0442\u0440\u043e\u043a","syntax":"\n   void <b>echo<\/b>\n    ( string $arg1\n   [, string $...\n  ] )","desc":""},"eio_busy":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0418\u0441\u043a\u0443\u0441\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0443. \u041c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u043e\u043b\u0435\u0437\u043d\u043e \u043f\u0440\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438,\n  \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u0438 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438","syntax":"\n   resource <b>eio_busy<\/b>\n    ( int $delay\n   [, int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n  ]]] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  eio_busy() \u0438\u0441\u043a\u0443\u0441\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0443, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u044f\n   delay \u0441\u0435\u043a\u0443\u043d\u0434 \u043a \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0438\u0441\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f. \u041f\u043e\u043b\u0435\u0437\u043d\u043e \u043f\u0440\u0438 \u043e\u0442\u043b\u0430\u0434\u043a\u0435 \u0438\n   \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438.\n  "},"eio_cancel":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u041e\u0442\u043c\u0435\u043d\u044f\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441","syntax":"\n   void <b>eio_cancel<\/b>\n    ( resource $req\n   )","desc":"\n    eio_cancel() \u043e\u0442\u043c\u0435\u043d\u044f\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u0432\n   req\n  "},"eio_chmod":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u043f\u0440\u0430\u0432\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0444\u0430\u0439\u043b\u0443\/\u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438","syntax":"\n   resource <b>eio_chmod<\/b>\n    ( string $path\n   , int $mode\n   [, int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n  ]]] )","desc":"\n    eio_chmod() \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u043f\u0440\u0430\u0432\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0444\u0430\u0439\u043b\u0443\/\u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438. \u041d\u043e\u0432\u044b\u0435\n   \u043f\u0440\u0430\u0432\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 mode.\n  "},"eio_chown":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u043f\u0440\u0430\u0432\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0444\u0430\u0439\u043b\u0443\/\u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438","syntax":"\n   resource <b>eio_chown<\/b>\n    ( string $path\n   , int $uid\n   [, int $gid = -1\n   [, int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n  ]]]] )","desc":"\n   \u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u043f\u0440\u0430\u0432\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0444\u0430\u0439\u043b\u0443\/\u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438.\n  "},"eio_close":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"Close file","syntax":"\n   resource <b>eio_close<\/b>\n    ( mixed $fd\n   [, int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n  ]]] )","desc":"\n    eio_close() \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0444\u0430\u0439\u043b, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0432\n   fd.\n  "},"eio_custom":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u043a\u0430\u043a \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 eio_* \u0432\u044b\u0437\u043e\u0432","syntax":"\n   resource <b>eio_custom<\/b>\n    ( callable $execute\n   , int $pri\n   , callable $callback\n   [, mixed $data = NULL\n  ] )","desc":"\n    eio_custom() \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u0443\u044e \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435\n   execute \u043a\u0430\u043a \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0432\u044b\u0437\u043e\u0432 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 eio_*.\n  "},"eio_dup2":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0430 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   resource <b>eio_dup2<\/b>\n    ( mixed $fd\n   , mixed $fd2\n   [, int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n\n  ]]] )","desc":"\n   eio_dup2() \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0430 \u0444\u0430\u0439\u043b\u0430.\n  "},"eio_event_loop":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0412\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u0442 \u0441 libeio \u0434\u043e \u0442\u0435\u0445 \u043f\u043e\u0440, \u043f\u043e\u043a\u0430 \u0432\u0441\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043d\u0435 \u0431\u0443\u0434\u0443\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u044b","syntax":"\n   bool <b>eio_event_loop<\/b>\n    ( void\n   )","desc":"\n    eio_event_loop() \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u0442 \u0441 libeio \u0434\u043e \u0442\u0435\u0445 \u043f\u043e\u0440, \u043f\u043e\u043a\u0430 \u0432\u0441\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043d\u0435 \u0431\u0443\u0434\u0443\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u044b.\n  "},"eio_fallocate":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u043e\u0433\u043e \u0434\u0438\u0441\u043a\u043e\u0432\u043e\u0433\u043e \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430 \u0434\u043b\u044f \u0444\u0430\u0439\u043b\u0430","syntax":"\n   resource <b>eio_fallocate<\/b>\n    ( mixed $fd\n   , int $mode\n   , int $offset\n   , int $length\n   [, int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n\n  ]]] )","desc":"\n    eio_fallocate() \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u043c \n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u043e\u0433\u043e \u0434\u0438\u0441\u043a\u043e\u0432\u043e\u0433\u043e \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430 \u0434\u043b\u044f \u0444\u0430\u0439\u043b\u0430. \u0414\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 \u0444\u0430\u0439\u043b\u0430 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435\n   fd, \u0440\u0430\u0437\u043c\u0435\u0440 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u043e\u043c \u0432 \u0431\u0430\u0439\u0442\u0430\u0445, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u043e\u0442 \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u044f\n   offset \u0438 \u0434\u043e length.\n  "},"eio_fchmod":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u043f\u0440\u0430\u0432\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0444\u0430\u0439\u043b\u0443","syntax":"\n   resource <b>eio_fchmod<\/b>\n    ( mixed $fd\n   , int $mode\n   [, int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n  ]]] )","desc":"\n   eio_fchmod() \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u043f\u0440\u0430\u0432\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0444\u0430\u0439\u043b\u0443, \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e\n  \u0443\u043a\u0430\u0437\u0430\u043d \u0432 fd.\n  "},"eio_fchown":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   resource <b>eio_fchown<\/b>\n    ( mixed $fd\n   , int $uid\n   [, int $gid = -1\n   [, int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n  ]]]] )","desc":"\n    eio_fchown() \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u0444\u0430\u0439\u043b\u0430, \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e\n  \u0443\u043a\u0430\u0437\u0430\u043d \u0432 fd.\n  "},"eio_fdatasync":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0421\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 \u0441 \u0444\u0438\u0437\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e\u043c","syntax":"\n   resource <b>eio_fdatasync<\/b>\n    ( mixed $fd\n   [, int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n  ]]] )","desc":"\n    eio_fdatasync() \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 \u0441 \u0444\u0438\u0437\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e\u043c.\n  "},"eio_fstat":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0430\u0442\u0443\u0441 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   resource <b>eio_fstat<\/b>\n    ( mixed $fd\n   , int $pri\n   , callable $callback\n   [, mixed $data\n  ] )","desc":"\n    eio_fstat() \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0438 \u0444\u0430\u0439\u043b\u0430 \u0432\n   result \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0435 callback\n  "},"eio_fstatvfs":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b","syntax":"\n   resource <b>eio_fstatvfs<\/b>\n    ( mixed $fd\n   , int $pri\n   , callable $callback\n   [, mixed $data\n  ] )","desc":"\n   eio_fstatvfs() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0432\n  result \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 callback.\n  "},"eio_fsync":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0421\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 \u0441 \u0444\u0438\u0437\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e\u043c","syntax":"\n   resource <b>eio_fsync<\/b>\n    ( mixed $fd\n   [, int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n  ]]] )","desc":"\n   \u0421\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 \u0441 \u0444\u0438\u0437\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e\u043c.\n  "},"eio_ftruncate":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0423\u0440\u0435\u0437\u0430\u0435\u0442 \u0440\u0430\u0437\u043c\u0435\u0440 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   resource <b>eio_ftruncate<\/b>\n    ( mixed $fd\n   [, int $offset = 0\n   [, int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n  ]]]] )","desc":"\n   eio_ftruncate() \u0443\u0440\u0435\u0437\u0430\u0435\u0442 \u0444\u0430\u0439\u043b, \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0443\u043a\u0430\u0437\u0430\u043d \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435\n  fd \u0442\u043e\u0447\u043d\u043e \u0434\u043e length \u0431\u0430\u0439\u0442.\n  "},"eio_futime":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u0434\u0430\u0442\u0443 \u0438 \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0444\u0430\u0439\u043b\u0443","syntax":"\n   resource <b>eio_futime<\/b>\n    ( mixed $fd\n   , float $atime\n   , float $mtime\n   [, int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n\n  ]]] )","desc":"\n    eio_futime() \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u0434\u0430\u0442\u0443 \u0438 \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0444\u0430\u0439\u043b\u0443.\n  "},"eio_get_event_stream":{"version":"(PECL eio >= 0.3.1b)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0442\u043e\u043a, \u043e\u0442\u0440\u0430\u0436\u0430\u044e\u0449\u0438\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u0443\u044e \u043f\u0440\u0438 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0438 \u0441 libeio","syntax":"\n   mixed <b>eio_get_event_stream<\/b>\n    ( void\n   )","desc":"\n    eio_get_event_stream() \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043f\u043e\u0442\u043e\u043a, \n   \u043e\u0442\u0440\u0430\u0436\u0430\u044e\u0449\u0438\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u0443\u044e \u043f\u0440\u0438 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0438 \u0441 libeio.\n   \u041c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u043e \u0434\u043b\u044f \u043f\u0440\u0438\u0432\u044f\u0437\u043a\u0438 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0446\u0438\u043a\u043b\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438,\n   \u043f\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c\u043e\u0433\u043e \u0434\u0440\u0443\u0433\u0438\u043c \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435\u043c PECL, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, libevent.\n  "},"eio_get_last_error":{"version":"(PECL eio >= 1.0.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u043e\u0448\u0438\u0431\u043a\u0443, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u0443\u044e \u0441 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u043c \u043d\u0430 \u0440\u0435\u0441\u0443\u0440\u0441","syntax":"\n   string <b>eio_get_last_error<\/b>\n    ( resource $req\n   )","desc":"\n    eio_get_last_error() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u043e\u0448\u0438\u0431\u043a\u0443, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u0443\u044e \u0441 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u043c \u043d\u0430 \u0440\u0435\u0441\u0443\u0440\u0441 req.\n  "},"eio_grp_add":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u0432 \u0433\u0440\u0443\u043f\u043f\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432","syntax":"\n   void <b>eio_grp_add<\/b>\n    ( resource $grp\n   , resource $req\n   )","desc":"\n   eio_grp_add() \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u0432 \u0433\u0440\u0443\u043f\u043f\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432.\n  "},"eio_grp_cancel":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u041e\u0442\u043c\u0435\u043d\u044f\u0435\u0442 \u0433\u0440\u0443\u043f\u043f\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432","syntax":"\n   void <b>eio_grp_cancel<\/b>\n    ( resource $grp\n   )","desc":"\n   eio_grp_cancel() \u043e\u0442\u043c\u0435\u043d\u044f\u0435\u0442 \u0433\u0440\u0443\u043f\u043f\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432,\n  \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 grp.\n  "},"eio_grp_limit":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043f\u0440\u0435\u0434\u0435\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0432 \u0433\u0440\u0443\u043f\u043f\u0435","syntax":"\n   void <b>eio_grp_limit<\/b>\n    ( resource $grp\n   , int $limit\n   )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043f\u0440\u0435\u0434\u0435\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0432 \u0433\u0440\u0443\u043f\u043f\u0435.\n  "},"eio_grp":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0433\u0440\u0443\u043f\u043f\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432","syntax":"\n   resource <b>eio_grp<\/b>\n    ( callable $callback\n   [, string $data = NULL\n  ] )","desc":"\n    eio_grp() \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0433\u0440\u0443\u043f\u043f\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432.\n  "},"eio_init":{"version":"(PECL eio = 1.0.0)","shortdesc":"(Re-)initialize Eio","syntax":"\n   void <b>eio_init<\/b>\n    ( void\n   )","desc":"\n    eio_init() (\u0440\u0435-)\u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442 Eio. \n   \u0420\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043f\u0430\u043c\u044f\u0442\u044c \u0434\u043b\u044f \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0445 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440 libeio \u0438 Eio. \n   \u041c\u043e\u0436\u043d\u043e \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c  eio_init() \u043f\u0435\u0440\u0435\u0434 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c\n   Eio-\u0444\u0443\u043d\u043a\u0446\u0438\u0439. \u0412 \u043b\u044e\u0431\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0430\n   \u043f\u0440\u0438 \u043f\u0435\u0440\u0432\u043e\u043c \u0432\u044b\u0437\u043e\u0432\u0435 Eio-\u0444\u0443\u043d\u043a\u0446\u0438\u0438.\n  "},"eio_link":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0436\u0435\u0441\u0442\u043a\u0443\u044e \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u0444\u0430\u0439\u043b","syntax":"\n   resource <b>eio_link<\/b>\n    ( string $path\n   , string $new_path\n   [, int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n  ]]] )","desc":"\n   eio_link() \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0436\u0435\u0441\u0442\u043a\u0443\u044e \u0441\u0441\u044b\u043b\u043a\u0443\n  new_path \u043d\u0430 \u0444\u0430\u0439\u043b, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0432\n  path.\n  "},"eio_lstat":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0430\u0442\u0443\u0441 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   resource <b>eio_lstat<\/b>\n    ( string $path\n   , int $pri\n   , callable $callback\n   [, mixed $data = NULL\n  ] )","desc":"\n    eio_lstat() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0438 \u0444\u0430\u0439\u043b\u0430 \u0432\n   result \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0435 callback\n  "},"eio_mkdir":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438","syntax":"\n   resource <b>eio_mkdir<\/b>\n    ( string $path\n   , int $mode\n   [, int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n  ]]] )","desc":"\n   eio_mkdir() \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u0440\u0435\u0436\u0438\u043c\u043e\u043c \u0434\u043e\u0441\u0442\u0443\u043f\u0430\n  mode.\n  "},"eio_mknod":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u043b\u0438 \u043e\u0431\u044b\u0447\u043d\u044b\u0439 \u0444\u0430\u0439\u043b\n  ","syntax":"\n   resource <b>eio_mknod<\/b>\n    ( string $path\n   , int $mode\n   , int $dev\n   [, int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n\n  ]]] )","desc":"\n   eio_mknod() \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043e\u0431\u044b\u0447\u043d\u044b\u0439 \u0438\u043b\u0438 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 (\u0447\u0442\u043e \u0447\u0430\u0449\u0435) \u0444\u0430\u0439\u043b.\n  "},"eio_nop":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\n   \u041f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e \u0446\u0438\u043a\u043b\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u043d\u0435 \u0441\u043e\u0432\u0435\u0440\u0448\u0430\u044f \u043d\u0438\u043a\u0430\u043a\u0438\u0445 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439\n  ","syntax":"\n   resource <b>eio_nop<\/b>\n    ([ int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n  ]]] )","desc":"\n    eio_nop() \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442 \u043f\u043e \u0446\u0438\u043a\u043b\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u043d\u0438\u0447\u0435\u0433\u043e \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u043d\u0435\n   \u0434\u0435\u043b\u0430\u044f. \u041c\u043e\u0436\u0435\u0442 \u043e\u043a\u0430\u0437\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u043b\u0435\u0437\u043d\u043e\u0439 \u043f\u0440\u0438 \u043e\u0442\u043b\u0430\u0434\u043a\u0435.\n  "},"eio_npending":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u044b\u0445, \u043d\u043e \u043d\u0435\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0432","syntax":"\n   int <b>eio_npending<\/b>\n    ( void\n   )","desc":"\n   eio_npending() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u044b\u0445, \u043d\u043e \u043d\u0435\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0432\n  "},"eio_nready":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u0435\u0449\u0435 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432","syntax":"\n   int <b>eio_nready<\/b>\n    ( void\n   )","desc":"\n\n  "},"eio_nreqs":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u043e\u0438\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c","syntax":"\n   int <b>eio_nreqs<\/b>\n    ( void\n   )","desc":"\n    eio_nreqs() \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0430 \u0432 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u043e\u043c \u0446\u0438\u043a\u043b\u0435, \u0432\u044b\u0437\u0432\u0430\u043d\u043d\u043e\u043c\n    eio_poll().\n  "},"eio_nthreads":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0445 \u0432 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u043f\u043e\u0442\u043e\u043a\u043e\u0432","syntax":"\n   int <b>eio_nthreads<\/b>\n    ( void\n   )","desc":"\n\n  "},"eio_open":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u041e\u0442\u043a\u0440\u0432\u0430\u0435\u0442 \u0444\u0430\u0439\u043b","syntax":"\n   resource <b>eio_open<\/b>\n    ( string $path\n   , int $flags\n   , int $mode\n   , int $pri\n   , callable $callback\n   [, mixed $data = NULL\n  ] )","desc":"\n   eio_open() \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0444\u0430\u0439\u043b \u043f\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u0443\u0442\u0438\n  path \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 mode.\n  "},"eio_poll":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u041c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0432\u044b\u0437\u0432\u0430\u043d\u0430 \u043a\u043e\u0433\u0434\u0430 \u0438\u043c\u0435\u044e\u0442\u0441\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u044b, \u043e\u0436\u0438\u0434\u0430\u044e\u0449\u0438\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f","syntax":"\n   int <b>eio_poll<\/b>\n    ( void\n   )","desc":"\n   eio_poll() \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0430 \u0434\u043b\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043e\u0441\u043e\u0431\u044b\u0445\n  \u0446\u0438\u043a\u043b\u043e\u0432 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c\n   eio_nreqs() \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0430 \u0434\u043b\u044f \u043d\u0430\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043d\u0435\u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u044b\u0445\n  \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432.\n  "},"eio_read":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\n   \u0427\u0438\u0442\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u044f\n  ","syntax":"\n   resource <b>eio_read<\/b>\n    ( mixed $fd\n   , int $length\n   , int $offset\n   , int $pri\n   , callable $callback\n   [, mixed $data = NULL\n  ] )","desc":"\n    eio_read() \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 length \u0431\u0430\u0439\u0442 \u0438\u0437\n   \u0444\u0430\u0439\u043b\u0430 \u0441 \u043e\u043f\u0438\u0441\u0430\u0442\u0435\u043b\u0435\u043c fd, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u0431\u0430\u0439\u0442\u0430\n   offset. \u041f\u0440\u043e\u0447\u0438\u0442\u0430\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442\u0441\u044f \u0447\u0435\u0440\u0435\u0437 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \n   result \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u044e callback.\n  "},"eio_readahead":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\n   \u041f\u043e\u043c\u0435\u0449\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u0432 \u043a\u044d\u0448 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b\n  ","syntax":"\n   resource <b>eio_readahead<\/b>\n    ( mixed $fd\n   , int $offset\n   , int $length\n   [, int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n  ]]] )","desc":"\n   eio_readahead() \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043a\u044d\u0448 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430. \u0422\u0430\u043a\u0438\u043c\n  \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0438\u0435 \u043e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u044f \u043a \u044d\u0442\u043e\u043c\u0443 \u0444\u0430\u0439\u043b\u0443 \u043d\u0435 \u0431\u0443\u0434\u0443\u0442 \u0432\u043b\u0438\u044f\u0442\u044c \u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u0443 \u0434\u0438\u0441\u043a\u043e\u0432\u043e\u0439\n  \u043f\u043e\u0434\u0441\u0438\u0441\u0442\u0435\u043c\u044b. \u0411\u043e\u043b\u0435\u0435 \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430\n  READAHEAD(2).\n  "},"eio_readdir":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\n   \u0427\u0438\u0442\u0430\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438\n  ","syntax":"\n   resource <b>eio_readdir<\/b>\n    ( string $path\n   , int $flags\n   , int $pri\n   , callable $callback\n   [, string $data = NULL\n  ] )","desc":"\n   \u0427\u0438\u0442\u0430\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 (\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u043e\u043c \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0445 \u0432\u044b\u0437\u043e\u0432\u043e\u0432\n   opendir, readdir \u0438\n   closedir) \u0438 \u043b\u0438\u0431\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u0435\u043d\u0430 \u0444\u0430\u0439\u043b\u043e\u0432, \u043b\u0438\u0431\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442\n   \u043c\u0430\u0441\u0441\u0438\u0432 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430 result \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \n   callback. \u041f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u0430 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\n   flags.\n  "},"eio_readlink":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\n   \u0427\u0438\u0442\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0441\u0441\u044b\u043b\u043a\u0438\n  ","syntax":"\n   resource <b>eio_readlink<\/b>\n    ( string $path\n   , int $pri\n   , callable $callback\n   [, string $data = NULL\n  ] )","desc":"\n\n  "},"eio_realpath":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u044b\u0439 \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0439 \u043a \u043a\u0430\u043d\u043e\u043d\u0438\u0447\u0435\u0441\u043a\u043e\u043c\u0443 \u0432\u0438\u0434\u0443 \u043f\u0443\u0442\u044c\n  ","syntax":"\n   resource <b>eio_realpath<\/b>\n    ( string $path\n   , int $pri\n   , callable $callback\n   [, string $data = NULL\n  ] )","desc":"\n   eio_realpath() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u044b\u0439 \u043f\u0443\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\n  result \u0444\u0443\u043d\u043a\u0446\u0438\u0438 callback.\n  "},"eio_rename":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\n   \u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u0438\u043c\u044f \u0438\u043b\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u0435\u0442 \u0444\u0430\u0439\u043b\n  ","syntax":"\n   resource <b>eio_rename<\/b>\n    ( string $path\n   , string $new_path\n   [, int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n  ]]] )","desc":"\n    eio_rename() \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u0438\u043b\u0438 \u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435\n   \u0444\u0430\u0439\u043b\u0430.\n  "},"eio_rmdir":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e","syntax":"\n   resource <b>eio_rmdir<\/b>\n    ( string $path\n   [, int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n  ]]] )","desc":"\n    eio_rmdir() \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e.\n  "},"eio_seek":{"version":"(PECL eio >= 0.5.0b)","shortdesc":"\n   \u041f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u0435\u0442 \u0444\u0430\u0439\u043b\u043e\u0432\u044b\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u0444\u0430\u0439\u043b\u0430 fd \u043d\u0430 \u0447\u0438\u0441\u043b\u043e \u0431\u0430\u0439\u0442\n   offset \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0434\u0438\u0440\u0435\u043a\u0442\u0438\u0432\u043e\u0439\n   whence\n  ","syntax":"\n   resource <b>eio_seek<\/b>\n    ( mixed $fd\n   , int $offset\n   , int $whence\n   [, int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n  ]]] )","desc":"\n    eio_seek() \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0433\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u043e\u0433\u043e\n   \u0441 \u043f\u043e\u0442\u043e\u043a\u043e\u043c, \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u043c \u0441\u043e\u043a\u0435\u0442\u0430 \u0438\u043b\u0438 \u0444\u0430\u0439\u043b\u043e\u0432\u044b\u043c \u043e\u043f\u0438\u0441\u0430\u0442\u0435\u043b\u0435\u043c \n   fd \u043d\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\n   offset. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0442\u0435\u043a\u0443\u0449\u0430\u044f \u043f\u043e\u0437\u0438\u0446\u0438\u044f \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0433\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f\n   \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0442\u044c\u0441\u044f \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u0434\u0438\u0440\u0435\u043a\u0442\u0438\u0432\u044b\n   whence \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c:\n   "},"eio_sendfile":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\n   \u041f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043c\u0435\u0436\u0434\u0443 \u0444\u0430\u0439\u043b\u0430\u043c\u0438\n  ","syntax":"\n   resource <b>eio_sendfile<\/b>\n    ( mixed $out_fd\n   , mixed $in_fd\n   , int $offset\n   , int $length\n   [, int $pri\n   [, callable $callback\n   [, string $data\n  ]]] )","desc":"\n    eio_sendfile() \u043a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u043e\u0434\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0432 \u0434\u0440\u0443\u0433\u043e\u0439.\n   \u0421\u043c. \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 SENDFILE(2).\n  "},"eio_set_max_idle":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0436\u0438\u0434\u0430\u044e\u0449\u0438\u0445 \u043f\u043e\u0442\u043e\u043a\u043e\u0432","syntax":"\n   void <b>eio_set_max_idle<\/b>\n    ( int $nthreads\n   )","desc":"\n\n  "},"eio_set_max_parallel":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u044c\u043d\u044b\u0445 \u043f\u043e\u0442\u043e\u043a\u043e\u0432","syntax":"\n   void <b>eio_set_max_parallel<\/b>\n    ( int $nthreads\n   )","desc":"\n\n  "},"eio_set_max_poll_reqs":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u043c\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432","syntax":"\n   void <b>eio_set_max_poll_reqs<\/b>\n    ( int $nreqs\n   )","desc":"\n\n  "},"eio_set_max_poll_time":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f","syntax":"\n   void <b>eio_set_max_poll_time<\/b>\n    ( float $nseconds\n   )","desc":"\n   \u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f, \u0435\u0441\u043b\u0438 \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u0435\u0442 nseconds\n   \u0441\u0435\u043a\u0443\u043d\u0434.\n  "},"eio_set_min_parallel":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u044c\u043d\u044b\u0445 \u043f\u043e\u0442\u043e\u043a\u043e\u0432","syntax":"\n   void <b>eio_set_min_parallel<\/b>\n    ( string $nthreads\n   )","desc":"\n\n  "},"eio_stat":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0430\u0442\u0443\u0441 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   resource <b>eio_stat<\/b>\n    ( string $path\n   , int $pri\n   , callable $callback\n   [, mixed $data = NULL\n  ] )","desc":"\n    eio_stat() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0438 \u0444\u0430\u0439\u043b\u0430 \u0432\n   result \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0435 callback\n  "},"eio_statvfs":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b","syntax":"\n   resource <b>eio_statvfs<\/b>\n    ( string $path\n   , int $pri\n   , callable $callback\n   [, mixed $data\n  ] )","desc":"\n   eio_statvfs() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0432\n  result \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 callback.\n  "},"eio_symlink":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0441\u0441\u044b\u043b\u043a\u0443\n  ","syntax":"\n   resource <b>eio_symlink<\/b>\n    ( string $path\n   , string $new_path\n   [, int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n\n  ]]] )","desc":"\n   eio_symlink() \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0441\u0441\u044b\u043b\u043a\u0443\n  new_path \u043d\u0430 \u043f\u0443\u0442\u044c path.\n  "},"eio_sync_file_range":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\n   \u0421\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0441\u0435\u0433\u043c\u0435\u043d\u0442 \u0444\u0430\u0439\u043b\u0430 \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0444\u0430\u0439\u043b\u0430 \u043d\u0430 \u0432\u043d\u0435\u0448\u043d\u0435\u043c \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435\n  ","syntax":"\n   resource <b>eio_sync_file_range<\/b>\n    ( mixed $fd\n   , int $offset\n   , int $nbytes\n   , int $flags\n   [, int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n  ]]] )","desc":"\n    eio_sync_file_range() \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438\n   \u0438 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u043f\u0440\u0438 \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0430\u0446\u0438\u0438 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 fd\n   \u0441 \u0434\u0438\u0441\u043a\u043e\u0432\u043e\u0439 \u043f\u043e\u0434\u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439.\n  "},"eio_sync":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0417\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043a\u044d\u0448 \u0438\u0437 \u0431\u0443\u0444\u0435\u0440\u0430 \u043d\u0430 \u0434\u0438\u0441\u043a","syntax":"\n   resource <b>eio_sync<\/b>\n    ([ int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n  ]]] )","desc":"\n\n  "},"eio_syncfs":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0439 \u0432\u044b\u0437\u043e\u0432 syncfs \u0432 Linux, \u0435\u0441\u043b\u0438 \u044d\u0442\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e","syntax":"\n   resource <b>eio_syncfs<\/b>\n    ( mixed $fd\n   [, int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n  ]]] )","desc":"\n\n  "},"eio_truncate":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0423\u0440\u0435\u0437\u0430\u0435\u0442 \u0440\u0430\u0437\u043c\u0435\u0440 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   resource <b>eio_truncate<\/b>\n    ( string $path\n   [, int $offset = 0\n   [, int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n  ]]]] )","desc":"\n   eio_truncate() \u0443\u0440\u0435\u0437\u0430\u0435\u0442 \u0444\u0430\u0439\u043b, \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0443\u043a\u0430\u0437\u0430\u043d \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435\n  fd \u0442\u043e\u0447\u043d\u043e \u0434\u043e length \u0431\u0430\u0439\u0442.\n  "},"eio_unlink":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0444\u0430\u0439\u043b \u0438\u043b\u0438 \u043e\u0434\u043d\u0443 \u0438\u0437 \u0436\u0435\u0441\u0442\u043a\u0438\u0445 \u0441\u0441\u044b\u043b\u043e\u043a \u043d\u0430 \u043d\u0435\u0433\u043e","syntax":"\n   resource <b>eio_unlink<\/b>\n    ( string $path\n   [, int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n  ]]] )","desc":"\n   eio_unlink() \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0438\u043c\u044f \u0438\u0437 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b.\n  "},"eio_utime":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u0434\u0430\u0442\u0443 \u0438 \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0444\u0430\u0439\u043b\u0443","syntax":"\n   resource <b>eio_utime<\/b>\n    ( string $path\n   , float $atime\n   , float $mtime\n   [, int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n  ]]] )","desc":"\n\n  "},"eio_write":{"version":"(PECL eio >= 0.0.1dev)","shortdesc":"\n   \u0417\u0430\u043f\u0438\u0441\u044c \u0432 \u0444\u0430\u0439\u043b\n  ","syntax":"\n   resource <b>eio_write<\/b>\n    ( mixed $fd\n   , string $str\n   [, int $length = 0\n   [, int $offset = 0\n   [, int $pri = EIO_PRI_DEFAULT\n   [, callable $callback = NULL\n   [, mixed $data = NULL\n  ]]]]] )","desc":"\n    eio_write() \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0434\u043e length \u0431\u0430\u0439\u0442\n   \u0438\u0437 str \u0432 \u0444\u0430\u0439\u043b, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u043f\u043e\u0437\u0438\u0446\u0438\u0438\n   offset \u0431\u0430\u0439\u0442 \u043e\u0442 \u043d\u0430\u0447\u0430\u043b\u0430 \u0444\u0430\u0439\u043b\u0430.\n  "},"empty":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u043f\u0443\u0441\u0442\u0430 \u043b\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f","syntax":"\n   bool <b>empty<\/b>\n    ( mixed $var\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u043f\u0443\u0441\u0442\u0430 \u043b\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f.\n  "},"enchant_broker_describe":{"version":"(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0)","shortdesc":"Enumerates the Enchant providers","syntax":"\n   array <b>enchant_broker_describe<\/b>\n    ( resource $broker\n   )","desc":"\n   Enumerates the Enchant providers and tells you some rudimentary\n   information about them. The same info is provided through phpinfo().\n  "},"enchant_broker_dict_exists":{"version":"(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )","shortdesc":"Whether a dictionary exists or not. Using non-empty tag","syntax":"\n   bool <b>enchant_broker_dict_exists<\/b>\n    ( resource $broker\n   , string $tag\n   )","desc":"\n   Tells if a dictionary exists or not, using a non-empty tags\n  "},"enchant_broker_free_dict":{"version":"(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )","shortdesc":"Free a dictionary resource","syntax":"\n   bool <b>enchant_broker_free_dict<\/b>\n    ( resource $dict\n   )","desc":"\n   Free a dictionary resource.\n  "},"enchant_broker_free":{"version":"(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )","shortdesc":"Free the broker resource and its dictionnaries","syntax":"\n   bool <b>enchant_broker_free<\/b>\n    ( resource $broker\n   )","desc":"\n   Free a broker resource with all its dictionaries.\n  "},"enchant_broker_get_error":{"version":"(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )","shortdesc":"Returns the last error of the broker","syntax":"\n   string <b>enchant_broker_get_error<\/b>\n    ( resource $broker\n   )","desc":"\n   Returns the last error which occurred in this broker.\n  "},"enchant_broker_init":{"version":"(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )","shortdesc":"create a new broker object capable of requesting","syntax":"\n   resource <b>enchant_broker_init<\/b>\n    ( void\n   )","desc":""},"enchant_broker_list_dicts":{"version":"(PHP 5 >= 5.3.0, PECL enchant >= 1.0.1)","shortdesc":"Returns a list of available dictionaries","syntax":"\n   mixed <b>enchant_broker_list_dicts<\/b>\n    ( resource $broker\n   )","desc":"\n   Returns a list of available dictionaries with their details.\n  "},"enchant_broker_request_dict":{"version":"(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )","shortdesc":"create a new dictionary using a tag","syntax":"\n   resource <b>enchant_broker_request_dict<\/b>\n    ( resource $broker\n   , string $tag\n   )","desc":"\n   create a new dictionary using tag, the non-empty language tag you\n   wish to request a dictionary for (\"en_US\", \"de_DE\", ...)\n  "},"enchant_broker_request_pwl_dict":{"version":"(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )","shortdesc":"creates a dictionary using a PWL file","syntax":"\n   resource <b>enchant_broker_request_pwl_dict<\/b>\n    ( resource $broker\n   , string $filename\n   )","desc":"\n   Creates a dictionary using a PWL file. A PWL file is personal word file one word per line.\n  "},"enchant_broker_set_ordering":{"version":"(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )","shortdesc":"Declares a preference of dictionaries to use for the language","syntax":"\n   bool <b>enchant_broker_set_ordering<\/b>\n    ( resource $broker\n   , string $tag\n   , string $ordering\n   )","desc":"\n   Declares a preference of dictionaries to use for the language\n   described\/referred to by 'tag'. The ordering is a comma delimited\n   list of provider names. As a special exception, the \"*\" tag can\n   be used as a language tag to declare a default ordering for any\n   language that does not explicitly declare an ordering.\n  "},"enchant_dict_add_to_personal":{"version":"(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )","shortdesc":"add a word to personal word list","syntax":"\n   void <b>enchant_dict_add_to_personal<\/b>\n    ( resource $dict\n   , string $word\n   )","desc":"\n   Add a word to personal word list of the given dictionary.\n  "},"enchant_dict_add_to_session":{"version":"(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )","shortdesc":"add 'word' to this spell-checking session","syntax":"\n   void <b>enchant_dict_add_to_session<\/b>\n    ( resource $dict\n   , string $word\n   )","desc":"\n   Add a word to the given dictionary. It will be added only for the\n   active spell-checking session.\n  "},"enchant_dict_check":{"version":"(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )","shortdesc":"Check whether a word is correctly spelled or not","syntax":"\n   bool <b>enchant_dict_check<\/b>\n    ( resource $dict\n   , string $word\n   )","desc":"\n    If the word is correctly spelled return TRUE, otherwise return FALSE\n  "},"enchant_dict_describe":{"version":"(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )","shortdesc":"Describes an individual dictionary","syntax":"\n   mixed <b>enchant_dict_describe<\/b>\n    ( resource $dict\n   )","desc":"\n   Returns the details of the dictionary.\n  "},"enchant_dict_get_error":{"version":"(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )","shortdesc":"Returns the last error of the current spelling-session","syntax":"\n   string <b>enchant_dict_get_error<\/b>\n    ( resource $dict\n   )","desc":"\n   Returns the last error of the current spelling-session\n  "},"enchant_dict_is_in_session":{"version":"(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )","shortdesc":"whether or not 'word' exists in this spelling-session","syntax":"\n   bool <b>enchant_dict_is_in_session<\/b>\n    ( resource $dict\n   , string $word\n   )","desc":"\n  Tells whether or not a word already exists in the current session.\n "},"enchant_dict_quick_check":{"version":"(PHP 5 >= 5.3.0, PECL enchant:0.2.0-1.0.1)","shortdesc":"Check the word is correctly spelled and provide suggestions","syntax":"\n   bool <b>enchant_dict_quick_check<\/b>\n    ( resource $dict\n   , string $word\n   [, array &$suggestions\n  ] )","desc":"\n   If the word is correctly spelled return TRUE, otherwise return FALSE, if suggestions variable\n   is provided, fill it with spelling alternatives.\n  "},"enchant_dict_store_replacement":{"version":"(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )","shortdesc":"Add a correction for a word","syntax":"\n   void <b>enchant_dict_store_replacement<\/b>\n    ( resource $dict\n   , string $mis\n   , string $cor\n   )","desc":"\n    Add a correction for 'mis' using 'cor'.\n    Notes that you replaced @mis with @cor, so it's possibly more likely\n    that future occurrences of @mis will be replaced with @cor. So it might\n    bump @cor up in the suggestion list.\n  "},"enchant_dict_suggest":{"version":"(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )","shortdesc":"Will return a list of values if any of those pre-conditions are not met","syntax":"\n   array <b>enchant_dict_suggest<\/b>\n    ( resource $dict\n   , string $word\n   )","desc":"\n  "},"end":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043d\u0430 \u0435\u0433\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442","syntax":"\n   mixed <b>end<\/b>\n    ( array &$array\n   )","desc":"\n    end() \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c\n   array \u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\n   \u0435\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.\n  "},"ereg_replace":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442 \u0437\u0430\u043c\u0435\u043d\u0443 \u043f\u043e \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u043c\u0443 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044e","syntax":"\n   string <b>ereg_replace<\/b>\n    ( string $pattern\n   , string $replacement\n   , string $string\n   )","desc":""},"ereg":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0432\u043f\u0430\u0434\u0435\u043d\u0438\u0435 \u0441 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u044b\u043c \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043c","syntax":"\n   int <b>ereg<\/b>\n    ( string $pattern\n   , string $string\n   [, array &$regs\n  ] )","desc":""},"eregi_replace":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442 \u0437\u0430\u043c\u0435\u043d\u0443 \u043f\u043e \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u043c\u0443 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044e \u0431\u0435\u0437 \u0443\u0447\u0435\u0442\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430","syntax":"\n   string <b>eregi_replace<\/b>\n    ( string $pattern\n   , string $replacement\n   , string $string\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  ereg_replace()\n   \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0435\u0442 \u0440\u0435\u0433\u0438\u0441\u0442\u0440 \u043f\u0440\u0438 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0438 \n   \u0430\u043b\u0444\u0430\u0432\u0438\u0442\u043d\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.\n  "},"eregi":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0432\u043f\u0430\u0434\u0435\u043d\u0438\u0435 \u0441 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u044b\u043c \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043c \u0431\u0435\u0437 \u0443\u0447\u0451\u0442\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430","syntax":"\n   int <b>eregi<\/b>\n    ( string $pattern\n   , string $string\n   [, array &$regs\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  ereg() \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \n   \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0435\u0442 \u0440\u0435\u0433\u0438\u0441\u0442\u0440 \u043f\u0440\u0438 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0438 \u0430\u043b\u0444\u0430\u0432\u0438\u0442\u043d\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.\n  "},"error_get_last":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u0435\u0434\u0448\u0435\u0439 \u043e\u0448\u0438\u0431\u043a\u0435\n  ","syntax":"\n   array <b>error_get_last<\/b>\n    ( void\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u0435\u0434\u0448\u0435\u0439 \u043e\u0448\u0438\u0431\u043a\u0435.\n  "},"error_log":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435","syntax":"\n   bool <b>error_log<\/b>\n    ( string $message\n   [, int $message_type = 0\n   [, string $destination\n   [, string $extra_headers\n  ]]] )","desc":"\n   \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435 \u0432 \u043b\u043e\u0433 web-\u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0438\u043b\u0438 \u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0444\u0430\u0439\u043b.\n  "},"error_reporting":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442, \u043a\u0430\u043a\u0438\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 PHP \u043f\u043e\u043f\u0430\u0434\u0443\u0442 \u0432 \u043e\u0442\u0447\u0435\u0442\n  ","syntax":"\n   int <b>error_reporting<\/b>\n    ([ int $level\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  error_reporting() \u0437\u0430\u0434\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u0438\u0432\u044b\n   error_reporting \u0432\u043e \u0432\u0440\u0435\u043c\u044f\n   \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f. \u0412 PHP \u0435\u0441\u0442\u044c \u043c\u043d\u043e\u0433\u043e \u0443\u0440\u043e\u0432\u043d\u0435\u0439 \u043e\u0448\u0438\u0431\u043e\u043a. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u044d\u0442\u0443 \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u043c\u043e\u0436\u043d\u043e\n   \u0437\u0430\u0434\u0430\u0442\u044c \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u043e\u0448\u0438\u0431\u043e\u043a \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0441\u043a\u0440\u0438\u043f\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u043f\u0430\u0434\u0443\u0442 \u0432 \u043e\u0442\u0447\u0435\u0442.\n   \u0415\u0441\u043b\u0438 \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 level \u043d\u0435 \u0437\u0430\u0434\u0430\u043d,\n    error_reporting() \u0432\u0435\u0440\u043d\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0443\u0440\u043e\u0432\u043d\u044f\n   \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043e\u043a.\n  "},"escapeshellarg":{"version":"(PHP 4 >= 4.0.3, PHP 5)","shortdesc":"\u042d\u043a\u0440\u0430\u043d\u0438\u0440\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0434\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u043e\u043d\u0430 \u043c\u043e\u0433\u043b\u0430 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0430 \u043a\u0430\u043a \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   string <b>escapeshellarg<\/b>\n    ( string $arg\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  escapeshellarg() \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u043e \u043e\u0434\u043d\u043e\u0439 \u043a\u0430\u0432\u044b\u0447\u043a\u0435 \u0432\u043e\u043a\u0440\u0443\u0433 \u0441\u0442\u0440\u043e\u043a\u0438\n   \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u0430\u0432\u044b\u0447\u043a\u0438\/\u044d\u043a\u0440\u0430\u043d\u0438\u0440\u0443\u0435\u0442 \u043b\u044e\u0431\u044b\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0435\u0434\u0438\u043d\u0438\u0447\u043d\u044b\u0435 \u043a\u0430\u0432\u044b\u0447\u043a\u0438, \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044f \u0432\u0430\u043c \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c\n   \u0441\u0442\u0440\u043e\u043a\u0443 \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0448\u0435\u043b\u043b-\u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0438 \u0440\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u0435\u0451 \u043a\u0430\u043a \u043e\u0434\u0438\u043d\n   \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442. \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0430 \u0434\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u044d\u043a\u0440\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0435 \n   \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0434\u043b\u044f \u0448\u0435\u043b\u043b-\u0444\u0443\u043d\u043a\u0446\u0438\u0439, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0438\u0437 \u0432\u0432\u043e\u0434\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0428\u0435\u043b\u043b-\u0444\u0443\u043d\u043a\u0446\u0438\u0438\n   \u0432\u043a\u043b\u044e\u0447\u0430\u044e\u0442  exec(),  system() \u0438 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\n   \"\u043e\u0431\u0440\u0430\u0442\u043d\u044b\u0439 \u0430\u043f\u043e\u0441\u0442\u0440\u043e\u0444\".\n  "},"escapeshellcmd":{"version":"(PHP 4, PHP 5)","shortdesc":"\u042d\u043a\u0440\u0430\u043d\u0438\u0440\u0443\u0435\u0442 \u043c\u0435\u0442\u0430\u0441\u0438\u043c\u0432\u043e\u043b\u044b \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   string <b>escapeshellcmd<\/b>\n    ( string $command\n   )","desc":"\n   \u041a\u043e\u043c\u0430\u043d\u0434\u0430  escapeshellcmd() \u044d\u043a\u0440\u0430\u043d\u0438\u0440\u0443\u0435\u0442 \u043b\u044e\u0431\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \n   \u0441\u0442\u0440\u043e\u043a\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u044b \u0434\u043b\u044f \u043e\u0431\u043c\u0430\u043d\u0430 \u0448\u0435\u043b\u043b-\u043a\u043e\u043c\u0430\u043d\u0434 \u043f\u0440\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0438\n   \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u044b\u0445 \u043a\u043e\u043c\u0430\u043d\u0434. \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0430 \u0434\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0443\u0431\u0435\u0434\u0438\u0442\u044c\u0441\u044f,\n   \u0447\u0442\u043e \u043b\u044e\u0431\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435, \u0432\u0432\u043e\u0434\u0438\u043c\u044b\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c, \u044d\u043a\u0440\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u043f\u0435\u0440\u0435\u0434 \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0435\u0439 \u0438\u0445\n   \u0444\u0443\u043d\u043a\u0446\u0438\u0438  exec() \u0438\u043b\u0438\n    system(), \u0438\u043b\u0438 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0443 \"\u043e\u0431\u0440\u0430\u0442\u043d\u044b\u0439 \u0430\u043f\u043e\u0441\u0442\u0440\u043e\u0444\".\n  "},"eval":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0418\u0441\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043a\u043e\u0434 PHP, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0439\u0441\u044f \u0432 \u0441\u0442\u0440\u043e\u043a\u0435","syntax":"\n   mixed <b>eval<\/b>\n    ( string $code\n   )","desc":"\n   \u0418\u0441\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u0443\u044e \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 code_str,\n   \u043a\u0430\u043a \u043a\u043e\u0434 PHP.\n  "},"event_add":{"version":"(PECL libevent >= 0.0.1)","shortdesc":"Add an event to the set of monitored events","syntax":"\n   bool <b>event_add<\/b>\n    ( resource $event\n   [, int $timeout = -1\n  ] )","desc":"\n    event_add() schedules the execution of the event\n   when the event specified in  event_set() occurs or in at least the time\n   specified by the timeout argument. If\n   timeout was not specified, not timeout is set. The\n   event must be already initalized by  event_set()\n   and  event_base_set() functions. If the\n   event already has a timeout set, it is replaced by\n   the new one.\n  "},"event_base_free":{"version":"(PECL libevent >= 0.0.1)","shortdesc":"Destroy event base","syntax":"\n   void <b>event_base_free<\/b>\n    ( resource $event_base\n   )","desc":"\n   Destroys the specified event_base and frees all the\n   resources associated. Note that it's not possible to destroy an event base\n   with events attached to it.\n  "},"event_base_loop":{"version":"(PECL libevent >= 0.0.1)","shortdesc":"Handle events","syntax":"\n   int <b>event_base_loop<\/b>\n    ( resource $event_base\n   [, int $flags = 0\n  ] )","desc":"\n   Starts event loop for the specified event base.\n  "},"event_base_loopbreak":{"version":"(PECL libevent >= 0.0.1)","shortdesc":"Abort event loop","syntax":"\n   bool <b>event_base_loopbreak<\/b>\n    ( resource $event_base\n   )","desc":"\n   Abort the active event loop immediately. The behaviour is similar to\n   break statement.\n  "},"event_base_loopexit":{"version":"(PECL libevent >= 0.0.1)","shortdesc":"Exit loop after a time","syntax":"\n   bool <b>event_base_loopexit<\/b>\n    ( resource $event_base\n   [, int $timeout = -1\n  ] )","desc":"\n   The next event loop iteration after the given timer expires will complete\n   normally, then exit without blocking for events again.\n  "},"event_base_new":{"version":"(PECL libevent >= 0.0.1)","shortdesc":"Create and initialize new event base","syntax":"\n   resource <b>event_base_new<\/b>\n    ( void\n   )","desc":"\n   Returns new event base, which can be used later in  event_base_set(), \n    event_base_loop() and other functions. \n  "},"event_base_priority_init":{"version":"(PECL libevent >= 0.0.2)","shortdesc":"Set the number of event priority levels","syntax":"\n   bool <b>event_base_priority_init<\/b>\n    ( resource $event_base\n   , int $npriorities\n   )","desc":"\n   Sets the number of different event priority levels. \n  "},"event_base_set":{"version":"(PECL libevent >= 0.0.1)","shortdesc":"Associate event base with an event","syntax":"\n   bool <b>event_base_set<\/b>\n    ( resource $event\n   , resource $event_base\n   )","desc":"\n   Associates the event_base with the\n   event.\n  "},"event_buffer_base_set":{"version":"(PECL libevent >= 0.0.1)","shortdesc":"Associate buffered event with an event base","syntax":"\n   bool <b>event_buffer_base_set<\/b>\n    ( resource $bevent\n   , resource $event_base\n   )","desc":"\n   Assign the specified bevent to the\n   event_base.\n  "},"event_buffer_disable":{"version":"(PECL libevent >= 0.0.1)","shortdesc":"Disable a buffered event","syntax":"\n   bool <b>event_buffer_disable<\/b>\n    ( resource $bevent\n   , int $events\n   )","desc":"\n   Disables the specified buffered event.\n  "},"event_buffer_enable":{"version":"(PECL libevent >= 0.0.1)","shortdesc":"Enable a buffered event","syntax":"\n   bool <b>event_buffer_enable<\/b>\n    ( resource $bevent\n   , int $events\n   )","desc":"\n   Enables the specified buffered event.\n  "},"event_buffer_fd_set":{"version":"(PECL libevent >= 0.0.1)","shortdesc":"Change a buffered event file descriptor","syntax":"\n   void <b>event_buffer_fd_set<\/b>\n    ( resource $bevent\n   , resource $fd\n   )","desc":"\n   Changes the file descriptor on which the buffered event operates.\n  "},"event_buffer_free":{"version":"(PECL libevent >= 0.0.1)","shortdesc":"Destroy buffered event","syntax":"\n   void <b>event_buffer_free<\/b>\n    ( resource $bevent\n   )","desc":"\n   Destroys the specified buffered event and frees all the resources\n   associated.\n  "},"event_buffer_new":{"version":"(PECL libevent >= 0.0.1)","shortdesc":"Create new buffered event","syntax":"\n   resource <b>event_buffer_new<\/b>\n    ( resource $stream\n   , mixed $readcb\n   , mixed $writecb\n   , mixed $errorcb\n   [, mixed $arg\n  ] )","desc":"\n   Libevent provides an abstraction layer on top of the regular event API.\n   Using buffered event you don't need to deal with the I\/O manually, instead\n   it provides input and output buffers that get filled and drained\n   automatically.\n  "},"event_buffer_priority_set":{"version":"(PECL libevent >= 0.0.1)","shortdesc":"Assign a priority to a buffered event","syntax":"\n   bool <b>event_buffer_priority_set<\/b>\n    ( resource $bevent\n   , int $priority\n   )","desc":"\n   Assign a priority to the bevent.\n  "},"event_buffer_read":{"version":"(PECL libevent >= 0.0.1)","shortdesc":"Read data from a buffered event","syntax":"\n   string <b>event_buffer_read<\/b>\n    ( resource $bevent\n   , int $data_size\n   )","desc":"\n   Reads data from the input buffer of the buffered event.\n  "},"event_buffer_set_callback":{"version":"(PECL libevent >= 0.0.4)","shortdesc":"Set or reset callbacks for a buffered event","syntax":"\n   bool <b>event_buffer_set_callback<\/b>\n    ( resource $event\n   , mixed $readcb\n   , mixed $writecb\n   , mixed $errorcb\n   [, mixed $arg\n  ] )","desc":"\n   Sets or changes existing callbacks for the buffered event.\n  "},"event_buffer_timeout_set":{"version":"(PECL libevent >= 0.0.1)","shortdesc":"Set read and write timeouts for a buffered event","syntax":"\n   void <b>event_buffer_timeout_set<\/b>\n    ( resource $bevent\n   , int $read_timeout\n   , int $write_timeout\n   )","desc":"\n   Sets the read and write timeouts for the specified buffered event.\n  "},"event_buffer_watermark_set":{"version":"(PECL libevent >= 0.0.1)","shortdesc":"Set the watermarks for read and write events","syntax":"\n   void <b>event_buffer_watermark_set<\/b>\n    ( resource $bevent\n   , int $events\n   , int $lowmark\n   , int $highmark\n   )","desc":"\n   Sets the watermarks for read and write events. Libevent does not invoke\n   read callback unless there is at least lowmark bytes\n   in the input buffer; if the read buffer is beyond the highmark, \n   reading is stopped. On output, the write callback is invoked whenever the\n   buffered data falls below the lowmark. \n  "},"event_buffer_write":{"version":"(PECL libevent >= 0.0.1)","shortdesc":"Write data to a buffered event","syntax":"\n   bool <b>event_buffer_write<\/b>\n    ( resource $bevent\n   , string $data\n   [, int $data_size = -1\n  ] )","desc":"\n   Writes data to the specified buffered event. The data is appended to the\n   output buffer and written to the descriptor when it becomes available for\n   writing.\n  "},"event_del":{"version":"(PECL libevent >= 0.0.1)","shortdesc":"Remove an event from the set of monitored events","syntax":"\n   bool <b>event_del<\/b>\n    ( resource $event\n   )","desc":"\n   Cancels the event.\n  "},"event_free":{"version":"(PECL libevent >= 0.0.1)","shortdesc":"Free event resource","syntax":"\n   void <b>event_free<\/b>\n    ( resource $event\n   )","desc":"\n   Frees previously created event resource.\n  "},"event_new":{"version":"(PECL libevent >= 0.0.1)","shortdesc":"Create new event","syntax":"\n   resource <b>event_new<\/b>\n    ( void\n   )","desc":"\n   Creates and returns a new event resource.\n  "},"event_set":{"version":"(PECL libevent >= 0.0.1)","shortdesc":"Prepare an event","syntax":"\n   bool <b>event_set<\/b>\n    ( resource $event\n   , mixed $fd\n   , int $events\n   , mixed $callback\n   [, mixed $arg\n  ] )","desc":"\n   Prepares the event to be used in  event_add(). The event\n   is prepared to call the function specified by the callback \n   on the events specified in parameter events, which\n   is a set of the following flags: EV_TIMEOUT, \n   EV_SIGNAL, EV_READ, \n   EV_WRITE and EV_PERSIST.\n  "},"exec":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0418\u0441\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0432\u043d\u0435\u0448\u043d\u044e\u044e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443","syntax":"\n   string <b>exec<\/b>\n    ( string $command\n   [, array &$output\n   [, int &$return_var\n  ]] )","desc":"\n    exec() \u0438\u0441\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u0443\n   command.\n  "},"exif_imagetype":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0442\u0438\u043f\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f","syntax":"\n    int <b>exif_imagetype<\/b>\n     ( string $filename\n    )","desc":"\n     exif_imagetype() \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0435 \u0431\u0430\u0439\u0442\u044b \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438\n    \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0438\u0445 \u0441\u0438\u0433\u043d\u0430\u0442\u0443\u0440\u0443.\n   "},"exif_read_data":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n   \u0427\u0438\u0442\u0430\u0435\u0442 EXIF-\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 JPEG \n   \u0438 TIFF \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439\n  ","syntax":"\n   array <b>exif_read_data<\/b>\n    ( string $filename\n   [, string $sections = NULL\n   [, bool $arrays = false\n   [, bool $thumbnail = false\n  ]]] )","desc":"\n    exif_read_data() \u0447\u0438\u0442\u0430\u0435\u0442 EXIF-\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438\n   JPEG \u0438 TIFF\u0444\u0430\u0439\u043b\u043e\u0432. \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u043c\u043e\u0436\u043d\u043e\n   \u0447\u0438\u0442\u0430\u0442\u044c \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0435, \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c\u044b\u0435 \u0446\u0438\u0444\u0440\u043e\u0432\u044b\u043c\u0438 \u0444\u043e\u0442\u043e\u0430\u043f\u043f\u0430\u0440\u0430\u0442\u0430\u043c\u0438.\n  "},"exif_tagname":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043c\u0435\u043d\u0438 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 \u043f\u043e \u0435\u0433\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0443","syntax":"\n   string <b>exif_tagname<\/b>     \n    ( int $index\n   )","desc":""},"exif_thumbnail":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0439 \u044d\u0441\u043a\u0438\u0437 TIFF \u0438\u043b\u0438 JPEG \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f","syntax":"\n   string <b>exif_thumbnail<\/b>\n    ( string $filename\n   [, int &$width\n   [, int &$height\n   [, int &$imagetype\n  ]]] )","desc":"\n    exif_thumbnail() \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0439 \u044d\u0441\u043a\u0438\u0437 \u0438\u0437\n   TIFF \u0438\u043b\u0438 JPEG \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f. \n  "},"exit":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0438 \u043f\u0440\u0435\u043a\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0441\u043a\u0440\u0438\u043f\u0442\u0430","syntax":"\n   void <b>exit<\/b>\n    ([ string $status\n  ] )\n\n   void <b>exit<\/b>\n    ( int $status\n   )\n","desc":"\n   \u041f\u0440\u0435\u043a\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u0430.\n   \u0424\u0443\u043d\u043a\u0446\u0438\u0438 \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f\n   \u0438 \u0434\u0435\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u044b \u043e\u0431\u044a\u0435\u043a\u0442\u0430\n   \u0431\u0443\u0434\u0443\u0442 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u044b \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u0431\u044b\u043b\u0430 \u0432\u044b\u0437\u0432\u0430\u043d\u0430 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f exit.\n  "},"exp":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0447\u0438\u0441\u043b\u043e e \u0432 \u0441\u0442\u0435\u043f\u0435\u043d\u0438","syntax":"\n    float <b>exp<\/b>\n     ( float $arg\n    )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 e \u0432 \u0441\u0442\u0435\u043f\u0435\u043d\u0438 arg.\n  "},"expect_expectl":{"version":"(PECL expect >= 0.1.0)","shortdesc":"Waits until the output from a process matches one\n  of the patterns, a specified time period has passed, or an EOF is seen\n  ","syntax":"\n   int <b>expect_expectl<\/b>\n    ( resource $expect\n   , array $cases\n   [, array &$match\n  ] )","desc":"\n   Waits until the output from a process matches one of the patterns,\n   a specified time period has passed, or an EOF is seen.\n  "},"expect_popen":{"version":"(PECL expect >= 0.1.0)","shortdesc":"Execute command via Bourne shell, and open the PTY stream to\n  the process","syntax":"\n   resource <b>expect_popen<\/b>\n    ( string $command\n   )","desc":"\n   Execute command via Bourne shell, and open the PTY stream to the process.\n  "},"explode":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0420\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044f","syntax":"\n   array <b>explode<\/b>\n    ( string $delimiter\n   , string $string\n   [, int $limit\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u0442\u0440\u043e\u043a, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0445 \u0440\u0430\u0437\u0431\u0438\u0435\u043d\u0438\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0438\n   string \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c\n   delimiter \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044f.\n  "},"expm1":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 exp(number) - 1, \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u0430\u043d\u043d\u043e\u0435 \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0447\u0442\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\n   \u0442\u043e\u0447\u0435\u043d, \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 number \u0431\u043b\u0438\u0437\u043e\u043a \u043a \u043d\u0443\u043b\u044e.\n  ","syntax":"\n   float <b>expm1<\/b>\n    ( float $arg\n   )","desc":"\n    expm1() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u044d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f\n   'exp(arg) -  1', \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u0430\u043d\u043d\u044b\u0439 \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0447\u0442\u043e\n   \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0442\u043e\u0447\u0435\u043d, \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 arg \u0431\u043b\u0438\u0437\u043a\u043e \u043a \u043d\u0443\u043b\u044e,\n   \u0442\u043e\u0433\u0434\u0430 \u043a\u0430\u043a 'exp (arg) - 1' \u0431\u0443\u0434\u0435\u0442 \u043d\u0435\u0442\u043e\u0447\u043d\u043e\n   \u0438\u0437-\u0437\u0430 \u0432\u044b\u0447\u0438\u0442\u0430\u043d\u0438\u044f \u0434\u0432\u0443\u0445 \u043f\u043e\u0447\u0442\u0438 \u0440\u0430\u0432\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b.\n  "},"extension_loaded":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435, \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043e \u043b\u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435\n  ","syntax":"\n   bool <b>extension_loaded<\/b>\n    ( string $name\n   )","desc":"\n   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043e \u043b\u0438 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0435 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435.\n  "},"extract":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0418\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0432 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432","syntax":"\n   int <b>extract<\/b>\n    ( array &$var_array\n   [, int $<b>extract<\/b>_type = EXTR_OVERWRITE\n   [, string $prefix = NULL\n  ]] )","desc":"\n   \u0418\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0432 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.\n  "},"ezmlm_hash":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0445\u0435\u0448-\u0441\u0443\u043c\u043c\u0443, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0443\u044e \u0434\u043b\u044f EZMLM","syntax":"\n   int <b>ezmlm_hash<\/b>\n    ( string $addr\n   )","desc":""},"fam_cancel_monitor":{"version":"(PHP 5 <= 5.0.5)","shortdesc":"Terminate monitoring","syntax":"\n   bool <b>fam_cancel_monitor<\/b>\n    ( resource $fam\n   , resource $fam_monitor\n   )","desc":"\n   Terminates monitoring on a resource.\n  "},"fam_close":{"version":"(PHP 5 <= 5.0.5)","shortdesc":"Close FAM connection","syntax":"\n   void <b>fam_close<\/b>\n    ( resource $fam\n   )","desc":"\n   Closes a connection to the FAM service.\n  "},"fam_monitor_collection":{"version":"(PHP 5 <= 5.0.5)","shortdesc":"Monitor a collection of files in a directory for changes","syntax":"\n   resource <b>fam_monitor_collection<\/b>\n    ( resource $fam\n   , string $dirname\n   , int $depth\n   , string $mask\n   )","desc":"\n   Requests monitoring for a collection of files within a directory. \n  "},"fam_monitor_directory":{"version":"(PHP 5 <= 5.0.5)","shortdesc":"Monitor a directory for changes","syntax":"\n   resource <b>fam_monitor_directory<\/b>\n    ( resource $fam\n   , string $dirname\n   )","desc":"\n   Requests monitoring for a directory and all contained files.\n  "},"fam_monitor_file":{"version":"(PHP 5 <= 5.0.5)","shortdesc":"Monitor a regular file for changes","syntax":"\n   resource <b>fam_monitor_file<\/b>\n    ( resource $fam\n   , string $filename\n   )","desc":"\n   Requests monitoring for a single file. A FAM event will be generated\n   whenever the file status changes (i.e. the result of function \n    stat() on that file).\n  "},"fam_next_event":{"version":"(PHP 5 <= 5.0.5)","shortdesc":"Get next pending FAM event","syntax":"\n   array <b>fam_next_event<\/b>\n    ( resource $fam\n   )","desc":"\n   Returns the next pending FAM event.\n  "},"fam_open":{"version":"(PHP 5 <= 5.0.5)","shortdesc":"Open connection to FAM daemon","syntax":"\n   resource <b>fam_open<\/b>\n    ([ string $appname\n  ] )","desc":"\n   Opens a connection to the FAM service daemon.\n  "},"fam_pending":{"version":"(PHP 5 <= 5.0.5)","shortdesc":"Check for pending FAM events","syntax":"\n   int <b>fam_pending<\/b>\n    ( resource $fam\n   )","desc":"\n   Checks for pending FAM events.\n  "},"fam_resume_monitor":{"version":"(PHP 5 <= 5.0.5)","shortdesc":"Resume suspended monitoring","syntax":"\n   bool <b>fam_resume_monitor<\/b>\n    ( resource $fam\n   , resource $fam_monitor\n   )","desc":"\n   Resumes monitoring of a resource previously suspended using\n    fam_suspend_monitor().\n  "},"fam_suspend_monitor":{"version":"(PHP 5 <= 5.0.5)","shortdesc":"Temporarily suspend monitoring","syntax":"\n   bool <b>fam_suspend_monitor<\/b>\n    ( resource $fam\n   , resource $fam_monitor\n   )","desc":"\n    fam_suspend_monitor() temporarily suspend monitoring\n   of a resource.\n  "},"fann_cascadetrain_on_data":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Trains on an entire dataset, for a period of time using the Cascade2 training algorithm","syntax":"\n   bool <b>fann_cascadetrain_on_data<\/b>\n    ( resource $ann\n   , resource $data\n   , int $max_neurons\n   , int $neurons_between_reports\n   , float $desired_error\n   )","desc":"\n   The cascade output change fraction is a number between 0 and 1 determining how large a fraction\n   the  fann_get_MSE() value should change within  fann_get_cascade_output_stagnation_epochs()\n   during training of the output connections, in order for the training not to stagnate.  If the training stagnates,\n   the training of the output connections will be ended and new candidates will be prepared.\n  "},"fann_cascadetrain_on_file":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Trains on an entire dataset read from file, for a period of time using the Cascade2 training algorithm.","syntax":"\n   bool <b>fann_cascadetrain_on_file<\/b>\n    ( resource $ann\n   , string $filename\n   , int $max_neurons\n   , int $neurons_between_reports\n   , float $desired_error\n   )","desc":"\n   Does the same as  fann_cascadetrain_on_data(), but reads the training data directly from a file.\n  "},"fann_clear_scaling_params":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Clears scaling parameters","syntax":"\n   bool <b>fann_clear_scaling_params<\/b>\n    ( resource $ann\n   )","desc":"\n   Clears scaling parameters.\n  "},"fann_copy":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Creates a copy of a fann structure","syntax":"\n   resource <b>fann_copy<\/b>\n    ( resource $ann\n   )","desc":"\n   Creates a copy of a fann structure.\n  "},"fann_create_from_file":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Constructs a backpropagation neural network from a configuration file","syntax":"\n   resource <b>fann_create_from_file<\/b>\n    ( string $configuration_file\n   )","desc":"\n   Constructs a backpropagation neural network from a configuration file, which have been saved by  fann_save().\n  "},"fann_create_shortcut_array":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Creates a standard backpropagation neural network which is not fully connectected and has shortcut connections","syntax":"\n   resource <b>fann_create_shortcut_array<\/b>\n    ( int $num_layers\n   , array $layers\n   )","desc":"\n   Creates a standard backpropagation neural network which is not fully connectected and has shortcut connections using an array of layers sizes.\n  "},"fann_create_shortcut":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Creates a standard backpropagation neural network which is not fully connectected and has shortcut connections","syntax":"\n   reference <b>fann_create_shortcut<\/b>\n    ( int $num_layers\n   , int $num_neurons1\n   , int $num_neurons2\n   [, int $...\n  ] )","desc":"\n   Creates a standard backpropagation neural network, which is not fully connected and which also has shortcut connections.\n  "},"fann_create_sparse_array":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Creates a standard backpropagation neural network, which is not fully connected using an array of layer sizes","syntax":"\n   ReturnType <b>fann_create_sparse_array<\/b>\n    ( float $connection_rate\n   , int $num_layers\n   , array $layers\n   )","desc":"\n   Creates a standard backpropagation neural network, which is not fully connected using an array of layer sizes.\n  "},"fann_create_sparse":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Creates a standard backpropagation neural network, which is not fully connected","syntax":"\n   ReturnType <b>fann_create_sparse<\/b>\n    ( float $connection_rate\n   , int $num_layers\n   , int $num_neurons1\n   , int $num_neurons2\n   [, int $...\n  ] )","desc":"\n   Creates a standard backpropagation neural network, which is not fully connected.\n  "},"fann_create_standard_array":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Creates a standard fully connected backpropagation neural network using an array of layer sizes","syntax":"\n   resource <b>fann_create_standard_array<\/b>\n    ( int $num_layers\n   , array $layers\n   )","desc":"\n   Creates a standard fully connected backpropagation neural network.\n  "},"fann_create_standard":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Creates a standard fully connected backpropagation neural network","syntax":"\n   resource <b>fann_create_standard<\/b>\n    ( int $num_layers\n   , int $num_neurons1\n   , int $num_neurons2\n   [, int $...\n  ] )","desc":"\n   Creates a standard fully connected backpropagation neural network.\n  "},"fann_create_train_from_callback":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Creates the training data struct from a user supplied function","syntax":"\n   resource <b>fann_create_train_from_callback<\/b>\n    ( int $num_data\n   , int $num_input\n   , int $num_output\n   , collable $user_function\n   )","desc":"\n   Creates the training data struct from a user supplied function. As the training data are numerable (data 1, data 2...),\n   the user must write a function that receives the number of the training data set (input, output) and returns the set.\n  "},"fann_create_train":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Creates an empty training data struct","syntax":"\n   resource <b>fann_create_train<\/b>\n    ( int $num_data\n   , int $num_input\n   , int $num_output\n   )","desc":"\n   Creates an empty training data struct.\n  "},"fann_descale_input":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Scale data in input vector after get it from ann based on previously calculated parameters","syntax":"\n   bool <b>fann_descale_input<\/b>\n    ( resource $ann\n   , array $input_vector\n   )","desc":"\n   Scale data in input vector after get it from ann based on previously calculated parameters.\n  "},"fann_descale_output":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Scale data in output vector after get it from ann based on previously calculated parameters","syntax":"\n   bool <b>fann_descale_output<\/b>\n    ( resource $ann\n   , array $output_vector\n   )","desc":"\n   Scale data in output vector after get it from ann based on previously calculated parameters.\n  "},"fann_descale_train":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Descale input and output data based on previously calculated parameters","syntax":"\n   bool <b>fann_descale_train<\/b>\n    ( resource $ann\n   , resource $train_data\n   )","desc":"\n   Descale input and output data based on previously calculated parameters.\n  "},"fann_destroy_train":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Destructs the training data","syntax":"\n   bool <b>fann_destroy_train<\/b>\n    ( resource $train_data\n   )","desc":"\n   Destructs the training data\n  "},"fann_destroy":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Destroys the entire network and properly freeing all the associated memory","syntax":"\n   bool <b>fann_destroy<\/b>\n    ( resource $ann\n   )","desc":"\n   Destroys the entire network and properly freeing all the associated memory.\n  "},"fann_duplicate_train_data":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns an exact copy of a fann train data","syntax":"\n   resource <b>fann_duplicate_train_data<\/b>\n    ( resource $data\n   )","desc":"\n   Returns an exact copy of a fann train data resource.\n  "},"fann_get_activation_function":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the activation function","syntax":"\n   int <b>fann_get_activation_function<\/b>\n    ( resource $ann\n   , int $layer\n   , int $neuron\n   )","desc":"\n   Get the activation function for neuron number neuron in layer number\n   layer, counting the input layer as layer 0.\n  "},"fann_get_activation_steepness":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the activation steepness for supplied neuron and layer number","syntax":"\n   float <b>fann_get_activation_steepness<\/b>\n    ( resource $ann\n   , int $layer\n   , int $neuron\n   )","desc":"\n   Get the activation steepness for neuron number neuron in layer number\n   layer, counting the input layer as layer 0.\n  "},"fann_get_bias_array":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Get the number of bias in each layer in the network","syntax":"\n   array <b>fann_get_bias_array<\/b>\n    ( resource $ann\n   )","desc":"\n   Get the number of bias in each layer in the network.\n  "},"fann_get_bit_fail_limit":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the bit fail limit used during training","syntax":"\n   float <b>fann_get_bit_fail_limit<\/b>\n    ( resource $ann\n   )","desc":"\n   Returns the bit fail limit used during training.\n  "},"fann_get_bit_fail":{"version":"(PECL fann >= 1.0.0)","shortdesc":"The number of fail bits","syntax":"\n   int <b>fann_get_bit_fail<\/b>\n    ( resource $ann\n   )","desc":"\n   The number of fail bits; means the number of output neurons which differ more than the bit fail limit\n   (see  fann_get_bit_fail_limit(),  fann_set_bit_fail_limit()).\n   The bits are counted in all of the training data, so this number can be higher than the number of training data.\n  "},"fann_get_cascade_activation_functions_count":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the number of cascade activation functions","syntax":"\n   int <b>fann_get_cascade_activation_functions_count<\/b>\n    ( resource $ann\n   )","desc":"\n   The number of activation functions in the  fann_get_cascade_activation_functions() array.\n  "},"fann_get_cascade_activation_functions":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the cascade activation functions","syntax":"\n   array <b>fann_get_cascade_activation_functions<\/b>\n    ( resource $ann\n   )","desc":"\n   The cascade activation functions array is an array of the different activation functions used by the candidates\n  "},"fann_get_cascade_activation_steepnesses_count":{"version":"(PECL fann >= 1.0.0)","shortdesc":"The number of activation steepnesses","syntax":"\n   int <b>fann_get_cascade_activation_steepnesses_count<\/b>\n    ( resource $ann\n   )","desc":"\n   The number of activation steepnesses in the  fann_get_cascade_activation_functions() array.\n  "},"fann_get_cascade_activation_steepnesses":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the cascade activation steepnesses","syntax":"\n   array <b>fann_get_cascade_activation_steepnesses<\/b>\n    ( resource $ann\n   )","desc":"\n   The cascade activation steepnesses array is an array of the different activation functions used by the candidates.\n  "},"fann_get_cascade_candidate_change_fraction":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the cascade candidate change fraction","syntax":"\n   float <b>fann_get_cascade_candidate_change_fraction<\/b>\n    ( resource $ann\n   )","desc":"\n   The cascade candidate change fraction is a number between 0 and 1 determining how large a fraction the  fann_get_MSE()\n   value should change within  fann_get_cascade_candidate_stagnation_epochs() during training of the candidate neurons,\n   in order for the training not to stagnate. If the training stagnates, the training of the candidate neurons will be ended\n   and the best candidate will be selected.\n  "},"fann_get_cascade_candidate_limit":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Return the candidate limit","syntax":"\n   float <b>fann_get_cascade_candidate_limit<\/b>\n    ( resource $ann\n   )","desc":"\n   The candidate limit is a limit for how much the candidate neuron may be trained. The limit is a limit\n   on the proportion between the MSE and candidate score.\n  "},"fann_get_cascade_candidate_stagnation_epochs":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the number of cascade candidate stagnation epochs","syntax":"\n   float <b>fann_get_cascade_candidate_stagnation_epochs<\/b>\n    ( resource $ann\n   )","desc":"\n   The number of cascade candidate stagnation epochs determines the number of epochs training is allowed to continue\n   without changing the MSE by a fraction of  fann_get_cascade_candidate_change_fraction().\n  "},"fann_get_cascade_max_cand_epochs":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the maximum candidate epochs","syntax":"\n   int <b>fann_get_cascade_max_cand_epochs<\/b>\n    ( resource $ann\n   )","desc":"\n   The maximum candidate epochs determines the maximum number of epochs the input connections\n   to the candidates may be trained before adding a new candidate neuron.\n  "},"fann_get_cascade_max_out_epochs":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the maximum out epochs","syntax":"\n   int <b>fann_get_cascade_max_out_epochs<\/b>\n    ( resource $ann\n   )","desc":"\n   The maximum out epochs determines the maximum number of epochs the output connections may be\n   trained after adding a new candidate neuron.\n  "},"fann_get_cascade_min_cand_epochs":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the minimum candidate epochs","syntax":"\n   int <b>fann_get_cascade_min_cand_epochs<\/b>\n    ( resource $ann\n   )","desc":"\n   The minimum candidate epochs determines the minimum number of epochs the input connections\n   to the candidates may be trained before adding a new candidate neuron.\n  "},"fann_get_cascade_min_out_epochs":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the minimum out epochs","syntax":"\n   int <b>fann_get_cascade_min_out_epochs<\/b>\n    ( resource $ann\n   )","desc":"\n   The minimum out epochs determines the minimum number of epochs the output connections must be trained\n   after adding a new candidate neuron.\n  "},"fann_get_cascade_num_candidate_groups":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the number of candidate groups","syntax":"\n   int <b>fann_get_cascade_num_candidate_groups<\/b>\n    ( resource $ann\n   )","desc":"\n   The number of candidate groups is the number of groups of identical candidates which will be used during training.\n  "},"fann_get_cascade_num_candidates":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the number of candidates used during training","syntax":"\n   int <b>fann_get_cascade_num_candidates<\/b>\n    ( resource $ann\n   )","desc":"\n   The number of candidates used during training (calculated by multiplying\n    fann_get_cascade_activation_functions_count(),\n    fann_get_cascade_activation_steepnesses_count() and\n    fann_get_cascade_num_candidate_groups()).\n  "},"fann_get_cascade_output_change_fraction":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the cascade output change fraction","syntax":"\n   float <b>fann_get_cascade_output_change_fraction<\/b>\n    ( resource $ann\n   )","desc":"\n   The cascade output change fraction is a number between 0 and 1 determining how large a fraction of the  fann_get_MSE()\n   value should change within  fann_get_cascade_output_stagnation_epochs() during training of the output connections,\n   in order for the training not to stagnate. If the training stagnates, the training of the output connections\n   will be ended and new candidates will be prepared.\n  "},"fann_get_cascade_output_stagnation_epochs":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the number of cascade output stagnation epochs","syntax":"\n   int <b>fann_get_cascade_output_stagnation_epochs<\/b>\n    ( resource $ann\n   )","desc":"\n   The number of cascade output stagnation epochs determines the number of epochs training is allowed to continue\n   without changing the MSE by a fraction of  fann_get_cascade_output_change_fraction().\n  "},"fann_get_cascade_weight_multiplier":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the weight multiplier","syntax":"\n   float <b>fann_get_cascade_weight_multiplier<\/b>\n    ( resource $ann\n   )","desc":"\n   The weight multiplier is a parameter which is used to multiply the weights from the candidate neuron before adding\n   the neuron to the neural network. This parameter is usually between 0 and 1, and is used to make the training a bit less aggressive.\n  "},"fann_get_connection_array":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Get connections in the network","syntax":"\n   array <b>fann_get_connection_array<\/b>\n    ( resource $ann\n   )","desc":"\n   Get connections in the network.\n  "},"fann_get_connection_rate":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Get the connection rate used when the network was created","syntax":"\n   float <b>fann_get_connection_rate<\/b>\n    ( resource $ann\n   )","desc":"\n   Get the connection rate used when the network was created.\n  "},"fann_get_errno":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the last error number","syntax":"\n   int <b>fann_get_errno<\/b>\n    ( resource $errdat\n   )","desc":"\n   Returns the last error number.\n  "},"fann_get_errstr":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the last errstr","syntax":"\n   string <b>fann_get_errstr<\/b>\n    ( resource $errdat\n   )","desc":"\n   Returns the last errstr.\n  "},"fann_get_layer_array":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Get the number of neurons in each layer in the network","syntax":"\n   array <b>fann_get_layer_array<\/b>\n    ( resource $ann\n   )","desc":"\n   Get the number of neurons in each layer in the neural network.\n  "},"fann_get_learning_momentum":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the learning momentum","syntax":"\n   float <b>fann_get_learning_momentum<\/b>\n    ( resource $ann\n   )","desc":"\n   The learning momentum can be used to speed up FANN_TRAIN_INCREMENTAL training.\n   A too high momentum will however not benefit training. Setting momentum to 0 will be the same as\n   not using the momentum parameter. The recommended value of this parameter is between 0.0 and 1.0.\n  "},"fann_get_learning_rate":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the learning rate","syntax":"\n   float <b>fann_get_learning_rate<\/b>\n    ( resource $ann\n   )","desc":"\n   The learning rate is used to determine how aggressive training should be for some of the training algorithms\n   (FANN_TRAIN_INCREMENTAL, FANN_TRAIN_BATCH, FANN_TRAIN_QUICKPROP).\n   Do however note that it is not used in FANN_TRAIN_RPROP.\n  "},"fann_get_MSE":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Reads the mean square error from the network","syntax":"\n   float <b>fann_get_MSE<\/b>\n    ( resource $ann\n   )","desc":"\n   Reads the mean square error from the network.\n  "},"fann_get_network_type":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Get the type of neural network it was created as","syntax":"\n   int <b>fann_get_network_type<\/b>\n    ( resource $ann\n   )","desc":"\n   Get the type of neural network it was created as.\n  "},"fann_get_num_input":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Get the number of input neurons","syntax":"\n   int <b>fann_get_num_input<\/b>\n    ( resource $ann\n   )","desc":"\n   Get the number of input neurons.\n  "},"fann_get_num_layers":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Get the number of layers in the neural network","syntax":"\n   int <b>fann_get_num_layers<\/b>\n    ( resource $ann\n   )","desc":"\n   Get the number of layers in the neural network.\n  "},"fann_get_num_output":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Get the number of output neurons","syntax":"\n   int <b>fann_get_num_output<\/b>\n    ( resource $ann\n   )","desc":"\n   Get the number of output neurons.\n  "},"fann_get_quickprop_decay":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the decay which is a factor that weights should decrease in each iteration during quickprop training","syntax":"\n   float <b>fann_get_quickprop_decay<\/b>\n    ( resource $ann\n   )","desc":"\n   The decay is a small negative valued number which is a factor that the weights should decrease in each iteration\n   during quickprop training. This is used to make sure that the weights do not become too high during training.\n  "},"fann_get_quickprop_mu":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the mu factor","syntax":"\n   float <b>fann_get_quickprop_mu<\/b>\n    ( resource $ann\n   )","desc":"\n   The mu factor is used to increase and decrease the step-size during quickprop training. The mu factor should always be above 1,\n   since it would otherwise decrease the step-size when it was suppose to increase it.\n  "},"fann_get_rprop_decrease_factor":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the increase factor used during RPROP training","syntax":"\n   float <b>fann_get_rprop_decrease_factor<\/b>\n    ( resource $ann\n   )","desc":"\n   The decrease factor is a value smaller than 1, which is used to decrease the step-size during RPROP training.\n  "},"fann_get_rprop_delta_max":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the maximum step-size","syntax":"\n   float <b>fann_get_rprop_delta_max<\/b>\n    ( resource $ann\n   )","desc":"\n   The maximum step-size is a positive number determining how large the maximum step-size may be.\n  "},"fann_get_rprop_delta_min":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the minimum step-size","syntax":"\n   float <b>fann_get_rprop_delta_min<\/b>\n    ( resource $ann\n   )","desc":"\n   The minimum step-size is a small positive number determining how small the minimum step-size may be.\n  "},"fann_get_rprop_delta_zero":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the initial step-size","syntax":"\n   ReturnType <b>fann_get_rprop_delta_zero<\/b>\n    ( resource $ann\n   )","desc":"\n   The initial step-size is a positive number determining the initial step size.\n  "},"fann_get_rprop_increase_factor":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the increase factor used during RPROP training","syntax":"\n   float <b>fann_get_rprop_increase_factor<\/b>\n    ( resource $ann\n   )","desc":"\n   The increase factor is a value larger than 1, which is used to increase the step-size during RPROP training.\n  "},"fann_get_sarprop_step_error_shift":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the sarprop step error shift","syntax":"\n   float <b>fann_get_sarprop_step_error_shift<\/b>\n    ( resource $ann\n   )","desc":"\n   Returns the sarprop step error shift.\n  "},"fann_get_sarprop_step_error_threshold_factor":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the sarprop step error threshold factor","syntax":"\n   float <b>fann_get_sarprop_step_error_threshold_factor<\/b>\n    ( resource $ann\n   )","desc":"\n   The sarprop step error threshold factor.\n  "},"fann_get_sarprop_temperature":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the sarprop temperature","syntax":"\n   float <b>fann_get_sarprop_temperature<\/b>\n    ( resource $ann\n   )","desc":"\n   Returns the sarprop temperature.\n  "},"fann_get_sarprop_weight_decay_shift":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the sarprop weight decay shift","syntax":"\n   float <b>fann_get_sarprop_weight_decay_shift<\/b>\n    ( resource $ann\n   )","desc":"\n   The sarprop weight decay shift.\n  "},"fann_get_total_connections":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Get the total number of connections in the entire network","syntax":"\n   int <b>fann_get_total_connections<\/b>\n    ( resource $ann\n   )","desc":"\n   Get the total number of connections in the entire network.\n  "},"fann_get_total_neurons":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Get the total number of neurons in the entire network","syntax":"\n   int <b>fann_get_total_neurons<\/b>\n    ( resource $ann\n   )","desc":"\n   Get the total number of neurons in the entire network. This number does also include the bias neurons,\n   so a 2-4-2 network has 2+4+2 +2(bias) = 10 neurons.\n  "},"fann_get_train_error_function":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the error function used during training","syntax":"\n   int <b>fann_get_train_error_function<\/b>\n    ( resource $ann\n   )","desc":"\n   Returns the error function used during training.\n  "},"fann_get_train_stop_function":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the the stop function used during training","syntax":"\n   int <b>fann_get_train_stop_function<\/b>\n    ( resource $ann\n   )","desc":"\n   Returns the the stop function used during training.\n  "},"fann_get_training_algorithm":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the training algorithm","syntax":"\n   int <b>fann_get_training_algorithm<\/b>\n    ( resource $ann\n   )","desc":"\n   Returns the training algorithm. This training algorithm is used by  fann_train_on_data() and associated functions.\n  "},"fann_init_weights":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Initialize the weights using Widrow + Nguyen\u2019s algorithm","syntax":"\n   bool <b>fann_init_weights<\/b>\n    ( resource $ann\n   , resource $train_data\n   )","desc":"\n   Initialize the weights using Widrow + Nguyen\u2019s algorithm.\n  "},"fann_length_train_data":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the number of training patterns in the train data","syntax":"\n   int <b>fann_length_train_data<\/b>\n    ( resource $data\n   )","desc":"\n   Returns the number of training patterns in the train data resource.\n  "},"fann_merge_train_data":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Merges the train data","syntax":"\n   resource <b>fann_merge_train_data<\/b>\n    ( resource $data1\n   , resource $data2\n   )","desc":"\n   Merges the data from data1 and data2 into a new train data resource.\n  "},"fann_num_input_train_data":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the number of inputs in each of the training patterns in the train data","syntax":"\n   int <b>fann_num_input_train_data<\/b>\n    ( resource $data\n   )","desc":"\n   Returns the number of inputs in each of the training patterns in the train data resource.\n  "},"fann_num_output_train_data":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns the number of outputs in each of the training patterns in the train data","syntax":"\n   int <b>fann_num_output_train_data<\/b>\n    ( resource $data\n   )","desc":"\n   Returns the number of outputs in each of the training patterns in the train data resource.\n  "},"fann_print_error":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Prints the error string","syntax":"\n   void <b>fann_print_error<\/b>\n    ( string $errdat\n   )","desc":"\n   Prints the error string.\n  "},"fann_randomize_weights":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Give each connection a random weight between min_weight and max_weight","syntax":"\n   bool <b>fann_randomize_weights<\/b>\n    ( resource $ann\n   , float $min_weight\n   , float $max_weight\n   )","desc":"\n   Give each connection a random weight between min_weight and max_weight\n  "},"fann_read_train_from_file":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Reads a file that stores training data","syntax":"\n   resource <b>fann_read_train_from_file<\/b>\n    ( string $filename\n   )","desc":"\n   Reads a file that stores training data.\n  "},"fann_reset_errno":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Resets the last error number","syntax":"\n   void <b>fann_reset_errno<\/b>\n    ( resource $errdat\n   )","desc":"\n   Resets the last error number.\n  "},"fann_reset_errstr":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Resets the last error string","syntax":"\n   void <b>fann_reset_errstr<\/b>\n    ( resource $errdat\n   )","desc":"\n   Resets the last error string.\n  "},"fann_reset_MSE":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Resets the mean square error from the network","syntax":"\n   bool <b>fann_reset_MSE<\/b>\n    ( string $ann\n   )","desc":"\n   Resets the mean square error from the network.\n  "},"fann_run":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Will run input through the neural network","syntax":"\n   array <b>fann_run<\/b>\n    ( resource $ann\n   , array $input\n   )","desc":"\n   Will run input through the neural network, returning an array of outputs, the number of which being equal\n   to the number of neurons in the output layer.\n  "},"fann_save_train":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Save the training structure to a file","syntax":"\n   bool <b>fann_save_train<\/b>\n    ( resource $data\n   , string $file_name\n   )","desc":"\n   Save the training data to a file, with the format as specified in  fann_read_train_from_file().\n  "},"fann_save":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Saves the entire network to a configuration file","syntax":"\n   bool <b>fann_save<\/b>\n    ( resource $ann\n   , string $configuration_file\n   )","desc":"\n   Saves the entire network to a configuration file.\n  "},"fann_scale_input_train_data":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Scales the inputs in the training data to the specified range","syntax":"\n   bool <b>fann_scale_input_train_data<\/b>\n    ( resource $train_data\n   , float $new_min\n   , float $new_max\n   )","desc":"\n   Scales the inputs in the training data to the specified range.\n  "},"fann_scale_input":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Scale data in input vector before feed it to ann based on previously calculated parameters","syntax":"\n   bool <b>fann_scale_input<\/b>\n    ( resource $ann\n   , array $input_vector\n   )","desc":"\n   Scale data in input vector before feed it to ann based on previously calculated parameters.\n  "},"fann_scale_output_train_data":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Scales the outputs in the training data to the specified range","syntax":"\n   bool <b>fann_scale_output_train_data<\/b>\n    ( resource $train_data\n   , float $new_min\n   , float $new_max\n   )","desc":"\n   Scales the outputs in the training data to the specified range.\n  "},"fann_scale_output":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Scale data in output vector before feed it to ann based on previously calculated parameters","syntax":"\n   bool <b>fann_scale_output<\/b>\n    ( resource $ann\n   , array $output_vector\n   )","desc":"\n   Scale data in output vector before feed it to ann based on previously calculated parameters.\n  "},"fann_scale_train_data":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Scales the inputs and outputs in the training data to the specified range","syntax":"\n   bool <b>fann_scale_train_data<\/b>\n    ( resource $train_data\n   , float $new_min\n   , float $new_max\n   )","desc":"\n   Scales the inputs and outputs in the training data to the specified range.\n  "},"fann_scale_train":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Scale input and output data based on previously calculated parameters","syntax":"\n   bool <b>fann_scale_train<\/b>\n    ( resource $ann\n   , resource $train_data\n   )","desc":"\n   Scale input and output data based on previously calculated parameters.\n  "},"fann_set_activation_function_hidden":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the activation function for all of the hidden layers","syntax":"\n   bool <b>fann_set_activation_function_hidden<\/b>\n    ( resource $ann\n   , int $activation_function\n   )","desc":"\n   Sets the activation function for all of the hidden layers.\n  "},"fann_set_activation_function_layer":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the activation function for all the neurons in the supplied layer.","syntax":"\n   bool <b>fann_set_activation_function_layer<\/b>\n    ( resource $ann\n   , int $activation_function\n   , int $layer\n   )","desc":"\n   Set the activation function for all the neurons in the layer number layer, counting the input layer as layer 0.\n  "},"fann_set_activation_function_output":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the activation function for the output layer","syntax":"\n   bool <b>fann_set_activation_function_output<\/b>\n    ( resource $ann\n   , int $activation_function\n   )","desc":"\n   Sets the activation function for the output layer.\n  "},"fann_set_activation_function":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the activation function for supplied neuron and layer","syntax":"\n   bool <b>fann_set_activation_function<\/b>\n    ( resource $ann\n   , int $activation_function\n   , int $layer\n   , int $neuron\n   )","desc":"\n   Set the activation function for neuron number neuron in layer number\n   layer, counting the input layer as layer 0.\n  "},"fann_set_activation_steepness_hidden":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the steepness of the activation steepness for all neurons in the all hidden layers","syntax":"\n   bool <b>fann_set_activation_steepness_hidden<\/b>\n    ( resource $ann\n   , float $activation_steepness\n   )","desc":"\n   Sets the steepness of the activation steepness for all neurons in the all hidden layers.\n  "},"fann_set_activation_steepness_layer":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the activation steepness for all of the neurons in the supplied layer number","syntax":"\n   bool <b>fann_set_activation_steepness_layer<\/b>\n    ( resource $ann\n   , float $activation_steepness\n   , int $layer\n   )","desc":"\n   Set the activation steepness for all of the neurons in layer number layer,\n   counting the input layer as layer 0.\n  "},"fann_set_activation_steepness_output":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the steepness of the activation steepness in the output layer","syntax":"\n   bool <b>fann_set_activation_steepness_output<\/b>\n    ( resource $ann\n   , float $activation_steepness\n   )","desc":"\n   Sets the steepness of the activation steepness in the output layer.\n  "},"fann_set_activation_steepness":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the activation steepness for supplied neuron and layer number","syntax":"\n   bool <b>fann_set_activation_steepness<\/b>\n    ( resource $ann\n   , float $activation_steepness\n   , int $layer\n   , int $neuron\n   )","desc":"\n   Set the activation steepness for neuron number neuron in layer number layer,\n   counting the input layer as layer 0.\n  "},"fann_set_bit_fail_limit":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Set the bit fail limit used during training","syntax":"\n   bool <b>fann_set_bit_fail_limit<\/b>\n    ( resource $ann\n   , float $bit_fail_limit\n   )","desc":"\n   Set the bit fail limit used during training.\n  "},"fann_set_callback":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the callback function for use during training","syntax":"\n   bool <b>fann_set_callback<\/b>\n    ( resource $ann\n   , collable $callback\n   )","desc":"\n   Sets the callback function for use during training. It means that it is called from\n    fann_train_on_data() or  fann_train_on_file().\n  "},"fann_set_cascade_activation_functions":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the array of cascade candidate activation functions","syntax":"\n   bool <b>fann_set_cascade_activation_functions<\/b>\n    ( resource $ann\n   , array $cascade_activation_functions\n   )","desc":"\n   Sets the array of cascade candidate activation functions.\n  "},"fann_set_cascade_activation_steepnesses":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the array of cascade candidate activation steepnesses","syntax":"\n   bool <b>fann_set_cascade_activation_steepnesses<\/b>\n    ( resource $ann\n   , array $cascade_activation_steepnesses_count\n   )","desc":"\n   Sets the array of cascade candidate activation steepnesses.\n  "},"fann_set_cascade_candidate_change_fraction":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the cascade candidate change fraction","syntax":"\n   bool <b>fann_set_cascade_candidate_change_fraction<\/b>\n    ( resource $ann\n   , float $cascade_candidate_change_fraction\n   )","desc":"\n   Sets the cascade candidate change fraction.\n  "},"fann_set_cascade_candidate_limit":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the candidate limit","syntax":"\n   bool <b>fann_set_cascade_candidate_limit<\/b>\n    ( resource $ann\n   , float $cascade_candidate_limit\n   )","desc":"\n   Sets the candidate limit.\n  "},"fann_set_cascade_candidate_stagnation_epochs":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the number of cascade candidate stagnation epochs","syntax":"\n   bool <b>fann_set_cascade_candidate_stagnation_epochs<\/b>\n    ( resource $ann\n   , int $cascade_candidate_stagnation_epochs\n   )","desc":"\n   Sets the number of cascade candidate stagnation epochs.\n  "},"fann_set_cascade_max_cand_epochs":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the max candidate epochs","syntax":"\n   bool <b>fann_set_cascade_max_cand_epochs<\/b>\n    ( resource $ann\n   , int $cascade_max_cand_epochs\n   )","desc":"\n   Sets the max candidate epochs.\n  "},"fann_set_cascade_max_out_epochs":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the maximum out epochs","syntax":"\n   bool <b>fann_set_cascade_max_out_epochs<\/b>\n    ( resource $ann\n   , int $cascade_max_out_epochs\n   )","desc":"\n   Sets the maximum out epochs.\n  "},"fann_set_cascade_min_cand_epochs":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the min candidate epochs","syntax":"\n   bool <b>fann_set_cascade_min_cand_epochs<\/b>\n    ( resource $ann\n   , int $cascade_min_cand_epochs\n   )","desc":"\n   Sets the min candidate epochs.\n  "},"fann_set_cascade_min_out_epochs":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the minimum out epochs","syntax":"\n   bool <b>fann_set_cascade_min_out_epochs<\/b>\n    ( resource $ann\n   , int $cascade_min_out_epochs\n   )","desc":"\n   Sets the minimum out epochs.\n  "},"fann_set_cascade_num_candidate_groups":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the number of candidate groups","syntax":"\n   bool <b>fann_set_cascade_num_candidate_groups<\/b>\n    ( resource $ann\n   , int $cascade_num_candidate_groups\n   )","desc":"\n   Sets the number of candidate groups.\n  "},"fann_set_cascade_output_change_fraction":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the cascade output change fraction","syntax":"\n   bool <b>fann_set_cascade_output_change_fraction<\/b>\n    ( resource $ann\n   , float $cascade_output_change_fraction\n   )","desc":"\n   Sets the cascade output change fraction.\n  "},"fann_set_cascade_output_stagnation_epochs":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the number of cascade output stagnation epochs","syntax":"\n   bool <b>fann_set_cascade_output_stagnation_epochs<\/b>\n    ( resource $ann\n   , int $cascade_output_stagnation_epochs\n   )","desc":"\n   Sets the number of cascade output stagnation epochs.\n  "},"fann_set_cascade_weight_multiplier":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the weight multiplier","syntax":"\n   bool <b>fann_set_cascade_weight_multiplier<\/b>\n    ( resource $ann\n   , float $cascade_weight_multiplier\n   )","desc":"\n   Sets the weight multiplier.\n  "},"fann_set_error_log":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets where the errors are logged to","syntax":"\n   void <b>fann_set_error_log<\/b>\n    ( resource $errdat\n   , string $log_file\n   )","desc":"\n   Sets where the errors are logged to.\n  "},"fann_set_input_scaling_params":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Calculate input scaling parameters for future use based on training data","syntax":"\n   bool <b>fann_set_input_scaling_params<\/b>\n    ( resource $ann\n   , resource $train_data\n   , float $new_input_min\n   , float $new_input_max\n   )","desc":"\n   Calculate input scaling parameters for future use based on training data.\n  "},"fann_set_learning_momentum":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the learning momentum","syntax":"\n   bool <b>fann_set_learning_momentum<\/b>\n    ( resource $ann\n   , float $learning_momentum\n   )","desc":"\n   Sets the learning momentum.\n  "},"fann_set_learning_rate":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the learning rate","syntax":"\n   bool <b>fann_set_learning_rate<\/b>\n    ( resource $ann\n   , float $learning_rate\n   )","desc":"\n   Sets the learning rate.\n  "},"fann_set_output_scaling_params":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Calculate output scaling parameters for future use based on training data","syntax":"\n   bool <b>fann_set_output_scaling_params<\/b>\n    ( resource $ann\n   , resource $train_data\n   , float $new_output_min\n   , float $new_output_max\n   )","desc":"\n   Calculate output scaling parameters for future use based on training data.\n  "},"fann_set_quickprop_decay":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the quickprop decay factor","syntax":"\n   bool <b>fann_set_quickprop_decay<\/b>\n    ( resource $ann\n   , float $quickprop_decay\n   )","desc":"\n   Sets the quickprop decay factor.\n  "},"fann_set_quickprop_mu":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the quickprop mu factor","syntax":"\n   bool <b>fann_set_quickprop_mu<\/b>\n    ( resource $ann\n   , float $quickprop_mu\n   )","desc":"\n   Sets the quickprop mu factor.\n  "},"fann_set_rprop_decrease_factor":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the decrease factor used during RPROP training","syntax":"\n   bool <b>fann_set_rprop_decrease_factor<\/b>\n    ( resource $ann\n   , float $rprop_decrease_factor\n   )","desc":"\n   Sets the decrease factor used during RPROP training.\n  "},"fann_set_rprop_delta_max":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the maximum step-size","syntax":"\n   bool <b>fann_set_rprop_delta_max<\/b>\n    ( resource $ann\n   , float $rprop_delta_max\n   )","desc":"\n   The maximum step-size is a positive number determining how large the maximum step-size may be.\n  "},"fann_set_rprop_delta_min":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the minimum step-size","syntax":"\n   bool <b>fann_set_rprop_delta_min<\/b>\n    ( resource $ann\n   , float $rprop_delta_min\n   )","desc":"\n   The minimum step-size is a small positive number determining how small the minimum step-size may be.\n  "},"fann_set_rprop_delta_zero":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the initial step-size","syntax":"\n   bool <b>fann_set_rprop_delta_zero<\/b>\n    ( resource $ann\n   , float $rprop_delta_zero\n   )","desc":"\n   The initial step-size is a positive number determining the initial step size.\n  "},"fann_set_rprop_increase_factor":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the increase factor used during RPROP training","syntax":"\n   bool <b>fann_set_rprop_increase_factor<\/b>\n    ( resource $ann\n   , float $rprop_increase_factor\n   )","desc":"\n   Sets the increase factor used during RPROP training.\n  "},"fann_set_sarprop_step_error_shift":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the sarprop step error shift","syntax":"\n   bool <b>fann_set_sarprop_step_error_shift<\/b>\n    ( resource $ann\n   , float $sarprop_step_error_shift\n   )","desc":"\n   Sets the sarprop step error shift.\n  "},"fann_set_sarprop_step_error_threshold_factor":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the sarprop step error threshold factor","syntax":"\n   bool <b>fann_set_sarprop_step_error_threshold_factor<\/b>\n    ( resource $ann\n   , float $sarprop_step_error_threshold_factor\n   )","desc":"\n   Sets the sarprop step error threshold factor.\n  "},"fann_set_sarprop_temperature":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the sarprop temperature","syntax":"\n   bool <b>fann_set_sarprop_temperature<\/b>\n    ( resource $ann\n   , float $sarprop_temperature\n   )","desc":"\n   Sets the sarprop temperature.\n  "},"fann_set_sarprop_weight_decay_shift":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the sarprop weight decay shift","syntax":"\n   bool <b>fann_set_sarprop_weight_decay_shift<\/b>\n    ( resource $ann\n   , float $sarprop_weight_decay_shift\n   )","desc":"\n   Sets the sarprop weight decay shift.\n  "},"fann_set_scaling_params":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Calculate input and output scaling parameters for future use based on training data","syntax":"\n   bool <b>fann_set_scaling_params<\/b>\n    ( resource $ann\n   , resource $train_data\n   , float $new_input_min\n   , float $new_input_max\n   , float $new_output_min\n   , float $new_output_max\n   )","desc":"\n   Calculate input and output scaling parameters for future use based on training data.\n  "},"fann_set_train_error_function":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the error function used during training","syntax":"\n   bool <b>fann_set_train_error_function<\/b>\n    ( resource $ann\n   , int $error_function\n   )","desc":"\n   Sets the error function used during training.\n  "},"fann_set_train_stop_function":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the stop function used during training","syntax":"\n   bool <b>fann_set_train_stop_function<\/b>\n    ( resource $ann\n   , int $stop_function\n   )","desc":"\n   Sets the stop function used during training.\n  "},"fann_set_training_algorithm":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Sets the training algorithm","syntax":"\n   bool <b>fann_set_training_algorithm<\/b>\n    ( resource $ann\n   , int $training_algorithm\n   )","desc":"\n   Sets the training algorithm.\n  "},"fann_set_weight_array":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Set connections in the network","syntax":"\n   bool <b>fann_set_weight_array<\/b>\n    ( resource $ann\n   , array $connections\n   )","desc":"\n   Set connections in the network.\n  "},"fann_set_weight":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Set a connection in the network","syntax":"\n   bool <b>fann_set_weight<\/b>\n    ( resource $ann\n   , int $from_neuron\n   , int $to_neuron\n   , float $weight\n   )","desc":"\n   Set a connections in the network.\n  "},"fann_shuffle_train_data":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Shuffles training data, randomizing the order","syntax":"\n   bool <b>fann_shuffle_train_data<\/b>\n    ( resource $train_data\n   )","desc":"\n   Shuffles training data, randomizing the order. This is recommended for incremental training,\n   while it have no influence during batch training.\n  "},"fann_subset_train_data":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Returns an copy of a subset of the train data","syntax":"\n   resource <b>fann_subset_train_data<\/b>\n    ( resource $data\n   , int $pos\n   , int $length\n   )","desc":"\n   Returns an copy of a subset of the train data resource, starting at position\n   pos and length elements forward.\n  "},"fann_test_data":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Test a set of training data and calculates the MSE for the training data","syntax":"\n   float <b>fann_test_data<\/b>\n    ( resource $ann\n   , resource $data\n   )","desc":"\n   Test a set of training data and calculates the MSE for the training data.\n  "},"fann_test":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Test with a set of inputs, and a set of desired outputs","syntax":"\n   bool <b>fann_test<\/b>\n    ( resource $ann\n   , array $input\n   , array $desired_output\n   )","desc":"\n   Test with a set of inputs, and a set of desired outputs. This operation updates the mean square error,\n   but does not change the network in any way.\n  "},"fann_train_epoch":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Train one epoch with a set of training data","syntax":"\n   float <b>fann_train_epoch<\/b>\n    ( resource $ann\n   , resource $data\n   )","desc":"\n   Train one epoch with the training data stored in data. One epoch is\n   where all of the training data is considered exactly once.\n  "},"fann_train_on_data":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Trains on an entire dataset for a period of time","syntax":"\n   bool <b>fann_train_on_data<\/b>\n    ( resource $ann\n   , resource $data\n   , int $max_epochs\n   , int $epochs_between_reports\n   , float $desired_error\n   )","desc":"\n   Trains on an entire dataset for a period of time.\n  "},"fann_train_on_file":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Trains on an entire dataset, which is read from file, for a period of time","syntax":"\n   bool <b>fann_train_on_file<\/b>\n    ( resource $ann\n   , string $filename\n   , int $max_epochs\n   , int $epochs_between_reports\n   , float $desired_error\n   )","desc":"\n   Trains on an entire dataset, which is read from file, for a period of time.\n  "},"fann_train":{"version":"(PECL fann >= 1.0.0)","shortdesc":"Train one iteration with a set of inputs, and a set of desired outputs","syntax":"\n   bool <b>fann_train<\/b>\n    ( resource $ann\n   , array $input\n   , array $desired_output\n   )","desc":"\n   Train one iteration with a set of inputs, and a set of desired outputs. This training is always incremental training,\n   since only one pattern is presented.\n  "},"fastcgi_finish_request":{"version":"(PHP 5 >= 5.3.3)","shortdesc":"Flushes all response data to the client","syntax":"\n   boolean <b>fastcgi_finish_request<\/b>\n    ( void\n   )","desc":"\n   This function flushes all response data to the client and finishes the\n   request. This allows for time consuming tasks to be performed without\n   leaving the connection to the client open.\n  "},"fbsql_affected_rows":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u0437\u0430\u0442\u0440\u043e\u043d\u0443\u0442\u044b\u0445 \u0441\u0442\u0440\u043e\u043a \u0432 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c FrontBase \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0438","syntax":"\n   int <b>fbsql_affected_rows<\/b>\n    ([ resource $link_identifier\n  ] )","desc":"\n    fbsql_affected_rows() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e\n   \u0437\u0430\u0442\u0440\u043e\u043d\u0443\u0442\u044b\u0445 \u0441\u0442\u0440\u043e\u043a \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u043c INSERT, UPDATE \u0438\u043b\u0438 DELETE \u0437\u0430\u043f\u0440\u043e\u0441\u0435,\n   \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u043c \u0441 link_identifier.\n  "},"fbsql_autocommit":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Enable or disable autocommit","syntax":"\n   bool <b>fbsql_autocommit<\/b>\n    ( resource $link_identifier\n   [, bool $OnOff\n  ] )","desc":"\n   Returns the current autocommit status. \n  "},"fbsql_blob_size":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Get the size of a BLOB","syntax":"\n   int <b>fbsql_blob_size<\/b>\n    ( string $blob_handle\n   [, resource $link_identifier\n  ] )","desc":"\n   Returns the size of the given BLOB.\n  "},"fbsql_change_user":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Change logged in user of the active connection","syntax":"\n   bool <b>fbsql_change_user<\/b>\n    ( string $user\n   , string $password\n   [, string $database\n   [, resource $link_identifier\n  ]] )","desc":"\n    fbsql_change_user() changes the logged in user of the\n   specified connection. If the new user and password authorization fails, \n   the current connected user stays active.\n  "},"fbsql_clob_size":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Get the size of a CLOB","syntax":"\n   int <b>fbsql_clob_size<\/b>\n    ( string $clob_handle\n   [, resource $link_identifier\n  ] )","desc":"\n   Returns the size of the given CLOB.\n  "},"fbsql_close":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Close FrontBase connection","syntax":"\n   bool <b>fbsql_close<\/b>\n    ([ resource $link_identifier\n  ] )","desc":"\n   Closes the connection to the FrontBase server that's associated with the\n   specified link identifier.\n  "},"fbsql_commit":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Commits a transaction to the database","syntax":"\n   bool <b>fbsql_commit<\/b>\n    ([ resource $link_identifier\n  ] )","desc":"\n   Ends the current transaction by writing all inserts, updates and deletes\n   to the disk and unlocking all row and table locks held by the transaction.\n   This command is only needed if autocommit is set to false.\n  "},"fbsql_connect":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Open a connection to a FrontBase Server","syntax":"\n   resource <b>fbsql_connect<\/b>\n    ([ string $hostname = ini_get(\"fbsql.default_host\")\n   [, string $username = ini_get(\"fbsql.default_user\")\n   [, string $password = ini_get(\"fbsql.default_password\")\n  ]]] )","desc":"\n    fbsql_connect() establishes a connection to a\n   FrontBase server.  \n  "},"fbsql_create_blob":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Create a BLOB","syntax":"\n   string <b>fbsql_create_blob<\/b>\n    ( string $blob_data\n   [, resource $link_identifier\n  ] )","desc":"\n   Creates a BLOB from the given data.\n  "},"fbsql_create_clob":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Create a CLOB","syntax":"\n   string <b>fbsql_create_clob<\/b>\n    ( string $clob_data\n   [, resource $link_identifier\n  ] )","desc":"\n   Creates a CLOB from the given data.  \n  "},"fbsql_create_db":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Create a FrontBase database","syntax":"\n   bool <b>fbsql_create_db<\/b>\n    ( string $database_name\n   [, resource $link_identifier\n   [, string $database_options\n  ]] )","desc":"\n   Attempts to create a new database on the specified server.\n  "},"fbsql_data_seek":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Move internal result pointer","syntax":"\n   bool <b>fbsql_data_seek<\/b>\n    ( resource $result\n   , int $row_number\n   )","desc":"\n   Moves the internal row pointer of the FrontBase result associated with the\n   specified result identifier to point to the specified row number.\n  "},"fbsql_database_password":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Sets or retrieves the password for a FrontBase database","syntax":"\n   string <b>fbsql_database_password<\/b>\n    ( resource $link_identifier\n   [, string $database_password\n  ] )","desc":"\n   Sets and retrieves the database password used by the connection. If a\n   database is protected by a database password, the user must call this\n   function before calling  fbsql_select_db().\n  "},"fbsql_database":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Get or set the database name used with a connection","syntax":"\n   string <b>fbsql_database<\/b>\n    ( resource $link_identifier\n   [, string $database\n  ] )","desc":"\n   Get or set the database name used with the connection.\n  "},"fbsql_db_query":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Send a FrontBase query","syntax":"\n   resource <b>fbsql_db_query<\/b>\n    ( string $database\n   , string $query\n   [, resource $link_identifier\n  ] )","desc":"\n   Selects a database and executes a query on it. \n  "},"fbsql_db_status":{"version":"(PHP 4 >= 4.0.7, PHP 5)","shortdesc":"Get the status for a given database","syntax":"\n   int <b>fbsql_db_status<\/b>\n    ( string $database_name\n   [, resource $link_identifier\n  ] )","desc":"\n   Gets the current status of the specified database.\n  "},"fbsql_drop_db":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Drop (delete) a FrontBase database","syntax":"\n   bool <b>fbsql_drop_db<\/b>\n    ( string $database_name\n   [, resource $link_identifier\n  ] )","desc":"\n    fbsql_drop_db() attempts to drop (remove) an entire\n   database from the server associated with the specified link identifier.\n  "},"fbsql_errno":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Returns the error number from previous operation","syntax":"\n   int <b>fbsql_errno<\/b>\n    ([ resource $link_identifier\n  ] )","desc":"\n   Returns the numerical value of the error message from previous FrontBase\n   operation.\n  "},"fbsql_error":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Returns the error message from previous operation","syntax":"\n   string <b>fbsql_error<\/b>\n    ([ resource $link_identifier\n  ] )","desc":"\n   Returns the error message from previous FrontBase operation.\n  "},"fbsql_fetch_array":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Fetch a result row as an associative array, a numeric array, or both","syntax":"\n   array <b>fbsql_fetch_array<\/b>\n    ( resource $result\n   [, int $result_type\n  ] )","desc":"\n    fbsql_fetch_array() is a combination of\n    fbsql_fetch_row() and \n    fbsql_fetch_assoc().\n  "},"fbsql_fetch_assoc":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Fetch a result row as an associative array","syntax":"\n   array <b>fbsql_fetch_assoc<\/b>\n    ( resource $result\n   )","desc":"\n   Calling  fbsql_fetch_assoc() is equivalent to calling\n    fbsql_fetch_array() with \n   FBSQL_ASSOC as second parameter. It only returns an\n   associative array.\n  "},"fbsql_fetch_field":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Get column information from a result and return as an object","syntax":"\n   object <b>fbsql_fetch_field<\/b>\n    ( resource $result\n   [, int $field_offset\n  ] )","desc":"\n   Used in order to obtain information about fields in a certain query result.\n  "},"fbsql_fetch_lengths":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Get the length of each output in a result","syntax":"\n   array <b>fbsql_fetch_lengths<\/b>\n    ( resource $result\n   )","desc":"\n   Stores the lengths of each result column in the last row returned by\n    fbsql_fetch_row(), \n    fbsql_fetch_array() and\n    fbsql_fetch_object() in an array.\n  "},"fbsql_fetch_object":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Fetch a result row as an object","syntax":"\n   object <b>fbsql_fetch_object<\/b>\n    ( resource $result\n   )","desc":"\n    fbsql_fetch_object() is similar to\n    fbsql_fetch_array(), with one difference - an\n   object is returned, instead of an array.  Indirectly, that means\n   that you can only access the data by the field names, and not by\n   their offsets (numbers are illegal property names).\n  "},"fbsql_fetch_row":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Get a result row as an enumerated array","syntax":"\n   array <b>fbsql_fetch_row<\/b>\n    ( resource $result\n   )","desc":"\n    fbsql_fetch_row() fetches one row of data from\n   the result associated with the specified result identifier. \n  "},"fbsql_field_flags":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Get the flags associated with the specified field in a result","syntax":"\n   string <b>fbsql_field_flags<\/b>\n    ( resource $result\n   [, int $field_offset\n  ] )","desc":"\n   Gets the flags associated with the specified field in a result.\n  "},"fbsql_field_len":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Returns the length of the specified field","syntax":"\n   int <b>fbsql_field_len<\/b>\n    ( resource $result\n   [, int $field_offset\n  ] )","desc":"\n   Returns the length of the specified field.\n  "},"fbsql_field_name":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Get the name of the specified field in a result","syntax":"\n   string <b>fbsql_field_name<\/b>\n    ( resource $result\n   [, int $field_index\n  ] )","desc":"\n   Returns the name of the specified field index.\n  "},"fbsql_field_seek":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Set result pointer to a specified field offset","syntax":"\n   bool <b>fbsql_field_seek<\/b>\n    ( resource $result\n   [, int $field_offset\n  ] )","desc":"\n   Seeks to the specified field offset. If the next call to\n    fbsql_fetch_field() doesn't include a field\n   offset, the field offset specified in\n    fbsql_field_seek() will be returned.\n  "},"fbsql_field_table":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Get name of the table the specified field is in","syntax":"\n   string <b>fbsql_field_table<\/b>\n    ( resource $result\n   [, int $field_offset\n  ] )","desc":"\n   Returns the name of the table that the specified field is in.\n  "},"fbsql_field_type":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Get the type of the specified field in a result","syntax":"\n   string <b>fbsql_field_type<\/b>\n    ( resource $result\n   [, int $field_offset\n  ] )","desc":"\n    fbsql_field_type() is similar to the\n    fbsql_field_name() function, but the field type is\n   returned instead. \n  "},"fbsql_free_result":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Free result memory","syntax":"\n   bool <b>fbsql_free_result<\/b>\n    ( resource $result\n   )","desc":"\n   Frees all memory associated with the given result\n   identifier.\n  "},"fbsql_get_autostart_info":{"version":"(PHP 4 >= 4.0.7, PHP 5)","shortdesc":"\n ","syntax":"\n   array <b>fbsql_get_autostart_info<\/b>\n    ([ resource $link_identifier\n  ] )","desc":""},"fbsql_hostname":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Get or set the host name used with a connection","syntax":"\n   string <b>fbsql_hostname<\/b>\n    ( resource $link_identifier\n   [, string $host_name\n  ] )","desc":"\n   Gets or sets the host name used with a connection.\n  "},"fbsql_insert_id":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Get the id generated from the previous INSERT operation","syntax":"\n   int <b>fbsql_insert_id<\/b>\n    ([ resource $link_identifier\n  ] )","desc":"\n   Gets the id generated from the previous INSERT operation which created a\n   DEFAULT UNIQUE value.\n  "},"fbsql_list_dbs":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"List databases available on a FrontBase server","syntax":"\n   resource <b>fbsql_list_dbs<\/b>\n    ([ resource $link_identifier\n  ] )","desc":"\n   Return a result pointer containing the databases available from the\n   current fbsql daemon. Use the  fbsql_tablename() to\n   traverse this result pointer.\n  "},"fbsql_list_fields":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"List FrontBase result fields","syntax":"\n   resource <b>fbsql_list_fields<\/b>\n    ( string $database_name\n   , string $table_name\n   [, resource $link_identifier\n  ] )","desc":"\n   Retrieves information about the given table.\n  "},"fbsql_list_tables":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"List tables in a FrontBase database","syntax":"\n   resource <b>fbsql_list_tables<\/b>\n    ( string $database\n   [, resource $link_identifier\n  ] )","desc":"\n   Returns a result pointer describing the database.\n  "},"fbsql_next_result":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Move the internal result pointer to the next result","syntax":"\n   bool <b>fbsql_next_result<\/b>\n    ( resource $result\n   )","desc":"\n   When sending more than one SQL statement to the server or\n   executing a stored procedure with multiple results will cause the\n   server to return multiple result sets.  This function will test\n   for additional results available form the server. If an\n   additional result set exists it will free the existing result set\n   and prepare to fetch the words from the new result set.  \n  "},"fbsql_num_fields":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Get number of fields in result","syntax":"\n   int <b>fbsql_num_fields<\/b>\n    ( resource $result\n   )","desc":"\n   Returns the number of fields in the given result \n   set.\n  "},"fbsql_num_rows":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Get number of rows in result","syntax":"\n   int <b>fbsql_num_rows<\/b>\n    ( resource $result\n   )","desc":"\n   Gets the number of rows in the given result set.\n  "},"fbsql_password":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Get or set the user password used with a connection","syntax":"\n   string <b>fbsql_password<\/b>\n    ( resource $link_identifier\n   [, string $password\n  ] )","desc":"\n   Get or set the user password used with a connection.\n  "},"fbsql_pconnect":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Open a persistent connection to a FrontBase Server","syntax":"\n   resource <b>fbsql_pconnect<\/b>\n    ([ string $hostname = ini_get(\"fbsql.default_host\")\n   [, string $username = ini_get(\"fbsql.default_user\")\n   [, string $password = ini_get(\"fbsql.default_password\")\n  ]]] )","desc":"\n   Establishes a persistent connection to a FrontBase server.\n  "},"fbsql_query":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Send a FrontBase query","syntax":"\n   resource <b>fbsql_query<\/b>\n    ( string $query\n   [, resource $link_identifier\n   [, int $batch_size\n  ]] )","desc":"\n   Sends a query to the currently active database on\n   the server.\n  "},"fbsql_read_blob":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Read a BLOB from the database","syntax":"\n   string <b>fbsql_read_blob<\/b>\n    ( string $blob_handle\n   [, resource $link_identifier\n  ] )","desc":"\n   Reads BLOB data from the database.\n  "},"fbsql_read_clob":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Read a CLOB from the database","syntax":"\n   string <b>fbsql_read_clob<\/b>\n    ( string $clob_handle\n   [, resource $link_identifier\n  ] )","desc":"\n   Reads CLOB data from the database.\n  "},"fbsql_result":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Get result data","syntax":"\n   mixed <b>fbsql_result<\/b>\n    ( resource $result\n   [, int $row\n   [, mixed $field\n  ]] )","desc":"\n   Returns the contents of one cell from a FrontBase \n   result set. \n  "},"fbsql_rollback":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Rollback a transaction to the database","syntax":"\n   bool <b>fbsql_rollback<\/b>\n    ([ resource $link_identifier\n  ] )","desc":"\n   Ends the current transaction by rolling back all statements issued since\n   last commit.\n  "},"fbsql_rows_fetched":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"Get the number of rows affected by the last statement","syntax":"\n   int <b>fbsql_rows_fetched<\/b>\n    ( resource $result\n   )","desc":"\n   Gets the number of rows affected by the last statement.\n  "},"fbsql_select_db":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Select a FrontBase database","syntax":"\n   bool <b>fbsql_select_db<\/b>\n    ([ string $database_name\n   [, resource $link_identifier\n  ]] )","desc":"\n   Sets the current active database on the given link identifier.\n  "},"fbsql_set_characterset":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"Change input\/output character set","syntax":"\n   void <b>fbsql_set_characterset<\/b>\n    ( resource $link_identifier\n   , int $characterset\n   [, int $in_out_both\n  ] )","desc":""},"fbsql_set_lob_mode":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Set the LOB retrieve mode for a FrontBase result set","syntax":"\n   bool <b>fbsql_set_lob_mode<\/b>\n    ( resource $result\n   , int $lob_mode\n   )","desc":"\n   Sets the mode for retrieving LOB data from the database.\n  "},"fbsql_set_password":{"version":"(PHP 5)","shortdesc":"Change the password for a given user","syntax":"\n   bool <b>fbsql_set_password<\/b>\n    ( resource $link_identifier\n   , string $user\n   , string $password\n   , string $old_password\n   )","desc":"\n   Changes the password for the given user.\n  "},"fbsql_set_transaction":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Set the transaction locking and isolation","syntax":"\n   void <b>fbsql_set_transaction<\/b>\n    ( resource $link_identifier\n   , int $locking\n   , int $isolation\n   )","desc":"\n   Sets the transaction locking and\n   isolation.\n  "},"fbsql_start_db":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Start a database on local or remote server","syntax":"\n   bool <b>fbsql_start_db<\/b>\n    ( string $database_name\n   [, resource $link_identifier\n   [, string $database_options\n  ]] )","desc":"\n   Start a database on local or remote server.\n  "},"fbsql_stop_db":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Stop a database on local or remote server","syntax":"\n   bool <b>fbsql_stop_db<\/b>\n    ( string $database_name\n   [, resource $link_identifier\n  ] )","desc":"\n   Stops a database on local or remote server.\n  "},"fbsql_table_name":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Get table name of field","syntax":"\n   string <b>fbsql_table_name<\/b>\n    ( resource $result\n   , int $index\n   )","desc":"\n    fbsql_table_name() gets the name of the current table in\n   the given result set.\n  "},"fbsql_tablename":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  fbsql_table_name()","syntax":"","desc":""},"fbsql_username":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Get or set the username for the connection","syntax":"\n   string <b>fbsql_username<\/b>\n    ( resource $link_identifier\n   [, string $username\n  ] )","desc":"\n   Get or set the username used for the connection.\n  "},"fbsql_warnings":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Enable or disable FrontBase warnings","syntax":"\n   bool <b>fbsql_warnings<\/b>\n    ([ bool $OnOff\n  ] )","desc":"\n   Enables or disables FrontBase warnings.\n  "},"fclose":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u043e\u0442\u043a\u0440\u044b\u0442\u044b\u0439 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   bool <b>fclose<\/b>\n    ( resource $handle\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0444\u0430\u0439\u043b, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 handle.\n  "},"fdf_add_doc_javascript":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Adds javascript code to the FDF document","syntax":"\n   bool <b>fdf_add_doc_javascript<\/b>\n    ( resource $fdf_document\n   , string $script_name\n   , string $script_code\n   )","desc":"\n   Adds a script to the FDF, which Acrobat then adds to the doc-level scripts\n   of a document, once the FDF is imported into it. \n  "},"fdf_add_template":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0448\u0430\u0431\u043b\u043e\u043d \u0432 FDF-\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442","syntax":"\n   bool <b>fdf_add_template<\/b>\n    ( resource $fdf_document\n   , int $newpage\n   , string $filename\n   , string $template\n   , int $rename\n   )","desc":""},"fdf_close":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 FDF-\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442","syntax":"\n   void <b>fdf_close<\/b>\n    ( resource $fdf_document\n   )","desc":"\n   \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 FDF-\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442.\n  "},"fdf_create":{"version":"(PHP 4, PHP 5)","shortdesc":"Create a new FDF document","syntax":"\n   resource <b>fdf_create<\/b>\n    ( void\n   )","desc":"\n   Creates a new FDF document. \n  "},"fdf_enum_values":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Call a user defined function for each document value ","syntax":"\n   bool <b>fdf_enum_values<\/b>\n    ( resource $fdf_document\n   , callable $function\n   [, mixed $userdata\n  ] )","desc":""},"fdf_errno":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Return error code for last fdf operation","syntax":"\n   int <b>fdf_errno<\/b>\n    ( void\n   )","desc":"\n   Gets the error code set by the last FDF function call.\n  "},"fdf_error":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Return error description for FDF error code","syntax":"\n   string <b>fdf_error<\/b>\n    ([ int $error_code = -1\n  ] )","desc":"\n   Gets a textual description for the FDF error code given in\n   error_code.\n  "},"fdf_get_ap":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Get the appearance of a field","syntax":"\n   bool <b>fdf_get_ap<\/b>\n    ( resource $fdf_document\n   , string $field\n   , int $face\n   , string $filename\n   )","desc":"\n   Gets the appearance of a field (i.e. the value of\n   the \/AP key) and stores it in a file. \n  "},"fdf_get_attachment":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Extracts uploaded file embedded in the FDF","syntax":"\n   array <b>fdf_get_attachment<\/b>\n    ( resource $fdf_document\n   , string $fieldname\n   , string $savepath\n   )","desc":"\n   Extracts a file uploaded by means of the \"file selection\" field\n   fieldname and stores it under\n   savepath. \n  "},"fdf_get_encoding":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0430 \/Encoding","syntax":"\n   string <b>fdf_get_encoding<\/b>\n    ( resource $fdf_document\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0430 \/Encoding.\n  "},"fdf_get_file":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0430 \/F","syntax":"\n   string <b>fdf_get_file<\/b>\n    ( resource $fdf_document\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0430 \/F.\n  "},"fdf_get_flags":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Gets the flags of a field","syntax":"\n   int <b>fdf_get_flags<\/b>\n    ( resource $fdf_document\n   , string $fieldname\n   , int $whichflags\n   )","desc":""},"fdf_get_opt":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Gets a value from the opt array of a field","syntax":"\n   mixed <b>fdf_get_opt<\/b>\n    ( resource $fdf_document\n   , string $fieldname\n   [, int $element = -1\n  ] )","desc":""},"fdf_get_status":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0430 \/STATUS","syntax":"\n   string <b>fdf_get_status<\/b>\n    ( resource $fdf_document\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0430 \/STATUS.\n  "},"fdf_get_value":{"version":"(PHP 4, PHP 5)","shortdesc":"Get the value of a field","syntax":"\n   mixed <b>fdf_get_value<\/b>\n    ( resource $fdf_document\n   , string $fieldname\n   [, int $which = -1\n  ] )","desc":"\n   Gets the value for the requested field.\n  "},"fdf_get_version":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Gets version number for FDF API or file ","syntax":"\n   string <b>fdf_get_version<\/b>\n    ([ resource $fdf_document\n  ] )","desc":"\n   Return the FDF version for the given document, or the toolkit API version\n   number if no parameter is given.\n  "},"fdf_header":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Sets FDF-specific output headers","syntax":"\n   void <b>fdf_header<\/b>\n    ( void\n   )","desc":"\n   This is a convenience function to set appropriate HTTP headers for FDF\n   output. It sets the Content-type: to \n   application\/vnd.fdf.\n  "},"fdf_next_field_name":{"version":"(PHP 4, PHP 5)","shortdesc":"Get the next field name","syntax":"\n   string <b>fdf_next_field_name<\/b>\n    ( resource $fdf_document\n   [, string $fieldname\n  ] )","desc":"\n   Gets the name of the field after the given field. This name can be used\n   with several functions.\n  "},"fdf_open_string":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Read a FDF document from a string","syntax":"\n   resource <b>fdf_open_string<\/b>\n    ( string $fdf_data\n   )","desc":"\n   Reads form data from a string. \n  "},"fdf_open":{"version":"(PHP 4, PHP 5)","shortdesc":"Open a FDF document","syntax":"\n   resource <b>fdf_open<\/b>\n    ( string $filename\n   )","desc":"\n   Opens a file with form data. \n  "},"fdf_remove_item":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Sets target frame for form","syntax":"\n   bool <b>fdf_remove_item<\/b>\n    ( resource $fdf_document\n   , string $fieldname\n   , int $item\n   )","desc":""},"fdf_save_string":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Returns the FDF document as a string","syntax":"\n   string <b>fdf_save_string<\/b>\n    ( resource $fdf_document\n   )","desc":"\n   Returns the FDF document as a string.\n  "},"fdf_save":{"version":"(PHP 4, PHP 5)","shortdesc":"Save a FDF document","syntax":"\n   bool <b>fdf_save<\/b>\n    ( resource $fdf_document\n   [, string $filename\n  ] )","desc":"\n   Saves a FDF document.\n  "},"fdf_set_ap":{"version":"(PHP 4, PHP 5)","shortdesc":"Set the appearance of a field","syntax":"\n   bool <b>fdf_set_ap<\/b>\n    ( resource $fdf_document\n   , string $field_name\n   , int $face\n   , string $filename\n   , int $page_number\n   )","desc":"\n   Sets the appearance of a field (i.e. the value of the \n   \/AP key).\n  "},"fdf_set_encoding":{"version":"(PHP 4 >= 4.0.7, PHP 5)","shortdesc":"Sets FDF character encoding","syntax":"\n   bool <b>fdf_set_encoding<\/b>\n    ( resource $fdf_document\n   , string $encoding\n   )","desc":"\n   Sets the character encoding for the FDF document.\n  "},"fdf_set_file":{"version":"(PHP 4, PHP 5)","shortdesc":"Set PDF document to display FDF data in","syntax":"\n   bool <b>fdf_set_file<\/b>\n    ( resource $fdf_document\n   , string $url\n   [, string $target_frame\n  ] )","desc":"\n   Selects a different PDF document to display the form results in then the\n   form it originated from. \n  "},"fdf_set_flags":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Sets a flag of a field","syntax":"\n   bool <b>fdf_set_flags<\/b>\n    ( resource $fdf_document\n   , string $fieldname\n   , int $whichFlags\n   , int $newFlags\n   )","desc":"\n   Sets certain flags of the given field.\n  "},"fdf_set_javascript_action":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Sets an javascript action of a field","syntax":"\n   bool <b>fdf_set_javascript_action<\/b>\n    ( resource $fdf_document\n   , string $fieldname\n   , int $trigger\n   , string $script\n   )","desc":"\n   Sets a javascript action for the given field.\n  "},"fdf_set_on_import_javascript":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Adds javascript code to be executed when Acrobat opens the FDF","syntax":"\n   bool <b>fdf_set_on_import_javascript<\/b>\n    ( resource $fdf_document\n   , string $script\n   , bool $before_data_import\n   )","desc":""},"fdf_set_opt":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Sets an option of a field","syntax":"\n   bool <b>fdf_set_opt<\/b>\n    ( resource $fdf_document\n   , string $fieldname\n   , int $element\n   , string $str1\n   , string $str2\n   )","desc":"\n   Sets options of the given field.\n  "},"fdf_set_status":{"version":"(PHP 4, PHP 5)","shortdesc":"Set the value of the \/STATUS key","syntax":"\n   bool <b>fdf_set_status<\/b>\n    ( resource $fdf_document\n   , string $status\n   )","desc":"\n   Sets the value of the \/STATUS key. When a client\n   receives a FDF with a status set it will present the value in an alert\n   box.\n  "},"fdf_set_submit_form_action":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Sets a submit form action of a field","syntax":"\n   bool <b>fdf_set_submit_form_action<\/b>\n    ( resource $fdf_document\n   , string $fieldname\n   , int $trigger\n   , string $script\n   , int $flags\n   )","desc":"\n   Sets a submit form action for the given field.\n  "},"fdf_set_target_frame":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Set target frame for form display","syntax":"\n   bool <b>fdf_set_target_frame<\/b>\n    ( resource $fdf_document\n   , string $frame_name\n   )","desc":"\n   Sets the target frame to display a result PDF defined with \n    fdf_save_file() in.\n  "},"fdf_set_value":{"version":"(PHP 4, PHP 5)","shortdesc":"Set the value of a field","syntax":"\n   bool <b>fdf_set_value<\/b>\n    ( resource $fdf_document\n   , string $fieldname\n   , mixed $value\n   [, int $isName\n  ] )","desc":"\n   Sets the value for the given field.\n  "},"fdf_set_version":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Sets version number for a FDF file ","syntax":"\n   bool <b>fdf_set_version<\/b>\n    ( resource $fdf_document\n   , string $version\n   )","desc":"\n   Sets the FDF version for the given document.\n  "},"feof":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0434\u043e\u0441\u0442\u0438\u0433\u043d\u0443\u0442 \u043b\u0438 \u043a\u043e\u043d\u0435\u0446 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   bool <b>feof<\/b>\n    ( resource $handle\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0434\u043e\u0441\u0442\u0438\u0433\u043d\u0443\u0442 \u043b\u0438 \u043a\u043e\u043d\u0435\u0446 \u0444\u0430\u0439\u043b\u0430.\n  "},"fflush":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\u0421\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442 \u0431\u0443\u0444\u0435\u0440 \u0432\u044b\u0432\u043e\u0434\u0430 \u0432 \u0444\u0430\u0439\u043b","syntax":"\n   bool <b>fflush<\/b>\n    ( resource $handle\n   )","desc":"\n   \u0414\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442 \u0441\u0431\u0440\u043e\u0441 \u0431\u0443\u0444\u0435\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n   \u0432 \u0444\u0430\u0439\u043b, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 handle.\n  "},"fgetc":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u0441\u0438\u043c\u0432\u043e\u043b \u0438\u0437 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   string <b>fgetc<\/b>\n    ( resource $handle\n   )","desc":"\n   \u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u0441\u0438\u043c\u0432\u043e\u043b \u0438\u0437 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f \u043d\u0430 \u0444\u0430\u0439\u043b.\n  "},"fgetcsv":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0427\u0438\u0442\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u0438 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442 \u0440\u0430\u0437\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 CSV","syntax":"\n   array <b>fgetcsv<\/b>\n    ( resource $handle\n   [, int $length = 0\n   [, string $delimiter = ','\n   [, string $enclosure = '\"'\n   [, string $escape = '\\\\'\n  ]]]] )","desc":"\n   \u0414\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u0445\u043e\u0436\u0430 \u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044e  fgets(), \u0441 \u0442\u043e\u0439\n   \u0440\u0430\u0437\u043d\u0438\u0446\u0435\u0439, \u0447\u0442\u043e \u043e\u043d\u0430 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442 \u0430\u043d\u0430\u043b\u0438\u0437 \u0441\u0442\u0440\u043e\u043a\u0438 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0437\u0430\u043f\u0438\u0441\u0435\u0439\n   \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 CSV \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0435 \u043f\u043e\u043b\u044f\n   \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u0430.\n  "},"fgets":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0427\u0438\u0442\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   string <b>fgets<\/b>\n    ( resource $handle\n   [, int $length\n  ] )","desc":"\n   \u0427\u0438\u0442\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0433\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f.\n  "},"fgetss":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u0438 \u043e\u0442\u0431\u0440\u043e\u0441\u0438\u0442\u044c HTML-\u0442\u0435\u0433\u0438","syntax":"\n   string <b>fgetss<\/b>\n    ( resource $handle\n   [, int $length\n   [, string $allowable_tags\n  ]] )","desc":"\n   \u0414\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  fgets() \u0441 \u0442\u043e\u0439 \u0442\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0437\u043d\u0438\u0446\u0435\u0439,\n   \u0447\u0442\u043e  fgetss() \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442 \u043e\u0442\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u043d\u0438\u0435 \u043b\u044e\u0431\u044b\u0445\n   HTML \u0438 PHP-\u0442\u0435\u0433\u043e\u0432 \u0438\u0437 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438.\n  "},"file_exists":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0438\u043b\u0438 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430","syntax":"\n   bool <b>file_exists<\/b>\n    ( string $filename\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0438\u043b\u0438 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430.\n  "},"file_get_contents":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0427\u0438\u0442\u0430\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0444\u0430\u0439\u043b\u0430 \u0432 \u0441\u0442\u0440\u043e\u043a\u0443","syntax":"\n   string <b>file_get_contents<\/b>\n    ( string $filename\n   [, bool $use_include_path = false\n   [, resource $context\n   [, int $offset = -1\n   [, int $maxlen\n  ]]]] )","desc":"\n   \u0414\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u0445\u043e\u0436\u0430 \u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044e  file() \u0441 \u0442\u043e\u0439 \u0442\u043e\u043b\u044c\u043a\u043e\n   \u0440\u0430\u0437\u043d\u0438\u0446\u0435\u0439, \u0447\u0442\u043e  file_get_contents() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\n   \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0444\u0430\u0439\u043b\u0430 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u044f\n   offset \u0438 \u0434\u043e maxlen\n   \u0431\u0430\u0439\u0442. \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u043d\u0435\u0443\u0434\u0430\u0447\u0438,  file_get_contents() \u0432\u0435\u0440\u043d\u0451\u0442 FALSE.\n  "},"file_put_contents":{"version":"(PHP 5)","shortdesc":"\u041f\u0438\u0448\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u0444\u0430\u0439\u043b","syntax":"\n   int <b>file_put_contents<\/b>\n    ( string $filename\n   , mixed $data\n   [, int $flags = 0\n   [, resource $context\n  ]] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0443\u0441\u043f\u0435\u0448\u043d\u044b\u043c \u0432\u044b\u0437\u043e\u0432\u0430\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u0439\n    fopen(),  fwrite() \u0438\n    fclose().\n  "},"file":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0427\u0438\u0442\u0430\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0444\u0430\u0439\u043b\u0430 \u0438 \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u0442 \u0435\u0433\u043e \u0432 \u043c\u0430\u0441\u0441\u0438\u0432","syntax":"\n   array <b>file<\/b>\n    ( string $<b>file<\/b>name\n   [, int $flags = 0\n   [, resource $context\n  ]] )","desc":"\n   \u0427\u0438\u0442\u0430\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0444\u0430\u0439\u043b\u0430 \u0438 \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u0442 \u0435\u0433\u043e \u0432 \u043c\u0430\u0441\u0441\u0438\u0432.\n  "},"fileatime":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0444\u0430\u0439\u043b\u0443","syntax":"\n   int <b>fileatime<\/b>\n    ( string $filename\n   )","desc":""},"filectime":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0438\u043d\u0434\u0435\u043a\u0441\u043d\u043e\u0433\u043e \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0430 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   int <b>filectime<\/b>\n    ( string $filename\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0438\u043d\u0434\u0435\u043a\u0441\u043d\u043e\u0433\u043e \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0430 (inode) \u0444\u0430\u0439\u043b\u0430.\n  "},"filegroup":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0433\u0440\u0443\u043f\u043f\u044b \u0444\u0430\u0439\u043b\u0430","syntax":"\n   int <b>filegroup<\/b>\n    ( string $filename\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0433\u0440\u0443\u043f\u043f\u044b \u0444\u0430\u0439\u043b\u0430 \u0432 \u0432\u0438\u0434\u0435 \u0447\u0438\u0441\u043b\u0430.\n   \u0414\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0438\u043c\u0435\u043d\u0438 \u0433\u0440\u0443\u043f\u043f\u044b \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u044e\n    posix_getgrgid().\n  "},"fileinode":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0434\u0435\u043a\u0441\u043d\u044b\u0439 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   int <b>fileinode<\/b>\n    ( string $filename\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0434\u0435\u043a\u0441\u043d\u044b\u0439 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 \u0444\u0430\u0439\u043b\u0430.\n  "},"filemtime":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0444\u0430\u0439\u043b\u0430","syntax":"\n   int <b>filemtime<\/b>\n    ( string $filename\n   )","desc":"\n   \u0414\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u0437\u0430\u043f\u0438\u0441\u0438\n   \u0431\u043b\u043e\u043a\u043e\u0432 \u0444\u0430\u0439\u043b\u0430, \u0438\u043d\u0430\u0447\u0435 \u0433\u043e\u0432\u043e\u0440\u044f, \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u044f \u0444\u0430\u0439\u043b\u0430.\n  "},"fileowner":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   int <b>fileowner<\/b>\n    ( string $filename\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u0444\u0430\u0439\u043b\u0430\n  "},"fileperms":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u0440\u0430\u0432\u0430\u0445 \u043d\u0430 \u0444\u0430\u0439\u043b","syntax":"\n   int <b>fileperms<\/b>\n    ( string $filename\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u0440\u0430\u0432\u0430\u0445 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043d\u0430 \u0444\u0430\u0439\u043b.\n  "},"filepro_fieldcount":{"version":"(PHP 4, PHP 5 <= 5.1.6)","shortdesc":"Find out how many fields are in a filePro database","syntax":"\n   int <b>filepro_fieldcount<\/b>\n    ( void\n   )","desc":"\n   Returns the number of fields (columns) in the opened filePro\n   database.\n  "},"filepro_fieldname":{"version":"(PHP 4, PHP 5 <= 5.1.6)","shortdesc":"Gets the name of a field","syntax":"\n   string <b>filepro_fieldname<\/b>\n    ( int $field_number\n   )","desc":"\n   Returns the name of the field corresponding to \n   field_number.\n  "},"filepro_fieldtype":{"version":"(PHP 4, PHP 5 <= 5.1.6)","shortdesc":"Gets the type of a field","syntax":"\n   string <b>filepro_fieldtype<\/b>\n    ( int $field_number\n   )","desc":"\n   Returns the edit type of the field corresponding to field_number.\n  "},"filepro_fieldwidth":{"version":"(PHP 4, PHP 5 <= 5.1.6)","shortdesc":"Gets the width of a field","syntax":"\n   int <b>filepro_fieldwidth<\/b>\n    ( int $field_number\n   )","desc":"\n   Returns the width of the field corresponding to field_number.\n  "},"filepro_retrieve":{"version":"(PHP 4, PHP 5 <= 5.1.6)","shortdesc":"Retrieves data from a filePro database","syntax":"\n   string <b>filepro_retrieve<\/b>\n    ( int $row_number\n   , int $field_number\n   )","desc":"\n   Returns the data from the specified location in the database.\n  "},"filepro_rowcount":{"version":"(PHP 4, PHP 5 <= 5.1.6)","shortdesc":"Find out how many rows are in a filePro database","syntax":"\n   int <b>filepro_rowcount<\/b>\n    ( void\n   )","desc":"\n   Returns the number of rows in the opened filePro database.\n  "},"filepro":{"version":"(PHP 4, PHP 5 <= 5.1.6)","shortdesc":"Read and verify the map file","syntax":"\n   bool <b>filepro<\/b>\n    ( string $directory\n   )","desc":"\n   This reads and verifies the map file, storing the field count\n   and info.\n  "},"filesize":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0430\u0437\u043c\u0435\u0440 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   int <b>filesize<\/b>\n    ( string $filename\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0430\u0437\u043c\u0435\u0440 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430.\n  "},"filetype":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0438\u043f \u0444\u0430\u0439\u043b\u0430","syntax":"\n   string <b>filetype<\/b>\n    ( string $filename\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0438\u043f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430.\n  "},"filter_has_var":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0430","syntax":"\n   bool <b>filter_has_var<\/b>\n    ( int $type\n   , string $variable_name\n   )","desc":""},"filter_id":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440, \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0430\u0449\u0438\u0439 \u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u043d\u043e\u043c\u0443 \u0444\u0438\u043b\u044c\u0442\u0440\u0443","syntax":"\n   int <b>filter_id<\/b>\n    ( string $filtername\n   )","desc":""},"filter_input_array":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0438\u0437\u0432\u043d\u0435 PHP \u0438, \u043f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438, \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u0442 \u0438\u0445","syntax":"\n   mixed <b>filter_input_array<\/b>\n    ( int $type\n   [, mixed $definition\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u043b\u0435\u0437\u043d\u0430 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0430 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0431\u0435\u0437\n   \u043c\u043d\u043e\u0433\u043e\u043a\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0432\u044b\u0437\u043e\u0432\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  filter_input().\n  "},"filter_input":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0438\u0437\u0432\u043d\u0435 PHP \u0438, \u043f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438, \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u0442 \u0435\u0435","syntax":"\n   mixed <b>filter_input<\/b>\n    ( int $type\n   , string $variable_name\n   [, int $filter = FILTER_DEFAULT\n   [, mixed $options\n  ]] )","desc":""},"filter_list":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0445 \u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432","syntax":"\n   array <b>filter_list<\/b>\n    ( void\n   )","desc":""},"filter_var_array":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0438, \u043f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438, \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u0442 \u0438\u0445","syntax":"\n   mixed <b>filter_var_array<\/b>\n    ( array $data\n   [, mixed $definition\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u043b\u0435\u0437\u043d\u0430 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0430 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0431\u0435\u0437\n   \u043c\u043d\u043e\u0433\u043e\u043a\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0432\u044b\u0437\u043e\u0432\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  filter_var().\n  "},"filter_var":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u0424\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0444\u0438\u043b\u044c\u0442\u0440\u0430","syntax":"\n   mixed <b>filter_var<\/b>\n    ( mixed $variable\n   [, int $filter = FILTER_DEFAULT\n   [, mixed $options\n  ]] )","desc":""},"finfo_buffer\nfinfo::buffer\n":{"version":"(PHP 5 >= 5.3.0, PECL fileinfo >= 0.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0442\u0440\u043e\u043a\u0435 \u0431\u0443\u0444\u0435\u0440\u0430","syntax":"\n   string finfo_buffer\n    ( resource $finfo\n   , string $string = NULL\n   [, int $options = FILEINFO_NONE\n   [, resource $context = NULL\n  ]] )\n\n   string finfo::buffer\n    ( string $string = NULL\n   [, int $options = FILEINFO_NONE\n   [, resource $context = NULL\n  ]] )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435.\n  \n"},"finfo_close":{"version":"(PHP >= 5.3.0, PECL fileinfo >= 0.1.0)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0440\u0435\u0441\u0443\u0440\u0441 Fileinfo","syntax":"\n   bool <b>finfo_close<\/b>\n    ( resource $finfo\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0440\u0435\u0441\u0443\u0440\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u044b\u043b \u043e\u0442\u043a\u0440\u044b\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 finfo_open().\n  "},"finfo_file\nfinfo::file\n":{"version":"(PHP >= 5.3.0, PECL fileinfo >= 0.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u043e \u043e \u0444\u0430\u0439\u043b\u0435","syntax":"\n   string finfo_file\n    ( resource $finfo\n   , string $file_name = NULL\n   [, int $options = FILEINFO_NONE\n   [, resource $context = NULL\n  ]] )\n\n   string finfo::file\n    ( string $file_name = NULL\n   [, int $options = FILEINFO_NONE\n   [, resource $context = NULL\n  ]] )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0444\u0430\u0439\u043b\u0435.\n  \n"},"finfo_open\nfinfo::__construct\n":{"version":"(PHP >= 5.3.0, PECL fileinfo >= 0.1.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0440\u0435\u0441\u0443\u0440\u0441 Fileinfo","syntax":"\n   resource finfo_open\n    ([ int $options = FILEINFO_NONE\n   [, string $magic_file = NULL\n  ]] )","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (constructor):\n\n   \u0414\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u043c\u0430\u0433\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0441\u0443\u0440\u0441 \u043d\u0430 \u043d\u0435\u0435.\n  \n"},"finfo_set_flags\nfinfo::set_flags\n":{"version":"(PHP >= 5.3.0, PECL fileinfo >= 0.1.0)","shortdesc":"Set libmagic configuration options","syntax":"\n   bool finfo_set_flags\n    ( resource $finfo\n   , int $options\n   )\n\n   bool finfo::set_flags\n    ( int $options\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b Fileinfo.\n   \u041e\u043f\u0446\u0438\u0438 \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u044b \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e \u0432  finfo_open() \n   \u0438\u043b\u0438 \u0434\u0440\u0443\u0433\u0438\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u0445 Fileinfo.\n  \n"},"floatval":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0432 \u0432\u0438\u0434\u0435 \u0447\u0438\u0441\u043b\u0430 \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439","syntax":"\n   float <b>floatval<\/b>\n    ( mixed $var\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 var \u0432 \u0432\u0438\u0434\u0435 \u0447\u0438\u0441\u043b\u0430 \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439 (float).\n  "},"flock":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c\u0430\u044f \u043a\u043e\u043d\u0441\u0443\u043b\u044c\u0442\u0430\u0442\u0438\u0432\u043d\u0430\u044f \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0430 \u0444\u0430\u0439\u043b\u043e\u0432","syntax":"\n   bool <b>flock<\/b>\n    ( resource $handle\n   , int $operation\n   [, int &$wouldblock\n  ] )","desc":"\n    flock() \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0438\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c\n   \u0447\u0442\u0435\u043d\u0438\u044f\/\u0437\u0430\u043f\u0438\u0441\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0430 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043d\u0430\n   \u043b\u044e\u0431\u043e\u0439 \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0435 (\u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 Unix \u0438 \u0434\u0430\u0436\u0435 Windows).\n  "},"floor":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u043a\u0440\u0443\u0433\u043b\u044f\u0435\u0442 \u0434\u0440\u043e\u0431\u044c \u0432 \u043c\u0435\u043d\u044c\u0448\u0443\u044e \u0441\u0442\u043e\u0440\u043e\u043d\u0443","syntax":"\n    float <b>floor<\/b>\n     ( float $value\n    )","desc":""},"flush":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u0431\u0440\u043e\u0441 \u0431\u0443\u0444\u0435\u0440\u0430 \u0432\u044b\u0432\u043e\u0434\u0430","syntax":"\n   void <b>flush<\/b>\n    ( void\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0447\u0438\u0449\u0430\u0435\u0442 \u0431\u0443\u0444\u0435\u0440 \u0432\u044b\u0432\u043e\u0434\u0430 PHP, \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u0432\u0441\u0451 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0431\u0443\u0444\u0435\u0440\u0430\n   \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f (\u0441 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f\u043c\u0438),\n   \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e \u043e\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u043e\u0433\u043e backend-\u0430 \u0443 PHP (CGI, web-\u0441\u0435\u0440\u0432\u0435\u0440 \u0438 \u0442.\u0434.).\n  "},"fmod":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0440\u043e\u0431\u043d\u044b\u0439 \u043e\u0441\u0442\u0430\u0442\u043e\u043a \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043f\u043e \u043c\u043e\u0434\u0443\u043b\u044e","syntax":"\n    float <b>fmod<\/b>\n     ( float $x\n    , float $y\n    )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0440\u043e\u0431\u043d\u044b\u0439 \u043e\u0441\u0442\u0430\u0442\u043e\u043a \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0434\u0435\u043b\u0438\u043c\u043e\u0433\u043e\n   (x) \u0438 \u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044f (y).\n   \u041e\u0441\u0442\u0430\u0442\u043e\u043a (r) \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0442\u0430\u043a: x = i * y + r, \u0433\u0434\u0435 \n   i - \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0446\u0435\u043b\u043e\u0435. \u0415\u0441\u043b\u0438 y \u043d\u0435\n   \u0440\u0430\u0432\u0435\u043d \u043d\u0443\u043b\u044e, \u0442\u043e r \u0438\u043c\u0435\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 \u0436\u0435 \u0437\u043d\u0430\u043a, \u043a\u0430\u043a x\n   \u0438 \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u0443, \u043c\u0435\u043d\u044c\u0448\u0443\u044e \u0438\u043b\u0438 \u0440\u0430\u0432\u043d\u0443\u044e \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u0435 y.\n  "},"fnmatch":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0441\u043e\u0432\u043f\u0430\u0434\u0435\u043d\u0438\u0435 \u0438\u043c\u0435\u043d\u0438 \u0444\u0430\u0439\u043b\u0430 \u0441 \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u043c","syntax":"\n   bool <b>fnmatch<\/b>\n    ( string $pattern\n   , string $string\n   [, int $flags = 0\n  ] )","desc":"\n    fnmatch() \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0435\u0442 \u043b\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n   string \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u043c \u043f\u043e\u0434\u0441\u0442\u0430\u043d\u043e\u0432\u043e\u043a \u043e\u0431\u043e\u043b\u043e\u0447\u043a\u0438\n   pattern.\n  "},"fopen":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0444\u0430\u0439\u043b \u0438\u043b\u0438 URL","syntax":"\n   resource <b>fopen<\/b>\n    ( string $filename\n   , string $mode\n   [, bool $use_include_path = false\n   [, resource $context\n  ]] )","desc":"\n    fopen() \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u044f\u0435\u0442 \u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0440\u0435\u0441\u0443\u0440\u0441, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439\n   \u0432 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0435 filename, \u0437\u0430 \u043f\u043e\u0442\u043e\u043a\u043e\u043c.\n  "},"forward_static_call_array":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"Call a static method and pass the arguments as array","syntax":"\n   mixed <b>forward_static_call_array<\/b>\n    ( callable $function\n   , array $parameters\n   )","desc":"\n   Calls a user defined function or method given by the function\n   parameter. This function must be called within a method context, it can't be \n   used outside a class.\n   It uses the late static\n   binding.\n   All arguments of the forwarded method are passed as values,\n   and as an array, similarly to  call_user_func_array().\n  "},"forward_static_call":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"Call a static method","syntax":"\n   mixed <b>forward_static_call<\/b>\n    ( callable $function\n   [, mixed $parameter\n   [, mixed $...\n  ]] )","desc":"\n   Calls a user defined function or method given by the function\n   parameter, with the following arguments. This function must be called within a method\n   context, it can't be used outside a class.\n   It uses the late static\n   binding.\n  "},"fpassthru":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0432\u0441\u0435 \u043e\u0441\u0442\u0430\u0432\u0448\u0438\u0435\u0441\u044f \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0433\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f","syntax":"\n   int <b>fpassthru<\/b>\n    ( resource $handle\n   )","desc":"\n   \u0427\u0438\u0442\u0430\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b\u043e\u0432\u044b\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u0441 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0434\u043e EOF\n   (\u043a\u043e\u043d\u0446\u0430 \u0444\u0430\u0439\u043b\u0430) \u0438 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432 \u0431\u0443\u0444\u0435\u0440 \u0432\u044b\u0432\u043e\u0434\u0430.\n  "},"fprintf":{"version":"(PHP 5)","shortdesc":"\u0417\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043e\u0442\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u043f\u043e\u0442\u043e\u043a","syntax":"\n   int <b>fprintf<\/b>\n    ( resource $handle\n   , string $format\n   [, mixed $args\n   [, mixed $...\n  ]] )","desc":"\n   \u0417\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u0443\u044e \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0438 \u0444\u043e\u0440\u043c\u0430\u0442\u0430\n   format, \u0432 \u043f\u043e\u0442\u043e\u043a, \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442\u0441\u044f\n   \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 handle.\n  "},"fputcsv":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\u0424\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u0432\u0438\u0434\u0435 CSV \u0438 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0435\u0451 \u0432 \u0444\u0430\u0439\u043b\u043e\u0432\u044b\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c","syntax":"\n   int <b>fputcsv<\/b>\n    ( resource $handle\n   , array $fields\n   [, string $delimiter = ','\n   [, string $enclosure = '\"'\n  ]] )","desc":"\n    fputcsv() \u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 (\u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u0443\u044e \u0432\n   \u0432\u0438\u0434\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 fields) \u0432 \u0432\u0438\u0434\u0435 CSV \u0438\n   \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0435\u0451 (\u0437\u0430\u043a\u0430\u043d\u0447\u0438\u0432\u0430\u044f \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u043e\u043c \u0441\u0442\u0440\u043e\u043a\u0438) \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b\n   handle.\n  "},"fputs":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  fwrite()","syntax":"","desc":""},"fread":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0411\u0438\u043d\u0430\u0440\u043d\u043e-\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0435 \u0447\u0442\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   string <b>fread<\/b>\n    ( resource $handle\n   , int $length\n   )","desc":"\n    fread() \u0447\u0438\u0442\u0430\u0435\u0442 \u0434\u043e\n   length \u0431\u0430\u0439\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0433\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f\n   handle. \u0427\u0442\u0435\u043d\u0438\u0435 \u043e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043a\u0430\u043a \u0442\u043e\u043b\u044c\u043a\u043e\n   \u0431\u044b\u043b\u043e \u0434\u043e\u0441\u0442\u0438\u0433\u043d\u0443\u0442\u043e \u043e\u0434\u043d\u043e \u0438\u0437 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u0439:\n   "},"FrenchToJD":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0434\u0430\u0442\u0443 \u0424\u0440\u0430\u043d\u0446\u0443\u0437\u0441\u043a\u043e\u0433\u043e \u0440\u0435\u0441\u043f\u0443\u0431\u043b\u0438\u043a\u0430\u043d\u0441\u043a\u043e\u0433\u043e \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044f \u0432 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \n   \u0434\u043d\u0435\u0439 \u0432 \u042e\u043b\u0438\u0430\u043d\u0441\u043a\u043e\u043c \u043b\u0435\u0442\u043e\u0438\u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0438\n  ","syntax":"\n   int frenchtojd\n    ( int $month\n   , int $day\n   , int $year\n   )","desc":"\n   \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0434\u0430\u0442\u0443 \u0424\u0440\u0430\u043d\u0446\u0443\u0437\u0441\u043a\u043e\u0433\u043e \u0440\u0435\u0441\u043f\u0443\u0431\u043b\u0438\u043a\u0430\u043d\u0441\u043a\u043e\u0433\u043e \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044f \u0432 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \n   \u0434\u043d\u0435\u0439 \u0432 \u042e\u043b\u0438\u0430\u043d\u0441\u043a\u043e\u043c \u043b\u0435\u0442\u043e\u0438\u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0438.\n  "},"fribidi_log2vis":{"version":"(PHP 4 >= 4.0.4 and PHP 4 <= 4.1.0, PECL fribidi >= 1.0)","shortdesc":"Convert a logical string to a visual one","syntax":"\n   string <b>fribidi_log2vis<\/b>\n    ( string $str\n   , string $direction\n   , int $charset\n   )","desc":"\n   Converts a logical string to a visual one.\n  "},"fscanf":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0444\u043e\u0440\u043c\u0430\u0442\u043e\u043c","syntax":"\n   mixed <b>fscanf<\/b>\n    ( resource $handle\n   , string $format\n   [, mixed &$...\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  fscanf() \u043f\u043e\u0445\u043e\u0436\u0430 \u043d\u0430\n    sscanf(), \u043d\u043e \u0431\u0435\u0440\u0451\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430,\n   \u0430\u0441\u0441\u043e\u0446\u0438\u0438\u0440\u0443\u0435\u043c\u043e\u0433\u043e \u0441 handle, \u0438 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0438\u0440\u0443\u0435\u0442 \u0438\u0445\n   \u0441\u043e\u0433\u043b\u0430\u0441\u043d\u043e \u0444\u043e\u0440\u043c\u0430\u0442\u0443 format, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u043f\u0438\u0441\u0430\u043d \u0432\n   \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  sprintf().\n  "},"fseek":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u0432 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u043c \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435","syntax":"\n   int <b>fseek<\/b>\n    ( resource $handle\n   , int $offset\n   [, int $whence = SEEK_SET\n  ] )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u0432 \u0444\u0430\u0439\u043b\u0435, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u0441\u044b\u043b\u0430\u0435\u0442\u0441\u044f\n   handle. \u041d\u043e\u0432\u043e\u0435 \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u0435, \u0438\u0437\u043c\u0435\u0440\u044f\u0435\u043c\u043e\u0435 \u0432 \u0431\u0430\u0439\u0442\u0430\u0445 \u043e\u0442\n   \u043d\u0430\u0447\u0430\u043b\u0430 \u0444\u0430\u0439\u043b\u0430, \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u043f\u0443\u0442\u0451\u043c \u043f\u0440\u0438\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\n   offset \u043a \u043f\u043e\u0437\u0438\u0446\u0438\u0438, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435\n   whence.\n  "},"fsockopen":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041e\u0442\u043a\u0440\u044b\u0432\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u0441\u043e\u043a\u0435\u0442\u043e\u043c \u0438\u043b\u0438 \u0434\u043e\u043c\u0435\u043d\u043d\u044b\u043c \u0441\u043e\u043a\u0435\u0442\u043e\u043c Unix\n  ","syntax":"\n   resource <b>fsockopen<\/b>\n    ( string $hostname\n   [, int $port = -1\n   [, int &$errno\n   [, string &$errstr\n   [, float $timeout = ini_get(\"default_socket_timeout\")\n  ]]]] )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u043e\u043a\u0435\u0442\u043e\u043c \u0440\u0435\u0441\u0443\u0440\u0441\u0430\n   hostname.\n  "},"fstat":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0444\u0430\u0439\u043b\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043e\u0442\u043a\u0440\u044b\u0442\u044b\u0439 \u0444\u0430\u0439\u043b\u043e\u0432\u044b\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c","syntax":"\n   array <b>fstat<\/b>\n    ( resource $handle\n   )","desc":"\n   \u0421\u043e\u0431\u0438\u0440\u0430\u0435\u0442 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u043c \u0444\u0430\u0439\u043b\u0435 \u043f\u043e \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u043c\u0443\n   \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044e handle. \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u0445\u043e\u0436\u0430 \u043d\u0430\n    stat(), \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u043e\u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0441\n   \u043e\u0442\u043a\u0440\u044b\u0442\u044b\u043c \u0444\u0430\u0439\u043b\u043e\u0432\u044b\u043c \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u043c, \u0430 \u043d\u0435 \u0438\u043c\u0435\u043d\u0435\u043c \u0444\u0430\u0439\u043b\u0430.\n  "},"ftell":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u043e\u0431\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u0447\u0442\u0435\u043d\u0438\u044f\/\u0437\u0430\u043f\u0438\u0441\u0438 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   int <b>ftell<\/b>\n    ( resource $handle\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0433\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f handle.\n  "},"ftok":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Convert a pathname and a project identifier to a System V IPC key","syntax":"\n   int <b>ftok<\/b>\n    ( string $pathname\n   , string $proj\n   )","desc":"\n   The function converts the pathname of an existing\n   accessible file and a project identifier into an\n   integer for use with for example\n    shmop_open() and other System V IPC keys. \n  "},"ftp_alloc":{"version":"(PHP 5)","shortdesc":"\u0420\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u0443\u0435\u0442 \u043c\u0435\u0441\u0442\u043e \u043d\u0430 \u0434\u0438\u0441\u043a\u0435 \u0434\u043b\u044f \u0437\u0430\u043a\u0430\u0447\u0438\u0432\u0430\u0435\u043c\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430","syntax":"\n   bool <b>ftp_alloc<\/b>\n    ( resource $ftp_stream\n   , int $filesize\n   [, string &$result\n  ] )","desc":"\n   \u041f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 ALLO FTP-\u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0434\u043b\u044f \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n   \u043c\u0435\u0441\u0442\u0430 \u043f\u043e\u0434 \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c\u044b\u0439 \u0444\u0430\u0439\u043b.\n  "},"ftp_cdup":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u0442 \u0432 \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0443\u044e \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e","syntax":"\n   bool <b>ftp_cdup<\/b>\n    ( resource $ftp_stream\n   )","desc":"\n   \u041f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u0442 \u0432 \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0443\u044e \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e.\n  "},"ftp_chdir":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e \u043d\u0430 FTP \u0441\u0435\u0440\u0432\u0435\u0440\u0435","syntax":"\n   bool <b>ftp_chdir<\/b>\n    ( resource $ftp_stream\n   , string $directory\n   )","desc":"\n   \u041c\u0435\u043d\u044f\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u0443\u044e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c.\n  "},"ftp_chmod":{"version":"(PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043f\u0440\u0430\u0432\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0444\u0430\u0439\u043b\u0443","syntax":"\n   int <b>ftp_chmod<\/b>\n    ( resource $ftp_stream\n   , int $mode\n   , string $filename\n   )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043f\u0440\u0430\u0432\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u0443\u0434\u0430\u043b\u0451\u043d\u043d\u043e\u043c\u0443 \u0444\u0430\u0439\u043b\u0443 \u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\n   mode.\n  "},"ftp_close":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 FTP-\u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c","syntax":"\n   bool <b>ftp_close<\/b>\n    ( resource $ftp_stream\n   )","desc":"\n    ftp_close() \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\n   \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c \u0438 \u043e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u0435\u0442 resource.\n  "},"ftp_connect":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 FTP-\u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c","syntax":"\n   resource <b>ftp_connect<\/b>\n    ( string $host\n   [, int $port = 21\n   [, int $timeout = 90\n  ]] )","desc":"\n    ftp_connect() \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 FTP-\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c\n   \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c host.\n  "},"ftp_delete":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0444\u0430\u0439\u043b \u043d\u0430 FTP-\u0441\u0435\u0440\u0432\u0435\u0440\u0435","syntax":"\n   bool <b>ftp_delete<\/b>\n    ( resource $ftp_stream\n   , string $path\n   )","desc":"\n    ftp_delete() \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0444\u0430\u0439\u043b, \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c\n   path, \u0441 FTP-\u0441\u0435\u0440\u0432\u0435\u0440\u0430.\n  "},"ftp_exec":{"version":"(PHP 4 >= 4.0.3, PHP 5)","shortdesc":"\u0417\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u043d\u0430 FTP-\u0441\u0435\u0440\u0432\u0435\u0440\u0435","syntax":"\n   bool <b>ftp_exec<\/b>\n    ( resource $ftp_stream\n   , string $command\n   )","desc":"\n   \u041f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 SITE EXEC command \u043d\u0430 FTP-\u0441\u0435\u0440\u0432\u0435\u0440.\n  "},"ftp_fget":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043a\u0430\u0447\u0438\u0432\u0430\u0435\u0442 \u0444\u0430\u0439\u043b \u0441 FTP-\u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0435\u0433\u043e \u0432 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u043c \u0444\u0430\u0439\u043b\u0435","syntax":"\n   bool <b>ftp_fget<\/b>\n    ( resource $ftp_stream\n   , resource $handle\n   , string $remote_file\n   , int $mode\n   [, int $resumepos = 0\n  ] )","desc":"\n    ftp_fget() \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0444\u0430\u0439\u043b\n   remote_file \u0441 FTP-\u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0438 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442\n   \u0435\u0433\u043e \u0432 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b\u043e\u0432\u044b\u0439 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440.\n  "},"ftp_fput":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043e\u0442\u043a\u0440\u044b\u0442\u044b\u0439 \u0444\u0430\u0439\u043b \u043d\u0430 FTP-\u0441\u0435\u0440\u0432\u0435\u0440","syntax":"\n   bool <b>ftp_fput<\/b>\n    ( resource $ftp_stream\n   , string $remote_file\n   , resource $handle\n   , int $mode\n   [, int $startpos = 0\n  ] )","desc":"\n    ftp_fput() \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0433\u043e \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0430 \u0432\n   \u0443\u0434\u0430\u043b\u0451\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u043d\u0430 FTP \u0441\u0435\u0440\u0432\u0435\u0440\u0435.\n  "},"ftp_get_option":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b FTP \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f","syntax":"\n   mixed <b>ftp_get_option<\/b>\n    ( resource $ftp_stream\n   , int $option\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0448\u0435\u043d\u043d\u043e\u0439 \u043e\u043f\u0446\u0438\u0438\n   option \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e FTP \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f.\n  "},"ftp_get":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0444\u0430\u0439\u043b \u0441 FTP-\u0441\u0435\u0440\u0432\u0435\u0440\u0430","syntax":"\n   bool <b>ftp_get<\/b>\n    ( resource $ftp_stream\n   , string $local_file\n   , string $remote_file\n   , int $mode\n   [, int $resumepos = 0\n  ] )","desc":"\n    ftp_get() \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0443\u0434\u0430\u043b\u0451\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u0441 FTP-\u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0438\n   \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0435\u0433\u043e \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e.\n  "},"ftp_login":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0432\u0445\u043e\u0434 \u043d\u0430 FTP \u0441\u0435\u0440\u0432\u0435\u0440","syntax":"\n   bool <b>ftp_login<\/b>\n    ( resource $ftp_stream\n   , string $username\n   , string $password\n   )","desc":" \n   \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0432\u0445\u043e\u0434 \u043d\u0430 FTP \u0441\u0435\u0440\u0432\u0435\u0440.\n  "},"ftp_mdtm":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   int <b>ftp_mdtm<\/b>\n    ( resource $ftp_stream\n   , string $remote_file\n   )","desc":"\n    ftp_mdtm() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438\n   \u0443\u0434\u0430\u043b\u0451\u043d\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430.\n  "},"ftp_mkdir":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e","syntax":"\n   string <b>ftp_mkdir<\/b>\n    ( resource $ftp_stream\n   , string $directory\n   )","desc":" \n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e directory \u043d\u0430 FTP \u0441\u0435\u0440\u0432\u0435\u0440\u0435.\n  "},"ftp_nb_continue":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0435\u0442 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u0443\u044e \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e","syntax":"\n   int <b>ftp_nb_continue<\/b>\n    ( resource $ftp_stream\n   )","desc":" \n   \u041f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0435\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0443 \u0438\u043b\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 \u0432 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435.\n  "},"ftp_nb_fget":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0421\u043a\u0430\u0447\u0438\u0432\u0430\u0435\u0442 \u0444\u0430\u0439\u043b \u0441 FTP \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0432 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0435\u0433\u043e \u0432 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u043c \u0444\u0430\u0439\u043b\u0435","syntax":"\n   int <b>ftp_nb_fget<\/b>\n    ( resource $ftp_stream\n   , resource $handle\n   , string $remote_file\n   , int $mode\n   [, int $resumepos = 0\n  ] )","desc":"\n    ftp_nb_fget() \u0441\u043a\u0430\u0447\u0438\u0432\u0430\u0435\u0442 \u0443\u0434\u0430\u043b\u0451\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u0441 FTP-\u0441\u0435\u0440\u0432\u0435\u0440\u0430.\n  "},"ftp_nb_fput":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043e\u0442\u043a\u0440\u044b\u0442\u044b\u0439 \u0444\u0430\u0439\u043b \u043d\u0430 FTP-\u0441\u0435\u0440\u0432\u0435\u0440 \u0432 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435","syntax":"\n   int <b>ftp_nb_fput<\/b>\n    ( resource $ftp_stream\n   , string $remote_file\n   , resource $handle\n   , int $mode\n   [, int $startpos = 0\n  ] )","desc":"\n    ftp_nb_fput() \u0437\u0430\u043a\u0430\u0447\u0438\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0430 \u0444\u0430\u0439\u043b\u0430\n   \u0432 \u0443\u0434\u0430\u043b\u0451\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u043d\u0430 FTP-\u0441\u0435\u0440\u0432\u0435\u0440\u0435.\n  "},"ftp_nb_get":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0421\u043a\u0430\u0447\u0438\u0432\u0430\u0435\u0442 \u0444\u0430\u0439\u043b \u0441 FTP-\u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0432 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0435\u0433\u043e \u0432 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0444\u0430\u0439\u043b","syntax":"\n   int <b>ftp_nb_get<\/b>\n    ( resource $ftp_stream\n   , string $local_file\n   , string $remote_file\n   , int $mode\n   [, int $resumepos = 0\n  ] )","desc":"\n    ftp_nb_get() \u0441\u043a\u0430\u0447\u0438\u0432\u0430\u0435\u0442 \u0443\u0434\u0430\u043b\u0451\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u0441 FTP-\u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0438\n   \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0435\u0433\u043e \u0432 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0444\u0430\u0439\u043b.\n  "},"ftp_nb_put":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0444\u0430\u0439\u043b \u043d\u0430 FTP \u0441\u0435\u0440\u0432\u0435\u0440 \u0432 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435","syntax":"\n   int <b>ftp_nb_put<\/b>\n    ( resource $ftp_stream\n   , string $remote_file\n   , string $local_file\n   , int $mode\n   [, int $startpos = 0\n  ] )","desc":"\n    ftp_nb_put() \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u043d\u0430 FTP-\u0441\u0435\u0440\u0432\u0435\u0440.\n  "},"ftp_nlist":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0444\u0430\u0439\u043b\u043e\u0432 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438","syntax":"\n     array <b>ftp_nlist<\/b>\n      ( resource $ftp_stream\n     , string $directory\n     )","desc":""},"ftp_pasv":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0438\u043b\u0438 \u0432\u044b\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043f\u0430\u0441\u0441\u0438\u0432\u043d\u044b\u0439 \u0440\u0435\u0436\u0438\u043c","syntax":"\n   bool <b>ftp_pasv<\/b>\n    ( resource $ftp_stream\n   , bool $pasv\n   )","desc":"\n    ftp_pasv() \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0438\u043b\u0438 \u0432\u044b\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043f\u0430\u0441\u0441\u0438\u0432\u043d\u044b\u0439 \u0440\u0435\u0436\u0438\u043c.\n   \u0412 \u043f\u0430\u0441\u0441\u0438\u0432\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u043d\u0438\u0446\u0438\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c, \u0430 \u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c.\n   \u0414\u0430\u043d\u043d\u044b\u0439 \u0440\u0435\u0436\u0438\u043c \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u0441\u044f \u0432 \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u043a\u043b\u0438\u0435\u043d\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0437\u0430\n   \u0444\u0430\u0439\u0440\u0432\u043e\u043b\u043b\u043e\u043c.\n  "},"ftp_put":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0444\u0430\u0439\u043b \u043d\u0430 FTP-\u0441\u0435\u0440\u0432\u0435\u0440","syntax":"\n   bool <b>ftp_put<\/b>\n    ( resource $ftp_stream\n   , string $remote_file\n   , string $local_file\n   , int $mode\n   [, int $startpos = 0\n  ] )","desc":"\n    ftp_put() \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u043d\u0430 FTP-\u0441\u0435\u0440\u0432\u0435\u0440.\n  "},"ftp_pwd":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438","syntax":"\n     string <b>ftp_pwd<\/b>\n      ( resource $ftp_stream\n     )","desc":"\n    "},"ftp_quit":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  ftp_close()","syntax":"","desc":""},"ftp_raw":{"version":"(PHP 5)","shortdesc":"\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u0443\u044e \u043a\u043e\u043c\u0430\u043d\u0434\u0443 FTP-\u0441\u0435\u0440\u0432\u0435\u0440\u0443","syntax":"\n      array <b>ftp_raw<\/b>\n       ( resource $ftp_stream\n      , string $command\n      )","desc":"\n     \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u0443\u044e \u043a\u043e\u043c\u0430\u043d\u0434\u0443 command FTP-\u0441\u0435\u0440\u0432\u0435\u0440\u0443.\n    "},"ftp_rawlist":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0444\u0430\u0439\u043b\u043e\u0432 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438","syntax":"\n   array <b>ftp_rawlist<\/b>\n    ( resource $ftp_stream\n   , string $directory\n   [, bool $recursive = false\n  ] )","desc":"\n    ftp_rawlist() \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 FTP-\u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u043a\u043e\u043c\u0430\u043d\u0434\u0443\n   LIST \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432 \u0432\u0438\u0434\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u0430.\n  "},"ftp_rename":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0444\u0430\u0439\u043b \u0438\u043b\u0438 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e \u043d\u0430 FTP-\u0441\u0435\u0440\u0432\u0435\u0440\u0435","syntax":"\n   bool <b>ftp_rename<\/b>\n    ( resource $ftp_stream\n   , string $oldname\n   , string $newname\n   )","desc":"\n    ftp_rename() \u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0444\u0430\u0439\u043b \u0438\u043b\u0438 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e \u043d\u0430\n   FTP-\u0441\u0435\u0440\u0432\u0435\u0440\u0435.\n  "},"ftp_rmdir":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e","syntax":"\n      bool <b>ftp_rmdir<\/b>\n       ( resource $ftp_stream\n      , string $directory\n      )","desc":" \n     \u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e directory. \n    "},"ftp_set_option":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0441 FTP \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c","syntax":"\n     bool <b>ftp_set_option<\/b>\n      ( resource $ftp_stream\n     , int $option\n     , mixed $value\n     )","desc":"\n     \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0441 FTP \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c.\n    "},"ftp_site":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 SITE","syntax":"\n   bool <b>ftp_site<\/b>\n    ( resource $ftp_stream\n   , string $command\n   )","desc":"\n    ftp_site() \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u043a\u043e\u043c\u0430\u043d\u0434\u0443\n   SITE FTP-\u0441\u0435\u0440\u0432\u0435\u0440\u0443.\n  "},"ftp_size":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0430\u0437\u043c\u0435\u0440 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430","syntax":"\n   int <b>ftp_size<\/b>\n    ( resource $ftp_stream\n   , string $remote_file\n   )","desc":"\n    ftp_size() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0430\u0437\u043c\u0435\u0440 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0432 \u0431\u0430\u0439\u0442\u0430\u0445.\n  "},"ftp_ssl_connect":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 FTP-\u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c \u0447\u0435\u0440\u0435\u0437 SSL","syntax":"\n   resource <b>ftp_ssl_connect<\/b>\n    ( string $host\n   [, int $port = 21\n   [, int $timeout = 90\n  ]] )","desc":"\n    ftp_ssl_connect() \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 SSL \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441\n   FTP-\u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c, \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c host.\n  "},"ftp_systype":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0438\u043f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b FTP-\u0441\u0435\u0440\u0432\u0435\u0440\u0430","syntax":"\n   string <b>ftp_systype<\/b>\n    ( resource $ftp_stream\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0438\u043f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b FTP-\u0441\u0435\u0440\u0432\u0435\u0440\u0430.\n  "},"ftruncate":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0440\u0435\u0437\u0430\u0435\u0442 \u0444\u0430\u0439\u043b \u0434\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u0434\u043b\u0438\u043d\u043d\u044b","syntax":"\n   bool <b>ftruncate<\/b>\n    ( resource $handle\n   , int $size\n   )","desc":"\n   \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0444\u0430\u0439\u043b\u043e\u0432\u044b\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c handle \u0438 \u0443\u0440\u0435\u0437\u0430\u0435\u0442\n   \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0444\u0430\u0439\u043b \u0434\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430 size.\n  "},"func_get_arg":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432","syntax":"\n   mixed <b>func_get_arg<\/b>\n    ( int $arg_num\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0439\n   \u0444\u0443\u043d\u043a\u0446\u0438\u0438.\n  "},"func_get_args":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u0438","syntax":"\n   array <b>func_get_args<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u0438.\n  "},"GearmanWorker::setId":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"\n   \u041d\u0430\u0437\u043d\u0430\u0447\u0430\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0443 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440, \u0447\u0442\u043e\u0431\u044b \u0432 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u043c \u0438\u043c\u0435\u0442\u044c\n   \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043e\u043f\u0440\u043e\u0441\u0438\u0442\u044c \u0432\u0441\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438\n  ","syntax":"\n   public bool <b>GearmanWorker::setId<\/b>\n    ( string $id\n   )","desc":"\n   \u041d\u0430\u0437\u043d\u0430\u0447\u0430\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0443 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440.\n  "},"func_num_args":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432, \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0438","syntax":"\n   int <b>func_num_args<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432, \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0438.\n  "},"function_exists":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE, \u0435\u0441\u043b\u0438 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0430","syntax":"\n   bool <b>function_exists<\/b>\n    ( string $function_name\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0435\u0441\u0442\u044c \u043b\u0438 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439, \u043a\u0430\u043a \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0445, \u0442\u0430\u043a \u0438\n   \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445, \u0444\u0443\u043d\u043a\u0446\u0438\u044f function_name.\n  "},"fwrite":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0411\u0438\u043d\u0430\u0440\u043d\u043e-\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u0430\u044f \u0437\u0430\u043f\u0438\u0441\u044c \u0432 \u0444\u0430\u0439\u043b","syntax":"\n   int <b>fwrite<\/b>\n    ( resource $handle\n   , string $string\n   [, int $length\n  ] )","desc":""},"gc_collect_cycles":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\n   \u041f\u0440\u0438\u043d\u0443\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0437\u0430\u043f\u0443\u0441\u043a \u0441\u0431\u043e\u0440\u0449\u0438\u043a\u0430 \u043c\u0443\u0441\u043e\u0440\u0430\n  ","syntax":"\n   int <b>gc_collect_cycles<\/b>\n    ( void\n   )","desc":"\n   \u042f\u0432\u043d\u044b\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u043c\u0435\u0445\u0430\u043d\u0438\u0437\u043c \u043f\u043e\u0438\u0441\u043a\u0430 \u0446\u0438\u043a\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0441\u0441\u044b\u043b\u043e\u043a.\n  "},"gc_disable":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u041e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0441\u0431\u043e\u0440\u0449\u0438\u043a \u0446\u0438\u043a\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0441\u0441\u044b\u043b\u043e\u043a","syntax":"\n   void <b>gc_disable<\/b>\n    ( void\n   )","desc":"\n   \u041e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0441\u0431\u043e\u0440\u0449\u0438\u043a \u0446\u0438\u043a\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0441\u0441\u044b\u043b\u043e\u043a, \u043f\u0443\u0442\u0435\u043c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n   zend.enable_gc \u0432 0.\n  "},"gc_enable":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\n   \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0441\u0431\u043e\u0440\u0449\u0438\u043a \u0446\u0438\u043a\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0441\u0441\u044b\u043b\u043e\u043a\n  ","syntax":"\n   void <b>gc_enable<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0441\u0431\u043e\u0440\u0449\u0438\u043a \u0446\u0438\u043a\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0441\u0441\u044b\u043b\u043e\u043a, \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u044f\n   zend.enable_gc \u0432 1.\n  "},"gc_enabled":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0441\u0431\u043e\u0440\u0449\u0438\u043a\u0430 \u0446\u0438\u043a\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0441\u0441\u044b\u043b\u043e\u043a\n  ","syntax":"\n   bool <b>gc_enabled<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0441\u0431\u043e\u0440\u0449\u0438\u043a\u0430 \u0446\u0438\u043a\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0441\u0441\u044b\u043b\u043e\u043a.\n  "},"gd_info":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\n   \u0412\u044b\u0432\u043e\u0434 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u043e\u0439 GD \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0435\n  ","syntax":"\n   array <b>gd_info<\/b>\n    ( void\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u0438 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044f\u0445 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u043e\u0439 GD \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438.\n  "},"geoip_continent_code_by_name":{"version":"(PECL geoip >= 1.0.3)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u0432\u0443\u0445\u0441\u0438\u043c\u0432\u043e\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u0434 \u043a\u043e\u043d\u0442\u0438\u043d\u0435\u043d\u0442\u0430","syntax":"\n   string <b>geoip_continent_code_by_name<\/b>\n    ( string $hostname\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  geoip_continent_code_by_name() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0432\u0443\u0445\u0441\u0438\u043c\u0432\u043e\u043b\u044c\u043d\u044b\u0439\n   \u043a\u043e\u0434 \u043a\u043e\u043d\u0442\u0438\u043d\u0435\u043d\u0442\u0430,\u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0438\u043c\u0435\u043d\u0438 \u0445\u043e\u0441\u0442\u0430 \u0438\u043b\u0438 IP-\u0430\u0434\u0440\u0435\u0441\u0443.\n  "},"geoip_country_code_by_name":{"version":"(PECL geoip >= 0.2.0)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u0432\u0443\u0445\u0441\u0438\u043c\u0432\u043e\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u0434 \u0441\u0442\u0440\u0430\u043d\u044b","syntax":"\n   string <b>geoip_country_code_by_name<\/b>\n    ( string $hostname\n   )","desc":"\n    \u0424\u0443\u043d\u043a\u0446\u0438\u044f  geoip_country_code_by_name() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0432\u0443\u0445\u0441\u0438\u043c\u0432\u043e\u043b\u044c\u043d\u044b\u0439\n    \u043a\u043e\u0434 \u0441\u0442\u0440\u0430\u043d\u044b, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0438\u043c\u0435\u043d\u0438 \u0445\u043e\u0441\u0442\u0430 \u0438\u043b\u0438 IP-\u0430\u0434\u0440\u0435\u0441\u0443.\n  "},"geoip_country_code3_by_name":{"version":"(PECL geoip >= 0.2.0)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0442\u0440\u0435\u0445\u0441\u0438\u043c\u0432\u043e\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u0434 \u0441\u0442\u0440\u0430\u043d\u044b","syntax":"\n   string <b>geoip_country_code3_by_name<\/b>\n    ( string $hostname\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  geoip_country_code3_by_name() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0440\u0435\u0445\u0441\u0438\u043c\u0432\u043e\u043b\u044c\u043d\u044b\u0439\n    \u043a\u043e\u0434 \u0441\u0442\u0440\u0430\u043d\u044b, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0438\u043c\u0435\u043d\u0438 \u0445\u043e\u0441\u0442\u0430 \u0438\u043b\u0438 IP-\u0430\u0434\u0440\u0435\u0441\u0443.\n  "},"geoip_country_name_by_name":{"version":"(PECL geoip >= 0.2.0)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u043e\u043b\u043d\u043e\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u0430\u043d\u044b","syntax":"\n   string <b>geoip_country_name_by_name<\/b>\n    ( string $hostname\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  geoip_country_name_by_name() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\n   \u043f\u043e\u043b\u043d\u043e\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u0430\u043d\u044b, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0438\u043c\u0435\u043d\u0438 \u0445\u043e\u0441\u0442\u0430 \u0438\u043b\u0438 IP-\u0430\u0434\u0440\u0435\u0441\u0443.\n  "},"geoip_database_info":{"version":"(PECL geoip >= 0.2.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0431\u0430\u0437\u0435 GeoIP","syntax":"\n   string <b>geoip_database_info<\/b>\n    ([ int $database = GEOIP_COUNTRY_EDITION\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  geoip_database_info() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0435\u0440\u0441\u0438\u044e \u0431\u0430\u0437\u044b\n   GeoIP, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0443\u044e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044e \u0432 \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u043c \u0444\u0430\u0439\u043b\u0435.\n  "},"geoip_db_avail":{"version":"(PECL geoip >= 1.0.1)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0441\u0442\u044c \u0431\u0430\u0437\u044b GeoIP","syntax":"\n   bool <b>geoip_db_avail<\/b>\n    ( int $database\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  geoip_db_avail() \u043e\u043f\u0440\u0435\u043b\u0435\u043e\u044f\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u043b\u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0430\u044f\n   \u0431\u0430\u0437\u0430 GeoIP \u0438 \u043c\u043e\u0436\u0435\u0442 \u043b\u0438 \u0431\u044b\u0442\u044c \u043e\u0442\u043a\u0440\u044b\u0442\u0430 \u043d\u0430 \u0434\u0438\u0441\u043a\u0435.\n  "},"geoip_db_filename":{"version":"(PECL geoip >= 1.0.1)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u0444\u0430\u0439\u043b\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0439 \u0431\u0430\u0437\u044b GeoIP","syntax":"\n   string <b>geoip_db_filename<\/b>\n    ( int $database\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  geoip_db_filename() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u0444\u0430\u0439\u043b\u0430 \n   \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0439 \u0431\u0430\u0437\u044b GeoIP.\n  "},"geoip_db_get_all_info":{"version":"(PECL geoip >= 1.0.1)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u0442\u0438\u043f\u0430\u0445 \u0431\u0430\u0437\u044b GeoIP","syntax":"\n   array <b>geoip_db_get_all_info<\/b>\n    ( void\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  geoip_db_get_all_info() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \n   \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u0442\u0438\u043f\u0430\u0445 \u0431\u0430\u0437\u044b GeoIP  \u0432 \u0432\u0438\u0434\u0435 \n   \u043c\u043d\u043e\u0433\u043e\u043c\u0435\u0440\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430.\n  "},"geoip_id_by_name":{"version":"(PECL geoip >= 0.2.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0438\u043f \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f","syntax":"\n   int <b>geoip_id_by_name<\/b>\n    ( string $hostname\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  geoip_id_by_name() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0438\u043f \u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \n   \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u0438\u043c\u0435\u043d\u0438 \u0445\u043e\u0441\u0442\u0430 \u0438\u043b\u0438 IP \u0430\u0434\u0440\u0435\u0441\u0430.\n  "},"geoip_isp_by_name":{"version":"(PECL geoip >= 1.0.2)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 (ISP)","syntax":"\n   string <b>geoip_isp_by_name<\/b>\n    ( string $hostname\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  geoip_isp_by_name() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 (ISP)\n   \u0443\u043a\u0430\u0437\u0430\u043d\u043e\u0433\u043e IP \u0430\u0434\u0440\u0435\u0441\u0430.\n  "},"geoip_org_by_name":{"version":"(PECL geoip >= 0.2.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438, \u0432\u043b\u0430\u0434\u0435\u044e\u0449\u0435\u0439 IP \u0430\u0434\u0440\u0435\u0441\u043e\u043c","syntax":"\n   string <b>geoip_org_by_name<\/b>\n    ( string $hostname\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  geoip_org_by_name() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f\n   \u0432\u043b\u0430\u0434\u0435\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u043d\u044b\u043c IP \u0430\u0434\u0440\u0435\u0441\u043e\u043c.\n  "},"geoip_record_by_name":{"version":"(PECL geoip >= 0.2.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u0430\u0434\u0440\u0435\u0441\u0435, \u043d\u0430\u0439\u0434\u0435\u043d\u043e\u043c \u0432 \u0431\u0430\u0437\u0435 GeoIP","syntax":"\n   array <b>geoip_record_by_name<\/b>\n    ( string $hostname\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  geoip_record_by_name() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e\n   \u043e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u043c \u0438\u043c\u0435\u043d\u0438 \u0445\u043e\u0441\u0442\u0430 \u0438\u043b\u0438 IP \u0430\u0434\u0440\u0435\u0441\u0430.\n  "},"geoip_region_by_name":{"version":"(PECL geoip >= 0.2.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u0434\u044b \u0441\u0442\u0440\u0430\u043d\u044b \u0438 \u0440\u0435\u0433\u0438\u043e\u043d\u0430","syntax":"\n   array <b>geoip_region_by_name<\/b>\n    ( string $hostname\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f geoip_region_by_name() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u0434\u044b \u0441\u0442\u0440\u0430\u043d\u044b \u0438 \u0440\u0435\u0433\u0438\u043e\u043d\u0430,\n   \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u0438\u043c\u0435\u043d\u0438 \u0445\u043e\u0441\u0442\u0430 \u0438\u043b\u0438 IP \u0430\u0434\u0440\u0435\u0441\u0443.\n  "},"geoip_region_name_by_code":{"version":"(PECL geoip >= 1.0.4)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0435\u0433\u0438\u043e\u043d\u0430 \u0434\u043b\u044f \u0432\u044b\u0431\u0440\u0430\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u044b \u0438 \u043a\u043e\u0434\u0430 \u0440\u0435\u0433\u0438\u043e\u043d\u0430","syntax":"\n   string <b>geoip_region_name_by_code<\/b>\n    ( string $country_code\n   , string $region_code\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  geoip_region_name_by_code() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0435\u0433\u0438\u043e\u043d\u0430\n   \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u0430\u043d\u044b \u0438 \u043a\u043e\u0434\u0430 \u0440\u0435\u0433\u0438\u043e\u043d\u0430.\n  "},"geoip_time_zone_by_country_and_region":{"version":"(PECL geoip >= 1.0.4)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0437\u043e\u043d\u0443 \u0438 \u043a\u043e\u0434 \u0440\u0435\u0433\u0438\u043e\u043d\u0430 \u0434\u043b\u044f \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0441\u0442\u0440\u0430\u043d","syntax":"\n   string <b>geoip_time_zone_by_country_and_region<\/b>\n    ( string $country_code\n   [, string $region_code\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  geoip_time_zone_by_country_and_region() \u0432\u0435\u0440\u043d\u0435\u0442\n   \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0437\u043e\u043d\u0443 \u0438 \u043a\u043e\u0434 \u0440\u0435\u0433\u0438\u043e\u043d\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u0430\u043d\u044b.\n  "},"get_browser":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u043e\u0431\u0449\u0430\u0435\u0442 \u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044f\u0445 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f","syntax":"\n   mixed <b>get_browser<\/b>\n    ([ string $user_agent\n   [, bool $return_array = false\n  ]] )","desc":"\n   \u041f\u044b\u0442\u0430\u0435\u0442\u0441\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u044f \u043f\u043e\u0438\u0441\u043a\n   \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435 \u0432 \u0444\u0430\u0439\u043b\u0435 browscap.ini.\n  "},"get_called_class":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u0418\u043c\u044f \u043a\u043b\u0430\u0441\u0441\u0430, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u043e\u0437\u0434\u043d\u0435\u0433\u043e \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u043d\u0438\u044f","syntax":"\n   string <b>get_called_class<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u043a\u043b\u0430\u0441\u0441\u0430, \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0431\u044b\u043b \u0432\u044b\u0437\u0432\u0430\u043d \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043c\u0435\u0442\u043e\u0434.\n  "},"get_cfg_var":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0418\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 PHP\n  ","syntax":"\n   string <b>get_cfg_var<\/b>\n    ( string $option\n   )","desc":"\n   \u0418\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 PHP option.\n  "},"get_class_methods":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0438\u043c\u0435\u043d \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u043a\u043b\u0430\u0441\u0441\u0430","syntax":"\n   array <b>get_class_methods<\/b>\n    ( mixed $class_name\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0438\u043c\u0435\u043d \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u043a\u043b\u0430\u0441\u0441\u0430.\n  "},"get_class_vars":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u043a\u043b\u0430\u0441\u0441\u0430","syntax":"\n   array <b>get_class_vars<\/b>\n    ( string $class_name\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430.\n  "},"get_class":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u043a\u043b\u0430\u0441\u0441\u0430, \u043a \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0438\u0442 \u043e\u0431\u044a\u0435\u043a\u0442","syntax":"\n   string <b>get_class<\/b>\n    ([ object $object = NULL\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u043a\u043b\u0430\u0441\u0441\u0430, \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u043c \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f\n   \u043e\u0431\u044a\u0435\u043a\u0442 object.\n  "},"get_current_user":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043c\u0435\u043d\u0438 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e PHP \u0441\u043a\u0440\u0438\u043f\u0442\u0430\n  ","syntax":"\n   string <b>get_current_user<\/b>\n    ( void\n   )","desc":""},"get_declared_classes":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u0438\u043c\u0435\u043d\u0430\u043c\u0438 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432","syntax":"\n   array <b>get_declared_classes<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u043a\u043b\u0430\u0441\u0441\u044b.\n  "},"get_declared_interfaces":{"version":"(PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0432\u0441\u0435\u0445 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432","syntax":"\n   array <b>get_declared_interfaces<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b.\n  "},"get_declared_traits":{"version":"(PHP 5 >= 5.4.0)","shortdesc":"Returns an array of all declared traits","syntax":"\n   array <b>get_declared_traits<\/b>\n    ( void\n   )","desc":"\n\n  "},"get_defined_constants":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u0438\u043c\u0435\u043d\u0430\u043c\u0438 \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 \u0432\u0441\u0435\u0445 \u043f\u0440\u0435\u0434\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445\n   \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\n  ","syntax":"\n   array <b>get_defined_constants<\/b>\n    ([ bool $categorize = false\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u0438\u043c\u0435\u043d\u0430\u043c\u0438 \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 \u0432\u0441\u0435\u0445 \u043f\u0440\u0435\u0434\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445\n   \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442. \u041c\u0430\u0441\u0441\u0438\u0432 \u0442\u0430\u043a\u0436\u0435 \u0431\u0443\u0434\u0435\u0442 \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0432 \u0441\u0435\u0431\u044f \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u044b, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0435\n   \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f\u043c\u0438, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439  define().\n  "},"get_defined_functions":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0432\u0441\u0435\u0445 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439","syntax":"\n   array <b>get_defined_functions<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0432\u0441\u0435\u0445 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439.\n  "},"get_defined_vars":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0432\u0441\u0435\u0445 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445\n  ","syntax":"\n   array <b>get_defined_vars<\/b>\n    ( void\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u043d\u043e\u0433\u043e\u043c\u0435\u0440\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0441\u043f\u0438\u0441\u043e\u043a\n   \u0432\u0441\u0435\u0445 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445, \u0431\u0443\u0434\u044c \u0442\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f,\n   \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0438\u043b\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c,\n   \u0432 \u0442\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0431\u044b\u043b\u0430 \u0432\u044b\u0437\u0432\u0430\u043d\u0430\n    get_defined_vars().\n  "},"get_extension_funcs":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0438\u043c\u0435\u043d \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u043c\u043e\u0434\u0443\u043b\u044f\n  ","syntax":"\n   array <b>get_extension_funcs<\/b>\n    ( string $module_name\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u0435\u043d\u0430 \u0432\u0441\u0435\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u0432 \u043c\u043e\u0434\u0443\u043b\u0435 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c\n   module_name.\n  "},"get_headers":{"version":"(PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0441\u0435 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0438\u0437 \u043e\u0442\u0432\u0435\u0442\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u043d\u0430 HTTP-\u0437\u0430\u043f\u0440\u043e\u0441","syntax":"\n   array <b>get_headers<\/b>\n    ( string $url\n   [, int $format = 0\n  ] )","desc":"\n    get_headers() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u043c\u0438 \u0438\u0437 \u043e\u0442\u0432\u0435\u0442\u0430\n   \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u043d\u0430 HTTP-\u0437\u0430\u043f\u0440\u043e\u0441.\n  "},"get_html_translation_table":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0439, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438  htmlspecialchars() \u0438  htmlentities()","syntax":"\n   array <b>get_html_translation_table<\/b>\n    ([ int $table = HTML_SPECIALCHARS\n   [, int $flags = ENT_COMPAT | ENT_HTML401\n   [, string $encoding = 'UTF-8'\n  ]]] )","desc":"\n    get_html_translation_table() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0430\u0431\u043b\u0438\u0446\u0443\n   \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0439, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438  htmlspecialchars()\n   \u0438  htmlentities().\n  "},"get_include_path":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 include_path\n  ","syntax":"\n   string <b>get_include_path<\/b>\n    ( void\n   )","desc":""},"get_included_files":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0438\u043c\u0435\u043d \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044b\u0445 \u0432 \u0441\u043a\u0440\u0438\u043f\u0442 \u0444\u0430\u0439\u043b\u043e\u0432\n  ","syntax":"\n   array <b>get_included_files<\/b>\n    ( void\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438\u043c\u0435\u043d\u0430 \u0432\u0441\u0435\u0445 \u0444\u0430\u0439\u043b\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u044b\u043b\u0438 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u044b \u0432 \u0441\u043a\u0440\u0438\u043f\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438\n    include,\n    include_once,\n    require \u0438\u043b\u0438\n    require_once.\n  "},"get_loaded_extensions":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0438\u043c\u0435\u043d \u0432\u0441\u0435\u0445 \u0441\u043a\u043e\u043c\u043f\u0438\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0438 \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0445 \u043c\u043e\u0434\u0443\u043b\u0435\u0439\n  ","syntax":"\n   array <b>get_loaded_extensions<\/b>\n    ([ bool $zend_extensions = false\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0438\u043c\u0435\u043d \u0432\u0441\u0435\u0445 \u0441\u043a\u043e\u043c\u043f\u0438\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0438 \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0445 \u0432 PHP\n   \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440\u0435 \u043c\u043e\u0434\u0443\u043b\u0435\u0439.\n  "},"get_magic_quotes_gpc":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 magic_quotes_gpc\n  ","syntax":"\n   bool <b>get_magic_quotes_gpc<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 magic_quotes_gpc \n  "},"get_magic_quotes_runtime":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 magic_quotes_runtime\n  ","syntax":"\n   bool <b>get_magic_quotes_runtime<\/b>\n    ( void\n   )","desc":""},"get_meta_tags":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0418\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0432\u0441\u0435\u0445 \u043c\u0435\u0442\u0430-\u0442\u0435\u0433\u043e\u0432 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u0430\u043a \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432","syntax":"\n   array <b>get_meta_tags<\/b>\n    ( string $filename\n   [, bool $use_include_path = false\n  ] )","desc":"\n   \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 filename \u0438 \u0440\u0430\u0437\u0431\u0438\u0440\u0430\u0435\u0442 \u0435\u0433\u043e \u0441\u0442\u0440\u043e\u043a\u0430 \u0437\u0430 \u0441\u0442\u0440\u043e\u043a\u043e\u0439\n   \u0432 \u043f\u043e\u0438\u0441\u043a\u0430\u0445 \u0442\u0435\u0433\u043e\u0432 <meta>. \u0420\u0430\u0437\u0431\u043e\u0440 \u0444\u0430\u0439\u043b\u0430 \u043e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u0442\u0435\u0433\u0435 \n   <\/head>.\n  "},"get_object_vars":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430","syntax":"\n   array <b>get_object_vars<\/b>\n    ( object $object\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0438\u0434\u0438\u043c\u044b\u0435 \u043d\u0435\u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430\n   object \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u043e\u0431\u043b\u0430\u0441\u0442\u044c\u044e \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u0438.\n  "},"get_parent_class":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 \u0434\u043b\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0438\u043b\u0438 \u043a\u043b\u0430\u0441\u0441\u0430","syntax":"\n   string <b>get_parent_class<\/b>\n    ([ mixed $object\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 \u0434\u043b\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0438\u043b\u0438 \u043a\u043b\u0430\u0441\u0441\u0430.\n  "},"get_required_files":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  get_included_files()","syntax":"","desc":""},"get_resource_type":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0438\u043f \u0440\u0435\u0441\u0443\u0440\u0441\u0430\n  ","syntax":"\n   string <b>get_resource_type<\/b>\n    ( resource $handle\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0440\u0435\u0441\u0443\u0440\u0441\u0430.\n  "},"getallheaders":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0441\u0435 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u0430","syntax":"\n   array <b>getallheaders<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0441\u0435 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0434\u043b\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n  "},"getcwd":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438\u043c\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0440\u0430\u0431\u043e\u0447\u0435\u0433\u043e \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430","syntax":"\n   string <b>getcwd<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0440\u0430\u0431\u043e\u0447\u0435\u0433\u043e \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430.\n  "},"getdate":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0430\u0442\u0435\/\u0432\u0440\u0435\u043c\u0435\u043d\u0438","syntax":"\n   array <b>getdate<\/b>\n    ([ int $timestamp = time()\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 (array), \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439\n   \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0430\u0442\u0435, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0439 \u043c\u0435\u0442\u043a\u043e\u0439 \u0432\u0440\u0435\u043c\u0435\u043d\u0438\n   timestamp \u0438\u043b\u0438 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u043c \u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c,\n   \u0435\u0441\u043b\u0438 timestamp \u043d\u0435 \u0431\u044b\u043b \u043f\u0435\u0440\u0435\u0434\u0430\u043d.\n  "},"getenv":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f\n  ","syntax":"\n   string <b>getenv<\/b>\n    ( string $varname\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0441\u0440\u0435\u0434\u044b.\n  "},"gethostbyaddr":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u043e\u043c\u0435\u043d\u043d\u043e\u0435 \u0438\u043c\u044f \u0443\u0437\u043b\u0430, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u043c\u0443 IP-\u0430\u0434\u0440\u0435\u0441\u0443\n  ","syntax":"\n   string <b>gethostbyaddr<\/b>\n    ( string $ip_address\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u043e\u043c\u0435\u043d\u043d\u043e\u0435 \u0438\u043c\u044f \u0443\u0437\u043b\u0430 \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443\n   ip_address.\n  "},"gethostbyname":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0430\u0434\u0440\u0435\u0441 IPv4, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0438\u043c\u0435\u043d\u0438 \u0443\u0437\u043b\u0430 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u0430\n  ","syntax":"\n   string <b>gethostbyname<\/b>\n    ( string $hostname\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0430\u0434\u0440\u0435\u0441 IPv4 \u043f\u043e \u0438\u043c\u0435\u043d\u0438 \u0443\u0437\u043b\u0430\n   hostname.\n  "},"gethostbynamel":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0430\u0434\u0440\u0435\u0441\u043e\u0432 IPv4, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0434\u043e\u043c\u0435\u043d\u043d\u043e\u043c\u0443\n   \u0438\u043c\u0435\u043d\u0438 \u0443\u0437\u043b\u0430\n  ","syntax":"\n   array <b>gethostbynamel<\/b>\n    ( string $hostname\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0430\u0434\u0440\u0435\u0441\u043e\u0432 IPv4, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0440\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u0442\u0441\u044f\n   \u0434\u043e\u043c\u0435\u043d\u043d\u043e\u0435 \u0438\u043c\u044f \u0443\u0437\u043b\u0430 hostname.\n  "},"gethostname":{"version":"(PHP >= 5.3.0)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438\u043c\u044f \u0445\u043e\u0441\u0442\u0430","syntax":"\n   string <b>gethostname<\/b>\n    ( void\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  gethostname() \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0435 \u0438\u043c\u044f\n   \u0445\u043e\u0441\u0442\u0430 \u0434\u043b\u044f \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0430.\n  "},"getimagesize":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f","syntax":"\n   array <b>getimagesize<\/b>\n    ( string $filename\n   [, array &$imageinfo\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  getimagesize() \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442 \u0440\u0430\u0437\u043c\u0435\u0440 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\n   \u0438 \u0432\u0435\u0440\u043d\u0435\u0442 \u044d\u0442\u043e\u0442 \u0440\u0430\u0437\u043c\u0435\u0440 \u0432\u043c\u0435\u0441\u0442\u0435 \u0441 \u0442\u0438\u043f\u043e\u043c \u0444\u0430\u0439\u043b\u0430 \u0438 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u043e\u0439\n   height\/width, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043c\u043e\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u043d\u0443\u0442\u0440\u0438 \u0442\u044d\u0433\u0430\n   HTML IMG, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0432\u0435\u0440\u043d\u0435\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0442\u0438\u043f\n   \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0433\u043e HTTP.\n  "},"getimagesizefromstring":{"version":"(PHP 5 >= 5.4.0)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438\u0437 \u0441\u0442\u0440\u043e\u043a\u0438 \u0434\u0430\u043d\u043d\u044b\u0445\n  ","syntax":"\n   array <b>getimagesizefromstring<\/b>\n    ( string $imagedata\n   [, array &$imageinfo\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u0438  getimagesize() \u0441 \u0442\u043e\u0439\n   \u0440\u0430\u0437\u043d\u0438\u0446\u0435\u0439, \u0447\u0442\u043e  getimagesizefromstring() \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435\n   \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430 \u0432\u043c\u0435\u0441\u0442\u043e \u0438\u043c\u0435\u043d\u0438 \u0444\u0430\u0439\u043b\u0430.\n  "},"getlastmod":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b\n  ","syntax":"\n   int <b>getlastmod<\/b>\n    ( void\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b.\n  "},"getmxrr":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u044c MX, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0443\u044e \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0434\u043e\u043c\u0435\u043d\u043d\u043e\u043c\u0443 \u0438\u043c\u0435\u043d\u0438 \u0443\u0437\u043b\u0430","syntax":"\n   bool <b>getmxrr<\/b>\n    ( string $hostname\n   , array &$mxhosts\n   [, array &$weight\n  ] )","desc":"\n   \u0418\u0449\u0435\u0442 \u0432 DNS \u0437\u0430\u043f\u0438\u0441\u0438 MX, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435\n   hostname. \n  "},"getmygid":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 GID \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 PHP \u0441\u043a\u0440\u0438\u043f\u0442\u0430\n  ","syntax":"\n   int <b>getmygid<\/b>\n    ( void\n   )","desc":""},"getmyinode":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f inode \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0441\u043a\u0440\u0438\u043f\u0442\u0430\n  ","syntax":"\n   int <b>getmyinode<\/b>\n    ( void\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 inode \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0441\u043a\u0440\u0438\u043f\u0442\u0430.\n  "},"getmypid":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 ID \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430 PHP\n  ","syntax":"\n   int <b>getmypid<\/b>\n    ( void\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 PHP \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430.\n  "},"getmyuid":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 UID \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u0441\u043a\u0440\u0438\u043f\u0442\u0430 PHP\n  ","syntax":"\n   int <b>getmyuid<\/b>\n    ( void\n   )","desc":""},"getopt":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\n   \u0418\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438\n  ","syntax":"\n   array <b>getopt<\/b>\n    ( string $options\n   [, array $longopts\n  ] )","desc":"\n   \u0410\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0441\u043a\u0440\u0438\u043f\u0442.\n  "},"getprotobyname":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043d\u043e\u043c\u0435\u0440 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 \u043f\u043e \u0438\u043c\u0435\u043d\u0438","syntax":"\n   int <b>getprotobyname<\/b>\n    ( string $name\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  getprotobyname() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u043e\u043c\u0435\u0440 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430\n   \u043f\u043e \u0438\u043c\u0435\u043d\u0438, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 name \u043a\u0430\u043a \u0432\n   \/etc\/protocols.\n  "},"getprotobynumber":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438\u043c\u044f \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 \u043f\u043e \u043d\u043e\u043c\u0435\u0440\u0443","syntax":"\n   string <b>getprotobynumber<\/b>\n    ( int $number\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  getprotobynumber() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430\n   \u043f\u043e \u043d\u043e\u043c\u0435\u0440\u0443, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 number \u043a\u0430\u043a \u0432\n   \/etc\/protocols.\n  "},"getrandmax":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0432\u0437\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0435 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e","syntax":"\n    int <b>getrandmax<\/b>\n     ( void\n    )","desc":""},"getrusage":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0440\u0435\u0441\u0443\u0440\u0441\u0430\n  ","syntax":"\n   array <b>getrusage<\/b>\n    ([ int $who = 0\n  ] )","desc":"\n   \u042d\u0442\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u043a getrusage(2). \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435,\n   \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u0435 \u0438\u0437 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u0433\u043e \u0432\u044b\u0437\u043e\u0432\u0430.\n  "},"getservbyname":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043d\u043e\u043c\u0435\u0440 \u043f\u043e\u0440\u0442\u0430, \u043f\u0440\u0438\u0441\u0432\u043e\u0435\u043d\u043d\u043e\u0433\u043e \u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u0441\u043b\u0443\u0436\u0431\u0435 \u0438 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0443","syntax":"\n   int <b>getservbyname<\/b>\n    ( string $service\n   , string $protocol\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  getservbyname() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u043f\u043e\u0440\u0442,\n   \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0443 service \u0434\u043b\u044f\n   \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0432 protocol \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430, \u043a\u0430\u043a \u0432\n   \/etc\/services.\n  "},"getservbyport":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u0441\u043b\u0443\u0436\u0431\u0443, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0443\u044e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u043e\u0440\u0442\u0443 \u0438 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0443","syntax":"\n   string <b>getservbyport<\/b>\n    ( int $port\n   , string $protocol\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  getservbyport() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u0441\u043b\u0443\u0436\u0431\u0443, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0443\u044e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 port \u043f\u043e\u0440\u0442\u0443 \u0434\u043b\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430\n   protocol \u043a\u0430\u043a \u0432 \/etc\/services.\n  "},"gettext":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0418\u0449\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0432 \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u0434\u043e\u043c\u0435\u043d\u0435","syntax":"\n   string <b>gettext<\/b>\n    ( string $message\n   )","desc":"\n   \u0418\u0449\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0432 \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u0434\u043e\u043c\u0435\u043d\u0435.\n  "},"gettimeofday":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f","syntax":"\n   mixed <b>gettimeofday<\/b>\n    ([ bool $return_float = false\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u043c \u043a \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u043c\u0443 \u0432\u044b\u0437\u043e\u0432\u0443\n   gettimeofday(2). \u041e\u043d\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439\n   \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u0443\u044e \u043e\u0442 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u0433\u043e \u0432\u044b\u0437\u043e\u0432\u0430.\n  "},"gettype":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0438\u043f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439","syntax":"\n   string <b>gettype<\/b>\n    ( mixed $var\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0438\u043f PHP-\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 var. \u0414\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438\n   \u0442\u0438\u043f\u0430 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 is_*.\n  "},"glob":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u041d\u0430\u0445\u043e\u0434\u0438\u0442 \u0444\u0430\u0439\u043b\u043e\u0432\u044b\u0435 \u043f\u0443\u0442\u0438, \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u044e\u0449\u0438\u0435 \u0441 \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u043c","syntax":"\n   array <b>glob<\/b>\n    ( string $pattern\n   [, int $flags = 0\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  glob() \u0438\u0449\u0435\u0442 \u0432\u0441\u0435 \u043f\u0443\u0442\u0438, \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u044e\u0449\u0438\u0435 \u0441\n   \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u043c pattern \u0441\u043e\u0433\u043b\u0430\u0441\u043d\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u0430\u043c,\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u043c \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 glob() \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 libc, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0445\u043e\u0436\u0438 \u043d\u0430\n   \u043f\u0440\u0430\u0432\u0438\u043b\u0430, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e\u043c \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0451\u043d\u043d\u044b\u0445 \u043e\u0431\u043e\u043b\u043e\u0447\u0435\u043a.\n  "},"gmdate":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0424\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u0443\u0435\u0442 \u0434\u0430\u0442\u0443\/\u0432\u0440\u0435\u043c\u044f \u043f\u043e \u0413\u0440\u0438\u043d\u0432\u0438\u0447\u0443","syntax":"\n   string <b>gmdate<\/b>\n    ( string $format\n   [, int $timestamp = time()\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  date() \u0437\u0430\n   \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u044f \u043f\u043e \u0413\u0440\u0438\u043d\u0432\u0438\u0447\u0443 (GMT).\n  "},"gmmktime":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0435\u0442\u043a\u0443 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 Unix \u0434\u043b\u044f \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043f\u043e \u0413\u0440\u0438\u043d\u0432\u0438\u0447\u0443","syntax":"\n   int <b>gmmktime<\/b>\n    ([ int $hour = gmdate(\"H\")\n   [, int $minute = gmdate(\"i\")\n   [, int $second = gmdate(\"s\")\n   [, int $month = gmdate(\"n\")\n   [, int $day = gmdate(\"j\")\n   [, int $year = gmdate(\"Y\")\n   [, int $is_dst = -1\n  ]]]]]]] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  mktime(), \u0437\u0430\n   \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u044e\u0442 \u0432\u0440\u0435\u043c\u044f \u043f\u043e \u0413\u0440\u0438\u043d\u0432\u0438\u0447\u0443 (GMT).\n    gmmktime() \u0432\u043d\u0443\u0442\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442  mktime(),\n   \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u044b \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435 \u0434\u0430\u0442\u044b \u043c\u0435\u0441\u0442\u043d\u043e\u0433\u043e\n   \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0432 \u044d\u0442\u043e\u0439 \u0437\u043e\u043d\u0435.\n  "},"gmp_abs":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0410\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u0430\u044f \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u0430","syntax":"\n   resource <b>gmp_abs<\/b>\n    ( resource $a\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e\u0439 \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u044b \u0447\u0438\u0441\u043b\u0430.\n  "},"gmp_add":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0421\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0447\u0438\u0441\u0435\u043b","syntax":"\n   resource <b>gmp_add<\/b>\n   ( resource $a\n  , resource $b\n   )","desc":"\n   \u0421\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0435\u0442 \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430. \n  "},"gmp_and":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041f\u043e\u0431\u0438\u0442\u043e\u0432\u043e\u0435 \u0418","syntax":"\n   resource <b>gmp_and<\/b>\n    ( resource $a\n   , resource $b\n   )","desc":"\n   \u0412\u0438\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043f\u043e\u0431\u0438\u0442\u043e\u0432\u043e\u0435 \u0418 \u0434\u0432\u0443\u0445 GMP \u0447\u0438\u0441\u0435\u043b.\n  "},"gmp_clrbit":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0421\u0431\u0440\u043e\u0441 \u0431\u0438\u0442\u0430","syntax":"\n   void <b>gmp_clrbit<\/b>\n    ( resource $a\n   , int $index\n   )","desc":"\n   \u0421\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442 (\u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0432 0) \u0431\u0438\u0442 \u043d\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 index\n   \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430 a. \u0418\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0438\u044f \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 0.\n  "},"gmp_cmp":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0421\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u0447\u0438\u0441\u0435\u043b","syntax":"\n   int <b>gmp_cmp<\/b>\n    ( resource $a\n   , resource $b\n   )","desc":"\n   \u0421\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u0442 \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430.\n  "},"gmp_com":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0434\u043e \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0447\u0438\u0441\u043b\u0430","syntax":"\n   resource <b>gmp_com<\/b>\n    ( resource $a\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0434\u043e \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0447\u0438\u0441\u043b\u0430 a.\n  "},"gmp_div_q":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0414\u0435\u043b\u0435\u043d\u0438\u0435 \u0447\u0438\u0441\u0435\u043b","syntax":"\n   resource <b>gmp_div_q<\/b>\n    ( resource $a\n   , resource $b\n   [, int $round = GMP_ROUND_ZERO\n  ] )","desc":"\n   \u0414\u0435\u043b\u0438\u0442 a \u043d\u0430 b \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\n   \u0446\u0435\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.\n  "},"gmp_div_qr":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0414\u0435\u043b\u0435\u043d\u0438\u0435 \u0447\u0438\u0441\u0435\u043b \u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0447\u0430\u0441\u0442\u043d\u043e\u0433\u043e \u0438 \u043e\u0441\u0442\u0430\u0442\u043a\u0430","syntax":"\n   array <b>gmp_div_qr<\/b>\n    ( resource $n\n   , resource $d\n   [, int $round = GMP_ROUND_ZERO\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u0435\u043b\u0438\u0442 n \u043d\u0430 d.\n  "},"gmp_div_r":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041e\u0441\u0442\u0430\u0442\u043e\u043a \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0447\u0438\u0441\u0435\u043b","syntax":"\n   resource <b>gmp_div_r<\/b>\n    ( resource $n\n   , resource $d\n   [, int $round = GMP_ROUND_ZERO\n  ] )","desc":"\n   \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043e\u0441\u0442\u0430\u0442\u043e\u043a \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043d\u0430\u0446\u0435\u043b\u043e \u0447\u0438\u0441\u043b\u0430 n \u043d\u0430\n   d. \u0415\u0441\u043b\u0438 \u0447\u0438\u0441\u043b\u043e n \u043e\u0442\u043b\u0438\u0447\u043d\u043e \u043e\u0442\n   \u043d\u0443\u043b\u044f, \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0431\u0443\u0434\u0435\u0442 \u0438\u043c\u0435\u0442\u044c \u0437\u043d\u0430\u043a \u044d\u0442\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430.\n  "},"gmp_div":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  gmp_div_q()","syntax":"","desc":""},"gmp_divexact":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0414\u0435\u043b\u0435\u043d\u0438\u0435 \u0447\u0438\u0441\u0435\u043b \u0431\u0435\u0437 \u043e\u0441\u0442\u0430\u0442\u043a\u0430","syntax":"\n   resource <b>gmp_divexact<\/b>\n    ( resource $n\n   , resource $d\n   )","desc":"\n   \u0414\u0435\u043b\u0438\u0442 \u0447\u0438\u0441\u043b\u043e n \u043d\u0430 d,\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0431\u044b\u0441\u0442\u0440\u044b\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0431\u0435\u0437 \u043e\u0441\u0442\u0430\u0442\u043a\u0430. \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u044b\u0434\u0430\u0435\u0442 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439\n   \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442, \u0442\u043e\u043b\u044c\u043a\u043e \u0435\u0441\u043b\u0438 \u0437\u0430\u0432\u0435\u0434\u043e\u043c\u043e \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e, \u0447\u0442\u043e \u0447\u0438\u0441\u043b\u043e\n   d \u0434\u0435\u043b\u0438\u0442 n \u043d\u0430\u0446\u0435\u043b\u043e.\n  "},"gmp_fact":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0424\u0430\u043a\u0442\u043e\u0440\u0438\u0430\u043b","syntax":"\n   resource <b>gmp_fact<\/b>\n    ( mixed $a\n   )","desc":"\n   \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0444\u0430\u043a\u0442\u043e\u0440\u0438\u0430\u043b (a!) \u0447\u0438\u0441\u043b\u0430 a.\n  "},"gmp_gcd":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0435\u0433\u043e \u043e\u0431\u0449\u0435\u0433\u043e \u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044f","syntax":"\n   resource <b>gmp_gcd<\/b>\n    ( resource $a\n   , resource $b\n   )","desc":"\n   \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0438\u0439 \u043e\u0431\u0449\u0438\u0439 \u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044c \u0447\u0438\u0441\u0435\u043b a \u0438\n   b. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432\u0441\u0435\u0433\u0434\u0430 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u0435\u043d, \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u043e\u0434\u043d\u043e\n   \u0438\u0437 \u0447\u0438\u0441\u0435\u043b, \u0438\u043b\u0438 \u043e\u0431\u0430, \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435.\n  "},"gmp_gcdext":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u041d\u041e\u0414 \u0438 \u043c\u043d\u043e\u0436\u0438\u0442\u0435\u043b\u0435\u0439","syntax":"\n   array <b>gmp_gcdext<\/b>\n    ( resource $a\n   , resource $b\n   )","desc":"\n   \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u044b g, s \u0438 t, \u0432 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0438 a*s + b*t = g =\n   gcd(a,b), \u0433\u0434\u0435 gcd - \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0438\u0439 \u043e\u0431\u0449\u0438\u0439 \u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044c. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \n   \u043c\u0430\u0441\u0441\u0438\u0432, \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c \u0432\u0435\u043b\u0438\u0447\u0438\u043d g, s \u0438 t.\n  "},"gmp_hamdist":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0420\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0425\u044d\u043c\u043c\u0438\u043d\u0433\u0430","syntax":"\n   int <b>gmp_hamdist<\/b>\n    ( resource $a\n   , resource $b\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0425\u044d\u043c\u043c\u0438\u043d\u0433\u0430 \u0434\u043b\u044f \u0447\u0438\u0441\u0435\u043b a \u0438\n   b. \u041e\u0431\u0430 \u043e\u043f\u0435\u0440\u0430\u043d\u0434\u0430 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043d\u0435\u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438.\n  "},"gmp_init":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 GMP \u0447\u0438\u0441\u043b\u0430","syntax":"\n   resource <b>gmp_init<\/b>\n    ( mixed $number\n   [, int $base = 0\n  ] )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 GMP \u0447\u0438\u0441\u043b\u043e \u0438\u0437 \u0446\u0435\u043b\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430 \u0438\u043b\u0438 \u0441\u0442\u0440\u043e\u043a\u0438.\n  "},"gmp_intval":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0447\u0438\u0441\u043b\u0430 GMP \u0432 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e","syntax":"\n   int <b>gmp_intval<\/b>\n   ( resource $gmpnumber\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \u0447\u0438\u0441\u043b\u043e GMP \u0432 \u0446\u0435\u043b\u043e\u0435 (integer).\n  "},"gmp_invert":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0418\u043d\u0432\u0435\u0440\u0441\u0438\u044f \u043e\u0441\u0442\u0430\u0442\u043a\u0430 \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f","syntax":"\n   resource <b>gmp_invert<\/b>\n    ( resource $a\n   , resource $b\n   )","desc":"\n   \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0438\u043d\u0432\u0435\u0440\u0441\u0438\u044e \u043e\u0441\u0442\u0430\u0442\u043a\u0430 \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0447\u0438\u0441\u043b\u0430 b \u043d\u0430\n   \u0447\u0438\u0441\u043b\u043e a. \n  "},"gmp_jacobi":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0421\u0438\u043c\u0432\u043e\u043b \u042f\u043a\u043e\u0431\u0438","syntax":"\n   int <b>gmp_jacobi<\/b>\n    ( resource $a\n   , resource $p\n   )","desc":"\n   \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442\n   \u00bb\u00a0\u0421\u0438\u043c\u0432\u043e\u043b \u042f\u043a\u043e\u0431\u0438 \u0434\u043b\u044f \u0447\u0438\u0441\u0435\u043b \n   a \u0438 p. \n   p \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0438 \u043d\u0435\u0447\u0435\u0442\u043d\u044b\u043c.\n  "},"gmp_legendre":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0421\u0438\u043c\u0432\u043e\u043b \u041b\u0435\u0436\u0430\u043d\u0434\u0440\u0430","syntax":"\n   int <b>gmp_legendre<\/b>\n    ( resource $a\n   , resource $p\n   )","desc":"\n   \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \n   \u00bb\u00a0\n   \u0441\u0438\u043c\u0432\u043e\u043b \u041b\u0435\u0436\u0430\u043d\u0434\u0440\u0430 \u0447\u0438\u0441\u0435\u043b a \u0438\n   p. p \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043d\u0435\u0447\u0435\u0442\u043d\u044b\u043c\n   \u0438 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c.\n  "},"gmp_mod":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u043e\u0441\u0442\u0430\u0442\u043a\u0430 \u043e\u0442 \u0446\u0435\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0434\u0435\u043b\u0435\u043d\u0438\u044f","syntax":"\n   resource <b>gmp_mod<\/b>\n    ( resource $n\n   , resource $d\n   )","desc":"\n   \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043e\u0441\u0442\u0430\u0442\u043e\u043a \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0447\u0438\u0441\u043b\u0430 n \u043d\u0430 \n   d. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432\u0441\u0435\u0433\u0434\u0430 \u043d\u0435\u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0437\u043d\u0430\u043a \u0447\u0438\u0441\u043b\u0430\n   d \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f.\n  "},"gmp_mul":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0423\u043c\u043d\u043e\u0436\u0435\u043d\u0438\u0435 \u0447\u0438\u0441\u0435\u043b","syntax":"\n   resource <b>gmp_mul<\/b>\n   ( resource $a\n  , resource $b\n   )","desc":"\n   \u0423\u043c\u043d\u043e\u0436\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e a \u043d\u0430 b\n   \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.\n  "},"gmp_neg":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0437\u043d\u0430\u043a\u0430 \u0447\u0438\u0441\u043b\u0430","syntax":"\n   resource <b>gmp_neg<\/b>\n    ( resource $a\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0440\u043e\u0442\u0438\u0432\u043e\u043f\u043e\u043b\u043e\u0436\u043d\u043e\u0435 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043d\u0443\u043b\u044f \u0447\u0438\u0441\u043b\u043e.\n  "},"gmp_nextprime":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u041f\u043e\u0438\u0441\u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430","syntax":"\n   resource <b>gmp_nextprime<\/b>\n    ( int $a\n   )","desc":"\n   \u0418\u0449\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0435 \u043f\u0440\u043e\u0441\u0442\u043e\u0435 \u0447\u0438\u0441\u043b\u043e\n  "},"gmp_or":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041f\u043e\u0431\u0438\u0442\u043e\u0432\u043e\u0435 \u0418\u041b\u0418","syntax":"\n   resource <b>gmp_or<\/b>\n    ( resource $a\n   , resource $b\n   )","desc":"\n   \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043f\u043e\u0431\u0438\u0442\u043e\u0432\u043e\u0435 \u0418\u041b\u0418 \u0434\u0432\u0443\u0445 GMP \u0447\u0438\u0441\u0435\u043b.\n  "},"gmp_perfect_square":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0447\u0438\u0441\u043b\u0430 \u043d\u0430 \u0442\u043e\u0447\u043d\u044b\u0439 \u043a\u0432\u0430\u0434\u0440\u0430\u0442","syntax":"\n   bool <b>gmp_perfect_square<\/b>\n    ( resource $a\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0447\u0438\u0441\u043b\u043e \u0442\u043e\u0447\u043d\u044b\u043c \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043e\u043c, \u0442.\u0435. \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043e\u043c \u0446\u0435\u043b\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430.\n  "},"gmp_popcount":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0435\u0434\u0438\u043d\u0438\u0446 \u0432 \u0434\u0432\u043e\u0438\u0447\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u0447\u0438\u0441\u043b\u0430","syntax":"\n   int <b>gmp_popcount<\/b>\n    ( resource $a\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0435\u0434\u0438\u043d\u0438\u0446 \u0432 \u0434\u0432\u043e\u0438\u0447\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u0447\u0438\u0441\u043b\u0430.\n  "},"gmp_pow":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u043e\u0434\u0438\u0442 \u0447\u0438\u0441\u043b\u043e \u0432 \u0441\u0442\u0435\u043f\u0435\u043d\u044c","syntax":"\n   resource <b>gmp_pow<\/b>\n    ( resource $base\n   , int $exp\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u043e\u0434\u0438\u0442 \u0447\u0438\u0441\u043b\u043e base \u0432 \u0441\u0442\u0435\u043f\u0435\u043d\u044c exp.\n  "},"gmp_powm":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u043e\u0434\u0438\u0442 \u0447\u0438\u0441\u043b\u043e \u0432 \u0441\u0442\u0435\u043f\u0435\u043d\u044c \u0438 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u043e \u043c\u043e\u0434\u0443\u043b\u044e","syntax":"\n   resource <b>gmp_powm<\/b>\n    ( resource $base\n   , resource $exp\n   , resource $mod\n   )","desc":"\n   \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 (base \u0432\u043e\u0437\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u0441\u0442\u0435\u043f\u0435\u043d\u044c\n   exp) \u043e\u0441\u0442\u0430\u0442\u043e\u043a \u043e\u0442 \u0446\u0435\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043d\u0430 \n   mod. \u0415\u0441\u043b\u0438 exp \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u0435\u043d,\n   \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043d\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d.\n  "},"gmp_prob_prime":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0447\u0438\u0441\u043b\u043e \"\u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e \u043f\u0440\u043e\u0441\u0442\u044b\u043c\"","syntax":"\n   int <b>gmp_prob_prime<\/b>\n    ( resource $a\n   [, int $reps = 10\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0442\u0435\u0441\u0442 \u041c\u0438\u043b\u043b\u0435\u0440\u0430-\u0420\u0430\u0431\u0438\u043d\u0430 \u0434\u043b\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0447\u0438\u0441\u043b\u043e \u043f\u0440\u043e\u0441\u0442\u044b\u043c.\n  "},"gmp_random":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0421\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e","syntax":"\n   resource <b>gmp_random<\/b>\n    ([ int $limiter = 20\n  ] )","desc":"\n   \u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e. \u0427\u0438\u0441\u043b\u043e \u0431\u0443\u0434\u0435\u0442 \u043b\u0435\u0436\u0430\u0442\u044c \u0432 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u0445 \u043e\u0442 \u043d\u0443\u043b\u044f \u0434\u043e \n   \u0447\u0438\u0441\u043b\u0430, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u044e\u0449\u0435\u0433\u043e \u0438\u0437 \u0441\u0435\u0431\u044f \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0447\u0438\u0441\u043b\u0430\n   limiter \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0431\u0438\u0442 \u0432 \u043b\u0438\u043c\u0431\u0435 (limb).\n   \u0415\u0441\u043b\u0438 \u0447\u0438\u0441\u043b\u043e limiter \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435, \u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\n   \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.\n  "},"gmp_scan0":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041f\u043e\u0438\u0441\u043a \u043d\u0443\u043b\u044f \u0432 \u0447\u0438\u0441\u043b\u0435","syntax":"\n   int <b>gmp_scan0<\/b>\n    ( resource $a\n   , int $start\n   )","desc":"\n   \u0421\u043a\u0430\u043d\u0438\u0440\u0443\u0435\u0442 a, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u0431\u0438\u0442\u0430\n   start, \u043f\u043e\u043a\u0430 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u0442 \u0431\u0438\u0442 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u0432 0.\n  "},"gmp_scan1":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041f\u043e\u0438\u0441\u043a \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432 \u0447\u0438\u0441\u043b\u0435","syntax":"\n   int <b>gmp_scan1<\/b>\n    ( resource $a\n   , int $start\n   )","desc":"\n   \u0421\u043a\u0430\u043d\u0438\u0440\u0443\u0435\u0442 a, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u0431\u0438\u0442\u0430\n   start, \u043f\u043e\u043a\u0430 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u0442 \u0431\u0438\u0442 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u0432 1.\n  "},"gmp_setbit":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0431\u0438\u0442\u0430","syntax":"\n   void <b>gmp_setbit<\/b>\n    ( resource $a\n   , int $index\n   [, bool $set_clear = true\n  ] )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0432 1 \u0431\u0438\u0442 \u0441 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u043c index \u0432 \u0447\u0438\u0441\u043b\u0435 a. \n  "},"gmp_sign":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0417\u043d\u0430\u043a \u0447\u0438\u0441\u043b\u0430","syntax":"\n   int <b>gmp_sign<\/b>\n   ( resource $a\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0437\u043d\u0430\u043a \u0447\u0438\u0441\u043b\u0430.\n  "},"gmp_sqrt":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u043a\u043e\u0440\u043d\u044f","syntax":"\n   resource <b>gmp_sqrt<\/b>\n   ( resource $a\n   )","desc":"\n   \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u043a\u043e\u0440\u0435\u043d\u044c \u0447\u0438\u0441\u043b\u0430 a.\n  "},"gmp_sqrtrem":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u043a\u043e\u0440\u0435\u043d\u044c \u0441 \u043e\u0441\u0442\u0430\u0442\u043a\u043e\u043c","syntax":"\n   array <b>gmp_sqrtrem<\/b>\n    ( resource $a\n   )","desc":"\n   \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u043a\u043e\u0440\u0435\u043d\u044c \u0447\u0438\u0441\u043b\u0430, \u0441 \u043e\u0441\u0442\u0430\u0442\u043a\u043e\u043c.\n  "},"gmp_strval":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 GMP \u0447\u0438\u0441\u043b\u0430 \u0432 \u0441\u0442\u0440\u043e\u043a\u0443","syntax":"\n   string <b>gmp_strval<\/b>\n    ( resource $gmpnumber\n   [, int $base = 10\n  ] )","desc":"\n   \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 GMP \u0447\u0438\u0441\u043b\u043e \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0435 \u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f \n   base. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0447\u0438\u0441\u043b\u0430 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u044e\u0442\u0441\u044f \u0432\n   \u0434\u0435\u0441\u044f\u0442\u0435\u0440\u0438\u0447\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u0435 \u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f.\n  "},"gmp_sub":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0412\u044b\u0447\u0438\u0442\u0430\u043d\u0438\u0435 \u0447\u0438\u0441\u0435\u043b","syntax":"\n   resource <b>gmp_sub<\/b>\n   ( resource $a\n  , resource $b\n   )","desc":"\n   \u0412\u044b\u0447\u0438\u0442\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e b \u0438\u0437 \u0447\u0438\u0441\u043b\u0430 a\n   \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.\n  "},"gmp_testbit":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430, \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u043b\u0438 \u0431\u0438\u0442 \u0432 1","syntax":"\n   bool <b>gmp_testbit<\/b>\n    ( resource $a\n   , int $index\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u043b\u0438 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0431\u0438\u0442 \u0432 1.\n  "},"gmp_xor":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041f\u043e\u0431\u0438\u0442\u043e\u0432\u043e\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u044e\u0449\u0435\u0435 \u0418\u041b\u0418","syntax":"\n   resource <b>gmp_xor<\/b>\n    ( resource $a\n   , resource $b\n   )","desc":"\n   \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043f\u043e\u0431\u0438\u0442\u043e\u0432\u043e\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u044e\u0449\u0435\u0435 \u0418\u041b\u0418 (XOR) \u0434\u0432\u0443\u0445 GMP \u0447\u0438\u0441\u0435\u043b.\n  "},"gmstrftime":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0424\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u0443\u0435\u0442 \u0434\u0430\u0442\u0443\/\u0432\u0440\u0435\u043c\u044f \u043f\u043e \u0413\u0440\u0438\u043d\u0432\u0438\u0447\u0443 \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u043b\u043e\u043a\u0430\u043b\u0438","syntax":"\n   string <b>gmstrftime<\/b>\n    ( string $format\n   [, int $timestamp = time()\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  strftime() \u0437\u0430\n   \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u044f \u043f\u043e \u0413\u0440\u0438\u043d\u0432\u0438\u0447\u0443 (GMT). \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440,\n   \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435  \u043d\u0430 \u0441\u0438\u0441\u0442\u0435\u043c\u0435, \u0433\u0434\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e  Eastern Standard Time (GMT-0500),\n   \u043f\u0435\u0440\u0432\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0438\u0437 \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u043d\u0438\u0436\u0435 \u0432\u044b\u0432\u0435\u0434\u0435\u0442  \"Dec 31 1998 20:00:00\",\n   \u0442\u043e\u0433\u0434\u0430 \u043a\u0430\u043a \u0432\u0442\u043e\u0440\u0430\u044f - \"Jan 01 1999 01:00:00\".\n  "},"gnupg_adddecryptkey":{"version":"(PECL gnupg >= 0.5)","shortdesc":"Add a key for decryption","syntax":"\n   bool <b>gnupg_adddecryptkey<\/b>\n    ( resource $identifier\n   , string $fingerprint\n   , string $passphrase\n   )","desc":""},"gnupg_addencryptkey":{"version":"(PECL gnupg >= 0.5)","shortdesc":"\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043b\u044e\u0447 \u0434\u043b\u044f \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u044f","syntax":"\n   bool <b>gnupg_addencryptkey<\/b>\n    ( resource $identifier\n   , string $fingerprint\n   )","desc":""},"gnupg_addsignkey":{"version":"(PECL gnupg >= 0.5)","shortdesc":"\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043a\u043b\u044e\u0447 \u0434\u043b\u044f \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u043d\u0438\u044f","syntax":"\n   bool <b>gnupg_addsignkey<\/b>\n    ( resource $identifier\n   , string $fingerprint\n   [, string $passphrase\n  ] )","desc":""},"gnupg_cleardecryptkeys":{"version":"(PECL gnupg >= 0.5)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0432\u0441\u0435 \u043a\u043b\u044e\u0447\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u044b\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u044b \u0434\u043b\u044f \u0440\u0430\u0441\u0448\u0438\u0444\u0440\u043e\u0432\u043a\u0438 \u0440\u0430\u043d\u044c\u0448\u0435","syntax":"\n   bool <b>gnupg_cleardecryptkeys<\/b>\n    ( resource $identifier\n   )","desc":""},"gnupg_clearencryptkeys":{"version":"(PECL gnupg >= 0.5)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0432\u0441\u0435 \u043a\u043b\u044e\u0447\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u044b\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u044b \u0434\u043b\u044f \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0440\u0430\u043d\u044c\u0448\u0435","syntax":"\n   bool <b>gnupg_clearencryptkeys<\/b>\n    ( resource $identifier\n   )","desc":""},"gnupg_clearsignkeys":{"version":"(PECL gnupg >= 0.5)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0432\u0441\u0435 \u043a\u043b\u044e\u0447\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u044b\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u044b \u0434\u043b\u044f \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0440\u0430\u043d\u044c\u0448\u0435","syntax":"\n   bool <b>gnupg_clearsignkeys<\/b>\n    ( resource $identifier\n   )","desc":""},"gnupg_decrypt":{"version":"(PECL gnupg >= 0.1)","shortdesc":"\u0420\u0430\u0441\u0448\u0438\u0444\u0440\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442","syntax":"\n   string <b>gnupg_decrypt<\/b>\n    ( resource $identifier\n   , string $text\n   )","desc":"\n   \u0420\u0430\u0441\u0448\u0438\u0444\u0440\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 \u043a\u043b\u044e\u0447\u0430\u043c\u0438, \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u0440\u0430\u043d\u0435\u0435\n   \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e gnupg_adddecryptkey.\n  "},"gnupg_decryptverify":{"version":"(PECL gnupg >= 0.2)","shortdesc":"\u0420\u0430\u0441\u0448\u0438\u0444\u0440\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043f\u043e\u0434\u043f\u0438\u0441\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0435\u043a\u0441\u0442\u0430","syntax":"\n   array <b>gnupg_decryptverify<\/b>\n    ( resource $identifier\n   , string $text\n   , string &$plaintext\n   )","desc":"\n   \u0420\u0430\u0441\u0448\u0438\u0444\u0440\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043f\u043e\u0434\u043f\u0438\u0441\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0435\u043a\u0441\u0442\u0430 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\n   \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u043e\u0434\u043f\u0438\u0441\u0438.\n  "},"gnupg_encrypt":{"version":"(PECL gnupg >= 0.1)","shortdesc":"Encrypts a given text","syntax":"\n   string <b>gnupg_encrypt<\/b>\n    ( resource $identifier\n   , string $plaintext\n   )","desc":"\n   Encrypts the given plaintext with the keys, which\n   were set with gnupg_addencryptkey before and\n   returns the encrypted text.\n  "},"gnupg_encryptsign":{"version":"(PECL gnupg >= 0.2)","shortdesc":"\u0428\u0438\u0444\u0440\u0443\u0435\u0442 \u0438 \u043f\u043e\u0434\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442","syntax":"\n   string <b>gnupg_encryptsign<\/b>\n    ( resource $identifier\n   , string $plaintext\n   )","desc":"\n   \u0428\u0438\u0444\u0440\u0443\u0435\u0442 \u0438 \u043f\u043e\u0434\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 plaintext\n   \u0442\u0435\u043a\u0441\u0442 \u043a\u043b\u044e\u0447\u0430\u043c\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u044b\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u044b\n   gnupg_addsignkey \u0438 \n   gnupg_addencryptkey \u0440\u0430\u043d\u0435\u0435\n   \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0438 \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442.\n  "},"gnupg_export":{"version":"(PECL gnupg >= 0.1)","shortdesc":"\u042d\u043a\u0441\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043a\u043b\u044e\u0447","syntax":"\n   string <b>gnupg_export<\/b>\n    ( resource $identifier\n   , string $fingerprint\n   )","desc":"\n   \u042d\u043a\u0441\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043a\u043b\u044e\u0447 fingerprint.\n  "},"gnupg_geterror":{"version":"(PECL gnupg >= 0.1)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0441\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435, \u0435\u0441\u043b\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043d\u0435 \u0431\u044b\u043b\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0430","syntax":"\n   string <b>gnupg_geterror<\/b>\n    ( resource $identifier\n   )","desc":""},"gnupg_getprotocol":{"version":"(PECL gnupg >= 0.1)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439","syntax":"\n   int <b>gnupg_getprotocol<\/b>\n    ( resource $identifier\n   )","desc":""},"gnupg_import":{"version":"(PECL gnupg >= 0.3)","shortdesc":"Imports a key","syntax":"\n   array <b>gnupg_import<\/b>\n    ( resource $identifier\n   , string $keydata\n   )","desc":"\n   Imports the key keydata and returns an array with\n   information about the importprocess.\n  "},"gnupg_init":{"version":"(PECL gnupg >= 0.4)","shortdesc":"\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c GnuPG","syntax":"\n   resource <b>gnupg_init<\/b>\n    ( void\n   )","desc":""},"gnupg_keyinfo":{"version":"(PECL gnupg >= 0.1)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043a\u043b\u044e\u0447\u0430\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0435\n   \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0448\u0430\u0431\u043b\u043e\u043d\u0443","syntax":"\n   array <b>gnupg_keyinfo<\/b>\n    ( resource $identifier\n   , string $pattern\n   )","desc":""},"gnupg_setarmor":{"version":"(PECL gnupg >= 0.1)","shortdesc":"\u041f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432\u044b\u0432\u043e\u0434 \u0432 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u043c \u0438\u043b\u0438 \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435","syntax":"\n   bool <b>gnupg_setarmor<\/b>\n    ( resource $identifier\n   , int $armor\n   )","desc":"\n   \u041f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432\u044b\u0432\u043e\u0434 \u0432 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u043c \u0438\u043b\u0438 \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435.\n  "},"gnupg_seterrormode":{"version":"(PECL gnupg >= 0.6)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0440\u0435\u0436\u0438\u043c \u043e\u0442\u0447\u0435\u0442\u043e\u0432 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0430\u0445 (error_reporting)","syntax":"\n   void <b>gnupg_seterrormode<\/b>\n    ( resource $identifier\n   , int $errormode\n   )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0440\u0435\u0436\u0438\u043c error_reporting.\n  "},"gnupg_setsignmode":{"version":"(PECL gnupg >= 0.1)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0440\u0435\u0436\u0438\u043c \u043f\u043e\u0434\u043f\u0438\u0441\u044b\u0432\u0430\u043d\u0438\u044f","syntax":"\n   bool <b>gnupg_setsignmode<\/b>\n    ( resource $identifier\n   , int $signmode\n   )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0440\u0435\u0436\u0438\u043c \u043f\u043e\u0434\u043f\u0438\u0441\u044b\u0432\u0430\u043d\u0438\u044f.\n  "},"gnupg_sign":{"version":"(PECL gnupg >= 0.1)","shortdesc":"\u041f\u043e\u0434\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442","syntax":"\n   string <b>gnupg_sign<\/b>\n    ( resource $identifier\n   , string $plaintext\n   )","desc":"\n   \u041f\u043e\u0434\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 plaintext \u0442\u0435\u043a\u0441\u0442\n   \u043a\u043b\u044e\u0447\u043e\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u044b\u043b \u043f\u0440\u0435\u0436\u0434\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \n   gnupg_addsignkey \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\n   \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 \u0438\u043b\u0438 \u043f\u043e\u0434\u043f\u0438\u0441\u044c, \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u0431\u044b\u043b\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u0432 \n   gnupg_setsignmode.\n  "},"gnupg_verify":{"version":"(PECL gnupg >= 0.1)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043f\u043e\u0434\u043f\u0438\u0441\u044c \u0442\u0435\u043a\u0441\u0442\u0430","syntax":"\n   array <b>gnupg_verify<\/b>\n    ( resource $identifier\n   , string $signed_text\n   , string $signature\n   [, string &$plaintext\n  ] )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043f\u043e\u0434\u043f\u0438\u0441\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 signed_text\n   \u0442\u0435\u043a\u0441\u0442\u0430 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u043e\u0434\u043f\u0438\u0441\u0438.\n  "},"gopher_parsedir":{"version":"(PECL net_gopher >= 0.1)","shortdesc":"Translate a gopher formatted directory entry into an associative array.","syntax":"\n   array <b>gopher_parsedir<\/b>\n    ( string $dirent\n   )","desc":"\n    gopher_parsedir() parses a gopher formatted directory\n   entry into an associative array.\n  "},"grapheme_extract":{"version":"(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)","shortdesc":"Function to extract a sequence of default grapheme clusters from a text buffer, which must be encoded in UTF-8.","syntax":"\n   string <b>grapheme_extract<\/b>\n    ( string $haystack\n   , int $size\n   [, int $extract_type\n   [, int $start = 0\n   [, int &$next\n  ]]] )","desc":"\n   Function to extract a sequence of default grapheme clusters from a text buffer, which must be encoded in UTF-8. \n  "},"grapheme_stripos":{"version":"(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)","shortdesc":"Find position (in grapheme units) of first occurrence of a case-insensitive string","syntax":"\n   int <b>grapheme_stripos<\/b>\n    ( string $haystack\n   , string $needle\n   [, int $offset = 0\n  ] )","desc":"\n   Find position (in grapheme units) of first occurrence of a case-insensitive string\n  "},"grapheme_stristr":{"version":"(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)","shortdesc":"Returns part of haystack string from the first occurrence of case-insensitive needle to the end of haystack.","syntax":"\n   string <b>grapheme_stristr<\/b>\n    ( string $haystack\n   , string $needle\n   [, bool $before_needle = false\n  ] )","desc":"\n   Returns part of haystack string starting from and including the first occurrence of case-insensitive needle to the end of haystack.\n  "},"grapheme_strlen":{"version":"(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)","shortdesc":"Get string length in grapheme units","syntax":"\n   int <b>grapheme_strlen<\/b>\n    ( string $input\n   )","desc":"\n   Get string length in grapheme units (not bytes or characters)\n  "},"grapheme_strpos":{"version":"(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)","shortdesc":"Find position (in grapheme units) of first occurrence of a string","syntax":"\n   int <b>grapheme_strpos<\/b>\n    ( string $haystack\n   , string $needle\n   [, int $offset = 0\n  ] )","desc":"\n   Find position (in grapheme units) of first occurrence of a string\n  "},"grapheme_strripos":{"version":"(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)","shortdesc":"Find position (in grapheme units) of last occurrence of a case-insensitive string","syntax":"\n   int <b>grapheme_strripos<\/b>\n    ( string $haystack\n   , string $needle\n   [, int $offset = 0\n  ] )","desc":"\n   Find position (in grapheme units) of last occurrence of a case-insensitive string\n  "},"grapheme_strrpos":{"version":"(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)","shortdesc":"Find position (in grapheme units) of last occurrence of a string","syntax":"\n   int <b>grapheme_strrpos<\/b>\n    ( string $haystack\n   , string $needle\n   [, int $offset = 0\n  ] )","desc":"\n   Find position (in grapheme units) of last occurrence of a string\n  "},"grapheme_strstr":{"version":"(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)","shortdesc":"Returns part of haystack string from the first occurrence of needle to the end of haystack.","syntax":"\n   string <b>grapheme_strstr<\/b>\n    ( string $haystack\n   , string $needle\n   [, bool $before_needle = false\n  ] )","desc":"\n   Returns part of haystack string from the first occurrence of needle to the end of haystack (including the needle).\n  "},"grapheme_substr":{"version":"(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)","shortdesc":"Return part of a string","syntax":"\n   int <b>grapheme_substr<\/b>\n    ( string $string\n   , int $start\n   [, int $length\n  ] )","desc":"\n   Return part of a string\n  "},"GregorianToJD":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0434\u0430\u0442\u0443 \u043f\u043e \u0413\u0440\u0438\u0433\u043e\u0440\u0438\u0430\u043d\u0441\u043a\u043e\u043c\u0443 \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044e \u0432 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0432 \n   \u042e\u043b\u0438\u0430\u043d\u0441\u043a\u043e\u043c \u043b\u0435\u0442\u043e\u0438\u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0438\n  ","syntax":"\n   int gregoriantojd\n    ( int $month\n   , int $day\n   , int $year\n   )","desc":"\n   \u0420\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043d\u044b\u0439 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d \u0434\u0430\u0442 \u0434\u043b\u044f \u0413\u0440\u0438\u0433\u043e\u0440\u0438\u0430\u043d\u0441\u043a\u043e\u0433\u043e \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044f \u0441 4714 \u0433\u043e\u0434\u0430 \u0434\u043e \n   \u043d.\u044d. \u043f\u043e 9999 \u0433\u043e\u0434 \u043d.\u044d.\n  "},"gupnp_context_get_host_ip":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Get the IP address","syntax":"\n   string <b>gupnp_context_get_host_ip<\/b>\n    ( resource $context\n   )","desc":"\n   Get the IP address we advertise ourselves as using.\n  "},"gupnp_context_get_port":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Get the port","syntax":"\n   int <b>gupnp_context_get_port<\/b>\n    ( resource $context\n   )","desc":"\n   Get the port that the SOAP server is running on.\n  "},"gupnp_context_get_subscription_timeout":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Get the event subscription timeout","syntax":"\n   int <b>gupnp_context_get_subscription_timeout<\/b>\n    ( resource $context\n   )","desc":"\n   Get the event subscription timeout (in seconds), or 0 meaning there is no timeout.\n  "},"gupnp_context_host_path":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Start hosting","syntax":"\n   bool <b>gupnp_context_host_path<\/b>\n    ( resource $context\n   , string $local_path\n   , string $server_path\n   )","desc":"\n   Start hosting local_path at server_path. Files with the path local_path.LOCALE (if they exist) \n   will be served up when LOCALE is specified in the request's Accept-Language header.\n  "},"gupnp_context_new":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Create a new context","syntax":"\n   resource <b>gupnp_context_new<\/b>\n    ([ string $host_ip\n   [, int $port = 0\n  ]] )","desc":"\n   Create a new context with the specified host_ip and port.\n  "},"gupnp_context_set_subscription_timeout":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Sets the event subscription timeout","syntax":"\n   void <b>gupnp_context_set_subscription_timeout<\/b>\n    ( resource $context\n   , int $timeout\n   )","desc":"\n   Sets the event subscription timeout (in seconds) to time out. \n   Note that any client side subscriptions will automatically be renewed.\n  "},"gupnp_context_timeout_add":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Sets a function to be called at regular intervals","syntax":"\n   bool <b>gupnp_context_timeout_add<\/b>\n    ( resource $context\n   , int $timeout\n   , mixed $callback\n   [, mixed $arg\n  ] )","desc":"\n   Sets a function to be called at regular intervals.\n  "},"gupnp_context_unhost_path":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Stop hosting","syntax":"\n   bool <b>gupnp_context_unhost_path<\/b>\n    ( resource $context\n   , string $server_path\n   )","desc":"\n   Stop hosting the file or folder at server_path.\n  "},"gupnp_control_point_browse_start":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Start browsing","syntax":"\n   bool <b>gupnp_control_point_browse_start<\/b>\n    ( resource $cpoint\n   )","desc":"\n   Start the search and calls user-defined callback.\n  "},"gupnp_control_point_browse_stop":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Stop browsing","syntax":"\n   bool <b>gupnp_control_point_browse_stop<\/b>\n    ( resource $cpoint\n   )","desc":"\n   Stop the search and calls user-defined callback.\n  "},"gupnp_control_point_callback_set":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Set control point callback","syntax":"\n   bool <b>gupnp_control_point_callback_set<\/b>\n    ( resource $cpoint\n   , int $signal\n   , mixed $callback\n   [, mixed $arg\n  ] )","desc":"\n   Set control point callback function for signal.\n  "},"gupnp_control_point_new":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Create a new control point","syntax":"\n   resource <b>gupnp_control_point_new<\/b>\n    ( resource $context\n   , string $target\n   )","desc":"\n   Create a new control point with the specified target.\n  "},"gupnp_device_action_callback_set":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Set device callback function","syntax":"\n   bool <b>gupnp_device_action_callback_set<\/b>\n    ( resource $root_device\n   , int $signal\n   , string $action_name\n   , mixed $callback\n   [, mixed $arg\n  ] )","desc":"\n   Set device callback function for signal and action.\n  "},"gupnp_device_info_get_service":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Get the service with type","syntax":"\n   resource <b>gupnp_device_info_get_service<\/b>\n    ( resource $root_device\n   , string $type\n   )","desc":"\n   Get the service with type or false if no such device was found.\n  "},"gupnp_device_info_get":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Get info of root device","syntax":"\n   array <b>gupnp_device_info_get<\/b>\n    ( resource $root_device\n   )","desc":"\n   Get info of root device.\n  "},"gupnp_root_device_get_available":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Check whether root device is available","syntax":"\n   bool <b>gupnp_root_device_get_available<\/b>\n    ( resource $root_device\n   )","desc":"\n   Get whether or not root_device is available (announcing its presence).\n  "},"gupnp_root_device_get_relative_location":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Get the relative location of root device.","syntax":"\n   string <b>gupnp_root_device_get_relative_location<\/b>\n    ( resource $root_device\n   )","desc":"\n   Get the relative location of root device.\n  "},"gupnp_root_device_new":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Create a new root device","syntax":"\n   resource <b>gupnp_root_device_new<\/b>\n    ( resource $context\n   , string $location\n   , string $description_dir\n   )","desc":"\n   Create a new root device, automatically downloading and parsing location.\n  "},"gupnp_root_device_set_available":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Set whether or not root_device is available","syntax":"\n   bool <b>gupnp_root_device_set_available<\/b>\n    ( resource $root_device\n   , bool $available\n   )","desc":"\n   Controls whether or not root_device is available (announcing its presence).\n  "},"gupnp_root_device_start":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":" Start main loop","syntax":"\n   bool <b>gupnp_root_device_start<\/b>\n    ( resource $root_device\n   )","desc":"\n   Start root server's main loop.\n  "},"gupnp_root_device_stop":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Stop main loop","syntax":"\n   bool <b>gupnp_root_device_stop<\/b>\n    ( resource $root_device\n   )","desc":"\n   Stop root server's main loop.\n  "},"gupnp_service_action_get":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Retrieves the specified action arguments","syntax":"\n   mixed <b>gupnp_service_action_get<\/b>\n    ( resource $action\n   , string $name\n   , int $type\n   )","desc":"\n   Retrieves the specified action arguments.\n  "},"gupnp_service_action_return_error":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Return error code","syntax":"\n   bool <b>gupnp_service_action_return_error<\/b>\n    ( resource $action\n   , int $error_code\n   [, string $error_description\n  ] )","desc":"\n   Return error code.\n  "},"gupnp_service_action_return":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Return successfully","syntax":"\n   bool <b>gupnp_service_action_return<\/b>\n    ( resource $action\n   )","desc":"\n   Return successfully.\n  "},"gupnp_service_action_set":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Sets the specified action return values","syntax":"\n   bool <b>gupnp_service_action_set<\/b>\n    ( resource $action\n   , string $name\n   , int $type\n   , mixed $value\n   )","desc":"\n   Sets the specified action return values.\n  "},"gupnp_service_freeze_notify":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Freeze new notifications","syntax":"\n   bool <b>gupnp_service_freeze_notify<\/b>\n    ( resource $service\n   )","desc":"\n   Causes new notifications to be queued up until  gupnp_service_thaw_notify() is called.\n  "},"gupnp_service_info_get_introspection":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Get resource introspection of service","syntax":"\n   mixed <b>gupnp_service_info_get_introspection<\/b>\n    ( resource $proxy\n   [, mixed $callback\n   [, mixed $arg\n  ]] )","desc":"\n   Get resource introspection of service or register callback if corresponding parameter was passed.\n  "},"gupnp_service_info_get":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Get full info of service","syntax":"\n   array <b>gupnp_service_info_get<\/b>\n    ( resource $proxy\n   )","desc":"\n   Get full info of service.\n  "},"gupnp_service_introspection_get_state_variable":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Returns the state variable data","syntax":"\n   array <b>gupnp_service_introspection_get_state_variable<\/b>\n    ( resource $introspection\n   , string $variable_name\n   )","desc":"\n   Returns the state variable data by the name variable_name in this service.\n  "},"gupnp_service_notify":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Notifies listening clients","syntax":"\n   bool <b>gupnp_service_notify<\/b>\n    ( resource $service\n   , string $name\n   , int $type\n   , mixed $value\n   )","desc":"\n   Notifies listening clients that the property have changed to the specified values.\n  "},"gupnp_service_proxy_action_get":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Send action to the service and get value","syntax":"\n   mixed <b>gupnp_service_proxy_action_get<\/b>\n    ( resource $proxy\n   , string $action\n   , string $name\n   , int $type\n   )","desc":"\n    Send action with parameters to the service exposed by proxy synchronously and get value.\n  "},"gupnp_service_proxy_action_set":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Send action to the service and set value","syntax":"\n   bool <b>gupnp_service_proxy_action_set<\/b>\n    ( resource $proxy\n   , string $action\n   , string $name\n   , mixed $value\n   , int $type\n   )","desc":"\n   Send action with parameters to the service exposed by proxy synchronously and set value.\n  "},"gupnp_service_proxy_add_notify":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Sets up callback for variable change notification","syntax":"\n   bool <b>gupnp_service_proxy_add_notify<\/b>\n    ( resource $proxy\n   , string $value\n   , int $type\n   , mixed $callback\n   [, mixed $arg\n  ] )","desc":"\n   Sets up callback to be called whenever a change notification for variable is recieved.\n  "},"gupnp_service_proxy_callback_set":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Set service proxy callback for signal","syntax":"\n   bool <b>gupnp_service_proxy_callback_set<\/b>\n    ( resource $proxy\n   , int $signal\n   , mixed $callback\n   [, mixed $arg\n  ] )","desc":"\n   Set service proxy callback for signal.\n  "},"gupnp_service_proxy_get_subscribed":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Check whether subscription is valid to the service","syntax":"\n   bool <b>gupnp_service_proxy_get_subscribed<\/b>\n    ( resource $proxy\n   )","desc":"\n   Check whether subscription is valid to the service.\n  "},"gupnp_service_proxy_remove_notify":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Cancels the variable change notification","syntax":"\n   bool <b>gupnp_service_proxy_remove_notify<\/b>\n    ( resource $proxy\n   , string $value\n   )","desc":"\n   Cancels the variable change notification.\n  "},"gupnp_service_proxy_set_subscribed":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"(Un)subscribes to the service.","syntax":"\n   bool <b>gupnp_service_proxy_set_subscribed<\/b>\n    ( resource $proxy\n   , bool $subscribed\n   )","desc":"\n   (Un)subscribes to the service.\n  "},"gupnp_service_thaw_notify":{"version":"(PECL gupnp >= 0.1.0)","shortdesc":"Sends out any pending notifications and stops queuing of new ones.","syntax":"\n   bool <b>gupnp_service_thaw_notify<\/b>\n    ( resource $service\n   )","desc":"\n   Sends out any pending notifications and stops queuing of new ones.\n  "},"gzclose":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u043e\u0442\u043a\u0440\u044b\u0442\u044b\u0439 gz-\u0444\u0430\u0439\u043b \u043f\u043e \u0435\u0433\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044e","syntax":"\n   bool <b>gzclose<\/b>\n    ( resource $zp\n   )","desc":"\n   \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u043e\u0442\u043a\u0440\u044b\u0442\u044b\u0439 gz-\u0444\u0430\u0439\u043b \u043f\u043e \u0435\u0433\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044e.\n  "},"gzcompress":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\u0421\u0436\u0438\u043c\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443","syntax":"\n   string <b>gzcompress<\/b>\n    ( string $data\n   [, int $level = -1\n  ] )","desc":"\n   \u0414\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u0436\u0438\u043c\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0444\u043e\u0440\u043c\u0430\u0442 \u0434\u0430\u043d\u043d\u044b\u0445 ZLIB.\n  "},"gzdecode":{"version":"(PHP 5 >= 5.4.0)","shortdesc":"\u0420\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u0443\u043f\u0430\u043a\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e gzip","syntax":"\n   string <b>gzdecode<\/b>\n    ( string $data\n   [, int $length\n  ] )","desc":"   \n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0432\u0435\u0440\u0441\u0438\u044e \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445.\n   data.\n  "},"gzdeflate":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0421\u0436\u0438\u043c\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443","syntax":"\n   string <b>gzdeflate<\/b>\n    ( string $data\n   [, int $level = -1\n  ] )","desc":"\n   \u0414\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u0436\u0438\u043c\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0444\u043e\u0440\u043c\u0430\u0442 \u0434\u0430\u043d\u043d\u044b\u0445 DEFLATE.\n  "},"gzencode":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0421\u0436\u0438\u043c\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 gzip","syntax":"\n   string <b>gzencode<\/b>\n    ( string $data\n   [, int $level = -1\n   [, int $encoding_mode = FORCE_GZIP\n  ]] )","desc":"   \n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0436\u0430\u0442\u0443\u044e \u0432\u0435\u0440\u0441\u0438\u044e \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 data, \n   \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e \u0432\u044b\u0432\u043e\u0434\u0443 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b gzip.\n  "},"gzeof":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u043b\u0438 \u0442\u0435\u043a\u0443\u0449\u0430\u044f \u043f\u043e\u0437\u0438\u0446\u0438\u044f \u0432 \u043a\u043e\u043d\u0446\u0435 (EOF) gz-\u0444\u0430\u0439\u043b\u0430","syntax":"\n   int <b>gzeof<\/b>\n    ( resource $zp\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043b\u0438 \u043f\u043e\u0437\u0438\u0446\u0438\u044f \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f \u0432 GZ-\u0444\u0430\u0439\u043b\u0435 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 EOF (end-of-file, \u043a\u043e\u043d\u0435\u0446 \u0444\u0430\u0439\u043b\u0430).\n  "},"gzfile":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u0432\u0435\u0441\u044c gz-\u0444\u0430\u0439\u043b \u0432 \u043c\u0430\u0441\u0441\u0438\u0432","syntax":"\n   array <b>gzfile<\/b>\n    ( string $filename\n   [, int $use_include_path = 0\n  ] )","desc":" \n   \u0410\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u0430  readgzfile(), \u043d\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0444\u0430\u0439\u043b, \u0440\u0430\u0437\u0431\u0438\u0442\u044b\u0439 \u043f\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u043e \u043d\u0430 \u043c\u0430\u0441\u0441\u0438\u0432.\n  "},"gzgetc":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0438\u043c\u0432\u043e\u043b \u0438\u0437 gz-\u0444\u0430\u0439\u043b\u0430","syntax":"\n   string <b>gzgetc<\/b>\n    ( resource $zp\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0434\u0438\u043d \u0441\u0438\u043c\u0432\u043e\u043b (\u043f\u043e\u0441\u043b\u0435 \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u043a\u0438) \u0438\u0437 gz-\u0444\u0430\u0439\u043b\u0430 \u043f\u043e \u0435\u0433\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044e.\n  "},"gzgets":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 gz-\u0444\u0430\u0439\u043b\u0430","syntax":"\n   string <b>gzgets<\/b>\n    ( resource $zp\n   , int $length\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 (\u043f\u043e\u0441\u043b\u0435 \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u043a\u0438) \u0438\u0437 gz-\u0444\u0430\u0439\u043b\u0430, \u0435\u0451 \u0434\u043b\u0438\u043d\u0430 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f \n   length - 1 \u0431\u0430\u0439\u0442\u0430\u043c\u0438. \u0427\u0442\u0435\u043d\u0438\u0435 \u0437\u0430\u043a\u0430\u043d\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \n   \u0434\u043e\u0441\u0442\u0438\u0436\u0435\u043d\u0438\u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u043b\u0438\u043d\u044b, \u043a\u043e\u043d\u0446\u0430 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438\u043b\u0438 \u043a\u043e\u043d\u0446\u0430 \u0444\u0430\u0439\u043b\u0430 (EOF).\n  "},"gzgetss":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 gz-\u0444\u0430\u0439\u043b\u0430 \u0441 \u0443\u0434\u0430\u043b\u0451\u043d\u043d\u044b\u043c\u0438 HTML-\u0442\u0435\u0433\u0430\u043c\u0438\n  ","syntax":"\n   string <b>gzgetss<\/b>\n    ( resource $zp\n   , int $length\n   [, string $allowable_tags\n  ] )","desc":"\n   \u0410\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e  gzgets(), \u0442\u043e\u043b\u044c\u043a\u043e\n    gzgetss() \u0442\u0430\u043a\u0436\u0435 \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0432\u0441\u0435 \u0442\u0435\u0433\u0438 HTML \u0438 PHP \u0438\u0437 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438.\n  "},"gzinflate":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0420\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443","syntax":"\n   string <b>gzinflate<\/b>\n    ( string $data\n   [, int $length = 0\n  ] )","desc":"   \n   \u0420\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0441\u0436\u0430\u0442\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443.\n  "},"gzopen":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 gz-\u0444\u0430\u0439\u043b","syntax":"\n   resource <b>gzopen<\/b>\n    ( string $filename\n   , string $mode\n   [, int $use_include_path = 0\n  ] )","desc":"\n   \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0444\u0430\u0439\u043b gzip (.gz) \u0434\u043b\u044f \u0447\u0442\u0435\u043d\u0438\u044f \u0438\u043b\u0438 \u0437\u0430\u043f\u0438\u0441\u0438.\n  "},"gzpassthru":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0432\u0441\u0435 \u043e\u0441\u0442\u0430\u0432\u0448\u0438\u0435\u0441\u044f \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f gz-\u0444\u0430\u0439\u043b\u0430.\n  ","syntax":"\n   int <b>gzpassthru<\/b>\n    ( resource $zp\n   )","desc":"\n   \u0427\u0438\u0442\u0430\u0435\u0442 \u0434\u043e \u043a\u043e\u043d\u0446\u0430 \u0444\u0430\u0439\u043b\u0430 (EOF) \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f gz-\u0444\u0430\u0439\u043b\u0430,\n   \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438, \u0438 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 (\u0431\u0435\u0437 \u0441\u0436\u0430\u0442\u0438\u044f) \u0432 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u0432\u044b\u0432\u043e\u0434.\n  "},"gzputs":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  gzwrite()","syntax":"","desc":""},"gzread":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0411\u0438\u043d\u0430\u0440\u043d\u043e\u0435 \u0447\u0442\u0435\u043d\u0438\u0435 gz-\u0444\u0430\u0439\u043b\u0430","syntax":"\n   string <b>gzread<\/b>\n    ( resource $zp\n   , int $length\n   )","desc":"\n    gzread() \u0447\u0438\u0442\u0430\u0435\u0442 (\u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u044f) \u0434\u043e length \u0431\u0430\u0439\u0442 \n   \u0438\u0437 gz-\u0444\u0430\u0439\u043b\u0430 \u043f\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044e \u043d\u0430 \u043d\u0435\u0433\u043e. \u0427\u0442\u0435\u043d\u0438\u0435 \u0437\u0430\u043a\u0430\u043d\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \n   \u0434\u043e\u0441\u0442\u0438\u0436\u0435\u043d\u0438\u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430 length \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \n   \u0438\u043b\u0438 \u043a\u043e\u043d\u0446\u0430 \u0444\u0430\u0439\u043b\u0430 (EOF)\n  "},"gzrewind":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043d\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u0432 gz-\u0444\u0430\u0439\u043b\u0435 \u0432 \u043d\u0430\u0447\u0430\u043b\u043e","syntax":"\n   bool <b>gzrewind<\/b>\n    ( resource $zp\n   )","desc":"    \n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043d\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u0444\u0430\u0439\u043b\u0430 \u043d\u0430 \u043d\u0430\u0447\u0430\u043b\u043e \u043f\u043e\u0442\u043e\u043a\u0430 \u044d\u0442\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430.\n  "},"gzseek":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043d\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u0432 gz-\u0444\u0430\u0439\u043b\u0435","syntax":"\n   int <b>gzseek<\/b>\n    ( resource $zp\n   , int $offset\n   [, int $whence = SEEK_SET\n  ] )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043d\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u0432 \u0444\u0430\u0439\u043b\u0435, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u0441\u044b\u043b\u0430\u0435\u0442\u0441\u044f zp. \n   \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u043f\u043e\u0442\u043e\u043a\u0430 \u044d\u0442\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u043d\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u0439\u0442. \u042d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442\u043d\u043e \u0432\u044b\u0437\u043e\u0432\u0443 (\u0432 C)\n   gzseek(zp, offset, SEEK_SET).\n  "},"gztell":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u0434\u043b\u044f \u0447\u0442\u0435\u043d\u0438\u044f\/\u0437\u0430\u043f\u0438\u0441\u0438 \u0432 gz-\u0444\u0430\u0439\u043b\u0435","syntax":"\n   int <b>gztell<\/b>\n    ( resource $zp\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u0432 \u0444\u0430\u0439\u043b\u0435 \u043f\u043e \u0435\u0433\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044e, \u0442.\u0435. \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u0432 \u043f\u043e\u0442\u043e\u043a\u0435 \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430.\n  "},"gzuncompress":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\u0420\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443","syntax":"\n   string <b>gzuncompress<\/b>\n    ( string $data\n   [, int $length = 0\n  ] )","desc":"   \n   \u0420\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443.\n  "},"gzwrite":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0411\u0438\u043d\u0430\u0440\u043d\u0430\u044f \u0437\u0430\u043f\u0438\u0441\u044c \u0432 gz-\u0444\u0430\u0439\u043b","syntax":"\n   int <b>gzwrite<\/b>\n    ( resource $zp\n   , string $string\n   [, int $length\n  ] )","desc":"\n   \u0417\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 string \u0432 \u0434\u0430\u043d\u043d\u044b\u0439 gz-\u0444\u0430\u0439\u043b.\n  "},"__halt_compiler":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\u041e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0443 \u043a\u043e\u043c\u043f\u0438\u043b\u044f\u0442\u043e\u0440\u0430","syntax":"\n   void <b>__halt_compiler<\/b>\n    ( void\n   )","desc":"\n   \u041e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0443 \u043a\u043e\u043c\u043f\u0438\u043b\u044f\u0442\u043e\u0440\u0430. \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u043e\u043b\u0435\u0437\u043d\u0430\n   \u043f\u0440\u0438 \u0432\u043d\u0435\u0434\u0440\u0435\u043d\u0438\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 PHP \u0441\u043a\u0440\u0438\u043f\u0442\u044b, \u043a\u0430\u043a \u0432 \u0444\u0430\u0439\u043b\u044b \u0438\u043d\u0441\u0442\u0430\u043b\u043b\u044f\u0446\u0438\u0438.\n  "},"hash_algos":{"version":"(PHP 5 >= 5.1.2, PECL hash >= 1.1)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u0432 \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f","syntax":"\n   array <b>hash_algos<\/b>\n    ( void\n   )","desc":""},"hash_copy":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u041a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f","syntax":"\n   resource <b>hash_copy<\/b>\n    ( resource $context\n   )","desc":""},"hash_file":{"version":"(PHP 5 >= 5.1.2, PECL hash >= 1.1)","shortdesc":"\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u0445\u0435\u0448-\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430","syntax":"\n   string <b>hash_file<\/b>\n    ( string $algo\n   , string $filename\n   [, bool $raw_output = false\n  ] )","desc":""},"hash_final":{"version":"(PHP 5 >= 5.1.2, PECL hash >= 1.1)","shortdesc":"\u0417\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u0438\u043d\u043a\u0440\u0438\u043c\u0435\u043d\u0442\u0430\u043b\u044c\u043d\u043e\u0435 \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432 \u0432\u0438\u0434\u0435 \u0445\u0435\u0448-\u043a\u043e\u0434\u0430","syntax":"\n   string <b>hash_final<\/b>\n    ( resource $context\n   [, bool $raw_output = false\n  ] )","desc":""},"hash_hmac_file":{"version":"(PHP 5 >= 5.1.2, PECL hash >= 1.1)","shortdesc":"\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u0445\u044d\u0448-\u043a\u043e\u0434\u0430 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043a\u043b\u044e\u0447\u0430, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043c\u0435\u0442\u043e\u0434 HMAC \u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430","syntax":"\n   string <b>hash_hmac_file<\/b>\n    ( string $algo\n   , string $filename\n   , string $key\n   [, bool $raw_output = false\n  ] )","desc":""},"hash_hmac":{"version":"(PHP 5 >= 5.1.2, PECL hash >= 1.1)","shortdesc":"\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u0445\u0435\u0448-\u043a\u043e\u0434\u0430 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043a\u043b\u044e\u0447\u0430, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043c\u0435\u0442\u043e\u0434 HMAC","syntax":"\n   string <b>hash_hmac<\/b>\n    ( string $algo\n   , string $data\n   , string $key\n   [, bool $raw_output = false\n  ] )","desc":""},"hash_init":{"version":"(PHP 5 >= 5.1.2, PECL hash >= 1.1)","shortdesc":"\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0438\u043d\u043a\u0440\u0438\u043c\u0435\u043d\u0442\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f","syntax":"\n   resource <b>hash_init<\/b>\n    ( string $algo\n   [, int $options = 0\n   [, string $key = NULL\n  ]] )","desc":""},"hash_pbkdf2":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Generate a PBKDF2 key derivation of a supplied password","syntax":"\n   string <b>hash_pbkdf2<\/b>\n    ( string $algo\n   , string $password\n   , string $salt\n   , int $iterations\n   [, int $length = 0\n   [, bool $raw_output = false\n  ]] )","desc":""},"hash_update_file":{"version":"(PHP 5 >= 5.1.2, PECL hash >= 1.1)","shortdesc":"\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u0432 \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f","syntax":"\n   bool <b>hash_update_file<\/b>\n    ( resource $context\n   , string $filename\n   [, resource $context = NULL\n  ] )","desc":""},"hash_update_stream":{"version":"(PHP 5 >= 5.1.2, PECL hash >= 1.1)","shortdesc":"\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u0433\u043e \u043f\u043e\u0442\u043e\u043a\u0430 \u0432 \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f","syntax":"\n   int <b>hash_update_stream<\/b>\n    ( resource $context\n   , resource $handle\n   [, int $length = -1\n  ] )","desc":""},"hash_update":{"version":"(PHP 5 >= 5.1.2, PECL hash >= 1.1)","shortdesc":"\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f","syntax":"\n   bool <b>hash_update<\/b>\n    ( resource $context\n   , string $data\n   )","desc":""},"hash":{"version":"(PHP 5 >= 5.1.2, PECL hash >= 1.1)","shortdesc":"\u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0445\u0435\u0448-\u043a\u043e\u0434 (\u0434\u0430\u0439\u0434\u0436\u0435\u0441\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f)","syntax":"\n   string <b>hash<\/b>\n    ( string $algo\n   , string $data\n   [, bool $raw_output = false\n  ] )","desc":""},"header_register_callback":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"\u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 (header)","syntax":"\n   bool <b>header_register_callback<\/b>\n    ( callable $callback\n   )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d\u0430 \u043f\u0440\u0438 PHP \u0432\u044b\u0432\u043e\u0434\u0435.\n  "},"header_remove":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438","syntax":"\n   void <b>header_remove<\/b>\n    ([ string $name\n  ] )","desc":"\n   \u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439  header() HTTP \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a.\n  "},"header":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 HTTP \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\n  ","syntax":"\n   void <b>header<\/b>\n    ( string $string\n   [, bool $replace = true\n   [, int $http_response_code\n  ]] )","desc":"\n    header() \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 HTTP\n   \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430. \u0412 \u00bb\u00a0\u0441\u043f\u0435\u0446\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 HTTP\/1.1\n   \u0435\u0441\u0442\u044c \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 HTTP \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432.\n  "},"headers_list":{"version":"(PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0445 (\u0438\u043b\u0438 \u0433\u043e\u0442\u043e\u0432\u044b\u0445 \u043a \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0435) \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432","syntax":"\n   array <b>headers_list<\/b>\n    ( void\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  headers_list() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432, \n   \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0435\u043c\u044b\u0445 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0443 \/ \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u0414\u043b\u044f \u0442\u043e\u0447\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0431\u044b\u043b\u0438 \u043b\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u044b \u0443\u0436\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u044b\n   \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435\u0441\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439  headers_sent().\n  "},"headers_sent":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0431\u044b\u043b\u0438 \u043b\u0438 \u0438 \u043a\u0443\u0434\u0430 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u044b \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438","syntax":"\n   bool <b>headers_sent<\/b>\n    ([ string &$file\n   [, int &$line\n  ]] )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0431\u044b\u043b\u0438 \u043b\u0438 \u0438 \u043a\u0443\u0434\u0430 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u044b \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438.\n  "},"hebrev":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0442\u0435\u043a\u0441\u0442 \u043d\u0430 \u0438\u0432\u0440\u0438\u0442\u0435 \u0438\u0437 \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 \u0432 \u0432\u0438\u0437\u0443\u0430\u043b\u044c\u043d\u0443\u044e","syntax":"\n   string <b>hebrev<\/b>\n    ( string $hebrew_text\n   [, int $max_chars_per_line = 0\n  ] )","desc":"\n   \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0442\u0435\u043a\u0441\u0442 \u043d\u0430 \u0438\u0432\u0440\u0438\u0442\u0435 \u0438\u0437 \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 \u0432 \u0432\u0438\u0437\u0443\u0430\u043b\u044c\u043d\u0443\u044e.\n  "},"hebrevc":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0442\u0435\u043a\u0441\u0442 \u043d\u0430 \u0438\u0432\u0440\u0438\u0442\u0435 \u0438\u0437 \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 \u0432 \u0432\u0438\u0437\u0443\u0430\u043b\u044c\u043d\u0443\u044e \u0441 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0430 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   string <b>hebrevc<\/b>\n    ( string $hebrew_text\n   [, int $max_chars_per_line = 0\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u0445\u043e\u0436\u0430 \u043d\u0430  hebrev() \u0441 \u0442\u0435\u043c \u043e\u0442\u043b\u0438\u0447\u0438\u0435\u043c, \u0447\u0442\u043e\n   \u0447\u0442\u043e \u043e\u043d\u0430 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0430 \u0441\u0442\u0440\u043e\u043a\u0438 (\\n) \u0432 \"<br>\\n\".\n  "},"hex2bin":{"version":"(PHP >= 5.4.0)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0448\u0435\u0441\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u0435\u0440\u0438\u0447\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0434\u0432\u043e\u0438\u0447\u043d\u044b\u0435","syntax":"\n   string <b>hex2bin<\/b>\n    ( string $data\n   )","desc":"\n   \u0414\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \u0448\u0435\u0441\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u0435\u0440\u0438\u0447\u043d\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f\n  "},"hexdec":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0447\u0438\u0441\u043b\u043e \u0438\u0437 \u0448\u0435\u0441\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u0438\u0440\u0438\u0447\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f \u0432 \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u0443\u044e","syntax":"\n   number <b>hexdec<\/b>\n    ( string $hex_string\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u044b\u0439 \u044d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442 \u0448\u0435\u0441\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u0435\u0440\u0438\u0447\u043d\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0433\u043e\u0441\u044f \u0432 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0435\n   hex_string.\n    hexdec() \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0448\u0435\u0441\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u0435\u0440\u0438\u0447\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0432\n   \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e.\n  "},"highlight_file":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u0434\u0441\u0432\u0435\u0442\u043a\u0430 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0430 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   mixed <b>highlight_file<\/b>\n    ( string $filename\n   [, bool $return = false\n  ] )","desc":"\n   \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0438\u043b\u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0435\u0440\u0441\u0438\u044e \u0441 \u043f\u043e\u0434\u0441\u0432\u0435\u0442\u043a\u043e\u0439 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0430 \u043a\u043e\u0434\u0430, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0433\u043e\u0441\u044f\n   \u0432 \u0444\u0430\u0439\u043b\u0435 filename, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0446\u0432\u0435\u0442\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0435 \u0432\u043e\n   \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0439 \u043f\u043e\u0434\u0441\u0432\u0435\u0442\u043a\u0435 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0430 PHP.\n  "},"highlight_string":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u0434\u0441\u0432\u0435\u0442\u043a\u0430 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0430 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   mixed <b>highlight_string<\/b>\n    ( string $str\n   [, bool $return = false\n  ] )","desc":""},"html_entity_decode":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0432\u0441\u0435 HTML-\u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b","syntax":"\n   string <b>html_entity_decode<\/b>\n    ( string $string\n   [, int $flags = ENT_COMPAT | ENT_HTML401\n   [, string $encoding = 'UTF-8'\n  ]] )","desc":"\n    html_entity_decode() \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0442\u0438\u0432\u043e\u043f\u043e\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    htmlentities(). \u041e\u043d\u0430 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0432\u0441\u0435 HTML-\u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435\n   string \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b.\n  "},"htmlentities":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0432\u0441\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 HTML-\u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438","syntax":"\n   string <b>htmlentities<\/b>\n    ( string $string\n   [, int $flags = ENT_COMPAT | ENT_HTML401\n   [, string $encoding = 'UTF-8'\n   [, bool $double_encode = true\n  ]]] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u0430  htmlspecialchars() \u0437\u0430\n   \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e  htmlentities() \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442\n   \u0432\u0441\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u044e\u0449\u0438\u0435 HTML-\u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438 (\u0434\u043b\u044f \u0442\u0435\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u0434\u043b\u044f\n   \u043a\u043e\u0442\u043e\u0440\u044b\u0445 HTML \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0442).\n  "},"htmlspecialchars_decode":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\n   \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 HTML-\u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438 \u043e\u0431\u0440\u0430\u0442\u043d\u043e \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b\n  ","syntax":"\n   string <b>htmlspecialchars_decode<\/b>\n    ( string $string\n   [, int $flags = ENT_COMPAT | ENT_HTML401\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0430\u043d\u0442\u0438\u043f\u043e\u0434\u043e\u043c  htmlspecialchars().\n   \u041e\u043d\u0430 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 HTML-\u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438 \u043e\u0431\u0440\u0430\u0442\u043d\u043e \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b.\n  "},"htmlspecialchars":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 HTML-\u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438","syntax":"\n   string <b>htmlspecialchars<\/b>\n    ( string $string\n   [, int $flags = ENT_COMPAT | ENT_HTML401\n   [, string $encoding = 'UTF-8'\n   [, bool $double_encode = true\n  ]]] )","desc":"\n   \u0412 HTML \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0438\u043c\u0435\u044e\u0442 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0438 \u0434\u043b\u044f\n   \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0435\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u044b \u0432 HTML-\u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438.\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u043d\u0430\u0434 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u044b \u044d\u0442\u0438\n   \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f. \u0415\u0441\u043b\u0438 \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u0441\u0435\n   \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435  htmlentities().\n  "},"http_build_cookie":{"version":"(PECL pecl_http >= 1.2.0)","shortdesc":"Build cookie string","syntax":"\n   string <b>http_build_cookie<\/b>\n    ( array $cookie\n   )","desc":"\n   Build a cookie string from an array\/object like returned by  http_parse_cookie().\n  "},"http_build_query":{"version":"(PHP 5)","shortdesc":"\u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 URL-\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0430","syntax":"\n   string <b>http_build_query<\/b>\n    ( mixed $query_data\n   [, string $numeric_prefix\n   [, string $arg_separator\n   [, int $enc_type = PHP_QUERY_RFC1738\n  ]]] )","desc":"\n   \u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 URL-\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438\u0437 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u043e\u0433\u043e (\u0438\u043b\u0438 \u0438\u043d\u0434\u0435\u043a\u0441\u043d\u043e\u0433\u043e)\n   \u043c\u0430\u0441\u0441\u0438\u0432\u0430.\n  "},"http_build_str":{"version":"(PECL pecl_http >= 0.23.0)","shortdesc":"Build query string","syntax":"\n   string <b>http_build_str<\/b>\n    ( array $query\n   [, string $prefix\n   [, string $arg_separator = ini_get(\"arg_separator.output\")\n  ]] )","desc":"\n   Builds a query string from an array of query variables. In effect, this\n   function is the opposite of  parse_str().\n  "},"http_build_url":{"version":"(PECL pecl_http >= 0.21.0)","shortdesc":"Build a URL","syntax":"\n   string <b>http_build_url<\/b>\n    ([ mixed $url\n   [, mixed $parts\n   [, int $flags = HTTP_URL_REPLACE\n   [, array &$new_url\n  ]]]] )","desc":"\n   Build a URL.\n  "},"http_cache_etag":{"version":"(PECL pecl_http >= 0.1.0)","shortdesc":"Caching by ETag","syntax":"\n   bool <b>http_cache_etag<\/b>\n    ([ string $etag\n  ] )","desc":"\n   Attempts to cache the sent entity by its ETag, either supplied or generated \n   by the hash algorithm specified by the INI-\u043e\u043f\u0446\u0438\u044e\n   http.etag.mode.\n  "},"http_cache_last_modified":{"version":"(PECL pecl_http >= 0.1.0)","shortdesc":"Caching by last modification","syntax":"\n   bool <b>http_cache_last_modified<\/b>\n    ([ int $timestamp_or_expires\n  ] )","desc":"\n   Attempts to cache the sent entity by its last modification date.\n  "},"http_chunked_decode":{"version":"(PECL pecl_http >= 0.1.0)","shortdesc":"Decode chunked-encoded data","syntax":"\n   string <b>http_chunked_decode<\/b>\n    ( string $encoded\n   )","desc":"\n   Decodes a string which is HTTP-chunked encoded.\n  "},"http_date":{"version":"(PECL pecl_http >= 0.1.0)","shortdesc":"Compose HTTP RFC compliant date","syntax":"\n   string <b>http_date<\/b>\n    ([ int $timestamp\n  ] )","desc":"\n   Compose a valid HTTP date regarding RFC 1123\n   looking like: Wed, 22 Dec 2004 11:34:47 GMT.\n  "},"http_deflate":{"version":"(PECL pecl_http >= 0.15.0)","shortdesc":"Deflate data","syntax":"\n   string <b>http_deflate<\/b>\n    ( string $data\n   [, int $flags = 0\n  ] )","desc":"\n   Compress data with gzip, zlib AKA deflate or raw deflate encoding.\n  "},"http_get_request_body_stream":{"version":"(PECL pecl_http >= 0.22.0)","shortdesc":"Get request body as stream","syntax":"\n   resource <b>http_get_request_body_stream<\/b>\n    ( void\n   )","desc":"\n   Create a stream to read the raw request body (e.g. POST or PUT data).\n  "},"http_get_request_body":{"version":"(PECL pecl_http >= 0.10.0)","shortdesc":"Get request body as string","syntax":"\n   string <b>http_get_request_body<\/b>\n    ( void\n   )","desc":"\n   Get the raw request body (e.g. POST or PUT data).\n  "},"http_get_request_headers":{"version":"(PECL pecl_http >= 0.10.0)","shortdesc":"Get request headers as array","syntax":"\n   array <b>http_get_request_headers<\/b>\n    ( void\n   )","desc":"\n   Get a list of incoming HTTP headers.\n  "},"http_get":{"version":"(PECL pecl_http >= 0.1.0)","shortdesc":"Perform GET request","syntax":"\n   string <b>http_get<\/b>\n    ( string $url\n   [, array $options\n   [, array &$info\n  ]] )","desc":"\n   Performs an HTTP GET request on the supplied url.\n  "},"http_head":{"version":"(PECL pecl_http >= 0.1.0)","shortdesc":"Perform HEAD request","syntax":"\n   string <b>http_head<\/b>\n    ( string $url\n   [, array $options\n   [, array &$info\n  ]] )","desc":"\n   Performs an HTTP HEAD request on the supplied url.\n  "},"http_inflate":{"version":"(PECL pecl_http >= 0.15.0)","shortdesc":"Inflate data","syntax":"\n   string <b>http_inflate<\/b>\n    ( string $data\n   )","desc":"\n   Decompress data compressed with either gzip, deflate AKA zlib or raw\n   deflate encoding.\n  "},"http_match_etag":{"version":"(PECL pecl_http >= 0.1.0)","shortdesc":"Match ETag","syntax":"\n   bool <b>http_match_etag<\/b>\n    ( string $etag\n   [, bool $for_range = false\n  ] )","desc":"\n   Matches the given ETag against the clients If-Match resp. \n   If-None-Match HTTP headers.\n  "},"http_match_modified":{"version":"(PECL pecl_http >= 0.1.0)","shortdesc":"Match last modification","syntax":"\n   bool <b>http_match_modified<\/b>\n    ([ int $timestamp = -1\n   [, bool $for_range = false\n  ]] )","desc":"\n   Matches the given Unix timestamp against the clients If-Modified-Since\n   resp. If-Unmodified-Since HTTP headers.\n  "},"http_match_request_header":{"version":"(PECL pecl_http >= 0.10.0)","shortdesc":"Match any header","syntax":"\n   bool <b>http_match_request_header<\/b>\n    ( string $header\n   , string $value\n   [, bool $match_case = false\n  ] )","desc":"\n   Match an incoming HTTP header.\n  "},"http_negotiate_charset":{"version":"(PECL pecl_http >= 0.1.0)","shortdesc":"Negotiate client's preferred character set","syntax":"\n   string <b>http_negotiate_charset<\/b>\n    ( array $supported\n   [, array &$result\n  ] )","desc":"\n   This function negotiates the clients preferred charset based on its\n   Accept-Charset HTTP header. The qualifier is recognized and charsets \n   without qualifier are rated highest.\n  "},"http_negotiate_content_type":{"version":"(PECL pecl_http >= 0.19.0)","shortdesc":"Negotiate client's preferred content type","syntax":"\n   string <b>http_negotiate_content_type<\/b>\n    ( array $supported\n   [, array &$result\n  ] )","desc":"\n   This function negotiates the clients preferred content type based on its\n   Accept HTTP header. The qualifier is recognized and content types \n   without qualifier are rated highest.\n  "},"http_negotiate_language":{"version":"(PECL pecl_http >= 0.1.0)","shortdesc":"Negotiate client's preferred language","syntax":"\n   string <b>http_negotiate_language<\/b>\n    ( array $supported\n   [, array &$result\n  ] )","desc":"\n   This function negotiates the clients preferred language based on its\n   Accept-Language HTTP header. The qualifier is recognized and languages \n   without qualifier are rated highest. The qualifier will be decreased by\n   10% for partial matches (i.e. matching primary language).\n  "},"http_parse_cookie":{"version":"(PECL pecl_http >= 0.20.0)","shortdesc":"Parse HTTP cookie","syntax":"\n   object <b>http_parse_cookie<\/b>\n    ( string $cookie\n   [, int $flags\n   [, array $allowed_extras\n  ]] )","desc":"\n   Parses HTTP cookies like sent in a response into a struct.\n  "},"http_parse_headers":{"version":"(PECL pecl_http >= 0.10.0)","shortdesc":"Parse HTTP headers","syntax":"\n   array <b>http_parse_headers<\/b>\n    ( string $header\n   )","desc":"\n   Parses HTTP headers into an associative array.\n  "},"http_parse_message":{"version":"(PECL pecl_http >= 0.12.0)","shortdesc":"Parse HTTP messages","syntax":"\n   object <b>http_parse_message<\/b>\n    ( string $message\n   )","desc":"\n   Parses the HTTP message into a simple \n   recursive object.\n  "},"http_parse_params":{"version":"(PECL pecl_http >= 1.0.0)","shortdesc":"Parse parameter list","syntax":"\n   object <b>http_parse_params<\/b>\n    ( string $param\n   [, int $flags = HTTP_PARAMS_DEFAULT\n  ] )","desc":"\n   Parse parameter list.\n  "},"http_persistent_handles_clean":{"version":"(PECL pecl_http >= 1.5.0)","shortdesc":"Clean up persistent handles","syntax":"\n   string <b>http_persistent_handles_clean<\/b>\n    ([ string $ident\n  ] )","desc":"\n   Clean up (close) persistent handles, optionally identified with ident.\n  "},"http_persistent_handles_count":{"version":"(PECL pecl_http >= 1.5.0)","shortdesc":"Stat persistent handles","syntax":"\n   object <b>http_persistent_handles_count<\/b>\n    ( void\n   )","desc":"\n   List statistics about persistent handles usage.\n  "},"http_persistent_handles_ident":{"version":"(PECL pecl_http >= 1.5.0)","shortdesc":"Get\/set ident of persistent handles","syntax":"\n   string <b>http_persistent_handles_ident<\/b>\n    ([ string $ident\n  ] )","desc":"\n   Query or define the ident of persistent handles.\n  "},"http_post_data":{"version":"(PECL pecl_http >= 0.1.0)","shortdesc":"Perform POST request with pre-encoded data","syntax":"\n   string <b>http_post_data<\/b>\n    ( string $url\n   , string $data\n   [, array $options\n   [, array &$info\n  ]] )","desc":"\n   Performs an HTTP POST request on the supplied url.\n  "},"http_post_fields":{"version":"(PECL pecl_http >= 0.10.0)","shortdesc":"Perform POST request with data to be encoded","syntax":"\n   string <b>http_post_fields<\/b>\n    ( string $url\n   , array $data\n   [, array $files\n   [, array $options\n   [, array &$info\n  ]]] )","desc":"\n   Performs an HTTP POST request on the supplied url.\n  "},"http_put_data":{"version":"(PECL pecl_http >= 0.25.0)","shortdesc":"Perform PUT request with data","syntax":"\n   string <b>http_put_data<\/b>\n    ( string $url\n   , string $data\n   [, array $options\n   [, array &$info\n  ]] )","desc":"\n   Performs an HTTP PUT request on the supplied url.\n  "},"http_put_file":{"version":"(PECL pecl_http >= 0.10.0)","shortdesc":"Perform PUT request with file","syntax":"\n   string <b>http_put_file<\/b>\n    ( string $url\n   , string $file\n   [, array $options\n   [, array &$info\n  ]] )","desc":"\n   Performs an HTTP PUT request on the supplied url.\n  "},"http_put_stream":{"version":"(PECL pecl_http >= 0.10.0)","shortdesc":"Perform PUT request with stream","syntax":"\n   string <b>http_put_stream<\/b>\n    ( string $url\n   , resource $stream\n   [, array $options\n   [, array &$info\n  ]] )","desc":"\n   Performs an HTTP PUT request on the supplied url.\n  "},"http_redirect":{"version":"(PECL pecl_http >= 0.1.0)","shortdesc":"Issue HTTP redirect","syntax":"\n   bool <b>http_redirect<\/b>\n    ([ string $url\n   [, array $params\n   [, bool $session = false\n   [, int $status = 0\n  ]]]] )","desc":"\n   Redirect to the given url.\n  "},"http_request_body_encode":{"version":"(PECL pecl_http >= 1.0.0)","shortdesc":"Encode request body","syntax":"\n   string <b>http_request_body_encode<\/b>\n    ( array $fields\n   , array $files\n   )","desc":"\n   Generate x-www-form-urlencoded resp. form-data encoded request body.\n  "},"http_request_method_exists":{"version":"(PECL pecl_http >= 0.10.0)","shortdesc":"Check whether request method exists","syntax":"\n   int <b>http_request_method_exists<\/b>\n    ( mixed $method\n   )","desc":"\n   Check if a request method is registered (or available by default).\n  "},"http_request_method_name":{"version":"(PECL pecl_http >= 0.10.0)","shortdesc":"Get request method name","syntax":"\n   string <b>http_request_method_name<\/b>\n    ( int $method\n   )","desc":"\n   Get the literal string representation of a standard or registered request method.\n  "},"http_request_method_register":{"version":"(PECL pecl_http >= 0.10.0)","shortdesc":"Register request method","syntax":"\n   int <b>http_request_method_register<\/b>\n    ( string $method\n   )","desc":"\n   Register a custom request method.\n  "},"http_request_method_unregister":{"version":"(PECL pecl_http >= 0.10.0)","shortdesc":"Unregister request method","syntax":"\n   bool <b>http_request_method_unregister<\/b>\n    ( mixed $method\n   )","desc":"\n   Unregister a previously registered custom request method.\n  "},"http_request":{"version":"(PECL pecl_http >= 1.0.0)","shortdesc":"Perform custom request","syntax":"\n   string <b>http_request<\/b>\n    ( int $method\n   , string $url\n   [, string $body\n   [, array $options\n   [, array &$info\n  ]]] )","desc":"\n   Performs a custom HTTP request on the supplied url.\n  "},"http_response_code":{"version":"(PHP 5 >= 5.4.0)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043a\u043e\u0434 \u043e\u0442\u0432\u0435\u0442\u0430 HTTP","syntax":"\n   int <b>http_response_code<\/b>\n    ([ int $response_code\n  ] )","desc":"\n  \u0415\u0441\u043b\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043d\u0435 \u0431\u044b\u043b\u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u044b, \u0442\u043e http_response_code \u043f\u043e\u043b\u0443\u0447\u0438\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043a\u043e\u0434 \u0441\u0442\u0430\u0442\u0443\u0441\u0430.\n  \u041a\u043e\u0434 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0435\u0441\u043b\u0438 \u0431\u044b\u043b \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440.\n  "},"http_send_content_disposition":{"version":"(PECL pecl_http >= 0.10.0)","shortdesc":"Send Content-Disposition","syntax":"\n   bool <b>http_send_content_disposition<\/b>\n    ( string $filename\n   [, bool $inline = false\n  ] )","desc":"\n   Send the Content-Disposition.\n   \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a Content-Disposition\n\u043e\u0447\u0435\u043d\u044c \u043f\u043e\u043b\u0435\u0437\u0435\u043d, \u0435\u0441\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 \u0441\u0430\u043c\u043e\u043c \u0434\u0435\u043b\u0435 \u0447\u0438\u0442\u0430\u044e\u0442\u0441\u044f \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u0438\u043b\u0438 \u0447\u0435\u0433\u043e-\u0442\u043e \u043f\u043e\u0434\u043e\u0431\u043d\u043e\u0433\u043e, \u0447\u0442\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c\n\"\u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u043e\" \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c\/\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c (\u0442.\u0435. \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0432\u0441\u043f\u043b\u044b\u0432\u0430\u044e\u0449\u0435\u0433\u043e \u043e\u043a\u043d\u0430 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430 \"\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u043a\u0430\u043a...\").\n  "},"http_send_content_type":{"version":"(PECL pecl_http >= 0.10.0)","shortdesc":"Send Content-Type","syntax":"\n   bool <b>http_send_content_type<\/b>\n    ([ string $content_type = \"application\/x-octetstream\"\n  ] )","desc":"\n   Send the Content-Type of the sent entity.\n  "},"http_send_data":{"version":"(PECL pecl_http >= 0.1.0)","shortdesc":"Send arbitrary data","syntax":"\n   bool <b>http_send_data<\/b>\n    ( string $data\n   )","desc":"\n   Sends raw data with support for (multiple) range requests.\n  "},"http_send_file":{"version":"(PECL pecl_http >= 0.1.0)","shortdesc":"Send file","syntax":"\n   bool <b>http_send_file<\/b>\n    ( string $file\n   )","desc":"\n   Sends a file with support for (multiple) range requests.\n  "},"http_send_last_modified":{"version":"(PECL pecl_http >= 0.1.0)","shortdesc":"Send Last-Modified","syntax":"\n   bool <b>http_send_last_modified<\/b>\n    ([ int $timestamp = time()\n  ] )","desc":"\n   Send a Last-Modified header with a valid HTTP date.\n  "},"http_send_status":{"version":"(PECL pecl_http >= 0.1.0)","shortdesc":"Send HTTP response status","syntax":"\n   bool <b>http_send_status<\/b>\n    ( int $status\n   )","desc":"\n   Send HTTP status code.\n  "},"http_send_stream":{"version":"(PECL pecl_http >= 0.1.0)","shortdesc":"Send stream","syntax":"\n   bool <b>http_send_stream<\/b>\n    ( resource $stream\n   )","desc":"\n   Sends an already opened stream with support for (multiple) range requests.\n  "},"http_support":{"version":"(PECL pecl_http >= 0.15.0)","shortdesc":"Check built-in HTTP support","syntax":"\n   int <b>http_support<\/b>\n    ([ int $feature = 0\n  ] )","desc":"\n   Check for features that require external libraries.\n  "},"http_throttle":{"version":"(PECL pecl_http >= 0.10.0)","shortdesc":"HTTP throttling","syntax":"\n   void <b>http_throttle<\/b>\n    ( float $sec\n   [, int $bytes = 40960\n  ] )","desc":"\n   Sets the throttle delay and send buffer size.\n  "},"hw_Array2Objrec":{"version":"(PHP 4)","shortdesc":"Convert attributes from object array to object record","syntax":"\n   string hw_array2objrec\n    ( array $object_array\n   )","desc":"\n   Converts an object_array into an object record.\n   Multiple attributes like 'Title' in different languages are treated\n   properly.\n  "},"hw_changeobject":{"version":"(PHP 4)","shortdesc":"Changes attributes of an object (obsolete)","syntax":"\n   bool <b>hw_changeobject<\/b>\n    ( int $link\n   , int $objid\n   , array $attributes\n   )","desc":"\n   "},"hw_Children":{"version":"(PHP 4)","shortdesc":"Object ids of children","syntax":"\n   array hw_children\n    ( int $connection\n   , int $objectID\n   )","desc":"\n   Returns the identifiers of the collection children.\n  "},"hw_ChildrenObj":{"version":"(PHP 4)","shortdesc":"Object records of children","syntax":"\n   array hw_childrenobj\n    ( int $connection\n   , int $objectID\n   )","desc":"\n   Returns the object records of the collection children.\n  "},"hw_Close":{"version":"(PHP 4)","shortdesc":"Closes the Hyperwave connection","syntax":"\n   bool hw_close\n    ( int $connection\n   )","desc":"\n   Closes down the connection to a Hyperwave server.\n  "},"hw_Connect":{"version":"(PHP 4)","shortdesc":"Opens a connection","syntax":"\n   int hw_connect\n    ( string $host\n   , int $port\n   [, string $username\n   ], string $password\n   )","desc":"\n   Opens a connection to a Hyperwave server.\n   You can have multiple connections open at once.\n  "},"hw_connection_info":{"version":"(PHP 4)","shortdesc":"Prints information about the connection to Hyperwave server","syntax":"\n   void <b>hw_connection_info<\/b>\n    ( int $link\n   )","desc":"\n   "},"hw_cp":{"version":"(PHP 4)","shortdesc":"Copies objects","syntax":"\n   int <b>hw_cp<\/b>\n    ( int $connection\n   , array $object_id_array\n   , int $destination_id\n   )","desc":"\n   Copies the objects with object ids as specified in the second\n   parameter to the collection\n   with the id destination id.\n  "},"hw_Deleteobject":{"version":"(PHP 4)","shortdesc":"Deletes object","syntax":"\n   bool hw_deleteobject\n    ( int $connection\n   , int $object_to_delete\n   )","desc":"\n   Deletes the object with the given object id in the second\n   parameter. It will delete all instances of the object.\n  "},"hw_DocByAnchor":{"version":"(PHP 4)","shortdesc":"Object id object belonging to anchor","syntax":"\n   int hw_docbyanchor\n    ( int $connection\n   , int $anchorID\n   )","desc":"\n   Returns an th object id of the document to which\n   anchorID belongs.\n  "},"hw_DocByAnchorObj":{"version":"(PHP 4)","shortdesc":"Object record object belonging to anchor","syntax":"\n   string hw_docbyanchorobj\n    ( int $connection\n   , int $anchorID\n   )","desc":"\n   Returns an th object record of the document to which\n   anchorID belongs.\n  "},"hw_Document_Attributes":{"version":"(PHP 4)","shortdesc":"Object record of hw_document","syntax":"\n   string hw_document_attributes\n    ( int $hw_document\n   )","desc":"\n   Returns the object record of the document.\n  "},"hw_Document_BodyTag":{"version":"(PHP 4)","shortdesc":"Body tag of hw_document","syntax":"\n   string hw_document_bodytag\n    ( int $hw_document\n   [, string $prefix\n  ] )","desc":"\n   Returns the BODY tag of the document. If the document is an HTML\n   document the BODY tag should be printed before the document.\n  "},"hw_Document_Content":{"version":"(PHP 4)","shortdesc":"Returns content of hw_document","syntax":"\n   string hw_document_content\n    ( int $hw_document\n   )","desc":"\n   Gets the content of the document.\n  "},"hw_Document_SetContent":{"version":"(PHP 4)","shortdesc":"Sets\/replaces content of hw_document","syntax":"\n   bool hw_document_setcontent\n    ( int $hw_document\n   , string $content\n   )","desc":"\n   Sets or replaces the content of the document. If the document is an HTML\n   document the content is everything after the BODY tag. Information\n   from the HEAD and BODY tag is in the stored in the object record.\n   If you provide this information in the content of the document too,\n   the Hyperwave server will change the object record accordingly when\n   the document is inserted. Probably not a very good idea.\n   If this functions fails the document will retain its old content.\n  "},"hw_Document_Size":{"version":"(PHP 4)","shortdesc":"Size of hw_document","syntax":"\n   int hw_document_size\n    ( int $hw_document\n   )","desc":"\n   Gets the size of the document.\n  "},"hw_dummy":{"version":"(PHP 4)","shortdesc":"Hyperwave dummy function","syntax":"\n   string <b>hw_dummy<\/b>\n    ( int $link\n   , int $id\n   , int $msgid\n   )","desc":"\n   "},"hw_EditText":{"version":"(PHP 4)","shortdesc":"Retrieve text document","syntax":"\n   bool hw_edittext\n    ( int $connection\n   , int $hw_document\n   )","desc":"\n   Uploads the text document to the server. The object record of the document\n   may not be modified while the document is edited.\n  "},"hw_Error":{"version":"(PHP 4)","shortdesc":"Error number","syntax":"\n   int hw_error\n    ( int $connection\n   )","desc":"\n   Returns the last error number, for the last command.\n  "},"hw_ErrorMsg":{"version":"(PHP 4)","shortdesc":"Returns error message","syntax":"\n   string hw_errormsg\n    ( int $connection\n   )","desc":"\n   Returns a string containing the last error message related to the last\n   command.\n  "},"hw_Free_Document":{"version":"(PHP 4)","shortdesc":"Frees hw_document","syntax":"\n   bool hw_free_document\n    ( int $hw_document\n   )","desc":"\n   Frees the memory occupied by the Hyperwave document.\n  "},"hw_GetAnchors":{"version":"(PHP 4)","shortdesc":"Object ids of anchors of document","syntax":"\n   array hw_getanchors\n    ( int $connection\n   , int $objectID\n   )","desc":"\n   Returns an array of object ids with anchors of the specified document.\n  "},"hw_GetAnchorsObj":{"version":"(PHP 4)","shortdesc":"Object records of anchors of document","syntax":"\n   array hw_getanchorsobj\n    ( int $connection\n   , int $objectID\n   )","desc":"\n   Returns records with anchors of the document with object ID\n   objectID.\n  "},"hw_GetAndLock":{"version":"(PHP 4)","shortdesc":"Return object record and lock object","syntax":"\n   string hw_getandlock\n    ( int $connection\n   , int $objectID\n   )","desc":"\n   Returns the object record for the object with ID\n   objectID.\n   It will also lock the object, so other users cannot access\n   it until it is unlocked.\n  "},"hw_GetChildColl":{"version":"(PHP 4)","shortdesc":"Object ids of child collections","syntax":"\n   array hw_getchildcoll\n    ( int $connection\n   , int $objectID\n   )","desc":"\n   Returns object ids. Each object ID belongs to a child collection of the\n   collection with ID objectID. The function will not\n   return child documents.\n  "},"hw_GetChildCollObj":{"version":"(PHP 4)","shortdesc":"Object records of child collections","syntax":"\n   array hw_getchildcollobj\n    ( int $connection\n   , int $objectID\n   )","desc":"\n   Returns object records. Each object records belongs to a child collection\n   of the collection with ID objectID. The function\n   will not return child documents.\n  "},"hw_GetChildDocColl":{"version":"(PHP 4)","shortdesc":"Object ids of child documents of collection","syntax":"\n   array hw_getchilddoccoll\n    ( int $connection\n   , int $objectID\n   )","desc":"\n   Returns array of object ids for child documents of a collection.\n  "},"hw_GetChildDocCollObj":{"version":"(PHP 4)","shortdesc":"Object records of child documents of collection","syntax":"\n   array hw_getchilddoccollobj\n    ( int $connection\n   , int $objectID\n   )","desc":"\n   Returns an array of object records for child documents of a collection.\n  "},"hw_GetObject":{"version":"(PHP 4)","shortdesc":"Object record","syntax":"\n   mixed hw_getobject\n    ( int $connection\n   , mixed $objectID\n   [, string $query\n  ] )","desc":"\n   Gets an object record.\n   If the second parameter is an array of integer the function will\n  "},"hw_GetObjectByQuery":{"version":"(PHP 4)","shortdesc":"Search object","syntax":"\n   array hw_getobjectbyquery\n    ( int $connection\n   , string $query\n   , int $max_hits\n   )","desc":"\n   Searches for objects on the whole server and returns an array of\n   object ids.\n  "},"hw_GetObjectByQueryColl":{"version":"(PHP 4)","shortdesc":"Search object in collection","syntax":"\n   array hw_getobjectbyquerycoll\n    ( int $connection\n   , int $objectID\n   , string $query\n   , int $max_hits\n   )","desc":"\n   Searches for objects in collection with ID objectID\n   and returns an array of object ids.\n  "},"hw_GetObjectByQueryCollObj":{"version":"(PHP 4)","shortdesc":"Search object in collection","syntax":"\n   array hw_getobjectbyquerycollobj\n    ( int $connection\n   , int $objectID\n   , string $query\n   , int $max_hits\n   )","desc":"\n   Searches for objects in collection with ID objectID\n   and returns an array of object records.\n  "},"hw_GetObjectByQueryObj":{"version":"(PHP 4)","shortdesc":"Search object","syntax":"\n   array hw_getobjectbyqueryobj\n    ( int $connection\n   , string $query\n   , int $max_hits\n   )","desc":"\n   Searches for objects on the whole server and returns an array of\n   object records.\n  "},"hw_GetParents":{"version":"(PHP 4)","shortdesc":"Object ids of parents","syntax":"\n   array hw_getparents\n    ( int $connection\n   , int $objectID\n   )","desc":"\n   Returns the object identifiers of the parents of an object.\n  "},"hw_GetParentsObj":{"version":"(PHP 4)","shortdesc":"Object records of parents","syntax":"\n   array hw_getparentsobj\n    ( int $connection\n   , int $objectID\n   )","desc":"\n   Returns object records and statistical information about the object\n   records. Each object record belongs to a parent of the object with ID\n   objectID.\n  "},"hw_getrellink":{"version":"(PHP 4)","shortdesc":"Get link from source to dest relative to rootid","syntax":"\n   string <b>hw_getrellink<\/b>\n    ( int $link\n   , int $rootid\n   , int $sourceid\n   , int $destid\n   )","desc":"\n   "},"hw_GetRemote":{"version":"(PHP 4)","shortdesc":"Gets a remote document","syntax":"\n   int hw_getremote\n    ( int $connection\n   , int $objectID\n   )","desc":"\n   Gets a remote document.\n  "},"hw_getremotechildren":{"version":"(PHP 4)","shortdesc":"Gets children of remote document","syntax":"\n   mixed <b>hw_getremotechildren<\/b>\n    ( int $connection\n   , string $object_record\n   )","desc":"\n   Returns the children of a remote document. Children of a remote document\n   are remote documents itself. This makes sense if a database query has to\n   be narrowed and is explained in Hyperwave Programmers' Guide.\n  "},"hw_GetSrcByDestObj":{"version":"(PHP 4)","shortdesc":"Returns anchors pointing at object","syntax":"\n   array hw_getsrcbydestobj\n    ( int $connection\n   , int $objectID\n   )","desc":"\n   Gets the object records of all anchors pointing to the object with ID\n   objectID.\n  "},"hw_GetText":{"version":"(PHP 4)","shortdesc":"Retrieve text document","syntax":"\n   int hw_gettext\n    ( int $connection\n   , int $objectID\n   [, mixed $rootID\/prefix\n  ] )","desc":"\n   Returns the document with object ID objectID. If\n   the document has anchors which can be inserted, they will be inserted\n   already.\n  "},"hw_getusername":{"version":"(PHP 4)","shortdesc":"Name of currently logged in user","syntax":"\n   string <b>hw_getusername<\/b>\n    ( int $connection\n   )","desc":"\n   Returns the username of the connection.\n  "},"hw_Identify":{"version":"(PHP 4)","shortdesc":"Identifies as user","syntax":"\n   string hw_identify\n    ( int $link\n   , string $username\n   , string $password\n   )","desc":"\n   Identifies as user with username and\n   password. Identification is only valid for the\n   current session. I do not think this function will be needed very often.\n   In most cases it will be easier to identify with the opening of the\n   connection.\n  "},"hw_InCollections":{"version":"(PHP 4)","shortdesc":"Check if object ids in collections","syntax":"\n   array hw_incollections\n    ( int $connection\n   , array $object_id_array\n   , array $collection_id_array\n   , int $return_collections\n   )","desc":"\n   Checks whether a set of objects (documents or collections)\n   specified by the object_id_array is part of\n   the collections listed in collection_id_array.\n  "},"hw_Info":{"version":"(PHP 4)","shortdesc":"Info about connection","syntax":"\n   string hw_info\n    ( int $connection\n   )","desc":"\n   Returns information about the current connection.\n  "},"hw_InsColl":{"version":"(PHP 4)","shortdesc":"Insert collection","syntax":"\n   int hw_inscoll\n    ( int $connection\n   , int $objectID\n   , array $object_array\n   )","desc":"\n   Inserts a new collection with attributes as in\n   object_array into\n   collection with object ID objectID.\n  "},"hw_InsDoc":{"version":"(PHP 4)","shortdesc":"Insert document","syntax":"\n   int hw_insdoc\n    ( resource $connection\n   , int $parentID\n   , string $object_record\n   [, string $text\n  ] )","desc":"\n   Inserts a new document with attributes as in\n   object_record into  acollection.\n  "},"hw_insertanchors":{"version":"(PHP 4 >= 4.0.4)","shortdesc":"Inserts only anchors into text","syntax":"\n   bool <b>hw_insertanchors<\/b>\n    ( int $hwdoc\n   , array $anchorecs\n   , array $dest\n   [, array $urlprefixes\n  ] )","desc":"\n   "},"hw_InsertDocument":{"version":"(PHP 4)","shortdesc":"Upload any document","syntax":"\n   int hw_insertdocument\n    ( int $connection\n   , int $parent_id\n   , int $hw_document\n   )","desc":"\n   Uploads a document into the given collection.\n  "},"hw_InsertObject":{"version":"(PHP 4)","shortdesc":"Inserts an object record","syntax":"\n   int hw_insertobject\n    ( int $connection\n   , string $object_rec\n   , string $parameter\n   )","desc":"\n   Inserts an object into the server.\n  "},"hw_mapid":{"version":"(PHP 4)","shortdesc":"Maps global id on virtual local id","syntax":"\n   int <b>hw_mapid<\/b>\n    ( int $connection\n   , int $server_id\n   , int $object_id\n   )","desc":"\n   Maps a global object id on any hyperwave server, even those you did not\n   connect to with  hw_connect(), onto a virtual object id.\n  "},"hw_Modifyobject":{"version":"(PHP 4)","shortdesc":"Modifies object record","syntax":"\n   bool hw_modifyobject\n    ( int $connection\n   , int $object_to_change\n   , array $remove\n   , array $add\n   [, int $mode\n  ] )","desc":"\n   This command allows to remove, add, or modify individual attributes\n   of an object record.  The object is specified by the Object ID\n   object_to_change.\n   In order to modify an attribute one will have to remove\n   the old one and add a new one.  hw_modifyobject()\n   will always remove the attributes before it adds attributes unless\n   the value of the attribute to remove is not a string or array.\n  "},"hw_mv":{"version":"(PHP 4)","shortdesc":"Moves objects","syntax":"\n   int <b>hw_mv<\/b>\n    ( int $connection\n   , array $object_id_array\n   , int $source_id\n   , int $destination_id\n   )","desc":"\n   Moves the specified objects from a collection to another.\n  "},"hw_New_Document":{"version":"(PHP 4)","shortdesc":"Create new document","syntax":"\n   int hw_new_document\n    ( string $object_record\n   , string $document_data\n   , int $document_size\n   )","desc":"\n   Returns a new Hyperwave document with the given document data and object\n   record.\n  "},"hw_objrec2array":{"version":"(PHP 4)","shortdesc":"Convert attributes from object record to object array","syntax":"\n   array <b>hw_objrec2array<\/b>\n    ( string $object_record\n   [, array $format\n  ] )","desc":"\n   Converts an object_record into an object array.\n  "},"hw_Output_Document":{"version":"(PHP 4)","shortdesc":"Prints hw_document","syntax":"\n   bool hw_output_document\n    ( int $hw_document\n   )","desc":"\n   Prints the document without the BODY tag.\n  "},"hw_pConnect":{"version":"(PHP 4)","shortdesc":"Make a persistent database connection","syntax":"\n   int hw_pconnect\n    ( string $host\n   , int $port\n   [, string $username\n   ], string $password\n   )","desc":"\n   Opens a persistent connection to a Hyperwave server.\n   You can have multiple persistent connections open at once.\n  "},"hw_PipeDocument":{"version":"(PHP 4)","shortdesc":"Retrieve any document","syntax":"\n   int hw_pipedocument\n    ( int $connection\n   , int $objectID\n   [, array $url_prefixes\n  ] )","desc":"\n   Gets the Hyperwave document with the given object ID. If the document has\n   anchors which can be inserted, they will have been inserted already.\n  "},"hw_Root":{"version":"(PHP 4)","shortdesc":"Root object id","syntax":"\n   int hw_root\n    ( void\n   )","desc":"\n   Returns the object ID of the hyperroot collection. Currently this\n   is always 0. The child collection of the hyperroot is the root\n   collection of the connected server.\n  "},"hw_setlinkroot":{"version":"(PHP 4)","shortdesc":"Set the id to which links are calculated","syntax":"\n   int <b>hw_setlinkroot<\/b>\n    ( int $link\n   , int $rootid\n   )","desc":"\n   "},"hw_stat":{"version":"(PHP 4)","shortdesc":"Returns status string","syntax":"\n   string <b>hw_stat<\/b>\n    ( int $link\n   )","desc":"\n   "},"hw_Unlock":{"version":"(PHP 4)","shortdesc":"Unlock object","syntax":"\n   bool hw_unlock\n    ( int $connection\n   , int $objectID\n   )","desc":"\n   Unlocks a document, so other users regain access.\n  "},"hw_Who":{"version":"(PHP 4)","shortdesc":"List of currently logged in users","syntax":"\n   array hw_who\n    ( int $connection\n   )","desc":"\n   Gets the list of currently logged in users.\n  "},"hwapi_attribute_new":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Creates instance of class hw_api_attribute","syntax":"\n   HW_API_Attribute <b>hwapi_attribute_new<\/b>\n    ([ string $name\n   [, string $value\n  ]] )","desc":"\n   Creates a new instance of hw_api_attribute with the given name and value.\n  "},"hwapi_content_new":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Create new instance of class hw_api_content","syntax":"\n   HW_API_Content <b>hwapi_content_new<\/b>\n    ( string $content\n   , string $mimetype\n   )","desc":"\n   Creates a new content object from the string\n   content.\n  "},"hwapi_hgcsp":{"version":"(PHP 4, PHP 5 < 5.2.0, PECL hwapi SVN)","shortdesc":"Returns object of class hw_api","syntax":"\n   HW_API <b>hwapi_hgcsp<\/b>\n    ( string $hostname\n   [, int $port\n  ] )","desc":"\n   Opens a connection to the Hyperwave server on host\n   hostname. The protocol used is HGCSP.\n  "},"hwapi_object_new":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Creates a new instance of class hwapi_object_new","syntax":"\n   hw_api_object <b>hwapi_object_new<\/b>\n    ( array $parameter\n   )","desc":"\n   Creates a new instance of the class hw_api_object.\n  "},"hypot":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\n   \u0420\u0430\u0441\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u0434\u043b\u0438\u043d\u0443 \u0433\u0438\u043f\u043e\u0442\u0435\u043d\u0443\u0437\u044b \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u043e\u0433\u043e \u0442\u0440\u0435\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u0430\n  ","syntax":"\n   float <b>hypot<\/b>\n    ( float $x\n   , float $y\n   )","desc":"\n    hypot() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u043b\u0438\u043d\u0443 \u0433\u0438\u043f\u043e\u0442\u0435\u043d\u0443\u0437\u044b\n   \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u043e\u0433\u043e \u0442\u0440\u0435\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u0430 \u0441 \u0434\u043b\u0438\u043d\u0430\u043c\u0438 \u0441\u0442\u043e\u0440\u043e\u043d x \u0438\n   y, \u0438\u043b\u0438 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0442\u043e\u0447\u043a\u0438\n   (x, y) \u0434\u043e \u043d\u0430\u0447\u0430\u043b\u0430 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\n   \u042d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442\u043d\u043e sqrt(x*x + y*y).\n  "},"ibase_add_user":{"version":"(PHP 5)","shortdesc":"Add a user to a security database","syntax":"\n   bool <b>ibase_add_user<\/b>\n    ( resource $service_handle\n   , string $user_name\n   , string $password\n   [, string $first_name\n   [, string $middle_name\n   [, string $last_name\n  ]]] )","desc":""},"ibase_affected_rows":{"version":"(PHP 5)","shortdesc":"Return the number of rows that were affected by the previous query","syntax":"\n   int <b>ibase_affected_rows<\/b>\n    ([ resource $link_identifier\n  ] )","desc":"\n   This function returns the number of rows that were affected by the\n   previous query (INSERT, UPDATE or DELETE) that was executed from within\n   the specified transaction context.\n  "},"ibase_backup":{"version":"(PHP 5)","shortdesc":"Initiates a backup task in the service manager and returns immediately","syntax":"\n   mixed <b>ibase_backup<\/b>\n    ( resource $service_handle\n   , string $source_db\n   , string $dest_file\n   [, int $options = 0\n   [, bool $verbose = false\n  ]] )","desc":""},"ibase_blob_add":{"version":"(PHP 5)","shortdesc":"Add data into a newly created blob","syntax":"\n   void <b>ibase_blob_add<\/b>\n    ( resource $blob_handle\n   , string $data\n   )","desc":"\n    ibase_blob_add() adds data into a blob created with\n    ibase_blob_create().\n  "},"ibase_blob_cancel":{"version":"(PHP 5)","shortdesc":"Cancel creating blob","syntax":"\n   bool <b>ibase_blob_cancel<\/b>\n    ( resource $blob_handle\n   )","desc":"\n   This function will discard a BLOB if it has not yet been closed by\n    ibase_blob_close().\n  "},"ibase_blob_close":{"version":"(PHP 5)","shortdesc":"Close blob","syntax":"\n   mixed <b>ibase_blob_close<\/b>\n    ( resource $blob_handle\n   )","desc":"\n   This function closes a BLOB that has either been opened for reading by\n    ibase_blob_open() or has been opened for writing by\n    ibase_blob_create().\n  "},"ibase_blob_create":{"version":"(PHP 5)","shortdesc":"Create a new blob for adding data","syntax":"\n   resource <b>ibase_blob_create<\/b>\n    ([ resource $link_identifier = NULL\n  ] )","desc":"\n    ibase_blob_create() creates a new BLOB for filling with\n   data.\n  "},"ibase_blob_echo":{"version":"(PHP 5)","shortdesc":"Output blob contents to browser","syntax":"\n   bool <b>ibase_blob_echo<\/b>\n    ( string $blob_id\n   )\n\n   bool <b>ibase_blob_echo<\/b>\n    ( resource $link_identifier\n   , string $blob_id\n   )\n","desc":"\n   This function opens a BLOB for reading and sends its contents directly to\n   standard output (the browser, in most cases).\n  "},"ibase_blob_get":{"version":"(PHP 5)","shortdesc":"Get len bytes data from open blob","syntax":"\n   string <b>ibase_blob_get<\/b>\n    ( resource $blob_handle\n   , int $len\n   )","desc":"\n   This function returns at most len bytes from a BLOB\n   that has been opened for reading by  ibase_blob_open().\n  "},"ibase_blob_import":{"version":"(PHP 5)","shortdesc":"Create blob, copy file in it, and close it","syntax":"\n   string <b>ibase_blob_import<\/b>\n    ( resource $link_identifier\n   , resource $file_handle\n   )\n\n   string <b>ibase_blob_import<\/b>\n    ( resource $file_handle\n   )\n","desc":"\n   This function creates a BLOB, reads an entire file into it, closes it and\n   returns the assigned BLOB id.\n  "},"ibase_blob_info":{"version":"(PHP 5)","shortdesc":"Return blob length and other useful info","syntax":"\n   array <b>ibase_blob_info<\/b>\n    ( resource $link_identifier\n   , string $blob_id\n   )\n\n   array <b>ibase_blob_info<\/b>\n    ( string $blob_id\n   )\n","desc":"\n   Returns the BLOB length and other useful information.\n  "},"ibase_blob_open":{"version":"(PHP 5)","shortdesc":"Open blob for retrieving data parts","syntax":"\n   resource <b>ibase_blob_open<\/b>\n    ( resource $link_identifier\n   , string $blob_id\n   )\n\n   resource <b>ibase_blob_open<\/b>\n    ( string $blob_id\n   )\n","desc":"\n   Opens an existing BLOB for reading. \n  "},"ibase_close":{"version":"(PHP 5)","shortdesc":"Close a connection to an InterBase database","syntax":"\n   bool <b>ibase_close<\/b>\n    ([ resource $connection_id = NULL\n  ] )","desc":"\n   Closes the link to an InterBase database that's associated with\n   a connection id returned from  ibase_connect().\n   Default transaction on link is committed, other transactions are\n   rolled back.\n  "},"ibase_commit_ret":{"version":"(PHP 5)","shortdesc":"Commit a transaction without closing it","syntax":"\n   bool <b>ibase_commit_ret<\/b>\n    ([ resource $link_or_trans_identifier = NULL\n  ] )","desc":"\n   Commits a transaction without closing it.\n  "},"ibase_commit":{"version":"(PHP 5)","shortdesc":"Commit a transaction","syntax":"\n   bool <b>ibase_commit<\/b>\n    ([ resource $link_or_trans_identifier = NULL\n  ] )","desc":"\n   Commits a transaction.\n  "},"ibase_connect":{"version":"(PHP 5)","shortdesc":"Open a connection to a database","syntax":"\n   resource <b>ibase_connect<\/b>\n    ([ string $database\n   [, string $username\n   [, string $password\n   [, string $charset\n   [, int $buffers\n   [, int $dialect\n   [, string $role\n   [, int $sync\n  ]]]]]]]] )","desc":"\n   Establishes a connection to an Firebird\/InterBase server.\n  "},"ibase_db_info":{"version":"(PHP 5)","shortdesc":"Request statistics about a database","syntax":"\n   string <b>ibase_db_info<\/b>\n    ( resource $service_handle\n   , string $db\n   , int $action\n   [, int $argument = 0\n  ] )","desc":""},"ibase_delete_user":{"version":"(PHP 5)","shortdesc":"Delete a user from a security database","syntax":"\n   bool <b>ibase_delete_user<\/b>\n    ( resource $service_handle\n   , string $user_name\n   )","desc":""},"ibase_drop_db":{"version":"(PHP 5)","shortdesc":"Drops a database","syntax":"\n   bool <b>ibase_drop_db<\/b>\n    ([ resource $connection = NULL\n  ] )","desc":"\n   This functions drops a database that was opened by either  ibase_connect()\n   or  ibase_pconnect(). The database is closed and deleted from the server.\n  "},"ibase_errcode":{"version":"(PHP 5)","shortdesc":"Return an error code","syntax":"\n   int <b>ibase_errcode<\/b>\n    ( void\n   )","desc":"\n   Returns the error code that resulted from the most recent InterBase function\n   call.\n  "},"ibase_errmsg":{"version":"(PHP 5)","shortdesc":"Return error messages","syntax":"\n   string <b>ibase_errmsg<\/b>\n    ( void\n   )","desc":""},"ibase_execute":{"version":"(PHP 5)","shortdesc":"Execute a previously prepared query","syntax":"\n   resource <b>ibase_execute<\/b>\n    ( resource $query\n   [, mixed $bind_arg\n   [, mixed $...\n  ]] )","desc":"\n   Execute a query prepared by  ibase_prepare(). \n  "},"ibase_fetch_assoc":{"version":"(PHP 5)","shortdesc":"Fetch a result row from a query as an associative array","syntax":"\n   array <b>ibase_fetch_assoc<\/b>\n    ( resource $result\n   [, int $fetch_flag = 0\n  ] )","desc":"\n   Fetch a result row from a query as an associative array.\n  "},"ibase_fetch_object":{"version":"(PHP 5)","shortdesc":"Get an object from a InterBase database","syntax":"\n   object <b>ibase_fetch_object<\/b>\n    ( resource $result_id\n   [, int $fetch_flag = 0\n  ] )","desc":"\n   Fetches a row as a pseudo-object from a given result identifier.\n  "},"ibase_fetch_row":{"version":"(PHP 5)","shortdesc":"Fetch a row from an InterBase database","syntax":"\n   array <b>ibase_fetch_row<\/b>\n    ( resource $result_identifier\n   [, int $fetch_flag = 0\n  ] )","desc":"\n    ibase_fetch_row() fetches one row of data from the\n   given result set.\n  "},"ibase_field_info":{"version":"(PHP 5)","shortdesc":"Get information about a field","syntax":"\n   array <b>ibase_field_info<\/b>\n    ( resource $result\n   , int $field_number\n   )","desc":"\n   Returns an array with information about a field after a select\n   query has been run.\n  "},"ibase_free_event_handler":{"version":"(PHP 5)","shortdesc":"Cancels a registered event handler","syntax":"\n   bool <b>ibase_free_event_handler<\/b>\n    ( resource $event\n   )","desc":"\n   This function causes the registered event handler specified by\n   event to be cancelled. The callback function will\n   no longer be called for the events it was registered to handle.\n  "},"ibase_free_query":{"version":"(PHP 5)","shortdesc":"Free memory allocated by a prepared query","syntax":"\n   bool <b>ibase_free_query<\/b>\n    ( resource $query\n   )","desc":"\n   Frees a prepared query.\n  "},"ibase_free_result":{"version":"(PHP 5)","shortdesc":"Free a result set","syntax":"\n   bool <b>ibase_free_result<\/b>\n    ( resource $result_identifier\n   )","desc":"\n   Frees a result set.\n  "},"ibase_gen_id":{"version":"(PHP 5)","shortdesc":"Increments the named generator and returns its new value","syntax":"\n   mixed <b>ibase_gen_id<\/b>\n    ( string $generator\n   [, int $increment = 1\n   [, resource $link_identifier = NULL\n  ]] )","desc":""},"ibase_maintain_db":{"version":"(PHP 5)","shortdesc":"Execute a maintenance command on the database server","syntax":"\n   bool <b>ibase_maintain_db<\/b>\n    ( resource $service_handle\n   , string $db\n   , int $action\n   [, int $argument = 0\n  ] )","desc":""},"ibase_modify_user":{"version":"(PHP 5)","shortdesc":"Modify a user to a security database","syntax":"\n   bool <b>ibase_modify_user<\/b>\n    ( resource $service_handle\n   , string $user_name\n   , string $password\n   [, string $first_name\n   [, string $middle_name\n   [, string $last_name\n  ]]] )","desc":""},"ibase_name_result":{"version":"(PHP 5)","shortdesc":"Assigns a name to a result set","syntax":"\n   bool <b>ibase_name_result<\/b>\n    ( resource $result\n   , string $name\n   )","desc":"\n   This function assigns a name to a result set. This name can be used later in\n   UPDATE|DELETE ... WHERE CURRENT OF name statements.\n  "},"ibase_num_fields":{"version":"(PHP 5)","shortdesc":"Get the number of fields in a result set","syntax":"\n   int <b>ibase_num_fields<\/b>\n    ( resource $result_id\n   )","desc":"\n   Get the number of fields in a result set.\n  "},"ibase_num_params":{"version":"(PHP 5)","shortdesc":"Return the number of parameters in a prepared query","syntax":"\n   int <b>ibase_num_params<\/b>\n    ( resource $query\n   )","desc":"\n   This function returns the number of parameters in the prepared query specified\n   by query. This is the number of binding arguments that\n   must be present when calling  ibase_execute().\n  "},"ibase_param_info":{"version":"(PHP 5)","shortdesc":"Return information about a parameter in a prepared query","syntax":"\n   array <b>ibase_param_info<\/b>\n    ( resource $query\n   , int $param_number\n   )","desc":"\n   Returns an array with information about a parameter after a\n   query has been prepared.\n  "},"ibase_pconnect":{"version":"(PHP 5)","shortdesc":"Open a persistent connection to an InterBase database","syntax":"\n   resource <b>ibase_pconnect<\/b>\n    ([ string $database\n   [, string $username\n   [, string $password\n   [, string $charset\n   [, int $buffers\n   [, int $dialect\n   [, string $role\n   [, int $sync\n  ]]]]]]]] )","desc":"\n   Opens a persistent connection to an InterBase database.\n  "},"ibase_prepare":{"version":"(PHP 5)","shortdesc":"Prepare a query for later binding of parameter placeholders and execution","syntax":"\n   resource <b>ibase_prepare<\/b>\n    ( string $query\n   )\n\n   resource <b>ibase_prepare<\/b>\n    ( resource $link_identifier\n   , string $query\n   )\n\n   resource <b>ibase_prepare<\/b>\n    ( resource $link_identifier\n   , string $trans\n   , string $query\n   )\n","desc":""},"ibase_query":{"version":"(PHP 5)","shortdesc":"Execute a query on an InterBase database","syntax":"\n   resource <b>ibase_query<\/b>\n    ([ resource $link_identifier\n   ], string $query\n   [, int $bind_args\n  ] )","desc":""},"ibase_restore":{"version":"(PHP 5)","shortdesc":"Initiates a restore task in the service manager and returns immediately","syntax":"\n   mixed <b>ibase_restore<\/b>\n    ( resource $service_handle\n   , string $source_file\n   , string $dest_db\n   [, int $options = 0\n   [, bool $verbose = false\n  ]] )","desc":""},"ibase_rollback_ret":{"version":"(PHP 5)","shortdesc":"Roll back a transaction without closing it","syntax":"\n   bool <b>ibase_rollback_ret<\/b>\n    ([ resource $link_or_trans_identifier = NULL\n  ] )","desc":"\n   Rolls back a transaction without closing it.\n  "},"ibase_rollback":{"version":"(PHP 5)","shortdesc":"Roll back a transaction","syntax":"\n   bool <b>ibase_rollback<\/b>\n    ([ resource $link_or_trans_identifier = NULL\n  ] )","desc":"\n   Rolls back a transaction.\n  "},"ibase_server_info":{"version":"(PHP 5)","shortdesc":"Request information about a database server","syntax":"\n   string <b>ibase_server_info<\/b>\n    ( resource $service_handle\n   , int $action\n   )","desc":""},"ibase_service_attach":{"version":"(PHP 5)","shortdesc":"Connect to the service manager","syntax":"\n   resource <b>ibase_service_attach<\/b>\n    ( string $host\n   , string $dba_username\n   , string $dba_password\n   )","desc":""},"ibase_service_detach":{"version":"(PHP 5)","shortdesc":"Disconnect from the service manager","syntax":"\n   bool <b>ibase_service_detach<\/b>\n    ( resource $service_handle\n   )","desc":""},"ibase_set_event_handler":{"version":"(PHP 5)","shortdesc":"Register a callback function to be called when events are posted","syntax":"\n   resource <b>ibase_set_event_handler<\/b>\n    ( callable $event_handler\n   , string $event_name1\n   [, string $event_name2\n   [, string $...\n  ]] )\n\n   resource <b>ibase_set_event_handler<\/b>\n    ( resource $connection\n   , callable $event_handler\n   , string $event_name1\n   [, string $event_name2\n   [, string $...\n  ]] )\n","desc":"\n   This function registers a PHP user function as event handler for the\n   specified events. \n  "},"ibase_trans":{"version":"(PHP 5)","shortdesc":"Begin a transaction","syntax":"\n   resource <b>ibase_trans<\/b>\n    ([ int $trans_args\n   [, resource $link_identifier\n  ]] )\n\n   resource <b>ibase_trans<\/b>\n    ([ resource $link_identifier\n   [, int $trans_args\n  ]] )\n","desc":"\n   Begins a transaction.\n  "},"ibase_wait_event":{"version":"(PHP 5)","shortdesc":"Wait for an event to be posted by the database","syntax":"\n   string <b>ibase_wait_event<\/b>\n    ( string $event_name1\n   [, string $event_name2\n   [, string $...\n  ]] )\n\n   string <b>ibase_wait_event<\/b>\n    ( resource $connection\n   , string $event_name1\n   [, string $event_name2\n   [, string $...\n  ]] )\n","desc":"\n   This function suspends execution of the script until one of the specified events\n   is posted by the database. The name of the event that was posted is returned. This\n   function accepts up to 15 event arguments.\n  "},"iconv_get_encoding":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043e\u043a","syntax":"\n   mixed <b>iconv_get_encoding<\/b>\n    ([ string $type = \"all\"\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f iconv.\n  "},"iconv_mime_decode_headers":{"version":"(PHP 5)","shortdesc":"\u0414\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043b\u0435\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 MIME","syntax":"\n   array <b>iconv_mime_decode_headers<\/b>\n    ( string $encoded_headers\n   [, int $mode = 0\n   [, string $charset = ini_get(\"iconv.internal_encoding\")\n  ]] )","desc":"\n   \u0414\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043b\u0435\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 MIME \u0437\u0430 \u043e\u0434\u0438\u043d \u0440\u0430\u0437.\n  "},"iconv_mime_decode":{"version":"(PHP 5)","shortdesc":"\u0414\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 \u043f\u043e\u043b\u0435 MIME-\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430","syntax":"\n   string <b>iconv_mime_decode<\/b>\n    ( string $encoded_header\n   [, int $mode = 0\n   [, string $charset = ini_get(\"iconv.internal_encoding\")\n  ]] )","desc":"\n   \u0414\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 \u043f\u043e\u043b\u0435 MIME-\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430.\n  "},"iconv_mime_encode":{"version":"(PHP 5)","shortdesc":"\u0421\u0436\u0438\u043c\u0430\u0435\u0442 \u043f\u043e\u043b\u0435 MIME-\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430","syntax":"\n   string <b>iconv_mime_encode<\/b>\n    ( string $field_name\n   , string $field_value\n   [, array $preferences = NULL\n  ] )","desc":"\n   \u0421\u0436\u0438\u043c\u0430\u0435\u0442 \u043f\u043e\u043b\u0435 MIME-\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 \u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0435\u0433\u043e \u0441\u0442\u0440\u043e\u043a\u043e\u0439 \u0432\u0438\u0434\u0430:\n   "},"iconv_set_encoding":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438","syntax":"\n   bool <b>iconv_set_encoding<\/b>\n    ( string $type\n   , string $charset\n   )","desc":"\n   \u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c type\n   \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u043d\u0430 charset.\n  "},"iconv_strlen":{"version":"(PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435","syntax":"\n   int <b>iconv_strlen<\/b>\n    ( string $str\n   [, string $charset = ini_get(\"iconv.internal_encoding\")\n  ] )","desc":"\n   \u0412 \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u043e\u0442  strlen(),\n    iconv_strlen() \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443 \u0441\u0442\u0440\u043e\u043a\u0438. \n   \u0414\u043b\u0438\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0438 \u043d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u0431\u0430\u0439\u0442 \u0432 \u043d\u0435\u0439, \n   \u0442\u0430\u043a \u043a\u0430\u043a \u0432 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0430\u0445 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u043a\u043e\u0434\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u0431\u0430\u0439\u0442, \n   \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u044e\u043d\u0438\u043a\u043e\u0434 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438 \u0434\u0432\u0443\u0445-, \u0438 \u0447\u0435\u0442\u044b\u0440\u0451\u0445\u0431\u0430\u0439\u0442\u043d\u044b\u043c.\n  "},"iconv_strpos":{"version":"(PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   int <b>iconv_strpos<\/b>\n    ( string $haystack\n   , string $needle\n   [, int $offset = 0\n   [, string $charset = ini_get(\"iconv.internal_encoding\")\n  ]] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438\n   needle \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 haystack.\n  "},"iconv_strrpos":{"version":"(PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   int <b>iconv_strrpos<\/b>\n    ( string $haystack\n   , string $needle\n   [, string $charset = ini_get(\"iconv.internal_encoding\")\n  ] )","desc":"\n   \u041d\u0430\u0445\u043e\u0434\u0438\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438 needle\n   \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 haystack.\n  "},"iconv_substr":{"version":"(PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0447\u0430\u0441\u0442\u0438 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   string <b>iconv_substr<\/b>\n    ( string $str\n   , int $offset\n   [, int $length = iconv_strlen($str, $charset)\n   [, string $charset = ini_get(\"iconv.internal_encoding\")\n  ]] )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0447\u0430\u0441\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0438 str, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u0443\u044e\n   \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 offset \u0438 length.\n  "},"iconv":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0442\u0440\u0435\u0431\u0443\u0435\u043c\u0443\u044e \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443","syntax":"\n   string <b>iconv<\/b>\n    ( string $in_charset\n   , string $out_charset\n   , string $str\n   )","desc":"\n   \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u043d\u0430\u0431\u043e\u0440 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0441\u0442\u0440\u043e\u043a\u0438\n   str \u0438\u0437 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 in_charset\n   \u0432 out_charset.\n  "},"id3_get_frame_long_name":{"version":"(PECL id3 >= 0.2)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u043b\u0438\u043d\u043d\u043e\u0435 \u0438\u043c\u044f ID3v2 \u043a\u0430\u0434\u0440\u0430","syntax":"\n   string <b>id3_get_frame_long_name<\/b>\n    ( string $frameId\n   )","desc":"\n    id3_get_frame_long_name() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u043b\u0438\u043d\u043d\u043e\u0435 \u0438\u043c\u044f ID3v2 \u043a\u0430\u0434\u0440\u0430.\n  "},"id3_get_frame_short_name":{"version":"(PECL id3 >= 0.2)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u0440\u043e\u0442\u043a\u043e\u0435 \u0438\u043c\u044f ID3v2 \u043a\u0430\u0434\u0440\u0430","syntax":"\n   string <b>id3_get_frame_short_name<\/b>\n    ( string $frameId\n   )","desc":"\n    id3_get_frame_short_name()\u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u0440\u043e\u0442\u043a\u043e\u0435 \u0438\u043c\u044f\n   ID3v2 \u043a\u0430\u0434\u0440\u0430.\n  "},"id3_get_genre_id":{"version":"(PECL id3 >= 0.1)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0436\u0430\u043d\u0440\u0430","syntax":"\n   int <b>id3_get_genre_id<\/b>\n    ( string $genre\n   )","desc":"\n    id3_get_genre_id() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0436\u0430\u043d\u0440\u0430.\n  "},"id3_get_genre_list":{"version":"(PECL id3 >= 0.1)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0441\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0436\u0430\u043d\u0440\u0430","syntax":"\n   array <b>id3_get_genre_list<\/b>\n    ( void\n   )","desc":"\n    id3_get_genre_list() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432, \n   \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0432\u0441\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0436\u0430\u043d\u0440\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c ID3-\u0442\u0435\u0433. \n   \u042d\u0442\u043e\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0431\u044b\u043b \u0441\u043e\u0437\u0434\u0430\u043d \u042d\u0440\u0438\u043a\u043e\u043c \u041a\u044d\u043c\u043f\u043e\u043c \u0438 \u043f\u043e\u0437\u043d\u0435\u0435 \u0440\u0430\u0448\u0438\u0440\u0435\u043d WinAmp'\u043e\u043c.\n  "},"id3_get_genre_name":{"version":"(PECL id3 >= 0.1)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u043f\u043e \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443 \u0436\u0430\u043d\u0440\u0430","syntax":"\n   string <b>id3_get_genre_name<\/b>\n    ( int $genre_id\n   )","desc":"\n    id3_get_genre_name() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u043f\u043e \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443 \u0436\u0430\u043d\u0440\u0430.\n  "},"id3_get_tag":{"version":"(PECL id3 >= 0.1)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0441\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e, \u0441\u043e\u0445\u0440\u0430\u043d\u0451\u043d\u043d\u0443\u044e \u0432 ID3-\u0442\u0435\u0433\u0435","syntax":"\n   array <b>id3_get_tag<\/b>\n    ( string $filename\n   [, int $version = ID3_BEST\n  ] )","desc":"\n    id3_get_tag() \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438, \n   \u0445\u0440\u0430\u043d\u044f\u0449\u0435\u0439\u0441\u044f \u0432 ID3-\u0442\u0435\u0433\u0435 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430.\n  "},"id3_get_version":{"version":"(PECL id3 >= 0.1)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0435\u0440\u0441\u0438\u044e ID3-\u0442\u0435\u0433\u0430","syntax":"\n   int <b>id3_get_version<\/b>\n    ( string $filename\n   )","desc":"\n    id3_get_version() \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0435\u0440\u0441\u0438\u044e (\u0432\u0435\u0440\u0441\u0438\u0438) ID3-\u0442\u0435\u0433\u0430(\u0442\u0435\u0433\u043e\u0432) \u0432 MP3-\u0444\u0430\u0439\u043b\u0435.\n  "},"id3_remove_tag":{"version":"(PECL id3 >= 0.1)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 ID3-\u0442\u0435\u0433","syntax":"\n   bool <b>id3_remove_tag<\/b>\n    ( string $filename\n   [, int $version = ID3_V1_0\n  ] )","desc":"\n    id3_remove_tag() \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f ID3-\u0442\u0435\u0433\u0430.\n  "},"id3_set_tag":{"version":"(PECL id3 >= 0.1)","shortdesc":"\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0432 ID3 \u0442\u0435\u0433\u0435","syntax":"\n   bool <b>id3_set_tag<\/b>\n    ( string $filename\n   , array $tag\n   [, int $version = ID3_V1_0\n  ] )","desc":"\n    id3_set_tag() \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438,\n   \u0441\u043e\u0445\u0440\u0430\u043d\u0451\u043d\u043d\u043e\u0439 \u0432 ID3 \u0442\u0435\u0433\u0435. \u0415\u0441\u043b\u0438 \u0442\u0435\u0433 \u043e\u0442\u0441\u0442\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442, \u043e\u043d \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u0432 \u0444\u0430\u0439\u043b.\n  "},"idate":{"version":"(PHP 5)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f\/\u0434\u0430\u0442\u0443 \u0432 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e","syntax":"\n   int <b>idate<\/b>\n    ( string $format\n   [, int $timestamp = time()\n  ] )","desc":"\n   \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0430\u0442\u0443 \u0438 \u0432\u0440\u0435\u043c\u044f \u0432 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441\u043e \u0441\u0442\u0440\u043e\u043a\u043e\u0439 \n   \u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f format. \u0415\u0441\u043b\u0438 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \n   timestamp \u0437\u0430\u0434\u0430\u043d, \u0440\u0430\u0441\u0447\u0435\u0442 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d \u0434\u043b\u044f \n   \u044d\u0442\u043e\u0439 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u043c\u0435\u0442\u043a\u0438, \u0435\u0441\u043b\u0438 \u043d\u0435\u0442 - \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u043e \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f. \n   \u0414\u0440\u0443\u0433\u0438\u043c\u0438 \u0441\u043b\u043e\u0432\u0430\u043c\u0438, timestamp - \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \n   \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u0438 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0440\u0430\u0432\u0435\u043d \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e  time().\n  "},"idn_to_ascii":{"version":"(PHP 5 >= 5.3.0, PECL intl >= 1.0.2, PECL idn >= 0.1)","shortdesc":"Convert domain name to IDNA ASCII form.","syntax":"\n   string <b>idn_to_ascii<\/b>\n    ( string $domain\n   [, int $options = 0\n   [, int $variant = INTL_IDNA_VARIANT_2003\n   [, array &$idna_info\n  ]]] )","desc":"\n   This function converts Unicode domain name to IDNA ASCII-compatible format.  \n  "},"idn_to_unicode":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  idn_to_utf8()","syntax":"","desc":""},"idn_to_utf8":{"version":"(PHP 5 >= 5.3.0, PECL intl >= 1.0.2, PECL idn >= 0.1)","shortdesc":"Convert domain name from IDNA ASCII to Unicode.","syntax":"\n   string <b>idn_to_utf8<\/b>\n    ( string $domain\n   [, int $options = 0\n   [, int $variant = INTL_IDNA_VARIANT_2003\n   [, array &$idna_info\n  ]]] )","desc":"\n   This function converts Unicode domain name from IDNA ASCII-compatible format to plain Unicode, encoded in UTF-8.\n  "},"ifx_affected_rows":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Get number of rows affected by a query","syntax":"\n   int <b>ifx_affected_rows<\/b>\n    ( resource $result_id\n   )","desc":"\n   Returns the number of rows affected by a query associated with\n   result_id.\n  "},"ifx_blobinfile_mode":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Set the default blob mode for all select queries","syntax":"\n   bool <b>ifx_blobinfile_mode<\/b>\n    ( int $mode\n   )","desc":"\n   Set the default blob mode for all select queries. \n  "},"ifx_byteasvarchar":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Set the default byte mode","syntax":"\n   bool <b>ifx_byteasvarchar<\/b>\n    ( int $mode\n   )","desc":"\n   Sets the default byte mode for all select-queries.  \n  "},"ifx_close":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Close Informix connection","syntax":"\n   bool <b>ifx_close<\/b>\n    ([ resource $link_identifier\n  ] )","desc":"\n    ifx_close() closes the link to an Informix\n   database that's associated with the specified link identifier.\n  "},"ifx_connect":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Open Informix server connection","syntax":"\n   resource <b>ifx_connect<\/b>\n    ([ string $database\n   [, string $userid\n   [, string $password\n  ]]] )","desc":"\n    ifx_connect() establishes a connection to an Informix\n   server.  \n  "},"ifx_copy_blob":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Duplicates the given blob object","syntax":"\n   int <b>ifx_copy_blob<\/b>\n    ( int $bid\n   )","desc":"\n   Duplicates the given blob object.\n  "},"ifx_create_blob":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Creates an blob object","syntax":"\n   int <b>ifx_create_blob<\/b>\n    ( int $type\n   , int $mode\n   , string $param\n   )","desc":"\n   Creates a blob object.\n  "},"ifx_create_char":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Creates an char object","syntax":"\n   int <b>ifx_create_char<\/b>\n    ( string $param\n   )","desc":"\n   Creates an char object.\n  "},"ifx_do":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Execute a previously prepared SQL-statement","syntax":"\n   bool <b>ifx_do<\/b>\n    ( resource $result_id\n   )","desc":"\n   Executes a previously prepared query or opens a cursor for it.\n  "},"ifx_error":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Returns error code of last Informix call","syntax":"\n   string <b>ifx_error<\/b>\n    ([ resource $link_identifier\n  ] )","desc":"\n   Returns in a string one character describing the general results of a\n   statement and both SQLSTATE and SQLCODE associated with the most recent\n   SQL statement executed.\n  "},"ifx_errormsg":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Returns error message of last Informix call","syntax":"\n   string <b>ifx_errormsg<\/b>\n    ([ int $errorcode\n  ] )","desc":"\n   Returns the Informix error message associated with the most recent\n   Informix error.\n  "},"ifx_fetch_row":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Get row as an associative array","syntax":"\n   array <b>ifx_fetch_row<\/b>\n    ( resource $result_id\n   [, mixed $position\n  ] )","desc":"\n   Fetches one row of data from the result associated with the specified\n   result identifier.\n  "},"ifx_fieldproperties":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"List of SQL fieldproperties","syntax":"\n   array <b>ifx_fieldproperties<\/b>\n    ( resource $result_id\n   )","desc":"\n   Returns the Informix SQL fieldproperties of every field in the\n   query as an associative array.  Properties are encoded as:\n   \"SQLTYPE;length;precision;scale;ISNULLABLE\" where SQLTYPE = the\n   Informix type like \"SQLVCHAR\" etc. and ISNULLABLE = \"Y\" or \"N\".\n  "},"ifx_fieldtypes":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"List of Informix SQL fields","syntax":"\n   array <b>ifx_fieldtypes<\/b>\n    ( resource $result_id\n   )","desc":"\n   Returns an associative array with fieldnames as key and the SQL\n   fieldtypes as data for the query associated with\n   result_id.\n  "},"ifx_free_blob":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Deletes the blob object","syntax":"\n   bool <b>ifx_free_blob<\/b>\n    ( int $bid\n   )","desc":"\n   Deletes the blobobject for the given blob object-id.\n  "},"ifx_free_char":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Deletes the char object","syntax":"\n   bool <b>ifx_free_char<\/b>\n    ( int $bid\n   )","desc":"\n   Deletes the charobject for the given char object-id.\n  "},"ifx_free_result":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Releases resources for the query","syntax":"\n   bool <b>ifx_free_result<\/b>\n    ( resource $result_id\n   )","desc":"\n   Releases resources for the query associated with\n   result_id.\n  "},"ifx_get_blob":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Return the content of a blob object","syntax":"\n   string <b>ifx_get_blob<\/b>\n    ( int $bid\n   )","desc":"\n   Returns the content of the blob object.\n  "},"ifx_get_char":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Return the content of the char object","syntax":"\n   string <b>ifx_get_char<\/b>\n    ( int $bid\n   )","desc":"\n   Returns the content of the char object.\n  "},"ifx_getsqlca":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Get the contents of sqlca.sqlerrd[0..5] after a query","syntax":"\n   array <b>ifx_getsqlca<\/b>\n    ( resource $result_id\n   )","desc":"\n   Returns a pseudo-row with sqlca.sqlerrd[0] ... sqlca.sqlerrd[5] after the\n   query associated with result_id.\n  "},"ifx_htmltbl_result":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Formats all rows of a query into a HTML table","syntax":"\n   int <b>ifx_htmltbl_result<\/b>\n    ( resource $result_id\n   [, string $html_table_options\n  ] )","desc":"\n   Formats and prints all rows of the result_id query\n   into a HTML table. \n  "},"ifx_nullformat":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Sets the default return value on a fetch row","syntax":"\n   bool <b>ifx_nullformat<\/b>\n    ( int $mode\n   )","desc":"\n   Sets the default return value of a NULL-value on a fetch row.\n  "},"ifx_num_fields":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Returns the number of columns in the query","syntax":"\n   int <b>ifx_num_fields<\/b>\n    ( resource $result_id\n   )","desc":"\n   After preparing or executing a query, this call gives you the\n   number of columns in the query.\n  "},"ifx_num_rows":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Count the rows already fetched from a query","syntax":"\n   int <b>ifx_num_rows<\/b>\n    ( resource $result_id\n   )","desc":"\n   Gives the number of rows fetched so far for a query with\n   result_id after a\n    ifx_query() or  ifx_do()\n   query.\n  "},"ifx_pconnect":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Open persistent Informix connection","syntax":"\n   resource <b>ifx_pconnect<\/b>\n    ([ string $database\n   [, string $userid\n   [, string $password\n  ]]] )","desc":"\n    ifx_pconnect() acts very much like\n    ifx_connect() with two major differences.\n  "},"ifx_prepare":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Prepare an SQL-statement for execution","syntax":"\n   resource <b>ifx_prepare<\/b>\n    ( string $query\n   , resource $link_identifier\n   [, int $cursor_def\n   ], mixed $blobidarray\n   )","desc":"\n   Prepares a query for later use with\n    ifx_do().\n  "},"ifx_query":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Send Informix query","syntax":"\n   resource <b>ifx_query<\/b>\n    ( string $query\n   , resource $link_identifier\n   [, int $cursor_type\n   [, mixed $blobidarray\n  ]] )","desc":"\n   Sends a query to the currently active database on\n   the server that's associated with the specified link identifier.\n  "},"ifx_textasvarchar":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Set the default text mode","syntax":"\n   bool <b>ifx_textasvarchar<\/b>\n    ( int $mode\n   )","desc":"\n   Sets the default text mode for all select-queries.  \n  "},"ifx_update_blob":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Updates the content of the blob object","syntax":"\n   bool <b>ifx_update_blob<\/b>\n    ( int $bid\n   , string $content\n   )","desc":"\n   Updates the content of the blob object for the given blob object\n   bid. \n  "},"ifx_update_char":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Updates the content of the char object","syntax":"\n   bool <b>ifx_update_char<\/b>\n    ( int $bid\n   , string $content\n   )","desc":"\n   Updates the content of the char object for the given char object\n   bid. \n  "},"ifxus_close_slob":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Deletes the slob object","syntax":"\n   bool <b>ifxus_close_slob<\/b>\n    ( int $bid\n   )","desc":"\n   Deletes the slob object on the given slob object-id\n   bid.\n  "},"ifxus_create_slob":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Creates an slob object and opens it","syntax":"\n   int <b>ifxus_create_slob<\/b>\n    ( int $mode\n   )","desc":"\n   Creates an slob object and opens it.    \n  "},"ifxus_free_slob":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Deletes the slob object","syntax":"\n   bool <b>ifxus_free_slob<\/b>\n    ( int $bid\n   )","desc":"\n   Deletes the slob object.\n  "},"ifxus_open_slob":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Opens an slob object","syntax":"\n   int <b>ifxus_open_slob<\/b>\n    ( int $bid\n   , int $mode\n   )","desc":"\n   Opens an slob object. bid should be an\n   existing slob id. \n  "},"ifxus_read_slob":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Reads nbytes of the slob object","syntax":"\n   string <b>ifxus_read_slob<\/b>\n    ( int $bid\n   , int $nbytes\n   )","desc":"\n   Reads nbytes of the slob object.\n  "},"ifxus_seek_slob":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Sets the current file or seek position","syntax":"\n   int <b>ifxus_seek_slob<\/b>\n    ( int $bid\n   , int $mode\n   , int $offset\n   )","desc":"\n   Sets the current file or seek position of an open slob object.\n  "},"ifxus_tell_slob":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Returns the current file or seek position","syntax":"\n   int <b>ifxus_tell_slob<\/b>\n    ( int $bid\n   )","desc":"\n   Returns the current file or seek position of an open slob object\n  "},"ifxus_write_slob":{"version":"(PHP 4, PHP <=5.2.0)","shortdesc":"Writes a string into the slob object","syntax":"\n   int <b>ifxus_write_slob<\/b>\n    ( int $bid\n   , string $content\n   )","desc":"\n   Writes a string into the slob object.\n  "},"ignore_user_abort":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043b\u0438 \u043f\u0440\u0435\u0440\u044b\u0432\u0430\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 \u0441\u043a\u0440\u0438\u043f\u0442\u0430 \u043f\u0440\u0438 \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u0430","syntax":"\n   int <b>ignore_user_abort<\/b>\n    ([ string $value\n  ] )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043b\u0438 \u043f\u0440\u0435\u0440\u044b\u0432\u0430\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 \u0441\u043a\u0440\u0438\u043f\u0442\u0430 \u043f\u0440\u0438 \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u0430.\n  "},"iis_add_server":{"version":"(PECL iisfunc SVN)","shortdesc":"Creates a new virtual web server","syntax":"\n   int <b>iis_add_server<\/b>\n    ( string $path\n   , string $comment\n   , string $server_ip\n   , int $port\n   , string $host_name\n   , int $rights\n   , int $start_server\n   )","desc":""},"iis_get_dir_security":{"version":"(PECL iisfunc SVN)","shortdesc":"Gets Directory Security","syntax":"\n   int <b>iis_get_dir_security<\/b>\n    ( int $server_instance\n   , string $virtual_path\n   )","desc":""},"iis_get_script_map":{"version":"(PECL iisfunc SVN)","shortdesc":"Gets script mapping on a virtual directory for a specific extension","syntax":"\n   string <b>iis_get_script_map<\/b>\n    ( int $server_instance\n   , string $virtual_path\n   , string $script_extension\n   )","desc":""},"iis_get_server_by_comment":{"version":"(PECL iisfunc SVN)","shortdesc":"Return the instance number associated with the Comment","syntax":"\n   int <b>iis_get_server_by_comment<\/b>\n    ( string $comment\n   )","desc":""},"iis_get_server_by_path":{"version":"(PECL iisfunc SVN)","shortdesc":"Return the instance number associated with the Path","syntax":"\n   int <b>iis_get_server_by_path<\/b>\n    ( string $path\n   )","desc":"\n   Each virtual server in IIS is associated with an instance number.\n    iis_get_server_by_path() finds the instance number\n   from the actual path to the root directory.\n  "},"iis_get_server_rights":{"version":"(PECL iisfunc SVN)","shortdesc":"Gets server rights","syntax":"\n   int <b>iis_get_server_rights<\/b>\n    ( int $server_instance\n   , string $virtual_path\n   )","desc":""},"iis_get_service_state":{"version":"(PECL iisfunc SVN)","shortdesc":"Returns the state for the service defined by ServiceId","syntax":"\n   int <b>iis_get_service_state<\/b>\n    ( string $service_id\n   )","desc":""},"iis_remove_server":{"version":"(PECL iisfunc SVN)","shortdesc":"Removes the virtual web server indicated by ServerInstance","syntax":"\n   int <b>iis_remove_server<\/b>\n    ( int $server_instance\n   )","desc":""},"iis_set_app_settings":{"version":"(PECL iisfunc SVN)","shortdesc":"Creates application scope for a virtual directory","syntax":"\n   int <b>iis_set_app_settings<\/b>\n    ( int $server_instance\n   , string $virtual_path\n   , string $application_scope\n   )","desc":""},"iis_set_dir_security":{"version":"(PECL iisfunc SVN)","shortdesc":"Sets Directory Security","syntax":"\n   int <b>iis_set_dir_security<\/b>\n    ( int $server_instance\n   , string $virtual_path\n   , int $directory_flags\n   )","desc":""},"iis_set_script_map":{"version":"(PECL iisfunc SVN)","shortdesc":"Sets script mapping on a virtual directory","syntax":"\n   int <b>iis_set_script_map<\/b>\n    ( int $server_instance\n   , string $virtual_path\n   , string $script_extension\n   , string $engine_path\n   , int $allow_scripting\n   )","desc":""},"iis_set_server_rights":{"version":"(PECL iisfunc SVN)","shortdesc":"Sets server rights","syntax":"\n   int <b>iis_set_server_rights<\/b>\n    ( int $server_instance\n   , string $virtual_path\n   , int $directory_flags\n   )","desc":""},"iis_start_server":{"version":"(PECL iisfunc SVN)","shortdesc":"Starts the virtual web server","syntax":"\n   int <b>iis_start_server<\/b>\n    ( int $server_instance\n   )","desc":""},"iis_start_service":{"version":"(PECL iisfunc SVN)","shortdesc":"Starts the service defined by ServiceId","syntax":"\n   int <b>iis_start_service<\/b>\n    ( string $service_id\n   )","desc":""},"iis_stop_server":{"version":"(PECL iisfunc SVN)","shortdesc":"Stops the virtual web server","syntax":"\n   int <b>iis_stop_server<\/b>\n    ( int $server_instance\n   )","desc":""},"iis_stop_service":{"version":"(PECL iisfunc SVN)","shortdesc":"Stops the service defined by ServiceId","syntax":"\n   int <b>iis_stop_service<\/b>\n    ( string $service_id\n   )","desc":""},"image_type_to_extension":{"version":"(PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f \u0444\u0430\u0439\u043b\u0430 \u0434\u043b\u044f \u0442\u0438\u043f\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f","syntax":"\n   string <b>image_type_to_extension<\/b>\n    ( int $imagetype\n   [, bool $include_dot = TRUE\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 IMAGETYPE_XXX\n   \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u044b.\n  "},"image_type_to_mime_type":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 Mime-\u0442\u0438\u043f\u0430 \u0434\u043b\u044f \u0442\u0438\u043f\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0433\u043e \n   \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438 getimagesize, exif_read_data, exif_thumbnail, exif_imagetype\n  ","syntax":"\n   string <b>image_type_to_mime_type<\/b>\n    ( int $imagetype\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  image_type_to_mime_type() \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\n   Mime-\u0442\u0438\u043f \u0434\u043b\u044f \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u044b IMAGETYPE.\n  "},"image2wbmp":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440 \u0438\u043b\u0438 \u043f\u0438\u0448\u0435\u0442 \u0432 \u0444\u0430\u0439\u043b","syntax":"\n   bool <b>image2wbmp<\/b>\n    ( resource $image\n   [, string $filename\n   [, int $threshold\n  ]] )","desc":"\n    image2wbmp() \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043b\u0438\u0431\u043e \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 WBMP\n   \u0432\u0435\u0440\u0441\u0438\u044e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f image. \n  "},"imageaffine":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Return an image containing the affine tramsformed src image, using an optional clipping area","syntax":"\n   resource <b>imageaffine<\/b>\n    ( resource $image\n   , array $affine\n   [, array $clip\n  ] )","desc":"\n\n  "},"imageaffinematrixconcat":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Concat two matrices (as in doing many ops in one go)","syntax":"\n   array <b>imageaffinematrixconcat<\/b>\n    ( array $m1\n   , array $m2\n   )","desc":"\n\n  "},"imageaffinematrixget":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Return an image containing the affine tramsformed src image, using an optional clipping area","syntax":"\n   array <b>imageaffinematrixget<\/b>\n    ( int $type\n   [, mixed $options\n  ] )","desc":"\n\n  "},"imagealphablending":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\n   \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u0440\u0435\u0436\u0438\u043c\u0430 \u0441\u043e\u043f\u0440\u044f\u0436\u0435\u043d\u0438\u044f \u0446\u0432\u0435\u0442\u043e\u0432 \u0434\u043b\u044f \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\n  ","syntax":"\n   bool <b>imagealphablending<\/b>\n    ( resource $image\n   , bool $blendmode\n   )","desc":"\n    imagealphablending() \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0440\u0435\u0436\u0438\u043c \u0441\u043e\u043f\u0440\u044f\u0436\u0435\u043d\u0438\u044f\n   \u0446\u0432\u0435\u0442\u043e\u0432 \u0434\u043b\u044f truecolor-\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u043f\u0440\u0438 \u0440\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u0438. \u0412 \u0440\u0435\u0436\u0438\u043c\u0435 \u0441\u043e\u043f\u0440\u044f\u0436\u0435\u043d\u0438\u044f \u0430\u043b\u044c\u0444\u0430\n   \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 \u0446\u0432\u0435\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442\u0441\u044f \u0432\u0441\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c \u0440\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u044f, \u0432\u0440\u043e\u0434\u0435\n    imagesetpixel(), \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0442\u043e, \u043d\u0430\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0438\u043b\u044c\u043d\u043e \u0446\u0432\u0435\u0442\n   \u043d\u0438\u0436\u0435\u043b\u0435\u0436\u0430\u0449\u0435\u0433\u043e \u0441\u043b\u043e\u044f \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0441\u0430\u0447\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u0447\u0435\u0440\u0435\u0437 \u043d\u0430\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0435\u043c\u043e\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435. \u0412\n   \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435, gd \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0441\u043e\u043f\u0440\u044f\u0433\u0430\u0435\u0442 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0446\u0432\u0435\u0442 \u0432 \u043a\u0430\u0436\u0434\u043e\u0439 \u0442\u043e\u0447\u043a\u0435 \u0441 \u0446\u0432\u0435\u0442\u043e\u043c\n   \u0440\u0438\u0441\u0443\u0435\u043c\u043e\u0433\u043e \u043f\u043e\u0432\u0435\u0440\u0445 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0441\u043e\u043f\u0440\u044f\u0436\u0435\u043d\u0438\u044f \u0432 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0438.\n   \u041f\u0438\u043a\u0441\u0435\u043b\u044b, \u043f\u043e\u0434\u0432\u0435\u0440\u0433\u0448\u0438\u0435\u0441\u044f \u0441\u043e\u043f\u0440\u044f\u0436\u0435\u043d\u0438\u044e, \u043d\u0435 \u043e\u0431\u043b\u0430\u0434\u0430\u044e\u0442 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e\u043c \u043f\u0440\u043e\u0437\u0440\u0430\u0447\u043d\u043e\u0441\u0442\u0438.\n   \u0412 \u0440\u0435\u0436\u0438\u043c\u0435 \u0431\u0435\u0437 \u0441\u043e\u043f\u0440\u044f\u0436\u0435\u043d\u0438\u044f \u0446\u0432\u0435\u0442 \u0440\u0438\u0441\u0443\u0435\u043c\u043e\u0433\u043e \u043f\u043e\u0432\u0435\u0440\u0445 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043f\u0438\u043a\u0441\u0435\u043b\u0430 \u0431\u0443\u043a\u0432\u0430\u043b\u044c\u043d\u043e\n   \u043a\u043e\u043f\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0432\u043c\u0435\u0441\u0442\u0435 \u0441\u043e \u0441\u0432\u043e\u0438\u043c \u0430\u043b\u044c\u0444\u0430 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u043c, \u0437\u0430\u043c\u0435\u043d\u044f\u044f \u043f\u0438\u043a\u0441\u0435\u043b \u0432 \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u043c\n   \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0438. \u0420\u0435\u0436\u0438\u043c \u0441\u043e\u043f\u0440\u044f\u0436\u0435\u043d\u0438\u044f \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u043f\u0440\u0438 \u0440\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u0438 \u043d\u0430 \u043f\u0430\u043b\u0438\u0442\u0440\u043e\u0432\u044b\u0445\n   \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u0445.\n  "},"imageantialias":{"version":"(PHP 4 >= 4.3.2, PHP 5)","shortdesc":"\u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043b\u0438 \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0441\u0433\u043b\u0430\u0436\u0438\u0432\u0430\u043d\u0438\u044f \u0438\u043b\u0438 \u043d\u0435\u0442","syntax":"\n   bool <b>imageantialias<\/b>\n    ( resource $image\n   , bool $enabled\n   )","desc":"\n   \u0417\u0430\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u0442 \u043c\u0435\u0445\u0430\u043d\u0438\u0437\u043c\u044b \u0441\u0433\u043b\u0430\u0436\u0438\u0432\u0430\u043d\u0438\u044f \u043f\u0440\u0438 \u0440\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u0438 \u043b\u0438\u043d\u0438\u0439 \u0438 \u0437\u0430\u043c\u043a\u043d\u0443\u0442\u044b\u0445\n   \u043c\u043d\u043e\u0433\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u043e\u0432. \u041d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0430\u043b\u044c\u0444\u0430 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u043f\u0440\u044f\u043c\u043e\u0433\u043e\n   \u0441\u043c\u0435\u0448\u0438\u0432\u0430\u043d\u0438\u044f \u0446\u0432\u0435\u0442\u043e\u0432. \u0420\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0441 truecolor-\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u043c\u0438.\n  "},"imagearc":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0420\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0443\u0433\u0438","syntax":"\n   bool <b>imagearc<\/b>\n    ( resource $image\n   , int $cx\n   , int $cy\n   , int $width\n   , int $height\n   , int $start\n   , int $end\n   , int $color\n   )","desc":"\n    imagearc() \u0440\u0438\u0441\u0443\u0435\u0442 \u0434\u0443\u0433\u0443 \u043e\u043a\u0440\u0443\u0436\u043d\u043e\u0441\u0442\u0438 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430\u043c\u0438\n   \u0446\u0435\u043d\u0442\u0440\u0430.\n  "},"imagechar":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0420\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u043f\u043e \u0433\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u0438\n  ","syntax":"\n   bool <b>imagechar<\/b>\n    ( resource $image\n   , int $font\n   , int $x\n   , int $y\n   , string $c\n   , int $color\n   )","desc":"\n    imagechar() \u0440\u0438\u0441\u0443\u0435\u0442 \u043f\u0435\u0440\u0432\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430\n   c \u043d\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0438 \u0441 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u043e\u043c\n   image \u043d\u0430 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430\u0445\n   x,y (\u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u043e\u0442\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u044e\u0442\u0441\u044f\n   \u0441 \u043b\u0435\u0432\u043e\u0433\u043e \u0432\u0435\u0440\u0445\u043d\u0435\u0433\u043e \u0443\u0433\u043b\u0430) \u0446\u0432\u0435\u0442\u043e\u043c color.\n  "},"imagecharup":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0420\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u043e\n  ","syntax":"\n   bool <b>imagecharup<\/b>\n    ( resource $image\n   , int $font\n   , int $x\n   , int $y\n   , string $c\n   , int $color\n   )","desc":"\n   \u0420\u0438\u0441\u0443\u0435\u0442 \u0441\u0438\u043c\u0432\u043e\u043b c \u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u043e \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430\u0445\n   \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f image.\n  "},"imagecolorallocate":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0446\u0432\u0435\u0442\u0430 \u0434\u043b\u044f \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\n  ","syntax":"\n   int <b>imagecolorallocate<\/b>\n    ( resource $image\n   , int $red\n   , int $green\n   , int $blue\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0446\u0432\u0435\u0442\u0430 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c\u0438 RGB\n   \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430\u043c\u0438.\n  "},"imagecolorallocatealpha":{"version":"(PHP 4 >= 4.3.2, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0446\u0432\u0435\u0442\u0430 \u0434\u043b\u044f \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f","syntax":"\n   int <b>imagecolorallocatealpha<\/b>\n    ( resource $image\n   , int $red\n   , int $green\n   , int $blue\n   , int $alpha\n   )","desc":"\n    imagecolorallocatealpha() \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    imagecolorallocate(), \u043d\u043e \u0435\u0449\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043a \u0446\u0432\u0435\u0442\u0443 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n   alpha, \u043e\u0442\u0432\u0435\u0447\u0430\u044e\u0449\u0438\u0439 \u0437\u0430 \u043f\u0440\u043e\u0437\u0440\u0430\u0447\u043d\u043e\u0441\u0442\u044c.\n  "},"imagecolorat":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0446\u0432\u0435\u0442\u0430 \u043f\u0438\u043a\u0441\u0435\u043b\u0430","syntax":"\n   int <b>imagecolorat<\/b>\n    ( resource $image\n   , int $x\n   , int $y\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0434\u0435\u043a\u0441 \u0446\u0432\u0435\u0442\u0430 \u043f\u0438\u043a\u0441\u0435\u043b\u0430 \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430\u0445 \u043d\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0438\n   image.\n  "},"imagecolorclosest":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0446\u0432\u0435\u0442\u0430 \u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0435\u0433\u043e \u043a \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443\n  ","syntax":"\n   int <b>imagecolorclosest<\/b>\n    ( resource $image\n   , int $red\n   , int $green\n   , int $blue\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0434\u0435\u043a\u0441 \u0446\u0432\u0435\u0442\u0430 \u0432 \u043f\u0430\u043b\u0438\u0442\u0440\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f, \"\u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0435\u0433\u043e\" \u043a \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443\n   RGB \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e.\n  "},"imagecolorclosestalpha":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0446\u0432\u0435\u0442\u0430 \u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0435\u0433\u043e \u043a \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u043f\u0440\u043e\u0437\u0440\u0430\u0447\u043d\u043e\u0441\u0442\u0438\n  ","syntax":"\n   int <b>imagecolorclosestalpha<\/b>\n    ( resource $image\n   , int $red\n   , int $green\n   , int $blue\n   , int $alpha\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0434\u0435\u043a\u0441 \u0446\u0432\u0435\u0442\u0430 \u0432 \u043f\u0430\u043b\u0438\u0442\u0440\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f, \"\u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0435\u0433\u043e\" \u043a \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443\n   RGB \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e, \u0430 \u0442\u0430\u043a\u0436\u0435 alpha \u0443\u0440\u043e\u0432\u043d\u044e.\n  "},"imagecolorclosesthwb":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0446\u0432\u0435\u0442\u0430, \u0438\u043c\u0435\u044e\u0449\u0435\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0442\u043e\u043d, \u0431\u0435\u043b\u0438\u0437\u043d\u0443 \u0438 \u0437\u0430\u0442\u0435\u043c\u043d\u0435\u043d\u0438\u0435\n  ","syntax":"\n   int <b>imagecolorclosesthwb<\/b>\n    ( resource $image\n   , int $red\n   , int $green\n   , int $blue\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0446\u0432\u0435\u0442\u0430, \u0438\u043c\u0435\u044e\u0449\u0435\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0442\u043e\u043d\u0430, \u0431\u0435\u043b\u0438\u0437\u043d\u044b \u0438 \u0437\u0430\u0442\u0435\u043c\u043d\u0435\u043d\u0438\u044f \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435\n   \u0431\u043b\u0438\u0437\u043a\u0438\u0435 \u043a \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0446\u0432\u0435\u0442\u0443.\n  "},"imagecolordeallocate":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0420\u0430\u0437\u0440\u044b\u0432 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0446\u0438\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0441 \u0446\u0432\u0435\u0442\u043e\u043c \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f","syntax":"\n   bool <b>imagecolordeallocate<\/b>\n    ( resource $image\n   , int $color\n   )","desc":"\n   \u0420\u0430\u0437\u0440\u044b\u0432\u0430\u0435\u0442 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0446\u0438\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0441 \u0446\u0432\u0435\u0442\u043e\u043c, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0440\u0430\u043d\u0435\u0435 \u0431\u044b\u043b\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438\n    imagecolorallocate() \u0438\u043b\u0438\n    imagecolorallocatealpha().\n  "},"imagecolorexact":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430\n  ","syntax":"\n   int <b>imagecolorexact<\/b>\n    ( resource $image\n   , int $red\n   , int $green\n   , int $blue\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0434\u0435\u043a\u0441 \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430 \u0432 \u043f\u0430\u043b\u0438\u0442\u0440\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f.\n  "},"imagecolorexactalpha":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430 \u0438 \u0430\u043b\u044c\u0444\u0430 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430","syntax":"\n   int <b>imagecolorexactalpha<\/b>\n    ( resource $image\n   , int $red\n   , int $green\n   , int $blue\n   , int $alpha\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0434\u0435\u043a\u0441 \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430 \u0438 \u0430\u043b\u044c\u0444\u0430 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 \u0432 \u043f\u0430\u043b\u0438\u0442\u0440\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f.\n  "},"imagecolormatch":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\n   \u0414\u0435\u043b\u0430\u0435\u0442 \u0446\u0432\u0435\u0442\u0430 \u043f\u0430\u043b\u0438\u0442\u0440\u043e\u0432\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0431\u043e\u043b\u0435\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c\u0438\n   truecolor \u0432\u0435\u0440\u0441\u0438\u0438\n  ","syntax":"\n   bool <b>imagecolormatch<\/b>\n    ( resource $image1\n   , resource $image2\n   )","desc":"\n   \u0414\u0435\u043b\u0430\u0435\u0442 \u0446\u0432\u0435\u0442\u0430 \u043f\u0430\u043b\u0438\u0442\u0440\u043e\u0432\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0431\u043e\u043b\u0435\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c\u0438\n   truecolor \u0432\u0435\u0440\u0441\u0438\u0438.\n  "},"imagecolorresolve":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430 \u0438\u043b\u0438 \u0435\u0433\u043e \u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0438\u0439 \u0430\u043d\u0430\u043b\u043e\u0433","syntax":"\n   int <b>imagecolorresolve<\/b>\n    ( resource $image\n   , int $red\n   , int $green\n   , int $blue\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0432\u0435\u0440\u043d\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0446\u0432\u0435\u0442\u0430\n   \u0434\u043b\u044f \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430, \u043b\u0438\u0431\u043e \u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0443\u044e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u0443\u044e\n   \u0435\u0433\u043e \u0430\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u0443.\n  "},"imagecolorresolvealpha":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\n  \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430 \u0438 \u0430\u043b\u044c\u0444\u0430 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430\n  \u0438\u043b\u0438 \u0435\u0433\u043e \u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0438\u0439 \u0430\u043d\u0430\u043b\u043e\u0433\n  ","syntax":"\n   int <b>imagecolorresolvealpha<\/b>\n    ( resource $image\n   , int $red\n   , int $green\n   , int $blue\n   , int $alpha\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0432\u0435\u0440\u043d\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0446\u0432\u0435\u0442\u0430\n   \u0434\u043b\u044f \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430, \u043b\u0438\u0431\u043e \u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0443\u044e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u0443\u044e\n   \u0435\u0433\u043e \u0430\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u0443.\n  "},"imagecolorset":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u043d\u0430\u0431\u043e\u0440\u0430 \u0446\u0432\u0435\u0442\u043e\u0432 \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u043f\u0430\u043b\u0438\u0442\u0440\u044b\n  ","syntax":"\n   void <b>imagecolorset<\/b>\n    ( resource $image\n   , int $index\n   , int $red\n   , int $green\n   , int $blue\n   [, int $alpha = 0\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435 \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0432 \u043f\u0430\u043b\u0438\u0442\u0440\u0435 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0446\u0432\u0435\u0442\u0443.\n   \u042d\u0442\u043e \u043f\u043e\u043b\u0435\u0437\u043d\u043e \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u044d\u0444\u0444\u0435\u043a\u0442\u0430 \u043f\u043e\u0434\u043e\u0431\u043d\u043e\u0433\u043e \u0437\u0430\u043b\u0438\u0432\u043a\u0435 \u0446\u0432\u0435\u0442\u043e\u043c \u0431\u0435\u0437 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u0435\u043d\u0438\u044f\n   \u0437\u0430\u043b\u0438\u0432\u043a\u0438.\n  "},"imagecolorsforindex":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0446\u0432\u0435\u0442\u043e\u0432, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u0438\u043d\u0434\u0435\u043a\u0441\u0443\n  ","syntax":"\n   array <b>imagecolorsforindex<\/b>\n    ( resource $image\n   , int $index\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0446\u0432\u0435\u0442\u043e\u0432, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0438\u043d\u0434\u0435\u043a\u0441\u0443.\n  "},"imagecolorstotal":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0446\u0432\u0435\u0442\u043e\u0432 \u0432 \u043f\u0430\u043b\u0438\u0442\u0440\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\n  ","syntax":"\n   int <b>imagecolorstotal<\/b>\n    ( resource $image\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0446\u0432\u0435\u0442\u043e\u0432 \u0432 \u043f\u0430\u043b\u0438\u0442\u0440\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f.\n  "},"imagecolortransparent":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0446\u0432\u0435\u0442 \u043a\u0430\u043a \u043f\u0440\u043e\u0437\u0440\u0430\u0447\u043d\u044b\u0439\n  ","syntax":"\n   int <b>imagecolortransparent<\/b>\n    ( resource $image\n   [, int $color\n  ] )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043f\u0440\u043e\u0437\u0440\u0430\u0447\u043d\u043e\u0441\u0442\u044c \u0446\u0432\u0435\u0442\u0430 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0438\n   image.\n  "},"imageconvolution":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\n   \u041d\u0430\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0438\u0441\u043a\u0440\u0438\u0432\u043b\u044f\u044e\u0449\u0435\u0439 \u043c\u0430\u0442\u0440\u0438\u0446\u044b 3\u04453, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442 \u0438 \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u0435\n  ","syntax":"\n   bool <b>imageconvolution<\/b>\n    ( resource $image\n   , array $matrix\n   , float $div\n   , float $offset\n   )","desc":"\n   \u041d\u0430\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0435\u0442 \u0438\u0441\u043a\u0440\u0438\u0432\u043b\u044f\u044e\u0449\u0443\u044e \u043c\u0430\u0442\u0440\u0438\u0446\u0443 \u043d\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\n   \u0438 \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u0435.\n  "},"imagecopy":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0447\u0430\u0441\u0442\u0438 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f","syntax":"\n   bool <b>imagecopy<\/b>\n    ( resource $dst_im\n   , resource $src_im\n   , int $dst_x\n   , int $dst_y\n   , int $src_x\n   , int $src_y\n   , int $src_w\n   , int $src_h\n   )","desc":"\n   \u041a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u0447\u0430\u0441\u0442\u044c src_im \u0432 dst_im,\n   \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442 x, y src_x,\n   src_y  \u0441 \u0448\u0438\u0440\u0438\u043d\u043e\u0439 src_w \u0438 \u0432\u044b\u0441\u043e\u0442\u043e\u0439\n   src_h. \u0421\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b\n   dst_x \u0438 dst_y.\n  "},"imagecopymerge":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\u041a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u0447\u0430\u0441\u0442\u044c \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441 \u043d\u0430\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043c","syntax":"\n   bool <b>imagecopymerge<\/b>\n    ( resource $dst_im\n   , resource $src_im\n   , int $dst_x\n   , int $dst_y\n   , int $src_x\n   , int $src_y\n   , int $src_w\n   , int $src_h\n   , int $pct\n   )","desc":"\n   \u041a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u0447\u0430\u0441\u0442\u044c src_im \u0438 \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u0442 \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u043d\u0430\n   dst_im, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\n   src_x, src_y  \u0441 \u0448\u0438\u0440\u0438\u043d\u043e\u0439\n   src_w \u0438 \u0432\u044b\u0441\u043e\u0442\u043e\u0439 src_h.\n   \u0421\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b\n   dst_x \u0438 dst_y.\n  "},"imagecopymergegray":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u041a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u0447\u0430\u0441\u0442\u044c \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441 \u043d\u0430\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043c \u0432 \u0433\u0440\u0430\u0434\u0430\u0446\u0438\u044f\u0445 \u0441\u0435\u0440\u043e\u0433\u043e","syntax":"\n   bool <b>imagecopymergegray<\/b>\n    ( resource $dst_im\n   , resource $src_im\n   , int $dst_x\n   , int $dst_y\n   , int $src_x\n   , int $src_y\n   , int $src_w\n   , int $src_h\n   , int $pct\n   )","desc":"\n   \u041a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u0447\u0430\u0441\u0442\u044c src_im \u0438 \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u0442 \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u043d\u0430\n   dst_im, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\n   src_x, src_y  \u0441 \u0448\u0438\u0440\u0438\u043d\u043e\u0439\n   src_w \u0438 \u0432\u044b\u0441\u043e\u0442\u043e\u0439 src_h.\n   \u0421\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b\n   dst_x \u0438 dst_y.\n  "},"imagecopyresampled":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\n   \u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441 \u0440\u0435\u0441\u0435\u043c\u043f\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c\n  ","syntax":"\n   bool <b>imagecopyresampled<\/b>\n    ( resource $dst_image\n   , resource $src_image\n   , int $dst_x\n   , int $dst_y\n   , int $src_x\n   , int $src_y\n   , int $dst_w\n   , int $dst_h\n   , int $src_w\n   , int $src_h\n   )","desc":"\n    imagecopyresampled() \u043a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043e\u0434\u043d\u043e\u0433\u043e\n   \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u0434\u0440\u0443\u0433\u043e\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435, \u0438\u043d\u0442\u0435\u0440\u043f\u043e\u043b\u0438\u0440\u0443\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0438\u043a\u0441\u0435\u043b\u043e\u0432 \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c,\n   \u0447\u0442\u043e\u0431\u044b \u0443\u043c\u0435\u043d\u044c\u0448\u0435\u043d\u0438\u0435 \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0435 \u0443\u043c\u0435\u043d\u044c\u0448\u0430\u043b\u043e \u0435\u0433\u043e \u0447\u0435\u0442\u043a\u043e\u0441\u0442\u0438.\n  "},"imagecopyresized":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0447\u0430\u0441\u0442\u0438 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f","syntax":"\n   bool <b>imagecopyresized<\/b>\n    ( resource $dst_image\n   , resource $src_image\n   , int $dst_x\n   , int $dst_y\n   , int $src_x\n   , int $src_y\n   , int $dst_w\n   , int $dst_h\n   , int $src_w\n   , int $src_h\n   )","desc":"\n    imagecopyresized() \u043a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u044b\u0439 \u0443\u0447\u0430\u0441\u0442\u043e\u043a \u043e\u0434\u043d\u043e\u0433\u043e\n   \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u0434\u0440\u0443\u0433\u043e\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435.\n   dst_image - \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0438\u0440\u0443\u044e\u0449\u0435\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435,\n   src_image - \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f.\n  "},"imagecreate":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u0430\u043b\u0438\u0442\u0440\u043e\u0432\u043e\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f","syntax":"\n   resource <b>imagecreate<\/b>\n    ( int $width\n   , int $height\n   )","desc":"\n    imagecreate() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f,\n   \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0435\u0433\u043e \u0438\u0437 \u0441\u0435\u0431\u044f \u043f\u0443\u0441\u0442\u043e\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430.\n  "},"imagecreatefromgd":{"version":"(PHP 4 >= 4.0.7, PHP 5)","shortdesc":"\n   \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 GD \u0444\u0430\u0439\u043b\u0430 \u0438\u043b\u0438 URL\n  ","syntax":"\n   resource <b>imagecreatefromgd<\/b>\n    ( string $filename\n   )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 GD \u0444\u0430\u0439\u043b\u0430 \u0438\u043b\u0438 URL.\n  "},"imagecreatefromgd2":{"version":"(PHP 4 >= 4.0.7, PHP 5)","shortdesc":"\n   \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 GD2 \u0438\u043b\u0438 URL\n  ","syntax":"\n   resource <b>imagecreatefromgd2<\/b>\n    ( string $filename\n   )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 GD2 \u0438\u043b\u0438 URL.\n  "},"imagecreatefromgd2part":{"version":"(PHP 4 >= 4.0.7, PHP 5)","shortdesc":"\n   \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0447\u0430\u0441\u0442\u0438 GD2 \u0444\u0430\u0439\u043b\u0430 \u0438\u043b\u0438 URL\n  ","syntax":"\n   resource <b>imagecreatefromgd2part<\/b>\n    ( string $filename\n   , int $srcX\n   , int $srcY\n   , int $width\n   , int $height\n   )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0447\u0430\u0441\u0442\u0438 GD2 \u0444\u0430\u0439\u043b\u0430 \u0438\u043b\u0438 URL.\n  "},"imagecreatefromgif":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u043e\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u0438\u043b\u0438 URL","syntax":"\n   resource <b>imagecreatefromgif<\/b>\n    ( string $filename\n   )","desc":"\n    imagecreatefromgif() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f,\n   \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0435\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u0438\u043c\u0435\u043d\u0435\u043c.\n  "},"imagecreatefromjpeg":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u043e\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u0438\u043b\u0438 URL","syntax":"\n   resource <b>imagecreatefromjpeg<\/b>\n    ( string $filename\n   )","desc":"\n    imagecreatefromjpeg() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f,\n   \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0435\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u0438\u043c\u0435\u043d\u0435\u043c.\n  "},"imagecreatefrompng":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u043e\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u0438\u043b\u0438 URL","syntax":"\n   resource <b>imagecreatefrompng<\/b>\n    ( string $filename\n   )","desc":"\n    imagecreatefrompng() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f,\n   \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0435\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u0438\u043c\u0435\u043d\u0435\u043c.\n  "},"imagecreatefromstring":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\n   \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438\u0437 \u043f\u043e\u0442\u043e\u043a\u0430 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0441\u0442\u0440\u043e\u043a\u043e\u0439\n  ","syntax":"\n   resource <b>imagecreatefromstring<\/b>\n    ( string $image\n   )","desc":"\n    imagecreatefromstring() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f,\n   \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0435\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u0438\u0437 \u043f\u043e\u0442\u043e\u043a\u0430 image.\n   \u042d\u0442\u0438 \u0442\u0438\u043f\u044b \u0431\u0443\u0434\u0443\u0442 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0442\u044c\u0441\u044f, \u0435\u0441\u043b\u0438 \u0441\u0431\u043e\u0440\u043a\u0430 PHP \u0438\u0445 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442:\n   JPEG, PNG, GIF, WBMP \u0438 GD2.\n  "},"imagecreatefromwbmp":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u043e\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u0438\u043b\u0438 URL","syntax":"\n   resource <b>imagecreatefromwbmp<\/b>\n    ( string $filename\n   )","desc":"\n    imagecreatefromwbmp() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f,\n   \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0435\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u0438\u043c\u0435\u043d\u0435\u043c.\n  "},"imagecreatefromwebp":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u043e\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u0438\u043b\u0438 URL","syntax":"\n   resource <b>imagecreatefromwebp<\/b>\n    ( string $filename\n   )","desc":"\n    imagecreatefromwebp() returns an image identifier\n   representing the image obtained from the given filename.\n  "},"imagecreatefromxbm":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u043e\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u0438\u043b\u0438 URL","syntax":"\n   resource <b>imagecreatefromxbm<\/b>\n    ( string $filename\n   )","desc":"\n    imagecreatefromxbm() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f,\n   \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0435\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u0438\u043c\u0435\u043d\u0435\u043c.\n  "},"imagecreatefromxpm":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u043e\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u0438\u043b\u0438 URL","syntax":"\n   resource <b>imagecreatefromxpm<\/b>\n    ( string $filename\n   )","desc":"\n    imagecreatefromxpm() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f,\n   \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0435\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u0438\u043c\u0435\u043d\u0435\u043c.\n  "},"imagecreatetruecolor":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u043d\u043e\u0446\u0432\u0435\u0442\u043d\u043e\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f","syntax":"\n   resource <b>imagecreatetruecolor<\/b>\n    ( int $width\n   , int $height\n   )","desc":"\n    imagecreatetruecolor() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f,\n   \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0439 \u0447\u0435\u0440\u043d\u043e\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430.\n  "},"imagecrop":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Crop an image using the given coordinates and size, x, y, width and height","syntax":"\n   resource <b>imagecrop<\/b>\n    ( resource $image\n   , array $rect\n   )","desc":"\n\n  "},"imagecropauto":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Crop an image automatically using one of the available modes","syntax":"\n   resource <b>imagecropauto<\/b>\n    ( resource $image\n   [, int $mode = -1\n   [, float $threshold = .5\n   [, int $color = -1\n  ]]] )","desc":"\n\n  "},"imagedashedline":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0420\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0443\u043d\u043a\u0442\u0438\u0440\u043d\u043e\u0439 \u043b\u0438\u043d\u0438\u0438","syntax":"\n   bool <b>imagedashedline<\/b>\n    ( resource $image\n   , int $x1\n   , int $y1\n   , int $x2\n   , int $y2\n   , int $color\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0443\u0441\u0442\u0430\u0440\u0435\u043b\u0430. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0441\u043e\u0447\u0435\u0442\u0430\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0439\n    imagesetstyle() \u0438  imageline().\n  "},"imagedestroy":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u043d\u0438\u0447\u0442\u043e\u0436\u0435\u043d\u0438\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f","syntax":"\n   bool <b>imagedestroy<\/b>\n    ( resource $image\n   )","desc":"\n    imagedestroy() \u043e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u0435\u0442 \u043f\u0430\u043c\u044f\u0442\u044c, \u0437\u0430\u0435\u043d\u044f\u0442\u0443\u044e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043c\n   image.\n  "},"imageellipse":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u0420\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u0435 \u044d\u043b\u043b\u0438\u043f\u0441\u0430","syntax":"\n   bool <b>imageellipse<\/b>\n    ( resource $image\n   , int $cx\n   , int $cy\n   , int $width\n   , int $height\n   , int $color\n   )","desc":"\n   \u0420\u0438\u0441\u0443\u0435\u0442 \u044d\u043b\u043b\u0438\u043f\u0441 \u0441 \u0446\u0435\u043d\u0442\u0440\u043e\u043c \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430\u0445.\n  "},"imagefill":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0417\u0430\u043b\u0438\u0432\u043a\u0430","syntax":"\n   bool <b>imagefill<\/b>\n    ( resource $image\n   , int $x\n   , int $y\n   , int $color\n   )","desc":"\n   \u041f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442 \u0437\u0430\u043b\u0438\u0432\u043a\u0443, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442 (\u0432\u0435\u0440\u0445\u043d\u0438\u0439 \u043b\u0435\u0432\u044b\u0439 \u0443\u0433\u043e\u043b \u0438\u043c\u0435\u0435\u0442\n   \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b 0, 0), \u0446\u0432\u0435\u0442\u043e\u043c color \u0432 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0438\n   image.\n  "},"imagefilledarc":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u0420\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u0437\u0430\u043b\u0438\u0432\u043a\u0430 \u0434\u0443\u0433\u0438","syntax":"\n   bool <b>imagefilledarc<\/b>\n    ( resource $image\n   , int $cx\n   , int $cy\n   , int $width\n   , int $height\n   , int $start\n   , int $end\n   , int $color\n   , int $style\n   )","desc":"\n   \u0420\u0438\u0441\u0443\u0435\u0442 \u0434\u0443\u0433\u0443 \u0441 \u0446\u0435\u043d\u0442\u0440\u043e\u043c \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430\u0445 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\n   image.\n  "},"imagefilledellipse":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u0420\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u0430\u043a\u0440\u0430\u0448\u0435\u043d\u043d\u043e\u0433\u043e \u044d\u043b\u043b\u0438\u043f\u0441\u0430","syntax":"\n   bool <b>imagefilledellipse<\/b>\n    ( resource $image\n   , int $cx\n   , int $cy\n   , int $width\n   , int $height\n   , int $color\n   )","desc":"\n   \u0420\u0438\u0441\u0443\u0435\u0442 \u044d\u043b\u043b\u0438\u043f\u0441 \u0441 \u0446\u0435\u043d\u0442\u0440\u043e\u043c \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430\u0445 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\n   image.\n  "},"imagefilledpolygon":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0420\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u0430\u043a\u0440\u0430\u0448\u0435\u043d\u043d\u043e\u0433\u043e \u043c\u043d\u043e\u0433\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u0430","syntax":"\n   bool <b>imagefilledpolygon<\/b>\n    ( resource $image\n   , array $points\n   , int $num_points\n   , int $color\n   )","desc":"\n    imagefilledpolygon() \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0437\u0430\u043a\u0440\u0430\u0448\u0435\u043d\u043d\u044b\u0439 \u043c\u043d\u043e\u0433\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\n   \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0438 image.\n  "},"imagefilledrectangle":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0420\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u0430\u043a\u0440\u0430\u0448\u0435\u043d\u043d\u043e\u0433\u043e \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u0430","syntax":"\n   bool <b>imagefilledrectangle<\/b>\n    ( resource $image\n   , int $x1\n   , int $y1\n   , int $x2\n   , int $y2\n   , int $color\n   )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a \u0437\u0430\u043a\u0440\u0430\u0448\u0435\u043d\u043d\u044b\u0439 \u0446\u0432\u0435\u0442\u043e\u043c color\n   \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0438 image. \u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0442\u043e\u0447\u043a\u0430 1, \u043a\u043e\u043d\u0435\u0447\u043d\u0430\u044f\n   2. 0,0 - \u043b\u0435\u0432\u044b\u0439 \u0432\u0435\u0440\u0445\u043d\u0438\u0439 \u0443\u0433\u043e\u043b \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f.\n  "},"imagefilltoborder":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0417\u0430\u043b\u0438\u0432\u043a\u0430 \u0446\u0432\u0435\u0442\u043e\u043c","syntax":"\n   bool <b>imagefilltoborder<\/b>\n    ( resource $image\n   , int $x\n   , int $y\n   , int $border\n   , int $color\n   )","desc":"\n    imagefilltoborder() \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442 \u0437\u0430\u043b\u0438\u0432\u043a\u0443 \u043e\u0431\u043b\u0430\u0441\u0442\u0438, \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u043d\u043e\u0439\n   \u0446\u0432\u0435\u0442\u043e\u043c border. \u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430\n   x, y (\u043b\u0435\u0432\u044b\u0439 \u0432\u0435\u0440\u0445\u043d\u0438\u0439 \u0443\u0433\u043e\u043b \u0438\u043c\u0435\u0435\u0442\n   \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b 0, 0), \u0430 \u043e\u0431\u043b\u0430\u0441\u0442\u044c \u0437\u0430\u043a\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0446\u0432\u0435\u0442\u043e\u043c\n   color.\n  "},"imagefilter":{"version":"(PHP 5)","shortdesc":"\u041f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442 \u0444\u0438\u043b\u044c\u0442\u0440 \u043a \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044e","syntax":"\n   bool <b>imagefilter<\/b>\n    ( resource $image\n   , int $filtertype\n   [, int $arg1\n   [, int $arg2\n   [, int $arg3\n   [, int $arg4\n  ]]]] )","desc":"\n    imagefilter() \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0444\u0438\u043b\u044c\u0442\u0440\n   filtertype \u043a \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044e image.\n  "},"imageflip":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Flips an image using a given mode","syntax":"\n   bool <b>imageflip<\/b>\n    ( resource $image\n   , int $mode\n   )","desc":"\n   Flips the image image using the given\n   mode. \n  "},"imagefontheight":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u044b\u0441\u043e\u0442\u044b \u0448\u0440\u0438\u0444\u0442\u0430","syntax":"\n   int <b>imagefontheight<\/b>\n    ( int $font\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u044b\u0441\u043e\u0442\u0443 \u0432 \u043f\u0438\u043a\u0441\u0435\u043b\u0430\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0448\u0440\u0438\u0444\u0442\u0430.\n  "},"imagefontwidth":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0448\u0438\u0440\u0438\u043d\u044b \u0448\u0440\u0438\u0444\u0442\u0430","syntax":"\n   int <b>imagefontwidth<\/b>\n    ( int $font\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0448\u0438\u0440\u0438\u043d\u0443 \u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u0448\u0440\u0438\u0444\u0442\u0430.\n  "},"imageftbbox":{"version":"(PHP 4 >= 4.0.7, PHP 5)","shortdesc":"\n   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0433\u0440\u0430\u043d\u0438\u0446 \u0442\u0435\u043a\u0441\u0442\u0430 \u0432\u044b\u0432\u043e\u0434\u0438\u043c\u043e\u0433\u043e \u0448\u0440\u0438\u0444\u0442\u043e\u043c freetype2\n  ","syntax":"\n   array <b>imageftbbox<\/b>\n    ( float $size\n   , float $angle\n   , string $fontfile\n   , string $text\n   [, array $extrainfo\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0440\u0430\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0430\u043c\u043a\u0443 (\u0433\u0440\u0430\u043d\u0438\u0446\u044b) FreeType \u0442\u0435\u043a\u0441\u0442\u0430 .\n  "},"imagefttext":{"version":"(PHP 4 >= 4.0.7, PHP 5)","shortdesc":"\n   \u041d\u0430\u043d\u0435\u0441\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0441\u0442\u0430 \u043d\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0448\u0440\u0438\u0444\u0442\u044b FreeType 2\n  ","syntax":"\n   array <b>imagefttext<\/b>\n    ( resource $image\n   , float $size\n   , float $angle\n   , int $x\n   , int $y\n   , int $color\n   , string $fontfile\n   , string $text\n   [, array $extrainfo\n  ] )","desc":""},"imagegammacorrect":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0433\u0430\u043c\u043c\u0430 \u043a\u043e\u0440\u0440\u0435\u043a\u0446\u0438\u0438 \u043a GD \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044e\n  ","syntax":"\n   bool <b>imagegammacorrect<\/b>\n    ( resource $image\n   , float $inputgamma\n   , float $outputgamma\n   )","desc":"\n   \u041f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442 \u0433\u0430\u043c\u043c\u0430 \u043a\u043e\u0440\u0440\u0435\u043a\u0446\u0438\u044e \u043a \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044e image \n   \u0441\u043e\u0433\u043b\u0430\u0441\u043d\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u0432\u0445\u043e\u0434\u043d\u044b\u043c \u0438 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u043c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u043c.\n  "},"imagegd":{"version":"(PHP 4 >= 4.0.7, PHP 5)","shortdesc":"\u0412\u044b\u0432\u043e\u0434 GD-\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440 \u0438\u043b\u0438 \u0432 \u0444\u0430\u0439\u043b","syntax":"\n   bool <b>imagegd<\/b>\n    ( resource $image\n   [, string $filename\n  ] )","desc":"\n   \u0412\u044b\u0432\u043e\u0434 GD-\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0432 filename. \n  "},"imagegd2":{"version":"(PHP 4 >= 4.0.7, PHP 5)","shortdesc":"\u0412\u044b\u0432\u043e\u0434 GD2 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0432 \u0431\u0440\u043e\u0443\u0437\u0435\u0440 \u0438\u043b\u0438 \u0444\u0430\u0439\u043b","syntax":"\n   bool <b>imagegd2<\/b>\n    ( resource $image\n   [, string $filename\n   [, int $chunk_size\n   [, int $type = IMG_GD2_RAW\n  ]]] )","desc":"\n   \u0412\u044b\u0432\u043e\u0434\u0438\u0442 GD2 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b filename. \n  "},"imagegif":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440 \u0438\u043b\u0438 \u043f\u0438\u0448\u0435\u0442 \u0432 \u0444\u0430\u0439\u043b","syntax":"\n   bool <b>imagegif<\/b>\n    ( resource $image\n   [, string $filename\n  ] )","desc":"\n    imagegif() \u0441\u043e\u0437\u0434\u0430\u0435\u0442 GIF \u0444\u0430\u0439\u043b \u0438\u0437 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\n   image. \u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442 image \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f\n   \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438  imagecreate() \u0438\u043b\u0438\n   imagecreatefrom*.\n  "},"imagegrabscreen":{"version":"(PHP 5 >= 5.2.2)","shortdesc":"\n   \u0417\u0430\u0445\u0432\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441 \u044d\u043a\u0440\u0430\u043d\u0430\n  ","syntax":"\n   resource <b>imagegrabscreen<\/b>\n    ( void\n   )","desc":"\n   \u0414\u0435\u043b\u0430\u0435\u0442 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442.\n  "},"imagegrabwindow":{"version":"(PHP 5 >= 5.2.2)","shortdesc":"\u0417\u0430\u0445\u0432\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043e\u043a\u043d\u0430","syntax":"\n   resource <b>imagegrabwindow<\/b>\n    ( int $window_handle\n   [, int $client_area = 0\n  ] )","desc":"\n   \u0414\u0435\u043b\u0430\u0435\u0442 \u0441\u043d\u0438\u043c\u043e\u043a \u043e\u043a\u043d\u0430 \u0438\u043b\u0438 \u0435\u0433\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f windows \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\n   (\u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e HWND COM \u043e\u0431\u044a\u0435\u043a\u0442\u0430)\n  "},"imageinterlace":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0438\u043b\u0438 \u0432\u044b\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u043b\u0435\u0439\u0441\u0438\u043d\u0433\u0430","syntax":"\n   int <b>imageinterlace<\/b>\n    ( resource $image\n   [, int $interlace = 0\n  ] )","desc":"\n    imageinterlace() \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0431\u0438\u0442\u0430 \u0438\u043d\u0442\u0435\u0440\u043b\u0435\u0439\u0441\u0438\u043d\u0433\u0430.\n  "},"imageistruecolor":{"version":"(PHP 4 >= 4.3.2, PHP 5)","shortdesc":"\n   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u043d\u043e\u0446\u0432\u0435\u0442\u043d\u044b\u043c\n  ","syntax":"\n   bool <b>imageistruecolor<\/b>\n    ( resource $image\n   )","desc":"\n    imageistruecolor() \u043f\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\n   image \u043f\u043e\u043b\u043d\u043e\u0446\u0432\u0435\u0442\u043d\u044b\u043c.\n  "},"imagejpeg":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440 \u0438\u043b\u0438 \u043f\u0438\u0448\u0435\u0442 \u0432 \u0444\u0430\u0439\u043b","syntax":"\n   bool <b>imagejpeg<\/b>\n    ( resource $image\n   [, string $filename\n   [, int $quality\n  ]] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  imagejpeg() \u0441\u043e\u0437\u0434\u0430\u0451\u0442 \u0444\u0430\u0439\u043b JPEG \n   \u0438\u0437 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044fimage.\n  "},"imagelayereffect":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\n   \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0444\u043b\u0430\u0433\u0430 \u0430\u043b\u044c\u0444\u0430 \u0441\u043e\u043f\u0440\u044f\u0436\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u044d\u0444\u0444\u0435\u043a\u0442\u043e\u0432 \u043d\u0430\u043b\u043e\u0436\u0435\u043d\u0438\u044f\n   \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0439 libgd \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438\n  ","syntax":"\n   bool <b>imagelayereffect<\/b>\n    ( resource $image\n   , int $effect\n   )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0444\u043b\u0430\u0433\u0430 \u0430\u043b\u044c\u0444\u0430 \u0441\u043e\u043f\u0440\u044f\u0436\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u044d\u0444\u0444\u0435\u043a\u0442\u043e\u0432 \u043d\u0430\u043b\u043e\u0436\u0435\u043d\u0438\u044f\n   \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0439 libgd \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438.\n  "},"imageline":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0420\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u0435 \u043b\u0438\u043d\u0438\u0438","syntax":"\n   bool <b>imageline<\/b>\n    ( resource $image\n   , int $x1\n   , int $y1\n   , int $x2\n   , int $y2\n   , int $color\n   )","desc":"\n   \u0420\u0438\u0441\u0443\u0435\u0442 \u043b\u0438\u043d\u0438\u044e \u0441\u043e\u0435\u0434\u0438\u043d\u044f\u044e\u0449\u0443\u044e \u0434\u0432\u0435 \u0442\u043e\u0447\u043a\u0438.\n  "},"imageloadfont":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0448\u0440\u0438\u0444\u0442\u0430","syntax":"\n   int <b>imageloadfont<\/b>\n    ( string $file\n   )","desc":"\n    imageloadfont() \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c \u0448\u0440\u0438\u0444\u0442\n   \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0435\u0433\u043e \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440.\n  "},"imagepalettecopy":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\n   \u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043b\u0438\u0442\u0440\u044b \u0438\u0437 \u043e\u0434\u043d\u043e\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0432 \u0434\u0440\u0443\u0433\u043e\u0435\n  ","syntax":"\n   void <b>imagepalettecopy<\/b>\n    ( resource $destination\n   , resource $source\n   )","desc":"\n    imagepalettecopy() \u043a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u043f\u0430\u043b\u0438\u0442\u0440\u0443 \u0446\u0432\u0435\u0442\u043e\u0432 \u0438\u0437 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\n   source \u0432 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\n   destination.\n  "},"imagepalettetotruecolor":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Converts a palette based image to true color","syntax":"\n   bool <b>imagepalettetotruecolor<\/b>\n    ( resource $src\n   )","desc":"\n   Converts a palette based image, created by functions like \n    imagecreate() to a true color image, like \n    imagecreatetruecolor().\n  "},"imagepng":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0412\u044b\u0432\u043e\u0434 PNG \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0432 \u0431\u0440\u043e\u0443\u0437\u0435\u0440 \u0438\u043b\u0438 \u0444\u0430\u0439\u043b\n  ","syntax":"\n   bool <b>imagepng<\/b>\n    ( resource $image\n   [, string $filename\n   [, int $quality\n   [, int $filters\n  ]]] )","desc":"\n   \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0438\u043b\u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 PNG \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\n   image.\n  "},"imagepolygon":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0420\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u043d\u043e\u0433\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u0430","syntax":"\n   bool <b>imagepolygon<\/b>\n    ( resource $image\n   , array $points\n   , int $num_points\n   , int $color\n   )","desc":"\n    imagepolygon() \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043c\u043d\u043e\u0433\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a \u0432 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0438\n   image.\n  "},"imagepsbbox":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0412\u044b\u0434\u0430\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0440\u0430\u043c\u043a\u0438, \u043e\u0431\u0440\u0430\u043c\u043b\u044f\u044e\u0449\u0435\u0439 \u0442\u0435\u043a\u0441\u0442 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0439 \u0448\u0440\u0438\u0444\u0442\u043e\u043c PostScript Type1\n  ","syntax":"\n   array <b>imagepsbbox<\/b>\n    ( string $text\n   , resource $font\n   , int $size\n   )\n\n   array <b>imagepsbbox<\/b>\n    ( string $text\n   , resource $font\n   , int $size\n   , int $space\n   , int $tightness\n   , float $angle\n   )\n","desc":"\n   \u0412\u044b\u0434\u0430\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0440\u0430\u043c\u043a\u0438, \u043e\u0431\u0440\u0430\u043c\u043b\u044f\u044e\u0449\u0435\u0439 \u0442\u0435\u043a\u0441\u0442 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0439 \u0448\u0440\u0438\u0444\u0442\u043e\u043c PostScript Type1.\n  "},"imagepsencodefont":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0432\u0435\u043a\u0442\u043e\u0440\u0430 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 \u0448\u0440\u0438\u0444\u0442\u0430","syntax":"\n   bool <b>imagepsencodefont<\/b>\n    ( resource $font_index\n   , string $encodingfile\n   )","desc":"\n   \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0432\u0435\u043a\u0442\u043e\u0440 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u0438 \u043f\u043e\u0434\u043c\u0435\u043d\u044f\u0435\u0442 \u0438\u043c \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0432\u0435\u043a\u0442\u043e\u0440 \u0448\u0440\u0438\u0444\u0442\u0430.\n   \u0422\u0430\u043a \u043a\u0430\u043a \u0432\u0435\u043a\u0442\u043e\u0440 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0448\u0440\u0438\u0444\u0442\u043e\u0432 PostScript \u043d\u0435 \u0437\u043d\u0430\u0435\u0442 \u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u0445 \u043f\u043e\u0441\u043b\u0435 127\u0433\u043e,\n   \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \u043e\u043a\u0430\u0437\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u043b\u0435\u0437\u043d\u043e\u0439, \u043a\u043e\u0433\u0434\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u044f\u0437\u044b\u043a \u043e\u0442\u043b\u0438\u0447\u043d\u044b\u0439 \u043e\u0442\n   \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u0433\u043e.\n  "},"imagepsextendfont":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0420\u0430\u0441\u0442\u044f\u0433\u0438\u0432\u0430\u043d\u0438\u0435 \u0438\u043b\u0438 \u0441\u0436\u0430\u0442\u0438\u0435 \u0448\u0440\u0438\u0444\u0442\u0430","syntax":"\n   bool <b>imagepsextendfont<\/b>\n    ( resource $font_index\n   , float $extend\n   )","desc":"\n   \u0420\u0430\u0441\u0442\u044f\u0433\u0438\u0432\u0430\u0435\u0442 \u0438\u043b\u0438 \u0441\u0436\u0438\u043c\u0430\u0435\u0442 \u0448\u0440\u0438\u0444\u0442 (font_index), \u0435\u0441\u043b\u0438\n   \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 extend \u043c\u0435\u043d\u044c\u0448\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e.\n  "},"imagepsfreefont":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u043f\u0430\u043c\u044f\u0442\u0438, \u0437\u0430\u043d\u044f\u0442\u043e\u0439 \u0448\u0440\u0438\u0444\u0442\u043e\u043c PostScript Type\n  ","syntax":"\n   bool <b>imagepsfreefont<\/b>\n    ( resource $font_index\n   )","desc":"\n    imagepsfreefont() \u043e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u0435\u0442 \u043f\u0430\u043c\u044f\u0442\u044c, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u044b\u043b\u0430 \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u0430\n   \u0434\u043b\u044f PostScript Type 1 \u0448\u0440\u0438\u0444\u0442\u0430.\n  "},"imagepsloadfont":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0448\u0440\u0438\u0444\u0442\u0430 PostScript Type 1 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430\n  ","syntax":"\n   resource <b>imagepsloadfont<\/b>\n    ( string $filename\n   )","desc":"\n   \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0448\u0440\u0438\u0444\u0442 PostScript Type 1 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 filename.\n  "},"imagepsslantfont":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041d\u0430\u043a\u043b\u043e\u043d \u0448\u0440\u0438\u0444\u0442\u0430","syntax":"\n   bool <b>imagepsslantfont<\/b>\n    ( resource $font_index\n   , float $slant\n   )","desc":"\n   \u0414\u0435\u043b\u0430\u0435\u0442 \u043a\u0443\u0440\u0441\u0438\u0432\u043d\u044b\u043c \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0448\u0440\u0438\u0444\u0442.\n  "},"imagepstext":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0420\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0435\u043a\u0441\u0442\u0430 \u043f\u043e\u0432\u0435\u0440\u0445 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0448\u0440\u0438\u0444\u0442\u044b PostScript Type1\n  ","syntax":"\n   array <b>imagepstext<\/b>\n    ( resource $image\n   , string $text\n   , resource $font_index\n   , int $size\n   , int $foreground\n   , int $background\n   , int $x\n   , int $y\n   [, int $space = 0\n   [, int $tightness = 0\n   [, float $angle = 0.0\n   [, int $antialias_steps = 4\n  ]]]] )","desc":"\n   \u0420\u0438\u0441\u0443\u0435\u0442 \u0442\u0435\u043a\u0441\u0442 \u043f\u043e\u0432\u0435\u0440\u0445 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0448\u0440\u0438\u0444\u0442\u044b PostScript Type1.\n  "},"imagerectangle":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0420\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u0430","syntax":"\n   bool <b>imagerectangle<\/b>\n    ( resource $image\n   , int $x1\n   , int $y1\n   , int $x2\n   , int $y2\n   , int $color\n   )","desc":"\n    imagerectangle() \u0440\u0438\u0441\u0443\u0435\u0442 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c\u0438\n   \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430\u043c\u0438 \u0443\u0433\u043b\u043e\u0432.\n  "},"imagerotate":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u041f\u043e\u0432\u043e\u0440\u043e\u0442 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u0443\u0433\u043b\u043e\u043c","syntax":"\n   resource <b>imagerotate<\/b>\n    ( resource $image\n   , float $angle\n   , int $bgd_color\n   [, int $ignore_transparent = 0\n  ] )","desc":"\n   \u041f\u043e\u0432\u043e\u0440\u043e\u0442 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f image \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439\n   \u0443\u0433\u043e\u043b angle \u0432 \u0433\u0440\u0430\u0434\u0443\u0441\u0430\u0445. \n  "},"imagesavealpha":{"version":"(PHP 4 >= 4.3.2, PHP 5)","shortdesc":"\n   \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0444\u043b\u0430\u0433\u0430 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0430\u043b\u044c\u0444\u0430 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 (\u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u043e\u0432\u0435\u0441\n   \u043e\u0434\u043d\u043e\u0446\u0432\u0435\u0442\u043d\u043e\u0439 \u043f\u0440\u043e\u0437\u0440\u0430\u0447\u043d\u043e\u0441\u0442\u0438) \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 PNG \u0438\u0437\u043e\u0431\u0430\u0440\u0436\u0435\u043d\u0438\u044f\n  ","syntax":"\n   bool <b>imagesavealpha<\/b>\n    ( resource $image\n   , bool $saveflag\n   )","desc":"\n    imagesavealpha() \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0444\u043b\u0430\u0433 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c \u0432\u0441\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e\n   \u0430\u043b\u044c\u0444\u0430 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 (\u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u043e\u0432\u0435\u0441 \u043e\u0434\u043d\u043e\u0446\u0432\u0435\u0442\u043d\u043e\u0439 \u043f\u0440\u043e\u0437\u0440\u0430\u0447\u043d\u043e\u0441\u0442\u0438) \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u044f\u0435\u0442 PNG\n   \u0438\u0437\u043e\u0431\u0430\u0440\u0436\u0435\u043d\u0438\u0435\n  "},"imagescale":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Scale an image using the given new width and height","syntax":"\n   resource <b>imagescale<\/b>\n    ( resource $image\n   , int $new_width\n   [, int $new_height = -1\n   [, int $mode = IMG_BILINEAR_FIXED\n  ]] )","desc":"\n\n  "},"imagesetbrush":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"\n   \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f (\u043a\u0438\u0441\u0442\u0438), \u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u043e\u043c \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0431\u0443\u0434\u0443\u0442 \u0440\u0438\u0441\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043b\u0438\u043d\u0438\u0438\n  ","syntax":"\n   bool <b>imagesetbrush<\/b>\n    ( resource $image\n   , resource $brush\n   )","desc":"\n    imagesetbrush() \u0437\u0430\u0434\u0430\u0435\u0442 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0431\u0443\u0434\u0435\u0442\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438 \u0434\u043b\u044f \u0440\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u044f \u043b\u0438\u043d\u0438\u0439 (\u0442\u0430\u043a\u0438\u043c\u0438 \u043a\u0430\u043a\n    imageline() \u0438  imagepolygon())\n   \u043f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u0446\u0432\u0435\u0442\u043e\u0432 IMG_COLOR_BRUSHED \u0438\u043b\u0438\n   IMG_COLOR_STYLEDBRUSHED.\n  "},"imagesetinterpolation":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Set the interpolation method","syntax":"\n   bool <b>imagesetinterpolation<\/b>\n    ( resource $image\n   [, int $method = IMG_BILINEAR_FIXED\n  ] )","desc":"\n   Sets the interpolation method, setting an interpolation method affects the rendering \n   of various functions in GD, such as the  imagerotate() function.\n  "},"imagesetpixel":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0420\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u043e\u0447\u043a\u0438","syntax":"\n   bool <b>imagesetpixel<\/b>\n    ( resource $image\n   , int $x\n   , int $y\n   , int $color\n   )","desc":"\n    imagesetpixel() \u0440\u0438\u0441\u0443\u0435\u0442 \u0442\u043e\u0447\u043a\u0443 (\u043f\u0438\u043a\u0441\u0435\u043b) \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445\n   \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430\u0445.\n  "},"imagesetstyle":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\n   \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0441\u0442\u0438\u043b\u044f \u0440\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u044f \u043b\u0438\u043d\u0438\u0439\n  ","syntax":"\n   bool <b>imagesetstyle<\/b>\n    ( resource $image\n   , array $style\n   )","desc":"\n    imagesetstyle() \u0437\u0430\u0434\u0430\u0435\u0442 \u0441\u0442\u0438\u043b\u044c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f\n   \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438 \u0440\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u044f \u043b\u0438\u043d\u0438\u0439 (\u0442\u0430\u043a\u0438\u043c\u0438 \u043a\u0430\u043a  imageline() \u0438\n    imagepolygon()) \u043f\u0440\u0438 \u0437\u0430\u0434\u0430\u043d\u0438\u0438 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430\n   IMG_COLOR_STYLED \u0438\u043b\u0438 \n   IMG_COLOR_STYLEDBRUSHED.\n  "},"imagesetthickness":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0442\u043e\u043b\u0449\u0438\u043d\u044b \u043b\u0438\u043d\u0438\u0439","syntax":"\n   bool <b>imagesetthickness<\/b>\n    ( resource $image\n   , int $thickness\n   )","desc":"\n    imagesetthickness() \u0437\u0430\u0434\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0442\u043e\u043b\u0449\u0438\u043d\u044b \u043b\u0438\u043d\u0438\u0439 \u0434\u043b\u044f \u0440\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u044f\n   \u043e\u0442\u0440\u0435\u0437\u043a\u043e\u0432, \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u043e\u0432, \u043c\u043d\u043e\u0433\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u043e\u0432, \u044d\u043b\u043b\u0438\u043f\u0441\u043e\u0432 \u0438 \u0442.\u043f. \u0432\n   thickness \u043f\u0438\u043a\u0441\u0435\u043b\u043e\u0432.\n  "},"imagesettile":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\n   \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u043e \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043c\u043e\u0437\u0430\u0438\u0447\u043d\u043e\u0439\n   \u0437\u0430\u043b\u0438\u0432\u043a\u0438\n  ","syntax":"\n   bool <b>imagesettile<\/b>\n    ( resource $image\n   , resource $tile\n   )","desc":"\n    imagesettile() \u0437\u0430\u0434\u0430\u0435\u0442 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0431\u0443\u0434\u0435\u0442\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u043e \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043c\u043e\u0437\u0430\u0438\u0447\u043d\u043e\u0439 \u0437\u0430\u043b\u0438\u0432\u043a\u0438 \u0442\u0430\u043a\u0438\u043c\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438, \u043a\u0430\u043a\n    imagefill() \u0438  imagefilledpolygon() \u043f\u0440\u0438\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430 IMG_COLOR_TILED.\n  "},"imagestring":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0420\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0442\u0435\u043a\u0441\u0442\u0430 \u0433\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u044c\u043d\u043e","syntax":"\n   bool <b>imagestring<\/b>\n    ( resource $image\n   , int $font\n   , int $x\n   , int $y\n   , string $string\n   , int $color\n   )","desc":"\n   \u0420\u0438\u0441\u0443\u0435\u0442 \u0442\u0435\u043a\u0441\u0442 string \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430\u0445.\n  "},"imagestringup":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0420\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0442\u0435\u043a\u0441\u0442\u0430 \u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u043e","syntax":"\n   bool <b>imagestringup<\/b>\n    ( resource $image\n   , int $font\n   , int $x\n   , int $y\n   , string $string\n   , int $color\n   )","desc":"\n   \u0420\u0438\u0441\u0443\u0435\u0442 \u0442\u0435\u043a\u0441\u0442 string \u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u043e \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430\u0445.\n  "},"imagesx":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0448\u0438\u0440\u0438\u043d\u044b \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f","syntax":"\n   int <b>imagesx<\/b>\n    ( resource $image\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0448\u0438\u0440\u0438\u043d\u0443 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f image.\n  "},"imagesy":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u044b\u0441\u043e\u0442\u044b \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f","syntax":"\n   int <b>imagesy<\/b>\n    ( resource $image\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u044b\u0441\u043e\u0442\u0443 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f image.\n  "},"imagetruecolortopalette":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\n   \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u043d\u043e\u0446\u0432\u0435\u0442\u043d\u043e\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0432 \u043f\u0430\u043b\u0438\u0442\u0440\u043e\u0432\u043e\u0435\n  ","syntax":"\n   bool <b>imagetruecolortopalette<\/b>\n    ( resource $image\n   , bool $dither\n   , int $ncolors\n   )","desc":"\n    imagetruecolortopalette() \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u043f\u043e\u043b\u043d\u043e\u0446\u0432\u0435\u0442\u043d\u043e\u0435\n   \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0432 \u043f\u0430\u043b\u0438\u0442\u0440\u043e\u0432\u043e\u0435. \u041a\u043e\u0434 \u044d\u0442\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0432\u0437\u044f\u0442 \u0438\u0437 \u043a\u043e\u0434\u0430 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u041d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0439\n   \u0413\u0440\u0443\u043f\u043f\u044b JPEG. \u041a\u043e\u0434 \u0431\u044b\u043b \u043c\u043e\u0434\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d, \u0447\u0442\u043e\u0431\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u043b\u043e\u0441\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431\n   \u0430\u043b\u044c\u0444\u0430 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430\u0445 \u0446\u0432\u0435\u0442\u043e\u0432, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u043b\u0438\u0441\u044c \u0446\u0432\u0435\u0442\u0430 \u0432 \u043b\u0443\u0447\u0448\u0435\u043c \u0432\u0438\u0434\u0435 \u043d\u0430\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u044d\u0442\u043e\n   \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e. \u041d\u043e \u0432 \u0438\u0442\u043e\u0433\u0435 \u043a\u043e\u0434 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043d\u0435 \u0442\u0430\u043a \u0445\u043e\u0440\u043e\u0448\u043e, \u043a\u0430\u043a \u0445\u043e\u0442\u0435\u043b\u043e\u0441\u044c \u0431\u044b. \u0412 \u0441\u0432\u044f\u0437\u0438 \u0441 \u044d\u0442\u0438\u043c\n   \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430 \u043f\u043e\u043b\u043d\u043e\u0446\u0432\u0435\u0442\u043d\u044b\u0445 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439, \u043e\u043d\u0430 \u0433\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u0443\u0435\u0442\n   \u0441\u0430\u043c\u043e\u0435 \u0432\u044b\u0441\u043e\u043a\u043e\u0435 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u044b\u0432\u043e\u0434\u0430. \u041d\u043e \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 \u0442\u043e\u0433\u043e.\n  "},"imagettfbbox":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0440\u0430\u043c\u043a\u0438 \u043e\u0431\u0440\u0430\u043c\u043b\u044f\u044e\u0449\u0435\u0439 \u0442\u0435\u043a\u0441\u0442 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0439 TrueType \u0448\u0440\u0438\u0444\u0442\u043e\u043c\n  ","syntax":"\n   array <b>imagettfbbox<\/b>\n    ( float $size\n   , float $angle\n   , string $fontfile\n   , string $text\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0440\u0430\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0440\u0430\u043c\u043a\u0438 \u0432\u043e\u043a\u0440\u0443\u0433 TrueType \u0442\u0435\u043a\u0441\u0442\u0430\n   \u0432 \u043f\u0438\u043a\u0441\u0435\u043b\u0430\u0445.\n  "},"imagettftext":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0420\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0435\u043a\u0441\u0442\u0430 \u043d\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0438 \u0448\u0440\u0438\u0444\u0442\u043e\u043c TrueType\n  ","syntax":"\n   array <b>imagettftext<\/b>\n    ( resource $image\n   , float $size\n   , float $angle\n   , int $x\n   , int $y\n   , int $color\n   , string $fontfile\n   , string $text\n   )","desc":"\n   \u041d\u0430\u043d\u043e\u0441\u0438\u0442 \u0442\u0435\u043a\u0441\u0442 text \u043f\u043e\u0432\u0435\u0440\u0445 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f TrueType\n   \u0448\u0440\u0438\u0444\u0442.\n  "},"imagetypes":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0442\u0438\u043f\u043e\u0432 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439, \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0445 PHP \u0441\u0431\u043e\u0440\u043a\u043e\u0439\n  ","syntax":"\n   int <b>imagetypes<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0438\u043f\u044b \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0445 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0441\u0431\u043e\u0440\u043a\u043e\u0439 PHP \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439.\n  "},"imagewbmp":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440 \u0438\u043b\u0438 \u043f\u0438\u0448\u0435\u0442 \u0432 \u0444\u0430\u0439\u043b","syntax":"\n   bool <b>imagewbmp<\/b>\n    ( resource $image\n   [, string $filename\n   [, int $foreground\n  ]] )","desc":"\n    imagewbmp() \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0438\u043b\u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 WBMP\n   \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 image. \n  "},"imagewebp":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Output an WebP image to browser or file","syntax":"\n   bool <b>imagewebp<\/b>\n    ( resource $image\n   , string $filename\n   )","desc":"\n   Outputs or save an WebP version of the given image. \n  "},"imagexbm":{"version":"(PHP 5)","shortdesc":"\n   \u0412\u044b\u0432\u043e\u0434 XBM \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0432 \u0431\u0440\u043e\u0443\u0437\u0435\u0440 \u0438\u043b\u0438 \u0444\u0430\u0439\u043b","syntax":"\n   bool <b>imagexbm<\/b>\n    ( resource $image\n   , string $filename\n   [, int $foreground\n  ] )","desc":"\n   \u0412\u044b\u0432\u043e\u0434 \u0438\u043b\u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 XBM \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\n   image. \n  "},"imap_8bit":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 8-\u0431\u0438\u0442\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 quoted-printable \u0441\u0442\u0440\u043e\u043a\u0443","syntax":"\n   string <b>imap_8bit<\/b>\n    ( string $string\n   )","desc":"\n   \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 8-\u0431\u0438\u0442\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 quoted-printable \u0441\u0442\u0440\u043e\u043a\u0443 (\u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441\n   \u00bb\u00a0RFC2045, \u0440\u0430\u0437\u0434\u0435\u043b 6.7).\n  "},"imap_alerts":{"version":"(PHP 4, PHP 5)","shortdesc":"Returns all IMAP alert messages that have occurred","syntax":"\n   array <b>imap_alerts<\/b>\n    ( void\n   )","desc":"\n   Returns all of the IMAP alert messages generated since the last\n    imap_alerts() call, or the beginning of the page. \n  "},"imap_append":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u043e\u0447\u0442\u043e\u0432\u044b\u0439 \u044f\u0449\u0438\u043a","syntax":"\n   bool <b>imap_append<\/b>\n    ( resource $imap_stream\n   , string $mailbox\n   , string $message\n   [, string $options = NULL\n   [, string $internal_date = NULL\n  ]] )","desc":"\n   \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 message \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 mailbox. \n  "},"imap_base64":{"version":"(PHP 4, PHP 5)","shortdesc":"Decode BASE64 encoded text","syntax":"\n   string <b>imap_base64<\/b>\n    ( string $text\n   )","desc":"\n   Decodes the given BASE-64 encoded text. \n  "},"imap_binary":{"version":"(PHP 4, PHP 5)","shortdesc":"Convert an 8bit string to a base64 string","syntax":"\n   string <b>imap_binary<\/b>\n    ( string $string\n   )","desc":"\n   Convert an 8bit string to a base64 string according to \u00bb\u00a0RFC2045, Section 6.8.\n  "},"imap_body":{"version":"(PHP 4, PHP 5)","shortdesc":"Read the message body","syntax":"\n   string <b>imap_body<\/b>\n    ( resource $imap_stream\n   , int $msg_number\n   [, int $options = 0\n  ] )","desc":"\n    imap_body() returns the body of the message,\n   numbered msg_number in the current\n   mailbox.\n  "},"imap_bodystruct":{"version":"(PHP 4, PHP 5)","shortdesc":"Read the structure of a specified body section of a specific message","syntax":"\n   object <b>imap_bodystruct<\/b>\n    ( resource $imap_stream\n   , int $msg_number\n   , string $section\n   )","desc":"\n   Read the structure of a specified body section of a specific message.\n  "},"imap_check":{"version":"(PHP 4, PHP 5)","shortdesc":"Check current mailbox","syntax":"\n   object <b>imap_check<\/b>\n    ( resource $imap_stream\n   )","desc":"\n   Checks information about the current mailbox.\n  "},"imap_clearflag_full":{"version":"(PHP 4, PHP 5)","shortdesc":"Clears flags on messages","syntax":"\n   bool <b>imap_clearflag_full<\/b>\n    ( resource $imap_stream\n   , string $sequence\n   , string $flag\n   [, int $options = 0\n  ] )","desc":"\n   This function causes a store to delete the specified\n   flag to the flags set for the\n   messages in the specified sequence.\n  "},"imap_close":{"version":"(PHP 4, PHP 5)","shortdesc":"Close an IMAP stream","syntax":"\n   bool <b>imap_close<\/b>\n    ( resource $imap_stream\n   [, int $flag = 0\n  ] )","desc":"\n   Closes the imap stream.\n  "},"imap_create":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  imap_createmailbox()","syntax":"","desc":""},"imap_createmailbox":{"version":"(PHP 4, PHP 5)","shortdesc":"Create a new mailbox","syntax":"\n   bool <b>imap_createmailbox<\/b>\n    ( resource $imap_stream\n   , string $mailbox\n   )","desc":"\n   Creates a new mailbox specified by mailbox. \n  "},"imap_delete":{"version":"(PHP 4, PHP 5)","shortdesc":"Mark a message for deletion from current mailbox","syntax":"\n   bool <b>imap_delete<\/b>\n    ( resource $imap_stream\n   , int $msg_number\n   [, int $options = 0\n  ] )","desc":"\n   Marks messages listed in msg_number for deletion.\n   Messages marked for deletion will stay in the mailbox until either\n    imap_expunge() is called or\n    imap_close() is called with the optional parameter\n   CL_EXPUNGE.\n  "},"imap_deletemailbox":{"version":"(PHP 4, PHP 5)","shortdesc":"Delete a mailbox","syntax":"\n   bool <b>imap_deletemailbox<\/b>\n    ( resource $imap_stream\n   , string $mailbox\n   )","desc":"\n   Deletes the specified mailbox.\n  "},"imap_errors":{"version":"(PHP 4, PHP 5)","shortdesc":"Returns all of the IMAP errors that have occurred","syntax":"\n   array <b>imap_errors<\/b>\n    ( void\n   )","desc":"\n   Gets all of the IMAP errors (if any) that have occurred\n   during this page request or since the error stack was reset.\n  "},"imap_expunge":{"version":"(PHP 4, PHP 5)","shortdesc":"Delete all messages marked for deletion","syntax":"\n   bool <b>imap_expunge<\/b>\n    ( resource $imap_stream\n   )","desc":"\n   Deletes all the messages marked for deletion by \n    imap_delete(),  imap_mail_move(), or\n    imap_setflag_full().\n  "},"imap_fetch_overview":{"version":"(PHP 4, PHP 5)","shortdesc":"Read an overview of the information in the headers of the given message","syntax":"\n   array <b>imap_fetch_overview<\/b>\n    ( resource $imap_stream\n   , string $sequence\n   [, int $options = 0\n  ] )","desc":"\n   This function fetches mail headers for the given\n   sequence and returns an overview of their\n   contents.\n  "},"imap_fetchbody":{"version":"(PHP 4, PHP 5)","shortdesc":"Fetch a particular section of the body of the message","syntax":"\n   string <b>imap_fetchbody<\/b>\n    ( resource $imap_stream\n   , int $msg_number\n   , string $section\n   [, int $options = 0\n  ] )","desc":"\n   Fetch of a particular section of the body of the specified messages. \n   Body parts are not decoded by this function.\n  "},"imap_fetchheader":{"version":"(PHP 4, PHP 5)","shortdesc":"Returns header for a message","syntax":"\n   string <b>imap_fetchheader<\/b>\n    ( resource $imap_stream\n   , int $msg_number\n   [, int $options = 0\n  ] )","desc":"\n   This function causes a fetch of the complete, unfiltered \u00bb\u00a0RFC2822 format header of the specified\n   message.\n  "},"imap_fetchmime":{"version":"(PHP 5 >= 5.3.6)","shortdesc":"Fetch MIME headers for a particular section of the message","syntax":"\n   string <b>imap_fetchmime<\/b>\n    ( resource $imap_stream\n   , int $msg_number\n   , string $section\n   [, int $options = 0\n  ] )","desc":"\n   Fetch the MIME headers of a particular section of the body of the specified messages. \n  "},"imap_fetchstructure":{"version":"(PHP 4, PHP 5)","shortdesc":"Read the structure of a particular message","syntax":"\n   object <b>imap_fetchstructure<\/b>\n    ( resource $imap_stream\n   , int $msg_number\n   [, int $options = 0\n  ] )","desc":"\n   Fetches all the structured information for a given message. \n  "},"imap_fetchtext":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  imap_body()","syntax":"","desc":""},"imap_gc":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"Clears IMAP cache","syntax":"\n   bool <b>imap_gc<\/b>\n    ( resource $imap_stream\n   , int $caches\n   )","desc":"\n   Purges the cache of entries of a specific type.\n  "},"imap_get_quota":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"Retrieve the quota level settings, and usage statics per mailbox","syntax":"\n   array <b>imap_get_quota<\/b>\n    ( resource $imap_stream\n   , string $quota_root\n   )","desc":"\n   Retrieve the quota level settings, and usage statics per mailbox.\n  "},"imap_get_quotaroot":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Retrieve the quota settings per user","syntax":"\n   array <b>imap_get_quotaroot<\/b>\n    ( resource $imap_stream\n   , string $quota_root\n   )","desc":"\n   Retrieve the quota settings per user. The limit value represents the total\n   amount of space allowed for this user's total mailbox usage.  The usage\n   value represents the user's current total mailbox capacity.  \n  "},"imap_getacl":{"version":"(PHP 5)","shortdesc":"Gets the ACL for a given mailbox","syntax":"\n   array <b>imap_getacl<\/b>\n    ( resource $imap_stream\n   , string $mailbox\n   )","desc":"\n   Gets the ACL for a given mailbox.\n  "},"imap_getmailboxes":{"version":"(PHP 4, PHP 5)","shortdesc":"Read the list of mailboxes, returning detailed information on each one","syntax":"\n   array <b>imap_getmailboxes<\/b>\n    ( resource $imap_stream\n   , string $ref\n   , string $pattern\n   )","desc":"\n   Gets information on the mailboxes.\n  "},"imap_getsubscribed":{"version":"(PHP 4, PHP 5)","shortdesc":"List all the subscribed mailboxes","syntax":"\n   array <b>imap_getsubscribed<\/b>\n    ( resource $imap_stream\n   , string $ref\n   , string $pattern\n   )","desc":"\n   Gets information about the subscribed mailboxes.\n  "},"imap_header":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  imap_headerinfo()","syntax":"","desc":""},"imap_headerinfo":{"version":"(PHP 4, PHP 5)","shortdesc":"Read the header of the message","syntax":"\n   object <b>imap_headerinfo<\/b>\n    ( resource $imap_stream\n   , int $msg_number\n   [, int $fromlength = 0\n   [, int $subjectlength = 0\n   [, string $defaulthost = NULL\n  ]]] )","desc":"\n   Gets information about the given message number by reading its headers.\n  "},"imap_headers":{"version":"(PHP 4, PHP 5)","shortdesc":"Returns headers for all messages in a mailbox","syntax":"\n   array <b>imap_headers<\/b>\n    ( resource $imap_stream\n   )","desc":"\n   Returns headers for all messages in a mailbox.\n  "},"imap_last_error":{"version":"(PHP 4, PHP 5)","shortdesc":"Gets the last IMAP error that occurred during this page request","syntax":"\n   string <b>imap_last_error<\/b>\n    ( void\n   )","desc":"\n   Gets the full text of the last IMAP error message\n   that occurred on the current page. The error stack is untouched; calling \n    imap_last_error() subsequently, with no intervening\n   errors, will return the same error. \n  "},"imap_list":{"version":"(PHP 4, PHP 5)","shortdesc":"Read the list of mailboxes","syntax":"\n   array <b>imap_list<\/b>\n    ( resource $imap_stream\n   , string $ref\n   , string $pattern\n   )","desc":"\n   Read the list of mailboxes.\n  "},"imap_listmailbox":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  imap_list()","syntax":"","desc":""},"imap_listscan":{"version":"(PHP 4, PHP 5)","shortdesc":"Returns the list of mailboxes that matches the given text","syntax":"\n   array <b>imap_listscan<\/b>\n    ( resource $imap_stream\n   , string $ref\n   , string $pattern\n   , string $content\n   )","desc":"\n   Returns an array containing the names of the mailboxes that have\n   content in the text of the mailbox.\n  "},"imap_listsubscribed":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  imap_lsub()","syntax":"","desc":""},"imap_lsub":{"version":"(PHP 4, PHP 5)","shortdesc":"List all the subscribed mailboxes","syntax":"\n   array <b>imap_lsub<\/b>\n    ( resource $imap_stream\n   , string $ref\n   , string $pattern\n   )","desc":"\n   Gets an array of all the mailboxes that you have subscribed.\n  "},"imap_mail_compose":{"version":"(PHP 4, PHP 5)","shortdesc":"Create a MIME message based on given envelope and body sections","syntax":"\n   string <b>imap_mail_compose<\/b>\n    ( array $envelope\n   , array $body\n   )","desc":"\n   Create a MIME message based on the given envelope\n   and body sections.\n  "},"imap_mail_copy":{"version":"(PHP 4, PHP 5)","shortdesc":"Copy specified messages to a mailbox","syntax":"\n   bool <b>imap_mail_copy<\/b>\n    ( resource $imap_stream\n   , string $msglist\n   , string $mailbox\n   [, int $options = 0\n  ] )","desc":"\n   Copies mail messages specified by msglist\n   to specified mailbox.\n  "},"imap_mail_move":{"version":"(PHP 4, PHP 5)","shortdesc":"Move specified messages to a mailbox","syntax":"\n   bool <b>imap_mail_move<\/b>\n    ( resource $imap_stream\n   , string $msglist\n   , string $mailbox\n   [, int $options = 0\n  ] )","desc":"\n   Moves mail messages specified by msglist to the\n   specified mailbox. \n  "},"imap_mail":{"version":"(PHP 4, PHP 5)","shortdesc":"Send an email message","syntax":"\n   bool <b>imap_mail<\/b>\n    ( string $to\n   , string $subject\n   , string $message\n   [, string $additional_headers = NULL\n   [, string $cc = NULL\n   [, string $bcc = NULL\n   [, string $rpath = NULL\n  ]]]] )","desc":"\n   This function allows sending of emails with correct handling of\n   Cc and Bcc receivers. \n  "},"imap_mailboxmsginfo":{"version":"(PHP 4, PHP 5)","shortdesc":"Get information about the current mailbox","syntax":"\n   object <b>imap_mailboxmsginfo<\/b>\n    ( resource $imap_stream\n   )","desc":"\n   Checks the current mailbox status on the server. It is similar to\n    imap_status(), but will additionally sum up the size of\n   all messages in the mailbox, which will take some additional time to \n   execute. \n  "},"imap_mime_header_decode":{"version":"(PHP 4, PHP 5)","shortdesc":"Decode MIME header elements","syntax":"\n   array <b>imap_mime_header_decode<\/b>\n    ( string $text\n   )","desc":"\n   Decodes MIME message header extensions that are non ASCII text (see \u00bb\u00a0RFC2047).\n  "},"imap_msgno":{"version":"(PHP 4, PHP 5)","shortdesc":"Gets the message sequence number for the given UID","syntax":"\n   int <b>imap_msgno<\/b>\n    ( resource $imap_stream\n   , int $uid\n   )","desc":"\n   Returns the message sequence number for the given \n   uid.\n  "},"imap_num_msg":{"version":"(PHP 4, PHP 5)","shortdesc":"Gets the number of messages in the current mailbox","syntax":"\n   int <b>imap_num_msg<\/b>\n    ( resource $imap_stream\n   )","desc":"\n   Gets the number of messages in the current mailbox.\n  "},"imap_num_recent":{"version":"(PHP 4, PHP 5)","shortdesc":"Gets the number of recent messages in current mailbox","syntax":"\n   int <b>imap_num_recent<\/b>\n    ( resource $imap_stream\n   )","desc":"\n   Gets the number of recent messages in the current mailbox.\n  "},"imap_open":{"version":"(PHP 4, PHP 5)","shortdesc":"Open an IMAP stream to a mailbox","syntax":"\n   resource <b>imap_open<\/b>\n    ( string $mailbox\n   , string $username\n   , string $password\n   [, int $options = 0\n   [, int $n_retries = 0\n   [, array $params = NULL\n  ]]] )","desc":"\n   Opens an IMAP stream to a mailbox.\n  "},"imap_ping":{"version":"(PHP 4, PHP 5)","shortdesc":"Check if the IMAP stream is still active","syntax":"\n   bool <b>imap_ping<\/b>\n    ( resource $imap_stream\n   )","desc":"\n    imap_ping() pings the stream to see if it's still\n   active. It may discover new mail; this is the preferred method for a\n   periodic \"new mail check\" as well as a \"keep alive\" for servers which\n   have inactivity timeout.\n  "},"imap_qprint":{"version":"(PHP 4, PHP 5)","shortdesc":"Convert a quoted-printable string to an 8 bit string","syntax":"\n   string <b>imap_qprint<\/b>\n    ( string $string\n   )","desc":"\n   Convert a quoted-printable string to an 8 bit string according to \u00bb\u00a0RFC2045, section 6.7.\n  "},"imap_rename":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  imap_renamemailbox()","syntax":"","desc":""},"imap_renamemailbox":{"version":"(PHP 4, PHP 5)","shortdesc":"Rename an old mailbox to new mailbox","syntax":"\n   bool <b>imap_renamemailbox<\/b>\n    ( resource $imap_stream\n   , string $old_mbox\n   , string $new_mbox\n   )","desc":"\n   This function renames on old mailbox to new mailbox (see\n    imap_open() for the format of\n   mbox names).\n  "},"imap_reopen":{"version":"(PHP 4, PHP 5)","shortdesc":"Reopen IMAP stream to new mailbox","syntax":"\n   bool <b>imap_reopen<\/b>\n    ( resource $imap_stream\n   , string $mailbox\n   [, int $options = 0\n   [, int $n_retries = 0\n  ]] )","desc":"\n   Reopens the specified stream to a new mailbox on an\n   IMAP or NNTP server.\n  "},"imap_rfc822_parse_adrlist":{"version":"(PHP 4, PHP 5)","shortdesc":"Parses an address string","syntax":"\n   array <b>imap_rfc822_parse_adrlist<\/b>\n    ( string $address\n   , string $default_host\n   )","desc":"\n   Parses the address string as defined in \u00bb\u00a0RFC2822 and for each address.\n  "},"imap_rfc822_parse_headers":{"version":"(PHP 4, PHP 5)","shortdesc":"Parse mail headers from a string","syntax":"\n   object <b>imap_rfc822_parse_headers<\/b>\n    ( string $headers\n   [, string $defaulthost = \"UNKNOWN\"\n  ] )","desc":"\n   Gets an object of various header elements, similar to \n    imap_header().\n  "},"imap_rfc822_write_address":{"version":"(PHP 4, PHP 5)","shortdesc":"Returns a properly formatted email address given the mailbox, host, and personal info","syntax":"\n   string <b>imap_rfc822_write_address<\/b>\n    ( string $mailbox\n   , string $host\n   , string $personal\n   )","desc":"\n   Returns a properly formatted email address as defined in \u00bb\u00a0RFC2822 given the needed information.\n  "},"imap_savebody":{"version":"(PHP 5 >= 5.1.3)","shortdesc":"Save a specific body section to a file","syntax":"\n   bool <b>imap_savebody<\/b>\n    ( resource $imap_stream\n   , mixed $file\n   , int $msg_number\n   [, string $part_number = \"\"\n   [, int $options = 0\n  ]] )","desc":"\n   Saves a part or the whole body of the specified message. \n  "},"imap_scan":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  imap_listscan()","syntax":"","desc":""},"imap_scanmailbox":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  imap_listscan()","syntax":"","desc":""},"imap_search":{"version":"(PHP 4, PHP 5)","shortdesc":"This function returns an array of messages matching the given search criteria","syntax":"\n   array <b>imap_search<\/b>\n    ( resource $imap_stream\n   , string $criteria\n   [, int $options = SE_FREE\n   [, string $charset = NIL\n  ]] )","desc":"\n   This function performs a search on the mailbox currently opened\n   in the given IMAP stream. \n  "},"imap_set_quota":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"Sets a quota for a given mailbox","syntax":"\n   bool <b>imap_set_quota<\/b>\n    ( resource $imap_stream\n   , string $quota_root\n   , int $quota_limit\n   )","desc":"\n   Sets an upper limit quota on a per mailbox basis. \n  "},"imap_setacl":{"version":"(PHP 4 >= 4.0.7, PHP 5)","shortdesc":"Sets the ACL for a given mailbox","syntax":"\n   bool <b>imap_setacl<\/b>\n    ( resource $imap_stream\n   , string $mailbox\n   , string $id\n   , string $rights\n   )","desc":"\n   Sets the ACL for a giving mailbox.\n  "},"imap_setflag_full":{"version":"(PHP 4, PHP 5)","shortdesc":"Sets flags on messages","syntax":"\n   bool <b>imap_setflag_full<\/b>\n    ( resource $imap_stream\n   , string $sequence\n   , string $flag\n   [, int $options = NIL\n  ] )","desc":"\n   Causes a store to add the specified flag to the\n   flags set for the messages in the specified \n   sequence.\n  "},"imap_sort":{"version":"(PHP 4, PHP 5)","shortdesc":"Gets and sort messages","syntax":"\n   array <b>imap_sort<\/b>\n    ( resource $imap_stream\n   , int $criteria\n   , int $reverse\n   [, int $options = 0\n   [, string $search_criteria = NULL\n   [, string $charset = NIL\n  ]]] )","desc":"\n   Gets and sorts message numbers by the given parameters.\n  "},"imap_status":{"version":"(PHP 4, PHP 5)","shortdesc":"Returns status information on a mailbox","syntax":"\n   object <b>imap_status<\/b>\n    ( resource $imap_stream\n   , string $mailbox\n   , int $options\n   )","desc":"\n   Gets status information about the given mailbox.\n  "},"imap_subscribe":{"version":"(PHP 4, PHP 5)","shortdesc":"Subscribe to a mailbox","syntax":"\n   bool <b>imap_subscribe<\/b>\n    ( resource $imap_stream\n   , string $mailbox\n   )","desc":"\n   Subscribe to a new mailbox.\n  "},"imap_thread":{"version":"(PHP 4 >= 4.0.7, PHP 5)","shortdesc":"Returns a tree of threaded message","syntax":"\n   array <b>imap_thread<\/b>\n    ( resource $imap_stream\n   [, int $options = SE_FREE\n  ] )","desc":"\n   Gets a tree of a threaded message.\n  "},"imap_timeout":{"version":"(PHP 4 >= 4.3.3, PHP 5)","shortdesc":"Set or fetch imap timeout","syntax":"\n   mixed <b>imap_timeout<\/b>\n    ( int $timeout_type\n   [, int $timeout = -1\n  ] )","desc":"\n   Sets or fetches the imap timeout.\n  "},"imap_uid":{"version":"(PHP 4, PHP 5)","shortdesc":"This function returns the UID for the given message sequence number","syntax":"\n   int <b>imap_uid<\/b>\n    ( resource $imap_stream\n   , int $msg_number\n   )","desc":"\n   This function returns the UID for the given message sequence\n   number. An UID is a unique identifier that will not change over\n   time while a message sequence number may change whenever the\n   content of the mailbox changes.\n  "},"imap_undelete":{"version":"(PHP 4, PHP 5)","shortdesc":"Unmark the message which is marked deleted","syntax":"\n   bool <b>imap_undelete<\/b>\n    ( resource $imap_stream\n   , int $msg_number\n   [, int $flags = 0\n  ] )","desc":"\n   Removes the deletion flag for a specified message, which is set by\n    imap_delete() or  imap_mail_move().\n  "},"imap_unsubscribe":{"version":"(PHP 4, PHP 5)","shortdesc":"Unsubscribe from a mailbox","syntax":"\n   bool <b>imap_unsubscribe<\/b>\n    ( resource $imap_stream\n   , string $mailbox\n   )","desc":"\n   Unsubscribe from the specified mailbox.\n  "},"imap_utf7_decode":{"version":"(PHP 4, PHP 5)","shortdesc":"Decodes a modified UTF-7 encoded string","syntax":"\n   string <b>imap_utf7_decode<\/b>\n    ( string $text\n   )","desc":"\n   Decodes modified UTF-7 text into ISO-8859-1 string.\n  "},"imap_utf7_encode":{"version":"(PHP 4, PHP 5)","shortdesc":"Converts ISO-8859-1 string to modified UTF-7 text","syntax":"\n   string <b>imap_utf7_encode<\/b>\n    ( string $data\n   )","desc":"\n   Converts data to modified UTF-7 text.\n  "},"imap_utf8":{"version":"(PHP 4, PHP 5)","shortdesc":"Converts MIME-encoded text to UTF-8","syntax":"\n   string <b>imap_utf8<\/b>\n    ( string $mime_encoded_text\n   )","desc":"\n   Converts the given mime_encoded_text to\n   UTF-8. \n  "},"implode":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0432 \u0441\u0442\u0440\u043e\u043a\u0443","syntax":"\n   string <b>implode<\/b>\n    ( string $glue\n   , array $pieces\n   )\n\n   string <b>implode<\/b>\n    ( array $pieces\n   )\n","desc":"\n   \u041e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0441\u0442\u0440\u043e\u043a\u0438 glue.\n  "},"import_request_variables":{"version":"(PHP 4 >= 4.1.0, PHP 5 < 5.4.0)","shortdesc":"\u0418\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 GET\/POST\/Cookie \u0432 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u0443\u044e \u043e\u0431\u043b\u0430\u0441\u0442\u044c \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u0438","syntax":"\n   bool <b>import_request_variables<\/b>\n    ( string $types\n   [, string $prefix\n  ] )","desc":"\n   \u0418\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 GET\/POST\/Cookie \u0432 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u0443\u044e \u043e\u0431\u043b\u0430\u0441\u0442\u044c \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u0438. \u042d\u0442\u043e \u0431\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u0435\u0437\u043d\u043e, \u0435\u0441\u043b\u0438\n   \u043f\u0440\u0438 \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u0438\u0432\u0435 register_globals \u0438\n   \u0436\u0435\u043b\u0430\u043d\u0438\u0438 \u0432\u0438\u0434\u0435\u0442\u044c \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0432 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u0438.\n  "},"in_array":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043b\u0438 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435","syntax":"\n   bool <b>in_array<\/b>\n    ( mixed $needle\n   , array $haystack\n   [, bool $strict = FALSE\n  ] )","desc":"\n   \u0418\u0449\u0435\u0442 \u0432 haystack \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 needle.\n   \u0415\u0441\u043b\u0438 strict \u043d\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d, \u0442\u043e \u043f\u0440\u0438 \u043f\u043e\u0438\u0441\u043a\u0435\n   \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u043e \u043d\u0435\u0441\u0442\u0440\u043e\u0433\u043e\u0435 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435.\n  "},"":{"version":"(PHP 4, PHP 5)","shortdesc":"","syntax":"","desc":""},"inclued_get_data":{"version":"(PECL inclued >= 0.1.0)","shortdesc":"Get the inclued data","syntax":"\n   array <b>inclued_get_data<\/b>\n    ( void\n   )","desc":"\n   Get the inclued data.\n  "},"inet_ntop":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u0443\u043f\u0430\u043a\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u0430\u0434\u0440\u0435\u0441 \u0432 \u0447\u0438\u0442\u0430\u0435\u043c\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442","syntax":"\n   string <b>inet_ntop<\/b>\n    ( string $in_addr\n   )","desc":""},"inet_pton":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u0447\u0438\u0442\u0430\u0435\u043c\u044b\u0439 IP \u0430\u0434\u0440\u0435\u0441 \u0432 \u0443\u043f\u0430\u043a\u043e\u0432\u0430\u043d\u043d\u043e\u0435 in_addr \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435","syntax":"\n   string <b>inet_pton<\/b>\n    ( string $address\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u0447\u0438\u0442\u0430\u0435\u043c\u044b\u0439 IPv4 \u0438\u043b\u0438 IPv6 \u0430\u0434\u0440\u0435\u0441 (\u0435\u0441\u043b\u0438 PHP \u0431\u044b\u043b \u0441\u043e\u0431\u0440\u0430\u043d \u0441 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u043e\u0439 IPv6) \u0432 \u0430\u0434\u0440\u0435\u0441 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 32-\u0431\u0438\u0442\u043d\u043e\u0439 \u0438\u043b\u0438 128-\u0431\u0438\u0442\u043d\u043e\u0439 \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u0439 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0435.\n  "},"ingres_autocommit_state":{"version":"(PECL ingres >= 2.0.0)","shortdesc":"Test if the connection is using autocommit","syntax":"\n   bool <b>ingres_autocommit_state<\/b>\n    ( resource $link\n   )","desc":"\n    ingres_autocommit_state() is called to determine whether\n   the current link has autocommit enabled or not. \n  "},"ingres_autocommit":{"version":"(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)","shortdesc":"Switch autocommit on or off","syntax":"\n   bool <b>ingres_autocommit<\/b>\n    ( resource $link\n   )","desc":"\n    ingres_autocommit() is called before opening a\n   transaction (before the first call to\n    ingres_query() or just after a call to\n    ingres_rollback() or\n    ingres_commit()) to switch the\n   autocommit mode of the server on or off (when the script begins\n   the autocommit mode is off).\n  "},"ingres_charset":{"version":"(PECL ingres >= 2.1.0)","shortdesc":"Returns the installation character set","syntax":"\n   string <b>ingres_charset<\/b>\n    ( resource $link\n   )","desc":"\n    ingres_charset() is called to determine the character\n   set being used by the Ingres client, from II_CHARSETxx (where xx is the\n   installation code).\n  "},"ingres_close":{"version":"(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)","shortdesc":"Close an Ingres database connection","syntax":"\n   bool <b>ingres_close<\/b>\n    ( resource $link\n   )","desc":"\n    ingres_close() closes the connection to\n   the Ingres server that is associated with the specified link.\n  "},"ingres_commit":{"version":"(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)","shortdesc":"Commit a transaction","syntax":"\n   bool <b>ingres_commit<\/b>\n    ( resource $link\n   )","desc":"\n    ingres_commit() commits the currently open\n   transaction, making all changes made to the database permanent.\n  "},"ingres_connect":{"version":"(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)","shortdesc":"Open a connection to an Ingres database","syntax":"\n   resource <b>ingres_connect<\/b>\n    ([ string $database\n   [, string $username\n   [, string $password\n   [, array $options\n  ]]]] )","desc":"\n    ingres_connect() opens a connection with the\n   given Ingres database.\n  "},"ingres_cursor":{"version":"(PECL ingres >= 1.1.0)","shortdesc":"Get a cursor name for a given result resource","syntax":"\n   string <b>ingres_cursor<\/b>\n    ( resource $result\n   )","desc":"\n   Returns a string with the active cursor name. If no cursor is active then \n   NULL is returned.\n  "},"ingres_errno":{"version":"(PECL ingres >= 1.1.0)","shortdesc":"Get the last Ingres error number generated","syntax":"\n   int <b>ingres_errno<\/b>\n    ([ resource $link\n  ] )","desc":"\n   Returns an integer containing the last error number. If no error was\n   reported 0 is returned.\n  "},"ingres_error":{"version":"(PECL ingres >= 1.1.0)","shortdesc":"Get a meaningful error message for the last error generated","syntax":"\n   string <b>ingres_error<\/b>\n    ([ resource $link\n  ] )","desc":"\n   Returns a string containing the last error, or NULL if no error has\n   occurred.\n  "},"ingres_errsqlstate":{"version":"(PECL ingres >= 1.1.0)","shortdesc":"Get the last SQLSTATE error code generated","syntax":"\n   string <b>ingres_errsqlstate<\/b>\n    ([ resource $link\n  ] )","desc":"\n   Returns a string containing the last SQLSTATE, or NULL if no error has\n   occurred.\n  "},"ingres_escape_string":{"version":"(PECL ingres >= 2.1.0)","shortdesc":"Escape special characters for use in a query","syntax":"\n   string <b>ingres_escape_string<\/b>\n    ( resource $link\n   , string $source_string\n   )","desc":"\n    ingres_escape_string() is used to escape certain\n   characters within a string before it is sent to the database server.\n  "},"ingres_execute":{"version":"(PECL ingres >= 1.1.0)","shortdesc":"Execute a prepared query","syntax":"\n   bool <b>ingres_execute<\/b>\n    ( resource $result\n   [, array $params\n   [, string $types\n  ]] )","desc":"\n   Execute a query prepared using  ingres_prepare().\n  "},"ingres_fetch_array":{"version":"( PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)","shortdesc":"Fetch a row of result into an array","syntax":"\n   array <b>ingres_fetch_array<\/b>\n    ( resource $result\n   [, int $result_type\n  ] )","desc":"\n   This function is an extended version of\n    ingres_fetch_row().  In addition to storing\n   the data in the numeric indices of the result array, it also\n   stores the data in associative indices, using the field names as\n   keys.\n  "},"ingres_fetch_assoc":{"version":"(PECL ingres >= 2.2.2)","shortdesc":"Fetch a row of result into an associative array","syntax":"\n   array <b>ingres_fetch_assoc<\/b>\n    ( resource $result\n   )","desc":"\n   This function is stores the data fetched from a query executed using\n    ingres_query() in an associative array, using the\n   field names as keys.\n  "},"ingres_fetch_object":{"version":"(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)","shortdesc":"Fetch a row of result into an object","syntax":"\n   object <b>ingres_fetch_object<\/b>\n    ( resource $result\n   [, int $result_type\n  ] )","desc":"\n   This function is similar to\n    ingres_fetch_array(), with one difference - an\n   object is returned instead of an array.  Indirectly, this means\n   that you can access the data only by the field names and not by\n   their offsets (numbers are illegal property names).\n  "},"ingres_fetch_proc_return":{"version":"(PECL ingres >= 1.4.0)","shortdesc":"Get the return value from a procedure call","syntax":"\n   int <b>ingres_fetch_proc_return<\/b>\n    ( resource $result\n   )","desc":"\n   This function is used to retrieve the return value following the execution\n   of an Ingres database procedure (stored procedure). \n  "},"ingres_fetch_row":{"version":"(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)","shortdesc":"Fetch a row of result into an enumerated array","syntax":"\n   array <b>ingres_fetch_row<\/b>\n    ( resource $result\n   )","desc":"\n    ingres_fetch_row() returns an array that\n   corresponds to the fetched row, or FALSE if there are no more\n   rows. Each result column is stored in an array offset, starting\n   at offset 1.\n  "},"ingres_field_length":{"version":"(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)","shortdesc":"Get the length of a field","syntax":"\n   int <b>ingres_field_length<\/b>\n    ( resource $result\n   , int $index\n   )","desc":"\n    ingres_field_length() returns the length of a\n   field.  This is the number of bytes the server uses to store\n   the field.  For detailed information, see the Ingres OpenAPI User\n   Guide, Appendix \"Data Types\" in the Ingres documentation.\n  "},"ingres_field_name":{"version":"(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)","shortdesc":"Get the name of a field in a query result","syntax":"\n   string <b>ingres_field_name<\/b>\n    ( resource $result\n   , int $index\n   )","desc":"\n    ingres_field_name() returns the name of a field\n   in a query result.\n  "},"ingres_field_nullable":{"version":"(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)","shortdesc":"Test if a field is nullable","syntax":"\n   bool <b>ingres_field_nullable<\/b>\n    ( resource $result\n   , int $index\n   )","desc":"\n   Test if a field is nullable.\n  "},"ingres_field_precision":{"version":"(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)","shortdesc":"Get the precision of a field","syntax":"\n   int <b>ingres_field_precision<\/b>\n    ( resource $result\n   , int $index\n   )","desc":"\n    ingres_field_precision() returns the precision\n   of a field. This value is used only for decimal, float, and money\n   SQL data types. For detailed information, see the Ingres OpenAPI\n   User Guide, Appendix \"Data Types\" in the Ingres documentation.\n  "},"ingres_field_scale":{"version":"(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)","shortdesc":"Get the scale of a field","syntax":"\n   int <b>ingres_field_scale<\/b>\n    ( resource $result\n   , int $index\n   )","desc":"\n    ingres_field_scale() returns the scale of a\n   field.  This value is used only for the decimal SQL data\n   type. For detailed information, see the Ingres OpenAPI User\n   Guide, Appendix \"Data Types\" in the Ingres documentation.\n  "},"ingres_field_type":{"version":"(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)","shortdesc":"Get the type of a field in a query result","syntax":"\n   string <b>ingres_field_type<\/b>\n    ( resource $result\n   , int $index\n   )","desc":"\n   Get the type of a field in a query result.\n  "},"ingres_free_result":{"version":"(PECL ingres >= 2.0.0)","shortdesc":"Free the resources associated with a result identifier","syntax":"\n   bool <b>ingres_free_result<\/b>\n    ( resource $result\n   )","desc":"\n  "},"ingres_next_error":{"version":"(PECL ingres >= 2.0.0)","shortdesc":"Get the next Ingres error","syntax":"\n   bool <b>ingres_next_error<\/b>\n    ([ resource $link\n  ] )","desc":"\n   Get the next Ingres error for the last executed query. Each call to\n    ingres_next_error() can be followed by a call to\n    ingres_errno(),  ingres_error() \n   or  ingres_errsqlstate() to get the respective error\n   number, error text, or SQL STATE. While\n    ingres_next_error() returns TRUE, there are more errors\n   to fetch.\n  "},"ingres_num_fields":{"version":"(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)","shortdesc":"Get the number of fields returned by the last query","syntax":"\n   int <b>ingres_num_fields<\/b>\n    ( resource $result\n   )","desc":"\n    ingres_num_fields() returns the number of\n   fields in the results returned by the Ingres server after a call\n   to  ingres_query().\n  "},"ingres_num_rows":{"version":"(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)","shortdesc":"Get the number of rows affected or returned by a query","syntax":"\n   int <b>ingres_num_rows<\/b>\n    ( resource $result\n   )","desc":"\n   This function primarily is meant to get the number of rows\n   modified in the database. However, it can be used to retrieve the number of\n   rows to fetch for a SELECT statement.\n  "},"ingres_pconnect":{"version":"(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)","shortdesc":"Open a persistent connection to an Ingres database","syntax":"\n   resource <b>ingres_pconnect<\/b>\n    ([ string $database\n   [, string $username\n   [, string $password\n   [, array $options\n  ]]]] )","desc":"\n   Open a persistent connection to an Ingres database.\n  "},"ingres_prepare":{"version":"(PECL ingres >= 1.1.0)","shortdesc":"Prepare a query for later execution","syntax":"\n   mixed <b>ingres_prepare<\/b>\n    ( resource $link\n   , string $query\n   )","desc":"\n   Prepares a query for execution by  ingres_execute().\n  "},"ingres_query":{"version":"(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)","shortdesc":"Send an SQL query to Ingres","syntax":"\n   mixed <b>ingres_query<\/b>\n    ( resource $link\n   , string $query\n   [, array $params\n   [, string $types\n  ]] )","desc":"\n    ingres_query() sends the given\n   query to the Ingres server. \n  "},"ingres_result_seek":{"version":"(PECL ingres >= 2.1.0)","shortdesc":"Set the row position before fetching data","syntax":"\n   bool <b>ingres_result_seek<\/b>\n    ( resource $result\n   , int $position\n   )","desc":"\n   This function is used to position the cursor associated with the result\n   resource before issuing a fetch.  If ingres.array_index_start\n   is set to 0 then the first row is 0 else it is 1.\n    ingres_result_seek() can be used only with queries that\n   make use of scrollable\n   cursors. It cannot be used with\n    ingres_unbuffered_query().\n  "},"ingres_rollback":{"version":"(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)","shortdesc":"Roll back a transaction","syntax":"\n   bool <b>ingres_rollback<\/b>\n    ( resource $link\n   )","desc":"\n    ingres_rollback() rolls back the currently\n   open transaction, actually cancelling all changes made to the\n   database during the transaction.\n  "},"ingres_set_environment":{"version":"(PECL ingres >= 1.2.0)","shortdesc":"Set environment features controlling output options","syntax":"\n   bool <b>ingres_set_environment<\/b>\n    ( resource $link\n   , array $options\n   )","desc":"\n    ingres_set_environment() is called to set environmental\n   options that affect the output of certain values from Ingres, such as the\n   timezone, date format, decimal character separator, and float precision.\n  "},"ingres_unbuffered_query":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Send an unbuffered  SQL query to Ingres","syntax":"\n   mixed <b>ingres_unbuffered_query<\/b>\n    ( resource $link\n   , string $query\n   [, array $params\n   [, string $types\n  ]] )","desc":"\n    ingres_unbuffered_query() sends the given\n   query to the Ingres server. \n  "},"ini_alter":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  ini_set()","syntax":"","desc":""},"ini_get_all":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438\n  ","syntax":"\n   array <b>ini_get_all<\/b>\n    ([ string $extension\n   [, bool $details = true\n  ]] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0441\u0435 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438.\n  "},"ini_get":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438\n  ","syntax":"\n   string <b>ini_get<\/b>\n    ( string $varname\n   )","desc":"\n   \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0445\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438.\n  "},"ini_restore":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0412\u043e\u0441\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438\n  ","syntax":"\n   void <b>ini_restore<\/b>\n    ( string $varname\n   )","desc":"\n   \u0412\u043e\u0441\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438.\n  "},"ini_set":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438\n  ","syntax":"\n   string <b>ini_set<\/b>\n    ( string $varname\n   , string $newvalue\n   )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438. \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0431\u0443\u0434\u0435\u0442\n   \u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u043a\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0441\u043a\u0440\u0438\u043f\u0442. \u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b\n   \u0441\u043a\u0440\u0438\u043f\u0442\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0432\u0435\u0440\u043d\u0435\u0442\u0441\u044f \u043a \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u043c\u0443.\n  "},"inotify_add_watch":{"version":"(PECL inotify >= 0.1.2)","shortdesc":"Add a watch to an initialized inotify instance","syntax":"\n   int <b>inotify_add_watch<\/b>\n    ( resource $inotify_instance\n   , string $pathname\n   , int $mask\n   )","desc":"\n    inotify_add_watch() adds a new watch or modify an\n   existing watch for the file or directory specified in\n   pathname.\n  "},"inotify_init":{"version":"(PECL inotify >= 0.1.2)","shortdesc":"Initialize an inotify instance","syntax":"\n   resource <b>inotify_init<\/b>\n    ( void\n   )","desc":"\n   Initialize an inotify instance for use with\n    inotify_add_watch()\n  "},"inotify_queue_len":{"version":"(PECL inotify >= 0.1.2)","shortdesc":"Return a number upper than zero if there are pending events","syntax":"\n   int <b>inotify_queue_len<\/b>\n    ( resource $inotify_instance\n   )","desc":"\n   This function allows to know if  inotify_read() will block or not.\n   If a number upper than zero is returned, there are pending events and \n    inotify_read() will not block. \n  "},"inotify_read":{"version":"(PECL inotify >= 0.1.2)","shortdesc":"Read events from an inotify instance","syntax":"\n   array <b>inotify_read<\/b>\n    ( resource $inotify_instance\n   )","desc":"\n   Read inotify events from an inotify instance.\n  "},"inotify_rm_watch":{"version":"(PECL inotify >= 0.1.2)","shortdesc":"Remove an existing watch from an inotify instance","syntax":"\n   bool <b>inotify_rm_watch<\/b>\n    ( resource $inotify_instance\n   , int $watch_descriptor\n   )","desc":"\n    inotify_rm_watch() removes the watch\n   watch_descriptor from the inotify instance\n   inotify_instance.\n  "},"interface_exists":{"version":"(PHP 5 >= 5.0.2)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u043b\u0438 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441","syntax":"\n   bool <b>interface_exists<\/b>\n    ( string $interface_name\n   [, bool $autoload = true\n  ] )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u043b\u0438 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441.\n  "},"intl_error_name":{"version":"(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)","shortdesc":"Get symbolic name for a given error code","syntax":"\n   string\n    <b>intl_error_name<\/b>\n    ( int $error_code\n   )","desc":"\n   Return ICU error code name.\n  "},"intl_get_error_code":{"version":"(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)","shortdesc":"Get the last error code","syntax":"\n   int\n    <b>intl_get_error_code<\/b>\n    ( void\n   )","desc":"\n   Useful to handle errors occurred in static methods when there's no object to\n   get error code from.\n  "},"intl_get_error_message":{"version":"(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)","shortdesc":"Get description of the last error","syntax":"\n   string\n    <b>intl_get_error_message<\/b>\n    ( void\n   )","desc":"\n   Get error message from last internationalization function called.\n  "},"intl_is_failure":{"version":"(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)","shortdesc":"Check whether the given error code indicates failure","syntax":"\n   bool\n    <b>intl_is_failure<\/b>\n    ( int $error_code\n   )","desc":"\n   \n  "},"intval":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0446\u0435\u043b\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439","syntax":"\n   int <b>intval<\/b>\n    ( mixed $var\n   [, int $base = 10\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0446\u0435\u043b\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 var,\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0435 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0438\u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f base \u0434\u043b\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \n   (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u0440\u0430\u0432\u043d\u043e 10).  intval()\n   \u043d\u0435\u043b\u044c\u0437\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c\u0438, \u043f\u043e\u043f\u044b\u0442\u043a\u0430 \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c\n   \u0432\u044b\u0437\u043e\u0432\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0443 \u0443\u0440\u043e\u0432\u043d\u044f E_NOTICE \u0438 \u0432\u0435\u0440\u043d\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 1.\n  "},"ip2long":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0443\u044e (IPv4) \u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u0430\u0434\u0440\u0435\u0441 \u0441 \u0442\u043e\u0447\u043a\u0430\u043c\u0438 \u0432 \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u0430\u0434\u0440\u0435\u0441","syntax":"\n   int <b>ip2long<\/b>\n    ( string $ip_address\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  ip2long() \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 IPv4 \u0430\u0434\u0440\u0435\u0441 \u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u0441\u0435\u0442\u0438 \u0438\u0437 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0433\u043e \u0444\u043e\u0440\u043c\u0430\u0442\u0430 (\u0441\u0442\u0440\u043e\u043a\u0430 \u0441 \u0442\u043e\u0447\u043a\u0430\u043c\u0438). \n  "},"iptcembed":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u043d\u0438\u0435 \u0434\u0432\u043e\u0438\u0447\u043d\u044b\u0445 IPTC \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 JPEG \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435","syntax":"\n   mixed <b>iptcembed<\/b>\n    ( string $iptcdata\n   , string $jpeg_file_name\n   [, int $spool\n  ] )","desc":"\n   \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0434\u0432\u043e\u0438\u0447\u043d\u044b\u0435 IPTC \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 JPEG \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435.\n  "},"iptcparse":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0420\u0430\u0437\u0431\u043e\u0440 \u0434\u0432\u043e\u0438\u0447\u043d\u044b\u0445 IPTC \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u044d\u0433\u0438\n  ","syntax":"\n   array <b>iptcparse<\/b>\n    ( string $iptcblock\n   )","desc":"\n   \u0420\u0430\u0437\u0431\u0438\u0440\u0430\u0435\u0442 \u00bb\u00a0IPTC \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u044d\u0433\u0438.\n  "},"is_a":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0438\u0442 \u043b\u0438 \u043e\u0431\u044a\u0435\u043a\u0442 \u043a \u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u043a\u043b\u0430\u0441\u0441\u0443 \u0438\u043b\u0438\n   \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0434\u0430\u043d\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 \u0432 \u0447\u0438\u0441\u043b\u0435 \u0441\u0432\u043e\u0438\u0445 \u043f\u0440\u0435\u0434\u043a\u043e\u0432","syntax":"\n   bool <b>is_a<\/b>\n    ( object $object\n   , string $class_name\n   [, bool $allow_string = FALSE\n  ] )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0438\u0442 \u043b\u0438 \u043e\u0431\u044a\u0435\u043a\u0442 object\n   \u043a \u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u043a\u043b\u0430\u0441\u0441\u0443 \u0438\u043b\u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0434\u0430\u043d\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 \u0432 \u0447\u0438\u0441\u043b\u0435 \u0441\u0432\u043e\u0438\u0445 \u043f\u0440\u0435\u0434\u043a\u043e\u0432\n  "},"is_array":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u043c","syntax":"\n    bool <b>is_array<\/b>\n     ( mixed $var\n    )","desc":"\n   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0434\u0430\u043d\u043d\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u043c.\n  "},"is_bool":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0431\u0443\u043b\u0435\u0432\u043e\u0439\n  ","syntax":"\n   bool <b>is_bool<\/b>\n    ( mixed $var\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0434\u0430\u043d\u043d\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0431\u0443\u043b\u0435\u0432\u043e\u0439.\n  "},"is_callable":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u043c\u043e\u0436\u0435\u0442 \u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0431\u044b\u0442\u044c \u0432\u044b\u0437\u0432\u0430\u043d\u043e \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n  ","syntax":"\n   bool <b>is_callable<\/b>\n    ( callable $name\n   [, bool $syntax_only = false\n   [, string &$callable_name\n  ]] )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u043c\u043e\u0436\u0435\u0442 \u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0431\u044b\u0442\u044c \u0432\u044b\u0437\u0432\u0430\u043d\u043e \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438.\n   \u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0434\u0430\u043d\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u0447\u0442\u043e \u043f\u0440\u043e\u0441\u0442\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0435 \u0438\u043c\u044f\n   \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u0438\u043b\u0438 \u0447\u0442\u043e \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0438\n   \u0438\u043c\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0438.\n  "},"is_dir":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0438\u043c\u044f \u0444\u0430\u0439\u043b\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0435\u0439","syntax":"\n   bool <b>is_dir<\/b>\n    ( string $filename\n   )","desc":"\n   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0438\u043c\u044f \u0444\u0430\u0439\u043b\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0435\u0439.\n  "},"is_double":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  is_float()","syntax":"","desc":""},"is_executable":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0444\u0430\u0439\u043b \u0438\u0441\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u044b\u043c","syntax":"\n   bool <b>is_executable<\/b>\n    ( string $filename\n   )","desc":"\n   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0444\u0430\u0439\u043b \u0438\u0441\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u044b\u043c.\n  "},"is_file":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0444\u0430\u0439\u043b \u043e\u0431\u044b\u0447\u043d\u044b\u043c \u0444\u0430\u0439\u043b\u043e\u043c","syntax":"\n   bool <b>is_file<\/b>\n    ( string $filename\n   )","desc":"\n   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0444\u0430\u0439\u043b \u043e\u0431\u044b\u0447\u043d\u044b\u043c \u0444\u0430\u0439\u043b\u043e\u043c.\n  "},"is_finite":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u043c \u043a\u043e\u043d\u0435\u0447\u043d\u044b\u043c \u0447\u0438\u0441\u043b\u043e\u043c","syntax":"\n    bool <b>is_finite<\/b>\n     ( float $val\n    )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 val \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u043c \u043a\u043e\u043d\u0435\u0447\u043d\u044b\u043c \u0447\u0438\u0441\u043b\u043e\u043c\n   \u043d\u0430 \u0434\u0430\u043d\u043d\u043e\u0439 \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0435.\n  "},"is_float":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0447\u0438\u0441\u043b\u043e\u043c \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439","syntax":"\n    bool <b>is_float<\/b>\n     ( mixed $var\n    )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0434\u0430\u043d\u043d\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0447\u0438\u0441\u043b\u043e\u043c \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439.\n  "},"is_infinite":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u044b\u043c","syntax":"\n    bool <b>is_infinite<\/b>\n     ( float $val\n    )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE, \u0435\u0441\u043b\u0438 val \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0441\u0442\u044c\u044e (\u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438\u043b\u0438\n   \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0439), \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043a\u0430\u043a \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f log(0) \u0438\u043b\u0438 \u043b\u044e\u0431\u044b\u0435 \u0434\u0440\u0443\u0433\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f,\n   \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0431\u043e\u043b\u044c\u0448\u0438\u0435, \u0447\u0442\u043e\u0431\u044b \u0443\u043c\u0435\u0441\u0442\u0438\u0442\u044c\u0441\u044f \u0432 float \u043d\u0430 \u0434\u0430\u043d\u043d\u043e\u0439 \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0435.\n  "},"is_int":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0446\u0435\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0430","syntax":"\n    bool <b>is_int<\/b>\n     ( mixed $var\n    )","desc":"\n    \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0442\u0438\u043f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0446\u0435\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u043c.\n  "},"is_integer":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  is_int()","syntax":"","desc":""},"is_link":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0444\u0430\u0439\u043b \u0441\u0438\u043c\u0432\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0441\u0441\u044b\u043b\u043a\u043e\u0439","syntax":"\n   bool <b>is_link<\/b>\n    ( string $filename\n   )","desc":"\n   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0444\u0430\u0439\u043b \u0441\u0438\u043c\u0432\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0441\u0441\u044b\u043b\u043a\u043e\u0439.\n  "},"is_long":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  is_int()","syntax":"","desc":""},"is_nan":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \"\u043d\u0435 \u0447\u0438\u0441\u043b\u043e\u043c\"","syntax":"\n   bool <b>is_nan<\/b>\n    ( float $val\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 val \"\u043d\u0435 \u0447\u0438\u0441\u043b\u043e\u043c\" (NaN),\n   \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043a\u0430\u043a \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0438 acos(1.01).\n  "},"is_null":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0440\u0430\u0432\u043d\u044b\u043c NULL\n  ","syntax":"\n   bool <b>is_null<\/b>\n    ( mixed $var\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0440\u0430\u0432\u043d\u044b\u043c NULL.\n  "},"is_numeric":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0447\u0438\u0441\u043b\u043e\u043c \u0438\u043b\u0438 \u0441\u0442\u0440\u043e\u043a\u043e\u0439, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0439 \u0447\u0438\u0441\u043b\u043e\n  ","syntax":"\n   bool <b>is_numeric<\/b>\n    ( mixed $var\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0434\u0430\u043d\u043d\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0447\u0438\u0441\u043b\u043e\u043c. \u0421\u0442\u0440\u043e\u043a\u0438, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0435\n   \u0447\u0438\u0441\u043b\u0430, \u0441\u043e\u0441\u0442\u043e\u044f\u0442 \u0438\u0437 \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0437\u043d\u0430\u043a\u0430, \u043b\u044e\u0431\u043e\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0446\u0438\u0444\u0440,\n   \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0438 \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u044d\u043a\u0441\u043f\u043e\u043d\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438.\n   \u0422\u0430\u043a, +0123.45e6 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432\u0435\u0440\u043d\u044b\u043c \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u043c\n   \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c. \u0428\u0435\u0441\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u0435\u0440\u0438\u0447\u043d\u0430\u044f \u0437\u0430\u043f\u0438\u0441\u044c (0xFF) \u0442\u0430\u043a\u0436\u0435 \u0434\u043e\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f, \u043d\u043e\n   \u0442\u043e\u043b\u044c\u043a\u043e \u0431\u0435\u0437 \u0437\u043d\u0430\u043a\u0430, \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u043e\u0439 \u0438 \u044d\u043a\u0441\u043f\u043e\u043d\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438.\n  "},"is_object":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u043c","syntax":"\n    bool <b>is_object<\/b>\n     ( mixed $var\n    )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0434\u0430\u043d\u043d\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u043c.\n  "},"is_readable":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043e\u0432\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 \u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u043b\u0438 \u043e\u043d \u0434\u043b\u044f \u0447\u0442\u0435\u043d\u0438\u044f","syntax":"\n   bool <b>is_readable<\/b>\n    ( string $filename\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE, \u0435\u0441\u043b\u0438 \u0444\u0430\u0439\u043b \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0434\u043b\u044f \u0447\u0442\u0435\u043d\u0438\u044f.\n  "},"is_real":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  is_float()","syntax":"","desc":""},"is_resource":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u043c\n  ","syntax":"\n   bool <b>is_resource<\/b>\n    ( mixed $var\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0434\u0430\u043d\u043d\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u043c.\n  "},"is_scalar":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043a\u0430\u043b\u044f\u0440\u043d\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c\n  ","syntax":"\n   bool <b>is_scalar<\/b>\n    ( mixed $var\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0434\u0430\u043d\u043d\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043a\u0430\u043b\u044f\u0440\u043d\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c.\n  "},"is_soap_fault":{"version":"(Unknown)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043b\u0438 \u043e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0432\u044b\u0437\u043e\u0432\u0435 SOAP","syntax":"\n   bool <b>is_soap_fault<\/b>\n    ( mixed $object\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u043b\u0435\u0437\u043d\u0430 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u043f\u0440\u0438 \u0432\u044b\u0437\u043e\u0432\u0435 SOAP, \u043d\u043e\n   \u0442\u043e\u0433\u0434\u0430, \u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f. \u0414\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0435\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c, \u0441\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\n   SoapClient \u0441 \u043e\u043f\u0446\u0438\u0435\u0439 exceptions,\n   \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u043e\u0439 \u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u043e\u043b\u044c \u0438\u043b\u0438 FALSE.\n   \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u0435\u0442\u043e\u0434 SOAP \u0432\u0435\u0440\u043d\u0435\u0442 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442\n   SoapFault, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0438\u043d\u043a\u0430\u043f\u0441\u0443\u043b\u0438\u0440\u0443\u0435\u0442 \u0434\u0435\u0442\u0430\u043b\u0438\n   \u043e\u0448\u0438\u0431\u043a\u0438 (\u043a\u043e\u0434 \u043e\u0448\u0438\u0431\u043a\u0438, \u0441\u0442\u0440\u043e\u043a\u0430 \u043e\u0448\u0438\u0431\u043a\u0438, \u0433\u0434\u0435 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430 \u0438 \u0434\u0440\u0443\u0433\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e).\n  "},"is_string":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u043e\u0439","syntax":"\n   bool <b>is_string<\/b>\n    ( mixed $var\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0434\u0430\u043d\u043d\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u043e\u0439.\n  "},"is_subclass_of":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043b\u0438 \u043e\u0431\u044a\u0435\u043a\u0442 \u0432 \u0441\u0432\u043e\u0435\u043c \u0434\u0435\u0440\u0435\u0432\u0435 \u043f\u0440\u0435\u0434\u043a\u043e\u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441","syntax":"\n   bool <b>is_subclass_of<\/b>\n    ( mixed $object\n   , string $class_name\n   [, bool $allow_string = TRUE\n  ] )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043b\u0438 \u043e\u0431\u044a\u0435\u043a\u0442 object\n   \u0432 \u0441\u0432\u043e\u0435\u043c \u0434\u0435\u0440\u0435\u0432\u0435 \u043f\u0440\u0435\u0434\u043a\u043e\u0432 \u043a\u043b\u0430\u0441\u0441 class_name .\n  "},"is_tainted":{"version":"(PECL taint >=0.1.0)","shortdesc":"Checks whether a string is tainted","syntax":"\n   bool <b>is_tainted<\/b>\n    ( string $string\n   )","desc":"\n   Checks whether a string is tainted\n  "},"is_uploaded_file":{"version":"(PHP 4 >= 4.0.3, PHP 5)","shortdesc":"\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u0431\u044b\u043b \u043b\u0438 \u0444\u0430\u0439\u043b \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 HTTP POST","syntax":"\n   bool <b>is_uploaded_file<\/b>\n    ( string $filename\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE, \u0435\u0441\u043b\u0438 \u0444\u0430\u0439\u043b filename \u0431\u044b\u043b\n   \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 HTTP POST. \u042d\u0442\u043e \u043f\u043e\u043b\u0435\u0437\u043d\u043e \u0434\u043b\u044f \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0442\u043e\u0433\u043e,\n   \u0447\u0442\u043e \u0437\u043b\u043e\u043d\u0430\u043c\u0435\u0440\u0435\u043d\u043d\u044b\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043d\u0435 \u043f\u044b\u0442\u0430\u0435\u0442\u0441\u044f \u043e\u0431\u043c\u0430\u043d\u0443\u0442\u044c \u0441\u043a\u0440\u0438\u043f\u0442 \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b\n   \u043e\u043d \u0440\u0430\u0431\u043e\u0442\u0430\u043b \u0441 \u0444\u0430\u0439\u043b\u0430\u043c\u0438, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d - \u043a \u043f\u0440\u0438\u043c\u0435\u0440\u0443,\n   \/etc\/passwd.\n  "},"is_writable":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u043b\u0438 \u0444\u0430\u0439\u043b \u0434\u043b\u044f \u0437\u0430\u043f\u0438\u0441\u0438","syntax":"\n   bool <b>is_writable<\/b>\n    ( string $filename\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE, \u0435\u0441\u043b\u0438 \u0444\u0430\u0439\u043b filename \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0438\n   \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0434\u043b\u044f \u0437\u0430\u043f\u0438\u0441\u0438. \u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442 filename \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u043c\u0435\u043d\u0435\u043c \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438, \u0447\u0442\u043e\n   \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u0430\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u043d\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0441\u0442\u044c \u0434\u043b\u044f \u0437\u0430\u043f\u0438\u0441\u0438.\n  "},"is_writeable":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  is_writable()","syntax":"","desc":""},"isset":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u0431\u044b\u043b\u0430 \u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u043e\u0442\u043b\u0438\u0447\u043d\u044b\u043c \u043e\u0442 NULL","syntax":"\n   bool <b>isset<\/b>\n    ( mixed $var\n   [, mixed $...\n  ] )","desc":"\n   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u0431\u044b\u043b\u0430 \u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u043e\u0442\u043b\u0438\u0447\u043d\u044b\u043c \u043e\u0442 NULL\n  "},"iterator_apply":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0432 \u0438\u0442\u0435\u0440\u0430\u0442\u043e\u0440\u0435","syntax":"\n   int <b>iterator_apply<\/b>\n    ( Traversable $iterator\n   , callable $function\n   [, array $args\n  ] )","desc":"\n   \u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0432 \u0438\u0442\u0435\u0440\u0430\u0442\u043e\u0440\u0435.\n  "},"iterator_count":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\u041f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 \u0438\u0442\u0435\u0440\u0430\u0442\u043e\u0440\u0435","syntax":"\n   int <b>iterator_count<\/b>\n    ( Traversable $iterator\n   )","desc":"\n   \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 \u0438\u0442\u0435\u0440\u0430\u0442\u043e\u0440\u0435.\n  "},"iterator_to_array":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\u041a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u0438\u0442\u0435\u0440\u0430\u0442\u043e\u0440 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432","syntax":"\n   array <b>iterator_to_array<\/b>\n    ( Traversable $iterator\n   [, bool $use_keys = true\n  ] )","desc":"\n   \u041a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0438\u0442\u0435\u0440\u0430\u0442\u043e\u0440\u0430 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432.\n  "},"java_last_exception_clear":{"version":"(PHP 4 >= 4.0.2)","shortdesc":"Clear last Java exception","syntax":"\n   void <b>java_last_exception_clear<\/b>\n    ( void\n   )","desc":"\n   Clears last Java exception.\n  "},"java_last_exception_get":{"version":"(PHP 4 >= 4.0.2)","shortdesc":"Get last Java exception","syntax":"\n   object <b>java_last_exception_get<\/b>\n    ( void\n   )","desc":"\n   Gets last Java exception.\n  "},"JDDayOfWeek":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438\n  ","syntax":"\n   mixed jddayofweek\n    ( int $julianday\n   [, int $mode = CAL_DOW_DAYNO\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438. \u041c\u043e\u0436\u0435\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u043b\u0438 \u0447\u0438\u0441\u043b\u043e \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438\n   \u043e\u0442 \u0440\u0435\u0436\u0438\u043c\u0430 \u0440\u0430\u0431\u043e\u0442\u044b.\n  "},"JDMonthName":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0441\u044f\u0446\u0430\n  ","syntax":"\n   string jdmonthname\n    ( int $julianday\n   , int $mode\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0443\u044e \u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0441\u044f\u0446\u0430.\n   mode \u0437\u0430\u0434\u0430\u0435\u0442 \u0440\u0435\u0436\u0438\u043c \u0440\u0430\u0431\u043e\u0442\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \n   \u0438\u0437 \u0447\u0438\u0441\u043b\u0430 \u0434\u043d\u0435\u0439 \u0432 \u044e\u043b\u0438\u0430\u043d\u0441\u043a\u043e\u043c \u043b\u0435\u0442\u043e\u0438\u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0438, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0442\u0438\u043f \n   \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043c\u0435\u0441\u044f\u0446\u0430.\n   "},"JDToFrench":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0447\u0438\u0441\u043b\u043e \u0434\u043d\u0435\u0439 \u0432 \u042e\u043b\u0438\u0430\u043d\u0441\u043a\u043e\u043c \u043b\u0435\u0442\u043e\u0438\u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0438 \u0432 \u0434\u0430\u0442\u0443 \u043f\u043e\n   \u0424\u0440\u0430\u043d\u0446\u0443\u0437\u0441\u043a\u043e\u043c\u0443 \u0440\u0435\u0441\u043f\u0443\u0431\u043b\u0438\u043a\u0430\u043d\u0441\u043a\u043e\u043c\u0443 \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044e\n  ","syntax":"\n   string jdtofrench\n    ( int $juliandaycount\n   )","desc":"\n   \u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0447\u0438\u0441\u043b\u043e \u0434\u043d\u0435\u0439 \u0432 \u042e\u043b\u0438\u0430\u043d\u0441\u043a\u043e\u043c \u043b\u0435\u0442\u043e\u0438\u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0438 \u0432 \u0434\u0430\u0442\u0443 \u043f\u043e\n   \u0424\u0440\u0430\u043d\u0446\u0443\u0437\u0441\u043a\u043e\u043c\u0443 \u0440\u0435\u0441\u043f\u0443\u0431\u043b\u0438\u043a\u0430\u043d\u0441\u043a\u043e\u043c\u0443 \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044e\n  "},"JDToGregorian":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0447\u0438\u0441\u043b\u043e \u0434\u043d\u0435\u0439 \u0432 \u042e\u043b\u0438\u0430\u043d\u0441\u043a\u043e\u043c \u043b\u0435\u0442\u043e\u0438\u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0438 \u0432 \u0434\u0430\u0442\u0443 \u043f\u043e \n   \u0413\u0440\u0438\u0433\u043e\u0440\u0438\u0430\u043d\u0441\u043a\u043e\u043c\u0443 \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044e\n  ","syntax":"\n   string jdtogregorian\n    ( int $julianday\n   )","desc":"\n   \u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0447\u0438\u0441\u043b\u043e \u0434\u043d\u0435\u0439 \u0432 \u042e\u043b\u0438\u0430\u043d\u0441\u043a\u043e\u043c \u043b\u0435\u0442\u043e\u0438\u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0438 \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 \n   \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0443\u044e \u0413\u0440\u0438\u0433\u043e\u0440\u0438\u0430\u043d\u0441\u043a\u0443\u044e \u0434\u0430\u0442\u0443 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \"\u043c\u0435\u0441\u044f\u0446\/\u0434\u0435\u043d\u044c\/\u0433\u043e\u0434\".\n  "},"jdtojewish":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0447\u0438\u0441\u043b\u043e \u0434\u043d\u0435\u0439 \u0432 \u042e\u043b\u0438\u0430\u043d\u0441\u043a\u043e\u043c \u043b\u0435\u0442\u043e\u0438\u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0438 \u0432 \u0434\u0430\u0442\u0443 \u043f\u043e \n   \u0418\u0443\u0434\u0435\u0439\u0441\u043a\u043e\u043c\u0443 \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044e\n  ","syntax":"\n   string <b>jdtojewish<\/b>\n    ( int $juliandaycount\n   [, bool $hebrew = false\n   [, int $fl = 0\n  ]] )","desc":"\n   \u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0447\u0438\u0441\u043b\u043e \u0434\u043d\u0435\u0439 \u0432 \u042e\u043b\u0438\u0430\u043d\u0441\u043a\u043e\u043c \u043b\u0435\u0442\u043e\u0438\u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0438 \u0432 \u0434\u0430\u0442\u0443 \u043f\u043e \n   \u0418\u0443\u0434\u0435\u0439\u0441\u043a\u043e\u043c\u0443 \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044e.\n  "},"JDToJulian":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0447\u0438\u0441\u043b\u043e \u0434\u043d\u0435\u0439 \u0432 \u042e\u043b\u0438\u0430\u043d\u0441\u043a\u043e\u043c \u043b\u0435\u0442\u043e\u0438\u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0438 \u0432 \u0434\u0430\u0442\u0443 \u043f\u043e \n   \u042e\u043b\u0438\u0430\u043d\u0441\u043a\u043e\u043c\u0443 \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044e\n  ","syntax":"\n   string jdtojulian\n    ( int $julianday\n   )","desc":"\n   \u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0447\u0438\u0441\u043b\u043e \u0434\u043d\u0435\u0439 \u0432 \u042e\u043b\u0438\u0430\u043d\u0441\u043a\u043e\u043c \u043b\u0435\u0442\u043e\u0438\u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0438 \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 \n   \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0443\u044e \u0434\u0430\u0442\u0443 \u043f\u043e \u042e\u043b\u0438\u0430\u043d\u0441\u043a\u043e\u043c\u0443 \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044e \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \"\u043c\u0435\u0441\u044f\u0446\/\u0434\u0435\u043d\u044c\/\u0433\u043e\u0434\".\n  "},"jdtounix":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0447\u0438\u0441\u043b\u043e \u0434\u043d\u0435\u0439 \u0432 \u042e\u043b\u0438\u0430\u043d\u0441\u043a\u043e\u043c \u043b\u0435\u0442\u043e\u0438\u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0438 \u0432 \u043c\u0435\u0442\u043a\u0443 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 Unix\n  ","syntax":"\n   int <b>jdtounix<\/b>\n    ( int $jday\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u0435\u0440\u043d\u0435\u0442 \u043c\u0435\u0442\u043a\u0443 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 Unix \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0443\u044e \u043d\u043e\u043c\u0435\u0440\u0443 \u0434\u043d\u044f \u0432 \n   \u042e\u043b\u0438\u0430\u043d\u0441\u043a\u043e\u043c \u043b\u0435\u0442\u043e\u0438\u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0438, \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0432 jday \n   \u043b\u0438\u0431\u043e FALSE, \u0435\u0441\u043b\u0438 jday \u043b\u0435\u0436\u0438\u0442 \u0437\u0430 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u043c\u0438 \n   \u044d\u043f\u043e\u0445\u0438 Unix (\u0433\u043e\u0434\u044b \u043f\u043e \u0413\u0440\u0438\u0433\u043e\u0440\u0438\u0430\u043d\u0441\u043a\u043e\u043c\u0443 \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044e \u043c\u0435\u0436\u0434\u0443 1970 \u0438 2037 \u0438\u043b\u0438\n   2440588 <= jday <= 2465342 ). \u0411\u0443\u0434\u0435\u0442 \n   \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u043e \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f (\u043d\u0435 GMT).\n  "},"JewishToJD":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0434\u0430\u0442\u0443 \u043f\u043e \u0418\u0443\u0434\u0435\u0439\u0441\u043a\u043e\u043c\u0443 \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044e \u0432 \u0447\u0438\u0441\u043b\u043e \u0434\u043d\u0435\u0439 \u0432 \u042e\u043b\u0438\u0430\u043d\u0441\u043a\u043e\u043c \n   \u043b\u0435\u0442\u043e\u0438\u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0438\n  ","syntax":"\n   int jewishtojd\n    ( int $month\n   , int $day\n   , int $year\n   )","desc":"\n   \u041d\u0435\u0441\u043c\u043e\u0442\u0440\u044f \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u0434\u0430\u0442\u044b \u0432\u043f\u043b\u043e\u0442\u044c \u0434\u043e 1-\u0433\u043e \u0433\u043e\u0434\u0430 \n   (3761 \u0434\u043e \u043d.\u044d.), \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043b\u044f \u0442\u0430\u043a\u0438\u0445 \u0440\u0430\u043d\u043d\u0438\u0445 \u0434\u0430\u0442 \u043d\u0435 \n   \u0438\u043c\u0435\u0435\u0442 \u0441\u043c\u044b\u0441\u043b\u0430. \u0418\u0443\u0434\u0435\u0439\u0441\u043a\u0438\u0439 \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0441\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0442\u044b\u0441\u044f\u0447 \u043b\u0435\u0442, \u043d\u043e \n   \u0434\u0430\u0432\u043d\u0438\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0430 \u043d\u0435 \u0431\u044b\u043b\u043e \u0444\u043e\u0440\u043c\u0443\u043b\u044b \u0434\u043b\u044f \u0440\u0430\u0441\u0447\u0435\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 \u043c\u0435\u0441\u044f\u0446\u0430. \u041d\u043e\u0432\u044b\u0439 \u043c\u0435\u0441\u044f\u0446\n   \u043d\u0430\u0447\u0438\u043d\u0430\u043b\u0441\u044f \u0441 \u0442\u043e\u0433\u043e \u043c\u043e\u043c\u0435\u043d\u0442\u0430 \u043a\u0430\u043a \u0432\u043f\u0435\u0440\u0432\u044b\u0435 \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u043b\u0443\u043d\u0443.\n  "},"join":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  implode()","syntax":"","desc":""},"jpeg2wbmp":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0438\u0437 \u0444\u043e\u0440\u043c\u0430\u0442\u0430 JPEG \u0432 WBMP","syntax":"\n   bool <b>jpeg2wbmp<\/b>\n    ( string $jpegname\n   , string $wbmpname\n   , int $dest_height\n   , int $dest_width\n   , int $threshold\n   )","desc":"\n   \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 JPEG-\u0444\u0430\u0439\u043b \u0432 WBMP.\n  "},"json_decode":{"version":"(PHP 5 >= 5.2.0, PECL json >= 1.2.0)","shortdesc":"\u0414\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 JSON \u0441\u0442\u0440\u043e\u043a\u0443","syntax":"\n   mixed <b>json_decode<\/b>\n    ( string $json\n   [, bool $assoc = false\n   [, int $depth = 512\n   [, int $options = 0\n  ]]] )","desc":"\n   \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0432 JSON \u0441\u0442\u0440\u043e\u043a\u0443 \u0438 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0435\u0435 \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e PHP.\n  "},"json_encode":{"version":"(PHP 5 >= 5.2.0, PECL json >= 1.2.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 JSON-\u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445","syntax":"\n   string <b>json_encode<\/b>\n    ( mixed $value\n   [, int $options = 0\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0443\u044e JSON-\u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \n   value.\n  "},"json_last_error_msg":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Returns the error string of the last json_encode() or json_decode() call","syntax":"\n   string <b>json_last_error_msg<\/b>\n    ( void\n   )","desc":"\n\n  "},"json_last_error":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u043e\u0448\u0438\u0431\u043a\u0443","syntax":"\n   int <b>json_last_error<\/b>\n    ( void\n   )","desc":"\n   \u0415\u0441\u043b\u0438 \u043f\u0440\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u043c JSON \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438\/\u0434\u0435\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u0432\u043e\u0437\u043d\u0438\u043a\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430, \u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0435\u0451 \u043a\u043e\u0434.\n  "},"judy_type":{"version":"(PECL judy >= 0.1.1)","shortdesc":"Return the type of a Judy array","syntax":"\n   int <b>judy_type<\/b>\n    ( Judy $array\n   )","desc":"\n    judy_type() return an integer corresponding to the Judy \n   type of the specified Judy array.\n  "},"judy_version":{"version":"(PECL judy >= 0.1.1)","shortdesc":"Return or print the current PHP Judy version","syntax":"\n   string <b>judy_version<\/b>\n    ( void\n   )","desc":"\n   Return a string of the PHP Judy version. If the return value is not used, the string will be printed.\n  "},"JulianToJD":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0434\u0430\u0442\u0443 \u043f\u043e \u042e\u043b\u0438\u0430\u043d\u0441\u043a\u043e\u043c\u0443 \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044e \u0432 \u0447\u0438\u0441\u043b\u043e \u0434\u043d\u0435\u0439 \u0432 \u042e\u043b\u0438\u0430\u043d\u0441\u043a\u043e\u043c \n   \u043b\u0435\u0442\u043e\u0438\u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0438\n  ","syntax":"\n   int juliantojd\n    ( int $month\n   , int $day\n   , int $year\n   )","desc":"\n   \u0414\u0438\u0430\u043f\u0430\u0437\u043e\u043d \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0445 \u0434\u0430\u0442 \u0434\u043b\u044f \u042e\u043b\u0438\u0430\u043d\u0441\u043a\u043e\u0433\u043e \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044f: \u0441 4713 \u0433\u043e\u0434\u0430 \u0434\u043e \u043d.\u044d.\n   \u043f\u043e 9999 \u0433\u043e\u0434 \u043d.\u044d.\n  "},"kadm5_chpass_principal":{"version":"(PECL kadm5 >= 0.2.3)","shortdesc":"Changes the principal's password","syntax":"\n   bool <b>kadm5_chpass_principal<\/b>\n    ( resource $handle\n   , string $principal\n   , string $password\n   )","desc":"\n    kadm5_chpass_principal() sets the new password\n   password for the principal.\n  "},"kadm5_create_principal":{"version":"(PECL kadm5 >= 0.2.3)","shortdesc":"Creates a kerberos principal with the given parameters","syntax":"\n   bool <b>kadm5_create_principal<\/b>\n    ( resource $handle\n   , string $principal\n   [, string $password\n   [, array $options\n  ]] )","desc":"\n   Creates a principal with the given\n   password.\n  "},"kadm5_delete_principal":{"version":"(PECL kadm5 >= 0.2.3)","shortdesc":"Deletes a kerberos principal","syntax":"\n   bool <b>kadm5_delete_principal<\/b>\n    ( resource $handle\n   , string $principal\n   )","desc":"\n   Removes the principal from the Kerberos database.\n  "},"kadm5_destroy":{"version":"(PECL kadm5 >= 0.2.3)","shortdesc":"Closes the connection to the admin server and releases all related resources","syntax":"\n   bool <b>kadm5_destroy<\/b>\n    ( resource $handle\n   )","desc":"\n   Closes the connection to the admin server and releases all related\n   resources.\n  "},"kadm5_flush":{"version":"(PECL kadm5 >= 0.2.3)","shortdesc":"Flush all changes to the Kerberos database","syntax":"\n   bool <b>kadm5_flush<\/b>\n    ( resource $handle\n   )","desc":"\n   Flush all changes to the Kerberos database, leaving the connection to the\n   Kerberos admin server open.\n  "},"kadm5_get_policies":{"version":"(PECL kadm5 >= 0.2.3)","shortdesc":"Gets all policies from the Kerberos database","syntax":"\n   array <b>kadm5_get_policies<\/b>\n    ( resource $handle\n   )","desc":"\n   Gets an array containing the policies's names.\n  "},"kadm5_get_principal":{"version":"(PECL kadm5 >= 0.2.3)","shortdesc":"Gets the principal's entries from the Kerberos database","syntax":"\n   array <b>kadm5_get_principal<\/b>\n    ( resource $handle\n   , string $principal\n   )","desc":"\n   Gets the principal's entries from the Kerberos database.\n  "},"kadm5_get_principals":{"version":"(PECL kadm5 >= 0.2.3)","shortdesc":"Gets all principals from the Kerberos database","syntax":"\n   array <b>kadm5_get_principals<\/b>\n    ( resource $handle\n   )","desc":"\n    kadm5_get_principals() returns an array containing the\n   principals's names.\n  "},"kadm5_init_with_password":{"version":"(PECL kadm5 >= 0.2.3)","shortdesc":"Opens a connection to the KADM5 library","syntax":"\n   resource <b>kadm5_init_with_password<\/b>\n    ( string $admin_server\n   , string $realm\n   , string $principal\n   , string $password\n   )","desc":"\n   Opens a connection with the KADM5 library using the\n   principal and the given\n   password to obtain initial credentials from the\n   admin_server.\n  "},"kadm5_modify_principal":{"version":"(PECL kadm5 >= 0.2.3)","shortdesc":"Modifies a kerberos principal with the given parameters","syntax":"\n   bool <b>kadm5_modify_principal<\/b>\n    ( resource $handle\n   , string $principal\n   , array $options\n   )","desc":"\n   Modifies a principal according to the given\n   options.\n  "},"key_exists":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  array_key_exists()","syntax":"","desc":""},"key":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u043a\u043b\u044e\u0447 \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430","syntax":"\n   mixed <b>key<\/b>\n    ( array &$array\n   )","desc":"\n    key() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0434\u0435\u043a\u0441 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u0430.\n  "},"krsort":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u043f\u043e \u043a\u043b\u044e\u0447\u0430\u043c \u0432 \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435","syntax":"\n   bool <b>krsort<\/b>\n    ( array &$array\n   [, int $sort_flags = SORT_REGULAR\n  ] )","desc":"\n   \u0421\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u043f\u043e \u043a\u043b\u044e\u0447\u0430\u043c \u0432 \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435, \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044f \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u044f \u043c\u0435\u0436\u0434\u0443 \u043a\u043b\u044e\u0447\u0430\u043c\u0438 \u0438\n   \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438. \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u043b\u0435\u0437\u043d\u0430, \u0432 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u043c, \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u044b\u043c\u0438 \u043c\u0430\u0441\u0441\u0438\u0432\u0430\u043c\u0438.\n  "},"ksort":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u043f\u043e \u043a\u043b\u044e\u0447\u0430\u043c","syntax":"\n   bool <b>ksort<\/b>\n    ( array &$array\n   [, int $sort_flags = SORT_REGULAR\n  ] )","desc":"\n   \u0421\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u043f\u043e \u043a\u043b\u044e\u0447\u0430\u043c, \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044f \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u044f \u043c\u0435\u0436\u0434\u0443 \u043a\u043b\u044e\u0447\u0430\u043c\u0438 \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438.\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u043b\u0435\u0437\u043d\u0430, \u0432 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u043c, \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u044b\u043c\u0438 \u043c\u0430\u0441\u0441\u0438\u0432\u0430\u043c\u0438.\n  "},"lcfirst":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u043f\u0435\u0440\u0432\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u043d\u0438\u0436\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440","syntax":"\n   string <b>lcfirst<\/b>\n    ( string $str\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 str, \u043f\u0435\u0440\u0432\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b\n   \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0431\u044b\u043b \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d \u0432 \u043d\u0438\u0436\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440, \u0435\u0441\u043b\u0438 \u044d\u0442\u043e\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\n   \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0431\u0443\u043a\u0432\u043e\u0439.\n  "},"lcg_value":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041a\u043e\u043c\u0431\u0438\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043b\u0438\u043d\u0435\u0439\u043d\u043e \u043a\u043e\u043d\u0433\u0440\u0443\u044d\u043d\u0442\u043d\u044b\u0439 \u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440","syntax":"\n    float <b>lcg_value<\/b>\n     ( void\n    )","desc":"\n    lcg_value() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0441\u0435\u0432\u0434\u043e\u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\n   \u0432 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0435(0, 1).  \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u043e\u043c\u0431\u0438\u043d\u0438\u0440\u0443\u0435\u0442 \u0434\u0432\u0430 \u041a\u0413 \u0441 \u043f\u0435\u0440\u0438\u043e\u0434\u0430\u043c\u0438\n   2^31 - 85 \u0438 2^31 - 249. \u041f\u0435\u0440\u0438\u043e\u0434 \u044d\u0442\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0440\u0430\u0432\u0435\u043d\n   \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u044e \u0431\u0430\u0437\u043e\u0432\u044b\u0445.\n  "},"lchgrp":{"version":"(PHP 5 >= 5.1.2)","shortdesc":"\u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u0433\u0440\u0443\u043f\u043f\u0443, \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0438\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0441\u0441\u044b\u043b\u043a\u0430","syntax":"\n   bool <b>lchgrp<\/b>\n    ( string $filename\n   , mixed $group\n   )","desc":"\n   \u041f\u044b\u0442\u0430\u0435\u0442\u0441\u044f \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0433\u0440\u0443\u043f\u043f\u0443, \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0438\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0441\u0441\u044b\u043b\u043a\u0430 filename\n   \u043d\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u0432 group.\n  "},"lchown":{"version":"(PHP 5 >= 5.1.2)","shortdesc":"\u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u0441\u0438\u043c\u0432\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0441\u0441\u044b\u043b\u043a\u0438","syntax":"\n   bool <b>lchown<\/b>\n    ( string $filename\n   , mixed $user\n   )","desc":"\n   \u041f\u044b\u0442\u0430\u0435\u0442\u0441\u044f \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u0441\u0438\u043c\u0432\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0441\u0441\u044b\u043b\u043a\u0438 filename\n   \u043d\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0432 user \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n  "},"ldap_8859_to_t61":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0438\u0437 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 ISO-8859 \u0432 t61","syntax":"\n   string <b>ldap_8859_to_t61<\/b>\n    ( string $value\n   )","desc":"\n   \u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0438\u0437 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 ISO-8859 \u0432 t61.\n  "},"ldap_add":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u044c \u0432 LDAP \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e","syntax":"\n   bool <b>ldap_add<\/b>\n    ( resource $link_identifier\n   , string $dn\n   , array $entry\n   )","desc":"\n   \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u044c \u0432 LDAP \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e. \n  "},"ldap_bind":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u0438\u0432\u044f\u0437\u0430\u0442\u044c \u043a LDAP \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438","syntax":"\n   bool <b>ldap_bind<\/b>\n    ( resource $link_identifier\n   [, string $bind_rdn = NULL\n   [, string $bind_password = NULL\n  ]] )","desc":"\n   \u0421\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u0441 LDAP \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0435\u0439 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c RDN \u0438 \u043f\u0430\u0440\u043e\u043b\u0435\u043c.\n  "},"ldap_close":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  ldap_unbind()","syntax":"","desc":""},"ldap_compare":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u0421\u0440\u0430\u0432\u043d\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430, \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u043e\u0433\u043e \u0432 \u0437\u0430\u043f\u0438\u0441\u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0439 DN","syntax":"\n   mixed <b>ldap_compare<\/b>\n    ( resource $link_identifier\n   , string $dn\n   , string $attribute\n   , string $value\n   )","desc":"\n   \u0421\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 (value) \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430 (attribute)\n   \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u0442\u043e\u0433\u043e \u0436\u0435 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430 \u0432 \u0437\u0430\u043f\u0438\u0441\u0438 LDAP \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438.\n  "},"ldap_connect":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u0441\u044f  \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443 LDAP","syntax":"\n   resource <b>ldap_connect<\/b>\n    ([ string $hostname = NULL\n   [, int $port = 389\n  ]] )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c LDAP, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u044b\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438\n   hostname \u0438 port.\n  "},"ldap_control_paged_result_response":{"version":"(PHP 5 >= 5.4.0)","shortdesc":"Retrieve the LDAP pagination cookie","syntax":"\n   bool <b>ldap_control_paged_result_response<\/b>\n    ( resource $link\n   , resource $result\n   [, string &$cookie\n   [, int &$estimated\n  ]] )","desc":"\n   Retrieve the pagination information send by the server.\n  "},"ldap_control_paged_result":{"version":"(PHP 5 >= 5.4.0)","shortdesc":"Send LDAP pagination control","syntax":"\n   bool <b>ldap_control_paged_result<\/b>\n    ( resource $link\n   , int $pagesize\n   [, bool $iscritical = false\n   [, string $cookie = \"\"\n  ]] )","desc":"\n   Enable LDAP pagination by sending the pagination control (page size, cookie...).\n  "},"ldap_count_entries":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u0441\u0447\u0438\u0442\u0430\u0442\u044c \u0447\u0438\u0441\u043b\u043e \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u0445 \u043f\u043e\u0438\u0441\u043a\u0430","syntax":"\n   int <b>ldap_count_entries<\/b>\n    ( resource $link_identifier\n   , resource $result_identifier\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u0437\u0430\u043f\u0438\u0441\u0435\u0439, \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u043d\u044b\u0445 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0439\n   \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u0438\u0441\u043a\u0430.\n  "},"ldap_delete":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u044c \u0438\u0437 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 LDAP","syntax":"\n   bool <b>ldap_delete<\/b>\n    ( resource $link_identifier\n   , string $dn\n   )","desc":"\n   \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u0437 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 LDAP.\n  "},"ldap_dn2ufn":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c DN \u0432 \u0443\u0434\u043e\u0431\u043d\u044b\u0439 \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0444\u043e\u0440\u043c\u0430\u0442 \u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u044f","syntax":"\n   string <b>ldap_dn2ufn<\/b>\n    ( string $dn\n   )","desc":"\n   \u041f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 dn \u0432 \u0431\u043e\u043b\u0435\u0435 \u0443\u0434\u043e\u0431\u043d\u0443\u044e \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0444\u043e\u0440\u043c\u0443, \u0441\u043d\u0438\u043c\u0430\u044f \u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e \u0441 \u0438\u043c\u0435\u043d \u0442\u0438\u043f\u043e\u0432.\n  "},"ldap_err2str":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u0434 \u043e\u0448\u0438\u0431\u043a\u0438 LDAP \u0432 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435","syntax":"\n   string <b>ldap_err2str<\/b>\n    ( int $errno\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435, \u043e\u0431\u044a\u044f\u0441\u043d\u044f\u044e\u0449\u0435\u0435 \u043a\u043e\u0434 \u043e\u0448\u0438\u0431\u043a\u0438\n   errno. \u0412 \u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043a\u0430\u043a LDAP \u0447\u0438\u0441\u043b\u0430 errno \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u044b,\n   \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442 \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0449\u0438\u0435\u0441\u044f \u0438\u043b\u0438 \u0434\u0430\u0436\u0435 \u043b\u043e\u043a\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0435\n   \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0430\u0445. \u041d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0439\u0442\u0435 \u043d\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439\n   \u0442\u0435\u043a\u0441\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435, \u0432\u0441\u0435\u0433\u0434\u0430 \u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435\u0441\u044c \u043a\u043e\u0434\u0430\u043c\u0438 \u043e\u0448\u0438\u0431\u043e\u043a \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438.\n  "},"ldap_errno":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0442\u0438\u0442\u044c \u043d\u043e\u043c\u0435\u0440 \u043e\u0448\u0438\u0431\u043a\u0438 LDAP \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043a\u043e\u043c\u0430\u043d\u0434\u044b","syntax":"\n   int <b>ldap_errno<\/b>\n    ( resource $link_identifier\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043a\u043e\u0434 \u043e\u0448\u0438\u0431\u043a\u0438, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u043d\u044b\u0439 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439 LDAP.\n   \u042d\u0442\u043e \u0447\u0438\u0441\u043b\u043e \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u043e \u0432 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f\n    ldap_err2str().\n  "},"ldap_error":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0442\u0438\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435 LDAP \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043a\u043e\u043c\u0430\u043d\u0434\u044b","syntax":"\n   string <b>ldap_error<\/b>\n    ( resource $link_identifier\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435, \u043e\u0431\u044a\u044f\u0441\u043d\u044f\u044f \u043e\u0448\u0438\u0431\u043a\u0443, \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \n   \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439 LDAP \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0430 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f link_identifier.\n   \u0412 \u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043a\u0430\u043a LDAP errno \u0447\u0438\u0441\u043b\u0430 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u044b, \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442 \n   \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0449\u0438\u0439\u0441\u044f \u0438\u043b\u0438 \u0434\u0430\u0436\u0435 \u043b\u043e\u043a\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0430\u0445. \u041d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0439\u0442\u0435\n   \u043d\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435, \u0432\u0441\u0435\u0433\u0434\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043a\u043e\u0434\u0430\u043c\u0438 \u043e\u0448\u0438\u0431\u043e\u043a \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438.\n  "},"ldap_explode_dn":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0420\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c DN \u043d\u0430 \u0435\u0433\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u043d\u044b\u0435 \u0447\u0430\u0441\u0442\u0438","syntax":"\n   array <b>ldap_explode_dn<\/b>\n    ( string $dn\n   , int $with_attrib\n   )","desc":"\n   \u0420\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u0442 DN, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u043d\u044b\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439  ldap_get_dn(), \u0438 \u0440\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u0442 \u0435\u0433\u043e\n   \u043d\u0430 \u0441\u043e\u0441\u0442\u0430\u0432\u043d\u044b\u0435 \u0447\u0430\u0441\u0442\u0438. \u041a\u0430\u0436\u0434\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430 \u043a\u0430\u043a \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u043e\u0442\u043b\u0438\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0438\u043c\u044f\n   \u0438\u043b\u0438 RDN.\n  "},"ldap_first_attribute":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u0435\u0440\u043d\u0443\u0442\u044c \u043f\u0435\u0440\u0432\u044b\u0439 \u0430\u0442\u0440\u0438\u0431\u0443\u0442","syntax":"\n   string <b>ldap_first_attribute<\/b>\n    ( resource $link_identifier\n   , resource $result_entry_identifier\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043f\u0435\u0440\u0432\u044b\u0439 \u0430\u0442\u0440\u0438\u0431\u0443\u0442 \u0432 \u0434\u0430\u043d\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438. \u041e\u0441\u0442\u0430\u044e\u0449\u0438\u0435\u0441\u044f \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u044e\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0432\u044b\u0437\u043e\u0432\u043e\u043c \n  ldap_next_attribute().\n  "},"ldap_first_entry":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0442\u0438\u0442\u044c \u043f\u0435\u0440\u0432\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 first result id","syntax":"\n   resource <b>ldap_first_entry<\/b>\n    ( resource $link_identifier\n   , resource $result_identifier\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0434\u043b\u044f \u043f\u0435\u0440\u0432\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435. \n   \u042d\u0442\u043e\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0437\u0430\u0442\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  ldap_next_entry(), \n   \u0434\u043b\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430.\n   "},"ldap_first_reference":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0435\u0440\u0432\u0443\u044e \u0441\u043f\u0440\u0430\u0432\u043a\u0443","syntax":"\n   resource <b>ldap_first_reference<\/b>\n    ( resource $link\n   , resource $result\n   )","desc":""},"ldap_free_result":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0441\u0432\u043e\u0431\u043e\u0434\u0438\u0442\u044c \u043f\u0430\u043c\u044f\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430","syntax":"\n   bool <b>ldap_free_result<\/b>\n    ( resource $result_identifier\n   )","desc":"\n   \u041e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u0435\u0442 \u043f\u0430\u043c\u044f\u0442\u044c, \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435 \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u043d\u0443\u044e \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430. \n   \u0412\u0441\u044f \u043f\u0430\u043c\u044f\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0431\u0443\u0434\u0435\u0442 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0435\u043d\u0430, \u043a\u043e\u0433\u0434\u0430 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0439 \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u0441\u044f.\n  "},"ldap_get_attributes":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b \u0438\u0437 \u0437\u0430\u043f\u0438\u0441\u0438 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u0445 \u043f\u043e\u0438\u0441\u043a\u0430","syntax":"\n   array <b>ldap_get_attributes<\/b>\n    ( resource $link_identifier\n   , resource $result_entry_identifier\n   )","desc":"\n   \u0427\u0438\u0442\u0430\u0435\u0442 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438\u0437 \u0437\u0430\u043f\u0438\u0441\u0438 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u0445 \u043f\u043e\u0438\u0441\u043a\u0430. \n  "},"ldap_get_dn":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c DN \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0438\u0440\u0443\u044e\u0449\u0435\u0439 \u0437\u0430\u043f\u0438\u0441\u0438","syntax":"\n   string <b>ldap_get_dn<\/b>\n    ( resource $link_identifier\n   , resource $result_entry_identifier\n   )","desc":"\n   \u041e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u0442\u044c DN \u0437\u0430\u043f\u0438\u0441\u0438 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435.\n  "},"ldap_get_entries":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0432\u0441\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430","syntax":"\n   array <b>ldap_get_entries<\/b>\n    ( resource $link_identifier\n   , resource $result_identifier\n   )","desc":"\n   \u0427\u0438\u0442\u0430\u0435\u0442 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u0437 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430, \u0438 \u0437\u0430\u0442\u0435\u043c \u0447\u0438\u0442\u0430\u0435\u0442\n   \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b \u0438 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.\n  "},"ldap_get_option":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u043e\u0439 \u043e\u043f\u0446\u0438\u0438","syntax":"\n   bool <b>ldap_get_option<\/b>\n    ( resource $link_identifier\n   , int $option\n   , mixed &$retval\n   )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 retval \u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u043e\u043f\u0446\u0438\u0438.\n  "},"ldap_get_values_len":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0441\u0435 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438\u0437 \u0437\u0430\u043f\u0438\u0441\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430","syntax":"\n   array <b>ldap_get_values_len<\/b>\n    ( resource $link_identifier\n   , resource $result_entry_identifier\n   , string $attribute\n   )","desc":"\n   \u0427\u0438\u0442\u0430\u0435\u0442 \u0432\u0441\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430 \u0432 \u0437\u0430\u043f\u0438\u0441\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430.\n  "},"ldap_get_values":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0432\u0441\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438\u0437 \u0437\u0430\u043f\u0438\u0441\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430","syntax":"\n   array <b>ldap_get_values<\/b>\n    ( resource $link_identifier\n   , resource $result_entry_identifier\n   , string $attribute\n   )","desc":"\n   \u0427\u0438\u0442\u0430\u0435\u0442 \u0432\u0441\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430 \u0432 \u0437\u0430\u043f\u0438\u0441\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430.\n  "},"ldap_list":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0434\u043d\u043e\u0443\u0440\u043e\u0432\u043d\u0435\u0432\u044b\u0439 \u043f\u043e\u0438\u0441\u043a","syntax":"\n   resource <b>ldap_list<\/b>\n    ( resource $link_identifier\n   , string $base_dn\n   , string $filter\n   [, array $attributes\n   [, int $attrsonly\n   [, int $sizelimit\n   [, int $timelimit\n   [, int $deref\n  ]]]]] )","desc":"\n   \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043f\u043e\u0438\u0441\u043a \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e filter \u0432\n   \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 LDAP_SCOPE_ONELEVEL.\n  "},"ldap_mod_add":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430 \u043a \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430\u043c","syntax":"\n   bool <b>ldap_mod_add<\/b>\n    ( resource $link_identifier\n   , string $dn\n   , array $entry\n   )","desc":"\n   \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0434\u0438\u043d \u0438\u043b\u0438 \u0431\u043e\u043b\u0435\u0435 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432 \u043a \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 dn.\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e \u043d\u0430 \u0443\u0440\u043e\u0432\u043d\u0435 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430, \u0430 \u043d\u0435 \u043d\u0430 \u0443\u0440\u043e\u0432\u0435\u043d\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432. \n   \u041d\u0430 \u0443\u0440\u043e\u0432\u043d\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439  ldap_add().\n  "},"ldap_mod_del":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430 \u0438\u0437 \u0442\u0435\u043a\u0443\u0449\u0438\u0445 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432","syntax":"\n   bool <b>ldap_mod_del<\/b>\n    ( resource $link_identifier\n   , string $dn\n   , array $entry\n   )","desc":"\n   \u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043e\u0434\u0438\u043d \u0438\u043b\u0438 \u0431\u043e\u043b\u0435\u0435 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432 \u0438\u0437 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e dn.\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e \u043d\u0430 \u0443\u0440\u043e\u0432\u043d\u0435 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430, \u0430 \u043d\u0435 \u043d\u0430 \u0443\u0440\u043e\u0432\u0435\u043d\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432. \n   \u041d\u0430 \u0443\u0440\u043e\u0432\u043d\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439  ldap_delete().\n  "},"ldap_mod_replace":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0417\u0430\u043c\u0435\u043d\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432 \u043d\u0430 \u043d\u043e\u0432\u044b\u0435","syntax":"\n   bool <b>ldap_mod_replace<\/b>\n    ( resource $link_identifier\n   , string $dn\n   , array $entry\n   )","desc":"\n   \u0417\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u043e\u0434\u0438\u043d \u0438\u043b\u0438 \u0431\u043e\u043b\u0435\u0435 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432 \u0438\u0437 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e dn.\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e \u043d\u0430 \u0443\u0440\u043e\u0432\u043d\u0435 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430, \u0430 \u043d\u0435 \u043d\u0430 \u0443\u0440\u043e\u0432\u0435\u043d\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432. \n   \u041d\u0430 \u0443\u0440\u043e\u0432\u043d\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439  ldap_modify().\n  "},"ldap_modify":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c LDAP \u0437\u0430\u043f\u0438\u0441\u044c","syntax":"\n   bool <b>ldap_modify<\/b>\n    ( resource $link_identifier\n   , string $dn\n   , array $entry\n   )","desc":"\n   \u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u0432 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0435 LDAP.\n   \u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0442\u0430\u043a\u0430\u044f \u0436\u0435, \u043a\u0430\u043a \u0438 \u0432  ldap_add().\n  "},"ldap_next_attribute":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0430\u0442\u0440\u0438\u0431\u0443\u0442 \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430","syntax":"\n   string <b>ldap_next_attribute<\/b>\n    ( resource $link_identifier\n   , resource $result_entry_identifier\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b \u0437\u0430\u043f\u0438\u0441\u0438. \u041f\u0435\u0440\u0432\u044b\u0439 \u0432\u044b\u0437\u043e\u0432  ldap_next_attribute()\n   \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c result_entry_identifier,\n   \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f  ldap_first_attribute().\n  "},"ldap_next_entry":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0437\u0430\u043f\u0438\u0441\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430","syntax":"\n   resource <b>ldap_next_entry<\/b>\n    ( resource $link_identifier\n   , resource $result_entry_identifier\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u0438, \u0445\u0440\u0430\u043d\u044f\u0449\u0438\u0435\u0441\u044f \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435. \u041f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0432\u044b\u0437\u043e\u0432\u044b  ldap_next_entry()\n   \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442 \u043f\u043e \u043e\u0434\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438, \u043f\u043e\u043a\u0430 \u043d\u0435 \u043e\u0441\u0442\u0430\u043d\u0435\u0442\u0441\u044f \u0431\u043e\u043b\u044c\u0448\u0435 \u0437\u0430\u043f\u0438\u0441\u0435\u0439.\n   \u041f\u0435\u0440\u0432\u044b\u0439 \u0432\u044b\u0437\u043e\u0432  ldap_next_entry() \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0441\u044f\n   \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u0437\u043e\u0432\u0430  ldap_first_entry() \u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c\n   result_entry_identifier, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u044b\u043b \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0451\u043d  ldap_first_entry().\n  "},"ldap_next_reference":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0441\u043f\u0440\u0430\u0432\u043a\u0443","syntax":"\n   resource <b>ldap_next_reference<\/b>\n    ( resource $link\n   , resource $entry\n   )","desc":""},"ldap_parse_reference":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\u0418\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0438\u0437 \u0441\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u0438\u043a\u0430","syntax":"\n   bool <b>ldap_parse_reference<\/b>\n    ( resource $link\n   , resource $entry\n   , array &$referrals\n   )","desc":""},"ldap_parse_result":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\u0418\u0437\u0432\u043b\u0435\u0447\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430","syntax":"\n   bool <b>ldap_parse_result<\/b>\n    ( resource $link\n   , resource $result\n   , int &$errcode\n   [, string &$matcheddn\n   [, string &$errmsg\n   [, array &$referrals\n  ]]] )","desc":""},"ldap_read":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0427\u0438\u0442\u0430\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u044c","syntax":"\n   resource <b>ldap_read<\/b>\n    ( resource $link_identifier\n   , string $base_dn\n   , string $filter\n   [, array $attributes\n   [, int $attrsonly\n   [, int $sizelimit\n   [, int $timelimit\n   [, int $deref\n  ]]]]] )","desc":"\n   \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043f\u043e\u0438\u0441\u043a \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e filter \u0432\n   \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 LDAP_SCOPE_BASE.\n   \u042d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442\u043d\u043e \u0447\u0442\u0435\u043d\u0438\u044e \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u0437 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438.\n  "},"ldap_rename":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0438\u043c\u044f \u0437\u0430\u043f\u0438\u0441\u0438","syntax":"\n   bool <b>ldap_rename<\/b>\n    ( resource $link_identifier\n   , string $dn\n   , string $newrdn\n   , string $newparent\n   , bool $deleteoldrdn\n   )","desc":"\n   \u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435\/\u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u0437\u0430\u043f\u0438\u0441\u0438, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0439 dn.\n  "},"ldap_sasl_bind":{"version":"(PHP 5)","shortdesc":"\u041f\u0440\u0438\u0432\u044f\u0437\u0430\u0442\u044c \u043a LDAP \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f SASL","syntax":"\n   bool <b>ldap_sasl_bind<\/b>\n    ( resource $link\n   [, string $binddn = NULL\n   [, string $password = NULL\n   [, string $sasl_mech = NULL\n   [, string $sasl_realm = NULL\n   [, string $sasl_authc_id = NULL\n   [, string $sasl_authz_id = NULL\n   [, string $props = NULL\n  ]]]]]]] )","desc":""},"ldap_search":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u0438\u0441\u043a \u043f\u043e LDAP \u0434\u0435\u0440\u0435\u0432\u0443","syntax":"\n   resource <b>ldap_search<\/b>\n    ( resource $link_identifier\n   , string $base_dn\n   , string $filter\n   [, array $attributes\n   [, int $attrsonly\n   [, int $sizelimit\n   [, int $timelimit\n   [, int $deref\n  ]]]]] )","desc":"\n   \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043f\u043e\u0438\u0441\u043a \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0444\u0438\u043b\u044c\u0442\u0440\u0430 \u0432 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0441 \u0433\u0440\u0430\u043d\u0438\u0446\u0430\u043c\u0438\n   LDAP_SCOPE_SUBTREE. \u042d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442\u043d\u043e \u043f\u043e\u0438\u0441\u043a\u0443 \u043f\u043e \u0432\u0441\u0435\u043c\u0443 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0443.\n  "},"ldap_set_option":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u043e\u0439 \u043e\u043f\u0446\u0438\u0438","syntax":"\n   bool <b>ldap_set_option<\/b>\n    ( resource $link_identifier\n   , int $option\n   , mixed $newval\n   )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u043e\u043f\u0446\u0438\u0438 \u0432 newval.\n  "},"ldap_set_rebind_proc":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0432\u044b\u0437\u043e\u0432\u0430 \u0434\u043b\u044f \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e\u0433\u043e \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u043d\u0438\u044f \u043f\u0440\u0438 \u0441\u0441\u044b\u043b\u043e\u0447\u043d\u043e\u043c \u043f\u043e\u0438\u0441\u043a\u0435","syntax":"\n   bool <b>ldap_set_rebind_proc<\/b>\n    ( resource $link\n   , callable $callback\n   )","desc":""},"ldap_sort":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0421\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u0438 LDAP","syntax":"\n   bool <b>ldap_sort<\/b>\n    ( resource $link\n   , resource $result\n   , string $sortfilter\n   )","desc":"\n   \u0421\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 LDAP, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439\n    ldap_search().\n  "},"ldap_start_tls":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 TLS","syntax":"\n   bool <b>ldap_start_tls<\/b>\n    ( resource $link\n   )","desc":""},"ldap_t61_to_8859":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0438\u0437 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 t61 \u0432 ISO-8859","syntax":"\n   string <b>ldap_t61_to_8859<\/b>\n    ( string $value\n   )","desc":""},"ldap_unbind":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0420\u0430\u0437\u043e\u0440\u0432\u0430\u0442\u044c \u043f\u0440\u0438\u0432\u044f\u0437\u043a\u0443 \u043a \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 LDAP","syntax":"\n   bool <b>ldap_unbind<\/b>\n    ( resource $link_identifier\n   )","desc":"\n   \u0420\u0430\u0437\u0440\u044b\u0432\u0430\u0435\u0442 \u043f\u0440\u0438\u0432\u044f\u0437\u043a\u0443 \u043a LDAP-\u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438.\n  "},"levenshtein":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u041b\u0435\u0432\u0435\u043d\u0448\u0442\u0435\u0439\u043d\u0430 \u043c\u0435\u0436\u0434\u0443 \u0434\u0432\u0443\u043c\u044f \u0441\u0442\u0440\u043e\u043a\u0430\u043c\u0438","syntax":"\n   int <b>levenshtein<\/b>\n    ( string $str1\n   , string $str2\n   )\n\n   int <b>levenshtein<\/b>\n    ( string $str1\n   , string $str2\n   , int $cost_ins\n   , int $cost_rep\n   , int $cost_del\n   )\n","desc":"\n   \u0420\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u041b\u0435\u0432\u0435\u043d\u0448\u0442\u0435\u0439\u043d\u0430 - \u044d\u0442\u043e \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0441\u0442\u0430\u0432\u043e\u043a, \u0437\u0430\u043c\u0435\u043d \u0438\n   \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0439 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0435 \u0434\u043b\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f\n   str1 \u0432 str2.\n   \u0421\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \u0440\u0430\u0432\u043d\u0430 O(m*n),\n   \u0433\u0434\u0435 n \u0438 m - \u0434\u043b\u0438\u043d\u044b \u0441\u0442\u0440\u043e\u043a\n   str1 \u0438 str2 (\u043d\u0435\u043f\u043b\u043e\u0445\u043e \u043f\u043e\n   \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044e \u0441  similar_text(), \u0438\u043c\u0435\u044e\u0449\u0435\u0439 \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c O(max(n,m)**3),\n   \u043d\u043e \u0432\u0441\u0435 \u0436\u0435 \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u043e \u043c\u043d\u043e\u0433\u043e).\n  "},"libxml_clear_errors":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\n   \u041e\u0447\u0438\u0441\u0442\u043a\u0430 \u0431\u0443\u0444\u0435\u0440\u0430 \u043e\u0448\u0438\u0431\u043e\u043a libxml\n  ","syntax":"\n   void <b>libxml_clear_errors<\/b>\n    ( void\n   )","desc":"\n    libxml_clear_errors() \u043e\u0447\u0438\u0449\u0430\u0435\u0442 \u0431\u0443\u0444\u0435\u0440 \u043e\u0448\u0438\u0431\u043e\u043a libxml.\n  "},"libxml_disable_entity_loader":{"version":"(PHP 5 >= 5.2.11)","shortdesc":"\n   \u041e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439 \u0438\u0437 \u0432\u043d\u0435\u0448\u043d\u0438\u0445 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u043e\u0432\n  ","syntax":"\n   bool <b>libxml_disable_entity_loader<\/b>\n    ([ bool $disable = true\n  ] )","desc":"\n   \u041e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\/\u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438 \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0442\u044c \u0432\u043d\u0435\u0448\u043d\u0438\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438.\n  "},"libxml_get_errors":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u0435\u0434\u0448\u0438\u0445 \u043e\u0448\u0438\u0431\u043e\u043a\n  ","syntax":"\n   array <b>libxml_get_errors<\/b>\n    ( void\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u0435\u0434\u0448\u0438\u0445 \u043e\u0448\u0438\u0431\u043e\u043a.\n  "},"libxml_get_last_error":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\n   \u0418\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043e\u0448\u0438\u0431\u043a\u0438 \u0438\u0437 libxml\n  ","syntax":"\n   LibXMLError <b>libxml_get_last_error<\/b>\n    ( void\n   )","desc":"\n   \u0418\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043e\u0448\u0438\u0431\u043a\u0438 \u0438\u0437 libxml.\n  "},"libxml_set_external_entity_loader":{"version":"(PHP 5 >= 5.4.0)","shortdesc":"Changes the default external entity loader","syntax":"\n   void <b>libxml_set_external_entity_loader<\/b>\n    ( callable $resolver_function\n   )","desc":"\n   Changes the default external entity loader.\n  "},"libxml_set_streams_context":{"version":"(PHP 5)","shortdesc":"\n   \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u043f\u043e\u0442\u043e\u043a\u0430 \u0434\u043b\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0438\u043b\u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \n   \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u043e\u043c libxml\n  ","syntax":"\n   void <b>libxml_set_streams_context<\/b>\n    ( resource $streams_context\n   )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u043f\u043e\u0442\u043e\u043a\u0430 \u0434\u043b\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0438\u043b\u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \n   \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u043e\u043c libxml.\n  "},"libxml_use_internal_errors":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\n   \u041e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043e\u0448\u0438\u0431\u043e\u043a libxml \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0430 \u043f\u043e\u043b\u043d\u043e\u043c\u043e\u0447\u0438\u0439 \u043f\u043e \u0432\u044b\u0431\u043e\u0440\u043a\u0435 \u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \n   \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0430\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e\n  ","syntax":"\n   bool <b>libxml_use_internal_errors<\/b>\n    ([ bool $use_errors = false\n  ] )","desc":"\n    libxml_use_internal_errors() \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u044c\n   \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 libxml \u0438 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0443\u044e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u043e\u0448\u0438\u0431\u043e\u043a.\n  "},"link":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u0436\u0451\u0441\u0442\u043a\u0443\u044e \u0441\u0441\u044b\u043b\u043a\u0443","syntax":"\n   bool <b>link<\/b>\n    ( string $target\n   , string $<b>link<\/b>\n   )","desc":"\n    link() \u0441\u043e\u0437\u0434\u0430\u0451\u0442 \u0436\u0435\u0441\u0442\u043a\u0443\u044e \u0441\u0441\u044b\u043b\u043a\u0443.\n  "},"linkinfo":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0441\u044b\u043b\u043a\u0435","syntax":"\n   int <b>linkinfo<\/b>\n    ( string $path\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0441\u044b\u043b\u043a\u0435.\n  "},"list":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u0434\u043e\u0431\u043d\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0443","syntax":"\n   array <b>list<\/b>\n    ( mixed $varname\n   [, mixed $...\n  ] )","desc":"\n   \u041f\u043e\u0434\u043e\u0431\u043d\u043e  array(), \u044d\u0442\u043e \u043d\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u044f,\n   \u0430 \u044f\u0437\u044b\u043a\u043e\u0432\u0430\u044f \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f.  list() \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f\n   \u0434\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438\u0441\u0432\u043e\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043a\u0443 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0437\u0430 \u043e\u0434\u043d\u0443 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e.\n  "},"localeconv":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u0444\u043e\u0440\u043c\u0430\u0442\u0430\u0445","syntax":"\n   array <b>localeconv<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u0438 \u0434\u0435\u043d\u0435\u0436\u043d\u044b\u0445\n   \u0444\u043e\u0440\u043c\u0430\u0442\u0430\u0445 \u0432 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u043b\u043e\u043a\u0430\u043b\u0438.\n  "},"localtime":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f","syntax":"\n   array <b>localtime<\/b>\n    ([ int $timestamp = time()\n   [, bool $is_associative = false\n  ]] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  localtime() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432,\n   \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0439 \u043f\u043e \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0435, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0439 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 C.\n  "},"log":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u044b\u0439 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c","syntax":"\n   float <b>log<\/b>\n    ( float $arg\n   [, float $base = M_E\n  ] )","desc":"\n   \u0415\u0441\u043b\u0438 \u0443\u043a\u0430\u0437\u0430\u043d \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 base,\n    log() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 logbase\n   \u043e\u0442 arg, \u0438\u043d\u0430\u0447\u0435  log()\n   \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u044b\u0439 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c \u0447\u0438\u0441\u043b\u0430 arg.\n  "},"log10":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0414\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u044b\u0439 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c","syntax":"\n   float <b>log10<\/b>\n    ( float $arg\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u044b\u0439 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c arg.\n  "},"log1p":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\n \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 log(1 + number), \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u0430\u043d\u043d\u044b\u0439 \u0442\u0430\u043a\u0438\u043c, \u0447\u0442\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0442\u043e\u0447\u0435\u043d,\n   \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 number \u0431\u043b\u0438\u0437\u043a\u043e \u043a \u043d\u0443\u043b\u044e\n  ","syntax":"\n   float <b>log1p<\/b>\n    ( float $number\n   )","desc":"\n    log1p() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 log(1 +\n   number), \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u0430\u043d\u043d\u043e\u0435 \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0447\u0442\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0442\u043e\u0447\u0435\u043d,\n   \u0434\u0430\u0436\u0435 \u043a\u043e\u0433\u0434\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 number \u0431\u043b\u0438\u0437\u043a\u043e \u043a \u043d\u0443\u043b\u044e.\n   \u0418\u0437-\u0437\u0430 \u043d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043a\u0430 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438  log() \u0432 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \n   \u043c\u043e\u0436\u0435\u0442 \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e log(1).\n  "},"long2ip":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 (IPv4) \u0430\u0434\u0440\u0435\u0441 \u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u0441\u0435\u0442\u0438 \u0432 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 \u0442\u043e\u0447\u043a\u0430\u043c\u0438","syntax":"\n   string <b>long2ip<\/b>\n    ( string $proper_address\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  long2ip() \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u0430\u0434\u0440\u0435\u0441 \u0432  \u0444\u043e\u0440\u043c\u0430\u0442 \u0441 \u0442\u043e\u0447\u043a\u0430\u043c\u0438 (\u043d-\u0440.: aaa.bbb.ccc.ddd).\n  "},"lstat":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0444\u0430\u0439\u043b\u0435 \u0438\u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0441\u0441\u044b\u043b\u043a\u0435","syntax":"\n   array <b>lstat<\/b>\n    ( string $filename\n   )","desc":"\n   \u0421\u043e\u0431\u0438\u0440\u0430\u0435\u0442 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u043d\u0430 \u0444\u0430\u0439\u043b \u0438\u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0441\u0441\u044b\u043b\u043a\u0443 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c\n   filename.\n  "},"ltrim":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043f\u0440\u043e\u0431\u0435\u043b\u044b (\u0438\u043b\u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b) \u0438\u0437 \u043d\u0430\u0447\u0430\u043b\u0430 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   string <b>ltrim<\/b>\n    ( string $str\n   [, string $charlist\n  ] )","desc":"\n   \u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043f\u0440\u043e\u0431\u0435\u043b\u044b (\u0438\u043b\u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b) \u0438\u0437 \u043d\u0430\u0447\u0430\u043b\u0430 \u0441\u0442\u0440\u043e\u043a\u0438.\n  "},"lzf_compress":{"version":"(PECL lzf >= 0.1.0)","shortdesc":"\n   LZF compression\n  ","syntax":"\n   string <b>lzf_compress<\/b>\n    ( string $data\n   )","desc":"\n    lzf_compress() compresses the given\n   data string using LZF encoding.\n  "},"lzf_decompress":{"version":"(PECL lzf >= 0.1.0)","shortdesc":"\n   LZF decompression\n  ","syntax":"\n   string <b>lzf_decompress<\/b>\n    ( string $data\n   )","desc":"\n    lzf_compress() decompresses the given\n   data string containing lzf encoded data.\n  "},"lzf_optimized_for":{"version":"(PECL lzf >= 1.0.0)","shortdesc":"\n   Determines what LZF extension was optimized for\n  ","syntax":"\n   int <b>lzf_optimized_for<\/b>\n    ( void\n   )","desc":"\n   Determines what was LZF extension optimized for during compilation.\n  "},"m_checkstatus":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0430 \u043b\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f","syntax":"\n   int <b>m_checkstatus<\/b>\n    ( resource $conn\n   , int $identifier\n   )","desc":""},"m_completeauthorizations":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Number of complete authorizations in queue, returning an array of their identifiers","syntax":"\n   int <b>m_completeauthorizations<\/b>\n    ( resource $conn\n   , int &$array\n   )","desc":""},"m_connect":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Establish the connection to MCVE","syntax":"\n   int <b>m_connect<\/b>\n    ( resource $conn\n   )","desc":""},"m_connectionerror":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Get a textual representation of why a connection failed","syntax":"\n   string <b>m_connectionerror<\/b>\n    ( resource $conn\n   )","desc":""},"m_deletetrans":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Delete specified transaction from MCVE_CONN structure","syntax":"\n   bool <b>m_deletetrans<\/b>\n    ( resource $conn\n   , int $identifier\n   )","desc":""},"m_destroyconn":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Destroy the connection and MCVE_CONN structure","syntax":"\n   bool <b>m_destroyconn<\/b>\n    ( resource $conn\n   )","desc":""},"m_destroyengine":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Free memory associated with IP\/SSL connectivity","syntax":"\n   void <b>m_destroyengine<\/b>\n    ( void\n   )","desc":""},"m_getcell":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Get a specific cell from a comma delimited response by column name","syntax":"\n   string <b>m_getcell<\/b>\n    ( resource $conn\n   , int $identifier\n   , string $column\n   , int $row\n   )","desc":""},"m_getcellbynum":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Get a specific cell from a comma delimited response by column number","syntax":"\n   string <b>m_getcellbynum<\/b>\n    ( resource $conn\n   , int $identifier\n   , int $column\n   , int $row\n   )","desc":""},"m_getcommadelimited":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Get the RAW comma delimited data returned from MCVE","syntax":"\n   string <b>m_getcommadelimited<\/b>\n    ( resource $conn\n   , int $identifier\n   )","desc":""},"m_getheader":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Get the name of the column in a comma-delimited response","syntax":"\n   string <b>m_getheader<\/b>\n    ( resource $conn\n   , int $identifier\n   , int $column_num\n   )","desc":""},"m_initconn":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Create and initialize an MCVE_CONN structure","syntax":"\n   resource <b>m_initconn<\/b>\n    ( void\n   )","desc":""},"m_initengine":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Ready the client for IP\/SSL Communication","syntax":"\n   int <b>m_initengine<\/b>\n    ( string $location\n   )","desc":""},"m_iscommadelimited":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Checks to see if response is comma delimited","syntax":"\n   int <b>m_iscommadelimited<\/b>\n    ( resource $conn\n   , int $identifier\n   )","desc":""},"m_maxconntimeout":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"The maximum amount of time the API will attempt a connection to MCVE","syntax":"\n   bool <b>m_maxconntimeout<\/b>\n    ( resource $conn\n   , int $secs\n   )","desc":""},"m_monitor":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Perform communication with MCVE (send\/receive data) Non-blocking","syntax":"\n   int <b>m_monitor<\/b>\n    ( resource $conn\n   )","desc":""},"m_numcolumns":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Number of columns returned in a comma delimited response","syntax":"\n   int <b>m_numcolumns<\/b>\n    ( resource $conn\n   , int $identifier\n   )","desc":""},"m_numrows":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Number of rows returned in a comma delimited response","syntax":"\n   int <b>m_numrows<\/b>\n    ( resource $conn\n   , int $identifier\n   )","desc":""},"m_parsecommadelimited":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Parse the comma delimited response so m_getcell, etc will work","syntax":"\n   int <b>m_parsecommadelimited<\/b>\n    ( resource $conn\n   , int $identifier\n   )","desc":""},"m_responsekeys":{"version":"(PHP 5 >= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Returns array of strings which represents the keys that can be used\n for response parameters on this transaction","syntax":"\n   array <b>m_responsekeys<\/b>\n    ( resource $conn\n   , int $identifier\n   )","desc":""},"m_responseparam":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Get a custom response parameter","syntax":"\n   string <b>m_responseparam<\/b>\n    ( resource $conn\n   , int $identifier\n   , string $key\n   )","desc":""},"m_returnstatus":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Check to see if the transaction was successful","syntax":"\n   int <b>m_returnstatus<\/b>\n    ( resource $conn\n   , int $identifier\n   )","desc":""},"m_setblocking":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Set blocking\/non-blocking mode for connection","syntax":"\n   int <b>m_setblocking<\/b>\n    ( resource $conn\n   , int $tf\n   )","desc":""},"m_setdropfile":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Set the connection method to Drop-File","syntax":"\n   int <b>m_setdropfile<\/b>\n    ( resource $conn\n   , string $directory\n   )","desc":""},"m_setip":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Set the connection method to IP","syntax":"\n   int <b>m_setip<\/b>\n    ( resource $conn\n   , string $host\n   , int $port\n   )","desc":""},"m_setssl_cafile":{"version":"(PHP 5 >= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Set SSL CA (Certificate Authority) file for verification of server\n certificate","syntax":"\n   int <b>m_setssl_cafile<\/b>\n    ( resource $conn\n   , string $cafile\n   )","desc":""},"m_setssl_files":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Set certificate key files and certificates if server requires client certificate\n verification","syntax":"\n   int <b>m_setssl_files<\/b>\n    ( resource $conn\n   , string $sslkeyfile\n   , string $sslcertfile\n   )","desc":""},"m_setssl":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Set the connection method to SSL","syntax":"\n   int <b>m_setssl<\/b>\n    ( resource $conn\n   , string $host\n   , int $port\n   )","desc":""},"m_settimeout":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Set maximum transaction time (per trans)","syntax":"\n   int <b>m_settimeout<\/b>\n    ( resource $conn\n   , int $seconds\n   )","desc":""},"m_sslcert_gen_hash":{"version":"(PECL mcve >= 5.2.0)","shortdesc":"Generate hash for SSL client certificate verification","syntax":"\n   string <b>m_sslcert_gen_hash<\/b>\n    ( string $filename\n   )","desc":""},"m_transactionssent":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Check to see if outgoing buffer is clear","syntax":"\n   int <b>m_transactionssent<\/b>\n    ( resource $conn\n   )","desc":""},"m_transinqueue":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Number of transactions in client-queue","syntax":"\n   int <b>m_transinqueue<\/b>\n    ( resource $conn\n   )","desc":""},"m_transkeyval":{"version":"(PHP 5 >= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Add key\/value pair to a transaction. Replaces deprecated transparam()","syntax":"\n   int <b>m_transkeyval<\/b>\n    ( resource $conn\n   , int $identifier\n   , string $key\n   , string $value\n   )","desc":""},"m_transnew":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Start a new transaction","syntax":"\n   int <b>m_transnew<\/b>\n    ( resource $conn\n   )","desc":""},"m_transsend":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Finalize and send the transaction","syntax":"\n   int <b>m_transsend<\/b>\n    ( resource $conn\n   , int $identifier\n   )","desc":""},"m_uwait":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Wait x microsecs","syntax":"\n   int <b>m_uwait<\/b>\n    ( int $microsecs\n   )","desc":""},"m_validateidentifier":{"version":"(PHP 5 >= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Whether or not to validate the passed identifier on any transaction it is passed to","syntax":"\n   int <b>m_validateidentifier<\/b>\n    ( resource $conn\n   , int $tf\n   )","desc":""},"m_verifyconnection":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Set whether or not to PING upon connect to verify connection","syntax":"\n   bool <b>m_verifyconnection<\/b>\n    ( resource $conn\n   , int $tf\n   )","desc":""},"m_verifysslcert":{"version":"(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)","shortdesc":"Set whether or not to verify the server ssl certificate","syntax":"\n   bool <b>m_verifysslcert<\/b>\n    ( resource $conn\n   , int $tf\n   )","desc":""},"magic_quotes_runtime":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  set_magic_quotes_runtime()","syntax":"","desc":""},"mail":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u0443\u044e \u043f\u043e\u0447\u0442\u0443","syntax":"\n   bool <b>mail<\/b>\n    ( string $to\n   , string $subject\n   , string $message\n   [, string $additional_headers\n   [, string $additional_parameters\n  ]] )","desc":"\n   \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u0443\u044e \u043f\u043e\u0447\u0442\u0443.\n  "},"mailparse_determine_best_xfer_encoding":{"version":"(PECL mailparse >= 0.9.0)","shortdesc":"Gets the best way of encoding","syntax":"\n   string <b>mailparse_determine_best_xfer_encoding<\/b>\n    ( resource $fp\n   )","desc":"\n   Figures out the best way of encoding the content read from the given file\n   pointer.\n  "},"mailparse_msg_create":{"version":"(PECL mailparse >= 0.9.0)","shortdesc":"Create a mime mail resource","syntax":"\n   resource <b>mailparse_msg_create<\/b>\n    ( void\n   )","desc":"\n   Create a MIME mail resource.\n  "},"mailparse_msg_extract_part_file":{"version":"(PECL mailparse >= 0.9.0)","shortdesc":"Extracts\/decodes a message section","syntax":"\n   string <b>mailparse_msg_extract_part_file<\/b>\n    ( resource $mimemail\n   , mixed $filename\n   [, callable $callbackfunc\n  ] )","desc":"\n   Extracts\/decodes a message section from the supplied filename.\n  "},"mailparse_msg_extract_part":{"version":"(PECL mailparse >= 0.9.0)","shortdesc":"\n   Extracts\/decodes a message section\n  ","syntax":"\n   void <b>mailparse_msg_extract_part<\/b>\n    ( resource $mimemail\n   , string $msgbody\n   [, callable $callbackfunc\n  ] )","desc":""},"mailparse_msg_extract_whole_part_file":{"version":"(PECL mailparse >= 0.9.0)","shortdesc":"Extracts a message section including headers without decoding the transfer encoding","syntax":"\n   string <b>mailparse_msg_extract_whole_part_file<\/b>\n    ( resource $mimemail\n   , string $filename\n   [, callable $callbackfunc\n  ] )","desc":""},"mailparse_msg_free":{"version":"(PECL mailparse >= 0.9.0)","shortdesc":"Frees a MIME resource","syntax":"\n   bool <b>mailparse_msg_free<\/b>\n    ( resource $mimemail\n   )","desc":"\n   Frees a MIME resource.\n  "},"mailparse_msg_get_part_data":{"version":"(PECL mailparse >= 0.9.0)","shortdesc":"Returns an associative array of info about the message","syntax":"\n   array <b>mailparse_msg_get_part_data<\/b>\n    ( resource $mimemail\n   )","desc":""},"mailparse_msg_get_part":{"version":"(PECL mailparse >= 0.9.0)","shortdesc":"Returns a handle on a given section in a mimemessage","syntax":"\n   resource <b>mailparse_msg_get_part<\/b>\n    ( resource $mimemail\n   , string $mimesection\n   )","desc":""},"mailparse_msg_get_structure":{"version":"(PECL mailparse >= 0.9.0)","shortdesc":"Returns an array of mime section names in the supplied message","syntax":"\n   array <b>mailparse_msg_get_structure<\/b>\n    ( resource $mimemail\n   )","desc":""},"mailparse_msg_parse_file":{"version":"(PECL mailparse >= 0.9.0)","shortdesc":"Parses a file","syntax":"\n   resource <b>mailparse_msg_parse_file<\/b>\n    ( string $filename\n   )","desc":"\n   Parses a file.\n   This is the optimal way of parsing a mail file that you have on disk.\n  "},"mailparse_msg_parse":{"version":"(PECL mailparse >= 0.9.0)","shortdesc":"Incrementally parse data into buffer","syntax":"\n   bool <b>mailparse_msg_parse<\/b>\n    ( resource $mimemail\n   , string $data\n   )","desc":"\n   Incrementally parse data into the supplied mime mail resource.\n  "},"mailparse_rfc822_parse_addresses":{"version":"(PECL mailparse >= 0.9.0)","shortdesc":"Parse RFC 822 compliant addresses","syntax":"\n   array <b>mailparse_rfc822_parse_addresses<\/b>\n    ( string $addresses\n   )","desc":"\n   Parses a \u00bb\u00a0RFC 822 compliant recipient\n   list, such as that found in the To: header.\n  "},"mailparse_stream_encode":{"version":"(PECL mailparse >= 0.9.0)","shortdesc":"\n   Streams data from source file pointer, apply encoding and write to destfp \n  ","syntax":"\n   bool <b>mailparse_stream_encode<\/b>\n    ( resource $sourcefp\n   , resource $destfp\n   , string $encoding      \n   )","desc":"\n   Streams data from the source file pointer, apply \n   encoding and write to the destination file pointer. \n  "},"mailparse_uudecode_all":{"version":"(PECL mailparse >= 0.9.0)","shortdesc":"\n   Scans the data from fp and extract each embedded uuencoded file\n  ","syntax":"\n   array <b>mailparse_uudecode_all<\/b>\n    ( resource $fp\n   )","desc":"\n   Scans the data from the given file pointer and extract each embedded\n   uuencoded file into a temporary file.\n  "},"main":{"version":"","shortdesc":"\u0417\u0430\u0433\u043b\u0443\u0448\u043a\u0430 \u0434\u043b\u044f  main()","syntax":"","desc":""},"max":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435","syntax":"\n   mixed <b>max<\/b>\n    ( array $values\n   )\n\n   mixed <b>max<\/b>\n    ( mixed $value1\n   , mixed $value2\n   [, mixed $...\n  ] )\n","desc":"\n   \u0415\u0441\u043b\u0438 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0433\u043e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430 \u043f\u0435\u0440\u0435\u0434\u0430\u043d \u043c\u0430\u0441\u0441\u0438\u0432,  max()\n   \u0432\u0435\u0440\u043d\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0438\u0437 \u044d\u0442\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430. \u0415\u0441\u043b\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043e 2 \u0438\u043b\u0438 \u0431\u043e\u043b\u0435\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430, \u0444\u0443\u043d\u043a\u0446\u0438\u044f\n    max() \u0432\u0435\u0440\u043d\u0435\u0442 \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0438\u0439 \u0438\u0437 \u043d\u0438\u0445.\n  "},"maxdb_affected_rows\nmaxdb::affected_rows\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Gets the number of affected rows in a previous MaxDB operation","syntax":"\n   int maxdb_affected_rows\n    ( resource $link\n   )","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"maxdb_autocommit\nmaxdb::auto_commit\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Turns on or off auto-commiting database modifications","syntax":"\n   bool maxdb_autocommit\n    ( resource $link\n   , bool $mode\n   )\n\n   bool maxdb::auto_commit\n    ( bool $mode\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n    maxdb_autocommit() is used to turn on or off auto-commit mode\n   on queries for the database connection represented by the link\n   resource.\n  \n"},"maxdb_bind_param":{"version":"(PECL maxdb 1.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  maxdb_stmt_bind_param()","syntax":"","desc":""},"maxdb_bind_result":{"version":"(PECL maxdb 1.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  maxdb_stmt_bind_result()","syntax":"","desc":""},"maxdb_change_user\nmaxdb::change_user\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Changes the user of the specified database connection","syntax":"\n   bool maxdb_change_user\n    ( resource $link\n   , string $user\n   , string $password\n   , string $database\n   )\n\n   bool maxdb::change_user\n    ( string $user\n   , string $password\n   , string $database\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n    maxdb_change_user() is used to change the user of the specified\n   database connection as given by the link parameter and to set the\n   current database to that specified by the database parameter.\n  \n"},"maxdb_character_set_name\nmaxdb::character_set_name\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Returns the default character set for the database connection","syntax":"\n   string maxdb_character_set_name\n    ( resource $link\n   )\n\n   string maxdb::character_set_name\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   Returns the current character set for the database connection specified by the\n   link parameter.\n  \n"},"maxdb_client_encoding":{"version":"(PECL maxdb 1.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  maxdb_character_set_name()","syntax":"","desc":""},"maxdb_close_long_data\nmaxdb::close_long_data\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  maxdb_stmt_close_long_data()","syntax":"","desc":""},"maxdb_close\nmaxdb::close\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Closes a previously opened database connection","syntax":"\n   bool maxdb_close\n    ( resource $link\n   )\n\n   bool maxdb::close\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   The  maxdb_close() function closes a previously opened database\n   connection specified by the link parameter.\n  \n"},"maxdb_commit\nmaxdb::commit\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Commits the current transaction","syntax":"\n   bool maxdb_commit\n    ( resource $link\n   )\n\n   bool maxdb::commit\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   Commits the current transaction for the database connection specified by the\n   link parameter.\n  \n"},"maxdb_connect_errno":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Returns the error code from last connect call","syntax":"\n   int <b>maxdb_connect_errno<\/b>\n    ( void\n   )","desc":"\n   The  maxdb_connect_errno() function will return the last error code number\n   for last call to  maxdb_connect().\n   If no errors have occurred, this function will return zero.\n  "},"maxdb_connect_error":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Returns a string description of the last connect error","syntax":"\n   string <b>maxdb_connect_error<\/b>\n    ( void\n   )","desc":"\n   The  maxdb_connect_error() function is identical to the corresponding\n    maxdb_connect_errno() function in every way, except instead of returning\n   an integer error code the  maxdb_connect_error() function will return\n   a string representation of the last error to occur for the last\n    maxdb_connect() call.\n   If no error has occurred, this function will return an empty string.\n  "},"maxdb_connect\nmaxdb::__construct\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Open a new connection to the MaxDB server","syntax":"\n   resource maxdb_connect\n    ([ string $host\n   [, string $username\n   [, string $passwd\n   [, string $dbname\n   [, int $port = 0\n   [, string $socket\n  ]]]]]] )","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   The  maxdb_connect() function attempts to open a connection to the MaxDB Server\n   running on host which can be either a host name or an IP address. Passing the\n   string \"localhost\" to this parameter, the local host is assumed.\n   If successful, the  maxdb_connect()\n   will return an resource representing the connection to the database \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  \n"},"maxdb_data_seek\nmaxdb_result::data_seek\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Adjusts the result pointer to an arbitary row in the result","syntax":"\n   bool maxdb_data_seek\n    ( resource $result\n   , int $offset\n   )\n\n   bool maxdb_result::data_seek\n    ( int $offset\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   The  maxdb_data_seek() function seeks to an arbitrary result pointer\n   specified by the offset in the result set represented by\n   result. The offset parameter must be between\n   zero and the total number of rows minus one (0.. maxdb_num_rows() - 1).\n  \n"},"maxdb_debug":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Performs debugging operations","syntax":"\n   void <b>maxdb_debug<\/b>\n    ( string $debug\n   )","desc":"\n   The  maxdb_debug() can be used to trace the SQLDBC communication. The following\n   strings can be used as a parameter to  maxdb_debug():\n  "},"maxdb_disable_reads_from_master\nmaxdb::disable_reads_from_master\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Disable reads from master","syntax":"\n   bool maxdb_disable_reads_from_master\n    ( resource $link\n   )\n\n   void maxdb::disable_reads_from_master\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"maxdb_disable_rpl_parse":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Disable RPL parse","syntax":"\n   bool <b>maxdb_disable_rpl_parse<\/b>\n    ( resource $link\n   )","desc":""},"maxdb_dump_debug_info":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Dump debugging information into the log","syntax":"\n   bool <b>maxdb_dump_debug_info<\/b>\n    ( resource $link\n   )","desc":""},"maxdb_embedded_connect":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Open a connection to an embedded MaxDB server","syntax":"\n   resource <b>maxdb_embedded_connect<\/b>\n    ([ string $dbname\n  ] )","desc":""},"maxdb_enable_reads_from_master":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Enable reads from master","syntax":"\n   bool <b>maxdb_enable_reads_from_master<\/b>\n    ( resource $link\n   )","desc":""},"maxdb_enable_rpl_parse":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Enable RPL parse","syntax":"\n   bool <b>maxdb_enable_rpl_parse<\/b>\n    ( resource $link\n   )","desc":""},"maxdb_errno\nmaxdb::errno\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Returns the error code for the most recent function call","syntax":"\n   int maxdb_errno\n    ( resource $link\n   )","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"maxdb_error\nmaxdb::error\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Returns a string description of the last error","syntax":"\n   string maxdb_error\n    ( resource $link\n   )","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"maxdb_escape_string":{"version":"(PECL maxdb 1.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  maxdb_real_escape_string()","syntax":"","desc":""},"maxdb_execute":{"version":"(PECL maxdb 1.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  maxdb_stmt_execute()","syntax":"","desc":""},"maxdb_fetch_array\nmaxdb_result::fetch_array\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Fetch a result row as an associative, a numeric array, or both","syntax":"\n   mixed maxdb_fetch_array\n    ( resource $result\n   [, int $resulttype\n  ] )\n\n   mixed maxdb_result::fetch_array\n    ([ int $resulttype\n  ] )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   Returns an array that corresponds to the fetched row or NULL if there are no more rows for the\n   resultset represented by the result parameter.\n  \n"},"maxdb_fetch_assoc\nmaxdb_result::fetch_assoc\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Fetch a result row as an associative array","syntax":"\n   array maxdb_fetch_assoc\n    ( resource $result\n   )\n\n   array maxdb_result::fetch_assoc\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   Returns an associative array that corresponds to the fetched row or NULL if there are\n   no more rows.\n  \n"},"maxdb_fetch_field_direct\nmaxdb_result::fetch_field_direct\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Fetch meta-data for a single field","syntax":"\n   mixed maxdb_fetch_field_direct\n    ( resource $result\n   , int $fieldnr\n   )\n\n   mixed maxdb_result::fetch_field_direct\n    ( int $fieldnr\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n    maxdb_fetch_field_direct() returns an resource which contains\n   field definition information from specified resultset. The value of fieldnr must be in the\n   range from 0 to number of fields - 1.\n  \n"},"maxdb_fetch_field\nmaxdb_result::fetch_field\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Returns the next field in the result set","syntax":"\n   mixed maxdb_fetch_field\n    ( resource $result\n   )\n\n   mixed maxdb_result::fetch_field\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   The  maxdb_fetch_field() returns the definition of one column\n   of a result set as an resource. Call this function repeatedly to retrieve\n   information about all columns in the result set.\n    maxdb_fetch_field() returns FALSE when no more fields\n   are left.\n  \n"},"maxdb_fetch_fields\nmaxdb_result::fetch_fields\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Returns an array of resources representing the fields in a result set","syntax":"\n   mixed maxdb_fetch_fields\n    ( resource $result\n   )\n\n   mixed maxdb_result::fetch_fields\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   This function serves an identical purpose to the  maxdb_fetch_field()\n   function with the single difference that, instead of returning one resource at a time for\n   each field, the columns are returned as an array of resources.\n  \n"},"maxdb_fetch_lengths\nmaxdb_result::lengths\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Returns the lengths of the columns of the current row in the result set","syntax":"\n   array maxdb_fetch_lengths\n    ( resource $result\n   )","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"maxdb_fetch_object\nmaxdb_result::fetch_object\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Returns the current row of a result set as an object","syntax":"\n   object maxdb_fetch_object\n    ( object $result\n   )\n\n   object maxdb_result::fetch_object\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   The  maxdb_fetch_object() will return the current row result set\n   as an object where the attributes of the object represent the names of the fields found\n   within the result set. If no more rows exist in the current result set, NULL is returned.\n  \n"},"maxdb_fetch_row\nmaxdb_result::fetch_row\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Get a result row as an enumerated array","syntax":"\n   mixed maxdb_fetch_row\n    ( resource $result\n   )\n\n   mixed maxdb_result::fetch_row\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   Returns an array that corresponds to the fetched row, or NULL if there are no more rows.\n  \n"},"maxdb_fetch":{"version":"(PECL maxdb 1.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  maxdb_stmt_fetch()","syntax":"","desc":""},"maxdb_field_count\nmaxdb::field_count\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Returns the number of columns for the most recent query","syntax":"\n   int maxdb_field_count\n    ( resource $link\n   )\n\n   int maxdb::field_count\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   Returns the number of columns for the most recent query on the connection\n   represented by the link parameter. This function\n   can be useful when using the  maxdb_store_result()\n   function to determine if the query should have produced a non-empty result\n   set or not without knowing the nature of the query.\n  \n"},"maxdb_field_seek\nmaxdb_result::field_seek\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Set result pointer to a specified field offset","syntax":"\n   bool maxdb_field_seek\n    ( resource $result\n   , int $fieldnr\n   )\n\n   bool maxdb_result::field_seek\n    ( int $fieldnr\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   Sets the field cursor to the given offset. The next call to  maxdb_fetch_field()\n   will retrieve the field definition of the column associated with that offset.\n  \n"},"maxdb_field_tell\nmaxdb_result::current_field\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Get current field offset of a result pointer","syntax":"\n   int maxdb_field_tell\n    ( resource $result\n   )","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"maxdb_free_result\nmaxdb_result::free\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Frees the memory associated with a result","syntax":"\n   void maxdb_free_result\n    ( resource $result\n   )\n\n   void maxdb_result::free\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   The  maxdb_free_result() function frees the memory\n   associated with the result represented by the\n   result parameter, which was allocated by\n    maxdb_query(),  maxdb_store_result()\n   or  maxdb_use_result().\n   \n"},"maxdb_get_client_info":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Returns the MaxDB client version as a string","syntax":"\n   string <b>maxdb_get_client_info<\/b>\n    ( void\n   )","desc":"\n   The  maxdb_get_client_info() function is used to\n   return a string representing the client version being used in the\n   MaxDB extension.\n  "},"maxdb_get_client_version":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Get MaxDB client info","syntax":"\n   int <b>maxdb_get_client_version<\/b>\n    ( void\n   )","desc":"\n   Returns client version number as an integer.\n  "},"maxdb_get_host_info\nmaxdb::get_host_info\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Returns a string representing the type of connection used","syntax":"\n   string maxdb_get_host_info\n    ( resource $link\n   )","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"maxdb_get_metadata":{"version":"(PECL maxdb 1.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  maxdb_stmt_result_metadata()","syntax":"","desc":""},"maxdb_get_proto_info\nmaxdb::protocol_version\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Returns the version of the MaxDB protocol used","syntax":"\n   int maxdb_get_proto_info\n    ( resource $link\n   )","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"maxdb_get_server_info\nmaxdb::server_info\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Returns the version of the MaxDB server","syntax":"\n   string maxdb_get_server_info\n    ( resource $link\n   )","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"maxdb_get_server_version\nmaxdb::server_version\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Returns the version of the MaxDB server as an integer","syntax":"\n   int maxdb_get_server_version\n    ( resource $link\n   )","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"maxdb_info\nmaxdb::info\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Retrieves information about the most recently executed query","syntax":"\n   string maxdb_info\n    ( resource $link\n   )","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"maxdb_init":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Initializes MaxDB and returns an resource for use with maxdb_real_connect","syntax":"\n   resource <b>maxdb_init<\/b>\n    ( void\n   )","desc":"\n   Allocates or initializes a MaxDB resource suitable for\n    maxdb_options() and  maxdb_real_connect().\n  "},"maxdb_insert_id\nmaxdb::insert_id\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Returns the auto generated id used in the last query","syntax":"\n   mixed maxdb_insert_id\n    ( resource $link\n   )","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"maxdb_kill\nmaxdb::kill\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Disconnects from a MaxDB server","syntax":"\n   bool maxdb_kill\n    ( resource $link\n   , int $processid\n   )\n\n   bool maxdb::kill\n    ( int $processid\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   This function is used to disconnect from a MaxDB server specified\n   by the processid parameter.\n  \n"},"maxdb_master_query":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Enforce execution of a query on the master in a master\/slave setup","syntax":"\n   bool <b>maxdb_master_query<\/b>\n    ( resource $link\n   , string $query\n   )","desc":""},"maxdb_more_results\nmaxdb::more_results\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Check if there any more query results from a multi query","syntax":"\n   bool maxdb_more_results\n    ( resource $link\n   )","desc":"\n     maxdb_more_results() indicates if one or more result sets\n    are available from a previous call to  maxdb_multi_query().\n   "},"maxdb_multi_query\nmaxdb::multi_query\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Performs a query on the database","syntax":"\n   bool maxdb_multi_query\n    ( resource $link\n   , string $query\n   )\n\n   bool maxdb::multi_query\n    ( string $query\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   The  maxdb_multi_query() works like the function\n    maxdb_query(). Multiple queries are not yet supported.\n  \n"},"maxdb_next_result\nmaxdb::next_result\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Prepare next result from multi_query","syntax":"\n   bool maxdb_next_result\n    ( resource $link\n   )","desc":"\n   Since multiple queries are not yet supported,  maxdb_next_result()\n   returns always FALSE.\n  "},"maxdb_num_fields\nmaxdb_result::field_count\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Get the number of fields in a result","syntax":"\n   int maxdb_num_fields\n    ( resource $result\n   )","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"maxdb_num_rows\nmaxdb::num_rows\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Gets the number of rows in a result","syntax":"\n   int maxdb_num_rows\n    ( resource $result\n   )","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"maxdb_options\nmaxdb::options\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Set options","syntax":"\n   bool maxdb_options\n    ( resource $link\n   , int $option\n   , mixed $value\n   )\n\n   bool maxdb::options\n    ( int $option\n   , mixed $value\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n    maxdb_options() can be used to set extra connect options\n   and affect behavior for a connection.\n  \n"},"maxdb_param_count":{"version":"(PECL maxdb 1.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  maxdb_stmt_param_count()","syntax":"","desc":""},"maxdb_ping\nmaxdb::ping\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Pings a server connection, or tries to reconnect if the connection has gone down","syntax":"\n   bool maxdb_ping\n    ( resource $link\n   )\n\n   bool maxdb::ping\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   Checks whether the connection to the server is working. If it has gone\n   down, and global option maxdb.reconnect is enabled\n   an automatic reconnection is attempted.\n  \n"},"maxdb_prepare\nmaxdb::prepare\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Prepare an SQL statement for execution","syntax":"\n   resource maxdb_prepare\n    ( resource $link\n   , string $query\n   )\n\n   maxdb_stmt maxdb::prepare\n    ( string $query\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n    maxdb_prepare() prepares the SQL query pointed to by the\n   null-terminated string query, and returns a statement handle to be used for\n   further operations on the statement. The query must consist of a single SQL statement.\n  \n"},"maxdb_query\nmaxdb::query\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Performs a query on the database","syntax":"\n   mixed maxdb_query\n    ( resource $link\n   , string $query\n   [, int $resultmode\n  ] )\n\n   mixed maxdb::query\n    ( string $query\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   The  maxdb_query() function is used to simplify the\n   act of performing a query against the database represented by the\n   link parameter.\n  \n"},"maxdb_real_connect\nmaxdb::real_connect\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Opens a connection to a MaxDB server","syntax":"\n   bool maxdb_real_connect\n    ( resource $link\n   [, string $hostname\n   [, string $username\n   [, string $passwd\n   [, string $dbname\n   [, int $port = 0\n   [, string $socket\n  ]]]]]] )\n\n   bool maxdb::real_connect\n    ([ string $hostname\n   [, string $username\n   [, string $passwd\n   [, string $dbname\n   [, int $port = 0\n   [, string $socket\n  ]]]]]] )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n    maxdb_real_connect() attempts to establish a\n   connection to a MaxDB database engine running on\n   hostname.\n  \n"},"maxdb_real_escape_string\nmaxdb::real_escape_string\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection","syntax":"\n   string maxdb_real_escape_string\n    ( resource $link\n   , string $escapestr\n   )\n\n   string maxdb::real_escape_string\n    ( string $escapestr\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   This function is used to create a legal SQL string that you can use in an SQL statement.\n   The string escapestr is encoded to an escaped SQL string, taking into\n   account the current character set of the connection.\n  \n"},"maxdb_real_query\nmaxdb::real_query\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Execute an SQL query","syntax":"\n   bool maxdb_real_query\n    ( resource $link\n   , string $query\n   )\n\n   bool maxdb::real_query\n    ( string $query\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   The  maxdb_real_query() is functionally identical\n   with the  maxdb_query().\n  \n"},"maxdb_report":{"version":"(PECL maxdb 1.0)","shortdesc":"Enables or disables internal report functions","syntax":"\n   bool <b>maxdb_report<\/b>\n    ( int $flags\n   )","desc":""},"maxdb_rollback\nmaxdb::rollback\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Rolls back current transaction","syntax":"\n   bool maxdb_rollback\n    ( resource $link\n   )\n\n   bool maxdb::rollback\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   Rollbacks the current transaction for the database specified by the\n   link parameter.\n  \n"},"maxdb_rpl_parse_enabled":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Check if RPL parse is enabled","syntax":"\n   int <b>maxdb_rpl_parse_enabled<\/b>\n    ( resource $link\n   )","desc":""},"maxdb_rpl_probe":{"version":"(PECL maxdb >= 1.0)","shortdesc":"RPL probe","syntax":"\n   bool <b>maxdb_rpl_probe<\/b>\n    ( resource $link\n   )","desc":""},"maxdb_rpl_query_type\nmaxdb::rpl_query_type\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Returns RPL query type","syntax":"\n   int maxdb_rpl_query_type\n    ( resource $link\n   )\n\n   int maxdb::rpl_query_type\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"maxdb_select_db\nmaxdb::select_db\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Selects the default database for database queries","syntax":"\n   bool maxdb_select_db\n    ( resource $link\n   , string $dbname\n   )","desc":"\n   The  maxdb_select_db() function selects the default\n   database (specified by the dbname parameter) to be\n   used when performing queries against the database connection\n   represented by the link parameter.\n  "},"maxdb_send_long_data":{"version":"(PECL maxdb >= 1.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  maxdb_stmt_send_long_data()","syntax":"","desc":""},"maxdb_send_query\nmaxdb::send_query\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Send the query and return","syntax":"\n   bool maxdb_send_query\n    ( resource $link\n   , string $query\n   )\n\n   bool maxdb::send_query\n    ( string $query\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"maxdb_server_end":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Shut down the embedded server","syntax":"\n   void <b>maxdb_server_end<\/b>\n    ( void\n   )","desc":""},"maxdb_server_init":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Initialize embedded server","syntax":"\n   bool <b>maxdb_server_init<\/b>\n    ([ array $server\n   [, array $groups\n  ]] )","desc":""},"maxdb_set_opt":{"version":"(PECL maxdb 1.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  maxdb_options()","syntax":"","desc":""},"maxdb_sqlstate\nmaxdb::sqlstate\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Returns the SQLSTATE error from previous MaxDB operation","syntax":"\n   string maxdb_sqlstate\n    ( resource $link\n   )","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"maxdb_ssl_set\nmaxdb::ssl_set\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Used for establishing secure connections using SSL","syntax":"\n   bool maxdb_ssl_set\n    ( resource $link\n   , string $key\n   , string $cert\n   , string $ca\n   , string $capath\n   , string $cipher\n   )\n\n   bool maxdb::ssl_set\n    ( string $key\n   , string $cert\n   , string $ca\n   , string $capath\n   , string $cipher\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"maxdb_stat\nmaxdb::stat\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Gets the current system status","syntax":"\n   string maxdb_stat\n    ( resource $link\n   )\n\n   string maxdb::stat\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n    maxdb_stat() returns a string containing several\n   information about the MaxDB server running.\n  \n"},"maxdb_stmt_affected_rows\nmaxdb_stmt::affected_rows\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Returns the total number of rows changed, deleted, or\n  inserted by the last executed statement\n  ","syntax":"\n   int maxdb_stmt_affected_rows\n    ( resource $stmt\n   )","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"maxdb_stmt_bind_param\nmaxdb_stmt::bind_param\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Binds variables to a prepared statement as parameters","syntax":"\n   bool maxdb_stmt_bind_param\n    ( resource $stmt\n   , string $types\n   , mixed &$var1\n   [, mixed &$...\n  ] )\n\n   bool maxdb_stmt::bind_param\n    ( string $types\n   , mixed &$var1\n   [, mixed &$...\n  ] )\n\n   bool maxdb_stmt_bind_param\n    ( resource $stmt\n   , string $types\n   , array &$var\n   )\n\n   bool maxdb_stmt::bind_param\n    ( string $types\n   , array &$var\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (extended syntax):\n\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (extended syntax):\n\n    maxdb_stmt_bind_param() is used to bind variables for the\n   parameter markers in the SQL statement that was passed to\n    maxdb_prepare().\n   The string types contains one or more characters which specify\n   the types for the corresponding bind variables.\n  \n"},"maxdb_stmt_bind_result\nmaxdb_stmt::bind_result\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Binds variables to a prepared statement for result storage","syntax":"\n   bool maxdb_stmt_bind_result\n    ( resource $stmt\n   , mixed &$var1\n   [, mixed &$...\n  ] )\n\n   bool maxdb_stmt::bind_result\n    ( mixed &$var1\n   [, mixed &$...\n  ] )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n    maxdb_stmt_bind_result() is used to associate (bind) columns in the result\n   set to variables. When  maxdb_stmt_fetch() is called to fetch data, the MaxDB\n   client\/server protocol places the data for the bound columns into the specified variables\n   var1, ....\n  \n"},"maxdb_stmt_close_long_data\nmaxdb_stmt::close_long_data\n":{"version":"(PECL maxdb 1.0)","shortdesc":"Ends a sequence of  maxdb_stmt_send_long_data()","syntax":"\n   bool maxdb_stmt_close_long_data\n    ( resource $stmt\n   , int $param_nr\n   )\n\n   bool maxdb_stmt::close_long_data\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   This function has to be called after a sequence of\n    maxdb_stmt_send_long_data(), that was started\n   after  maxdb_execute().\n  \n"},"maxdb_stmt_close\nmaxdb_stmt::close\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Closes a prepared statement","syntax":"\n   bool maxdb_stmt_close\n    ( resource $stmt\n   )\n\n   bool maxdb_stmt::close\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   Closes a prepared statement.  maxdb_stmt_close() also deallocates the\n   statement handle pointed to by stmt.\n   If the current statement has pending or unread results, this function cancels them so that\n   the next query can be executed.\n  \n"},"maxdb_stmt_data_seek\nmaxdb_stmt::data_seek\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Seeks to an arbitray row in statement result set","syntax":"\n   bool maxdb_stmt_data_seek\n    ( resource $statement\n   , int $offset\n   )\n\n   bool maxdb_stmt::data_seek\n    ( int $offset\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   The  maxdb_stmt_data_seek() function seeks to an arbitrary result pointer\n   specified by the offset in the statement result set represented by\n   statement. The offset parameter must be between\n   zero and the total number of rows minus one (0.. maxdb_stmt_num_rows() - 1).\n  \n"},"maxdb_stmt_errno\nmaxdb_stmt::errno\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Returns the error code for the most recent statement call","syntax":"\n   int maxdb_stmt_errno\n    ( resource $stmt\n   )","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"maxdb_stmt_error\nmaxdb_stmt::error\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Returns a string description for last statement error","syntax":"\n   string maxdb_stmt_error\n    ( resource $stmt\n   )","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"maxdb_stmt_execute\nmaxdb_stmt::execute\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Executes a prepared Query","syntax":"\n   bool maxdb_stmt_execute\n    ( resource $stmt\n   )\n\n   bool maxdb_stmt::execute\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   The  maxdb_stmt_execute() function executes a query that has been previously\n   prepared using the  maxdb_prepare() function represented by the\n   stmt resource. When executed any parameter markers which exist will\n   automatically be replaced with the appropiate data.\n  \n"},"maxdb_stmt_fetch\nmaxdb_stmt::fetch\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Fetch results from a prepared statement into the bound variables","syntax":"\n   bool maxdb_stmt_fetch\n    ( resource $stmt\n   )\n\n   bool maxdb_stmt::fetch\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n    maxdb_stmt_fetch() returns row data using the variables\n   bound by  maxdb_stmt_bind_result().\n  \n"},"maxdb_stmt_free_result\nmaxdb_stmt::free_result\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Frees stored result memory for the given statement handle","syntax":"\n   void maxdb_stmt_free_result\n    ( resource $stmt\n   )\n\n   void maxdb_stmt::free_result\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   The  maxdb_stmt_free_result() function frees the result memory\n   associated with the statement represented by the\n   stmt parameter, which was allocated by\n    maxdb_stmt_store_result().\n   \n"},"maxdb_stmt_init\nmaxdb::stmt_init\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Initializes a statement and returns an resource for use with maxdb_stmt_prepare","syntax":"\n   resource maxdb_stmt_init\n    ( resource $link\n   )\n\n   object maxdb::stmt_init\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   Allocates and initializes a statement resource suitable for\n    maxdb_stmt_prepare().\n  \n"},"maxdb_stmt_num_rows\nmaxdb_stmt::num_rows\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Return the number of rows in statements result set","syntax":"\n   int maxdb_stmt_num_rows\n    ( resource $stmt\n   )","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"maxdb_stmt_param_count\nmaxdb_stmt::param_count\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Returns the number of parameter for the given statement","syntax":"\n   int maxdb_stmt_param_count\n    ( resource $stmt\n   )","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"maxdb_stmt_prepare\nmaxdb_stmt::prepare\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Prepare an SQL statement for execution","syntax":"\n   bool maxdb_stmt_prepare\n    ( resource $stmt\n   , string $query\n   )\n\n   mixed maxdb_stmt::prepare\n    ( string $query\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n    maxdb_stmt_prepare() prepares the SQL query pointed to by the\n   null-terminated string query. The statement resource has to be allocated by\n    maxdb_stmt_init().\n   The query must consist of a single SQL statement.\n  \n"},"maxdb_stmt_reset\nmaxdb_stmt::reset\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Resets a prepared statement","syntax":"\n   bool maxdb_stmt_reset\n    ( resource $stmt\n   )\n\n   bool maxdb_stmt::reset\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"maxdb_stmt_result_metadata\nmaxdb_stmt::result_metadata\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Returns result set metadata from a prepared statement","syntax":"\n   resource maxdb_stmt_result_metadata\n    ( resource $stmt\n   )\n\n   resource maxdb_stmt::result_metadata\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   If a statement passed to  maxdb_prepare() is one that produces\n   a result set,  maxdb_stmt_result_metadata() returns the result resource\n   that can be used to process the meta information such as total number of fields\n   and individual field information.\n  \n"},"maxdb_stmt_send_long_data\nmaxdb_stmt::send_long_data\n":{"version":"(PECL maxdb 1.0)","shortdesc":"Send data in blocks","syntax":"\n   bool maxdb_stmt_send_long_data\n    ( resource $stmt\n   , int $param_nr\n   , string $data\n   )\n\n   bool maxdb_stmt::stmt_send_long_data\n    ( int $param_nr\n   , string $data\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   Allows to send parameter data to the server in pieces (or chunks).\n   This function can be called multiple times to send the parts of a character or\n   binary data value for a column, which must be one of the TEXT or BLOB datatypes.\n  \n"},"maxdb_stmt_sqlstate":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Returns SQLSTATE error from previous statement operation","syntax":"\n   string <b>maxdb_stmt_sqlstate<\/b>\n    ( resource $stmt\n   )","desc":"\n   Returns a string containing the SQLSTATE error code\n   for the most recently invoked prepared statement function that can succeed or fail.\n   The error code consists of five characters. '00000' means no error.\n   The values are specified by ANSI SQL and ODBC.\n  "},"maxdb_stmt_store_result\nmaxdb_stmt::store_result\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Transfers a result set from a prepared statement","syntax":"\n   bool maxdb_stmt_store_result\n    ( resource $stmt\n   )\n\n   object maxdb_stmt::store_result\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n    maxdb_stmt_store_result() has no functionally effect\n   and should not be used for retrieving data from MaxDB server.\n  \n"},"maxdb_store_result\nmaxdb::store_result\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Transfers a result set from the last query","syntax":"\n   resource maxdb_store_result\n    ( resource $link\n   )\n\n   object maxdb::store_result\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   This function has no functionally effect.\n  \n"},"maxdb_thread_id\nmaxdb::thread_id\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Returns the thread ID for the current connection","syntax":"\n   int maxdb_thread_id\n    ( resource $link\n   )","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"maxdb_thread_safe":{"version":"(PECL maxdb >= 7.6.06.04)","shortdesc":"Returns whether thread safety is given or not","syntax":"\n   bool <b>maxdb_thread_safe<\/b>\n    ( void\n   )","desc":"\n    maxdb_thread_safe() indicates whether the\n   client library is compiled as thread-safe.\n  "},"maxdb_use_result\nmaxdb::use_result\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Initiate a result set retrieval","syntax":"\n   resource maxdb_use_result\n    ( resource $link\n   )\n\n   resource maxdb::use_result\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n    maxdb_use_result() has no effect.\n  \n"},"maxdb_warning_count\nmaxdb::warning_count\n":{"version":"(PECL maxdb >= 1.0)","shortdesc":"Returns the number of warnings from the last query for the given link","syntax":"\n   int maxdb_warning_count\n    ( resource $link\n   )","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"mb_check_encoding":{"version":"(PHP 4 >= 4.4.3, PHP 5 >= 5.1.3)","shortdesc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0447\u0442\u043e \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0430 \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u043a\u0438 \u0432\u044b\u0431\u0440\u0430\u043d\u0430 \u0432\u0435\u0440\u043d\u043e\n  ","syntax":"\n   bool <b>mb_check_encoding<\/b>\n    ([ string $var = NULL\n   [, string $encoding = mb_internal_encoding()\n  ]] )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0447\u0442\u043e \u0434\u043b\u044f \u043f\u043e\u0442\u043e\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u0430\u044f \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0430.\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u043e\u043b\u0435\u0437\u043d\u043e\u0439 \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u044f \u0442\u0430\u043a \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u043c\u043e\u0439 \"\u0410\u0442\u0430\u043a\u0438 \n   \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0439 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u043e\u0439\".\n  "},"mb_convert_case":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\n   \u041f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442 \u0441\u043c\u0435\u043d\u0443 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435\n  ","syntax":"\n   string <b>mb_convert_case<\/b>\n    ( string $str\n   , int $mode = MB_CASE_UPPER\n   [, string $encoding = mb_internal_encoding()\n  ] )","desc":"\n   \u041f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442 \u0441\u043c\u0435\u043d\u0443 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 string \u0432 \n   \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0440\u0435\u0436\u0438\u043c\u043e\u043c mode.\n  "},"mb_convert_encoding":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432","syntax":"\n   string <b>mb_convert_encoding<\/b>\n    ( string $str\n   , string $to_encoding\n   [, mixed $from_encoding\n  ] )","desc":"\n   \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0441\u0442\u0440\u043e\u043a\u0438 string str\n   \u0432 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443 to_encoding.\n   \u0422\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 from_encoding.\n  "},"mb_convert_kana":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043e\u043a \"kana\" \u0438\u0437 \u043e\u0434\u043d\u043e\u0439 \u0432 \u0434\u0440\u0443\u0433\u0443\u044e (\"zen-kaku\", \"han-kaku\" \u0438 \u0434\u0440\u0443\u0433\u0438\u0435)","syntax":"\n   string <b>mb_convert_kana<\/b>\n    ( string $str\n   [, string $option = \"KV\"\n   [, string $encoding\n  ]] )","desc":"\n   \u041f\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \"han-kaku\" - \"zen-kaku\" \u0434\u043b\u044f \u0430\u0433\u0440\u0443\u043c\u0435\u043d\u0442\u0430 string str. \n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u043e\u043b\u0435\u0437\u043d\u043e\u0439 \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u044f\u043f\u043e\u043d\u0441\u043a\u043e\u0433\u043e \u044f\u0437\u044b\u043a\u0430.\n  "},"mb_convert_variables":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\n   \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439(-\u044b\u0445) \u0438\u0437 \u043e\u0434\u043d\u043e\u0439 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 \u0432 \u0434\u0440\u0443\u0433\u0443\u044e\n  ","syntax":"\n   string <b>mb_convert_variables<\/b>\n    ( string $to_encoding\n   , mixed $from_encoding\n   , mixed &$vars\n   [, mixed &$...\n  ] )","desc":"\n   \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 vars \u0438\u0437\n   \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 from_encoding \u0432 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443\n   to_encoding. \n  "},"mb_decode_mimeheader":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u0414\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 MIME-\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435","syntax":"\n   string <b>mb_decode_mimeheader<\/b>\n    ( string $str\n   )","desc":"\n   \u0414\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 string str \u0432 MIME-\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435. \n  "},"mb_decode_numericentity":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u0414\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 \u0447\u0438\u0441\u043b\u043e\u0432\u0443\u044e HTML-\u0441\u0441\u044b\u043b\u043a\u0443 \u0432 \u0441\u0438\u043c\u0432\u043e\u043b","syntax":"\n   string <b>mb_decode_numericentity<\/b>\n    ( string $str\n   , array $convmap\n   , string $encoding\n   )","desc":"\n   \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0447\u0438\u0441\u0435\u043b string\n   str \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u0431\u043b\u043e\u043a\u0435 \u0432 \u0441\u0438\u043c\u0432\u043e\u043b. \n  "},"mb_detect_encoding":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432","syntax":"\n   string <b>mb_detect_encoding<\/b>\n    ( string $str\n   [, mixed $encoding_list = mb_detect_order()\n   [, bool $strict = false\n  ]] )","desc":"\n   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 string str. \n  "},"mb_detect_order":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\n   \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430\/\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u043b\u044f \u043c\u0435\u0445\u0430\u043d\u0438\u0437\u043c\u043e\u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438\n  ","syntax":"\n   mixed <b>mb_detect_order<\/b>\n    ([ mixed $encoding_list\n  ] )","desc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043e\u043a encoding_list \u0434\u043b\u044f \u043c\u0435\u0445\u0430\u043d\u0438\u0437\u043c\u043e\u0432\n   \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043e\u043a \u0432 \u0441\u0442\u0440\u043e\u043a\u0430\u0445.\n  "},"mb_encode_mimeheader":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u041a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0434\u043b\u044f MIME-\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430","syntax":"\n   string <b>mb_encode_mimeheader<\/b>\n    ( string $str\n   [, string $charset\n   [, string $transfer_encoding\n   [, string $linefeed = \"\\r\\n\"\n   [, int $indent = 0\n  ]]]] )","desc":"\n   \u041a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 string str \n   \u043f\u043e \u0441\u0445\u0435\u043c\u0435 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f MIME-\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430.\n  "},"mb_encode_numericentity":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u041a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u0443\u044e HTML-\u0441\u0441\u044b\u043b\u043a\u0443","syntax":"\n   string <b>mb_encode_numericentity<\/b>\n    ( string $str\n   , array $convmap\n   , string $encoding\n   )","desc":"\n   \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0435 \u043a\u043e\u0434\u044b \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 string\n   str \u0438\u0437 \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u0439 HTML-\u0441\u0441\u044b\u043b\u043a\u0438 \u0432 \u043a\u043e\u0434\u044b \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.    \n  "},"mb_encoding_aliases":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c\u044b \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0430 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438","syntax":"\n   array <b>mb_encoding_aliases<\/b>\n    ( string $encoding\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u043f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c\u043e\u0432 \u0434\u043b\u044f \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0430 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 encoding.\n  "},"mb_ereg_match":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0421\u043e\u0432\u043f\u0430\u0434\u0435\u043d\u0438\u0435 \u0441 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u044b\u043c \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043c \u0434\u043b\u044f \u043c\u043d\u043e\u0433\u043e\u0431\u0430\u0439\u0442\u043e\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   bool <b>mb_ereg_match<\/b>\n    ( string $pattern\n   , string $string\n   [, string $option = \"msr\"\n  ] )","desc":"\n   \u0421\u043e\u0432\u043f\u0430\u0434\u0435\u043d\u0438\u0435 \u0441 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u044b\u043c \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043c \u0434\u043b\u044f \u043c\u043d\u043e\u0433\u043e\u0431\u0430\u0439\u0442\u043e\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438\n  "},"mb_ereg_replace_callback":{"version":"(PHP 5 >= 5.4.1)","shortdesc":"Perform a regular expresssion seach and replace with multibyte support using a callback\n  ","syntax":"\n   string <b>mb_ereg_replace_callback<\/b>\n    ( string $pattern\n   , callable $callback\n   , string $string\n   [, string $option = \"msr\"\n  ] )","desc":"\n   Scans string for matches to\n   pattern, then replaces the matched text\n   with the output of callback function.  \n  "},"mb_ereg_replace":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u041e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442 \u0437\u0430\u043c\u0435\u043d\u0443 \u043f\u043e \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u043c\u0443 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044e \u0441 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u043e\u0439 \u043c\u043d\u043e\u0433\u043e\u0431\u0430\u0439\u0442\u043e\u0432\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432","syntax":"\n   string <b>mb_ereg_replace<\/b>\n    ( string $pattern\n   , string $replacement\n   , string $string\n   [, string $option = \"msr\"\n  ] )","desc":""},"mb_ereg_search_getpos":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0443\u044e \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u0441\u043e\u0432\u043f\u0430\u0434\u0435\u043d\u0438\u044f \u0441 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u044b\u043c \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043c\n  ","syntax":"\n   int <b>mb_ereg_search_getpos<\/b>\n    ( void\n   )","desc":""},"mb_ereg_search_getregs":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n   \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0441 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u044b\u043c \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043c\n  ","syntax":"\n   array <b>mb_ereg_search_getregs<\/b>\n    ( void\n   )","desc":""},"mb_ereg_search_init":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n   \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0439 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u043c\u0443 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044e \u043c\u043d\u043e\u0433\u043e\u0431\u0430\u0439\u0442\u043d\u043e\u0439 \n   \u0441\u0442\u0440\u043e\u043a\u043e\u0439 \u0438 \u0442\u0435\u043a\u0441\u0442\u043e\u043c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f\n  ","syntax":"\n   bool <b>mb_ereg_search_init<\/b>\n    ( string $string\n   [, string $pattern\n   [, string $option = \"msr\"\n  ]] )","desc":"\n    mb_ereg_search_init() \u0437\u0430\u0434\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432\n   string \u0438 pattern\n   \u0434\u043b\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u044b\u0445 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0439. \u042d\u0442\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0431\u0443\u0434\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \n   \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u0445  mb_ereg_search(),\n    mb_ereg_search_pos() \u0438 \n    mb_ereg_search_regs(). \n  "},"mb_ereg_search_pos":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u0438 \u0434\u043b\u0438\u043d\u0443 \u0441\u043e\u0432\u043f\u0430\u0432\u0448\u0435\u0433\u043e \u0441 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u044b\u043c \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043c \u0443\u0447\u0430\u0441\u0442\u043a\u0430\n   \u043c\u043d\u043e\u0433\u043e\u0431\u0430\u0439\u0442\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438\n  ","syntax":"\n   array <b>mb_ereg_search_pos<\/b>\n    ([ string $pattern\n   [, string $option = \"ms\"\n  ]] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u0438 \u0434\u043b\u0438\u043d\u0443 \u0441\u043e\u0432\u043f\u0430\u0432\u0448\u0435\u0433\u043e \u0441 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u044b\u043c \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043c \u0443\u0447\u0430\u0441\u0442\u043a\u0430\n   \u0437\u0430\u0440\u0430\u043d\u0435\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0439 \u043c\u043d\u043e\u0433\u043e\u0431\u0430\u0439\u0442\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438.\n  "},"mb_ereg_search_regs":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043e\u0432\u043f\u0430\u0432\u0448\u0443\u044e \u0441 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u044b\u043c \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043c \u0447\u0430\u0441\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0438\n  ","syntax":"\n   array <b>mb_ereg_search_regs<\/b>\n    ([ string $pattern\n   [, string $option = \"ms\"\n  ]] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043e\u0432\u043f\u0430\u0432\u0448\u0443\u044e \u0441 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u044b\u043c \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043c \u0447\u0430\u0441\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0438.\n  "},"mb_ereg_search_setpos":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0443\u044e \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u0432 \u0441\u0442\u0440\u043e\u043a\u0435, \u0441 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043d\u0430\u0447\u043d\u0435\u0442\u0441\u044f \u043f\u043e\u0438\u0441\u043a \n   \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0439 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u043c\u0443 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044e\n  ","syntax":"\n   bool <b>mb_ereg_search_setpos<\/b>\n    ( int $position\n   )","desc":""},"mb_ereg_search":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n  \u041f\u043e\u0438\u0441\u043a \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0439 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u043c\u0443 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044e \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u043a \u0432 \u043c\u043d\u043e\u0433\u043e\u0431\u0430\u0439\u0442\u043d\u044b\u0445 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0430\u0445\n  ","syntax":"\n   bool <b>mb_ereg_search<\/b>\n    ([ string $pattern\n   [, string $option = \"ms\"\n  ]] )","desc":"\n   \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043f\u043e\u0438\u0441\u043a \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0439 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u043c\u0443 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044e \u0432 \u043c\u043d\u043e\u0433\u043e\u0431\u0430\u0439\u0442\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435.\n  "},"mb_ereg":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0421\u043e\u0432\u043f\u0430\u0434\u0435\u043d\u0438\u0435 \u0441 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u044b\u043c \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043c \u0441 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u043e\u0439 \u043c\u043d\u043e\u0433\u043e\u0431\u0430\u0439\u0442\u043e\u0432\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432","syntax":"\n   int <b>mb_ereg<\/b>\n    ( string $pattern\n   , string $string\n   [, array $regs\n  ] )","desc":""},"mb_eregi_replace":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u041e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442 \u0437\u0430\u043c\u0435\u043d\u0443 \u043f\u043e \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u043c\u0443 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044e \u0441 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u043e\u0439 \u043c\u043d\u043e\u0433\u043e\u0431\u0430\u0439\u0442\u043e\u0432\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0431\u0435\u0437 \u0443\u0447\u0435\u0442\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430","syntax":"\n   string <b>mb_eregi_replace<\/b>\n    ( string $pattern\n   , string $replace\n   , string $string\n   [, string $option = \"msri\"\n  ] )","desc":""},"mb_eregi":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n  \u041f\u043e\u0438\u0441\u043a \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0439 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u043c\u0443 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044e \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0449\u0438\u0439 \u043c\u043d\u043e\u0433\u043e\u0431\u0430\u0439\u0442\u043d\u044b\u0435 \n  \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0438 \u043d\u0435\u0447\u0443\u0432\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043a \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0443\n  ","syntax":"\n   int <b>mb_eregi<\/b>\n    ( string $pattern\n   , string $string\n   [, array $regs\n  ] )","desc":""},"mb_get_info":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 mbstring","syntax":"\n   mixed <b>mb_get_info<\/b>\n    ([ string $type = \"all\"\n  ] )","desc":""},"mb_http_input":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\n   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u0430\n  ","syntax":"\n   mixed <b>mb_http_input<\/b>\n    ([ string $type = \"\"\n  ] )","desc":""},"mb_http_output":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\n   \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430\/\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 HTTP \u0432\u044b\u0432\u043e\u0434\u0430\n  ","syntax":"\n   mixed <b>mb_http_output<\/b>\n    ([ string $encoding\n  ] )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430\/\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 HTTP \u0432\u044b\u0432\u043e\u0434\u0430.\n   \u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u0441\u043b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u044d\u0442\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0431\u0443\u0434\u0443\u0442 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u044b \u043a \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0435\n   encoding.\n  "},"mb_internal_encoding":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430\/\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0439 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 \u0441\u043a\u0440\u0438\u043f\u0442\u0430","syntax":"\n   mixed <b>mb_internal_encoding<\/b>\n    ([ string $encoding = <b>mb_internal_encoding<\/b>()\n  ] )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430\/\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0439 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 \u0441\u043a\u0440\u0438\u043f\u0442\u0430.\n  "},"mb_language":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430\/\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u044f\u0437\u044b\u043a\u0430","syntax":"\n   mixed <b>mb_language<\/b>\n    ([ string $language\n  ] )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430\/\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u044f\u0437\u044b\u043a\u0430.\n  "},"mb_list_encodings":{"version":"(PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0432\u0441\u0435\u0445 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0445 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043e\u043a","syntax":"\n   array <b>mb_list_encodings<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0432\u0441\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0435 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438.\n  "},"mb_output_handler":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\n   Callback-\u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u044e\u0449\u0430\u044f \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u043c \u0431\u0443\u0444\u0435\u0440\u0435\n  ","syntax":"\n   string <b>mb_output_handler<\/b>\n    ( string $contents\n   , int $status\n   )","desc":"\n    mb_output_handler() \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f\n   callback-\u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  ob_start().\n    mb_output_handler() \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u043c \u0431\u0443\u0444\u0435\u0440\u0435\n   \u0438\u0437 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0439 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 \u0432 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443 HTTP \u0432\u044b\u0432\u043e\u0434\u0430.\n  "},"mb_parse_str":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\n   \u0420\u0430\u0437\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 GET\/POST\/COOKIE \u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \n   \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445\n  ","syntax":"\n   bool <b>mb_parse_str<\/b>\n    ( string $encoded_string\n   [, array &$result\n  ] )","desc":"\n   \u0420\u0430\u0431\u0437\u0431\u0438\u0440\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u044b GET\/POST\/COOKIE \u0438 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u0445\n   \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445. \u0422\u0430\u043a \u043a\u0430\u043a PHP \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0441 \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 POST\/COOKIE, \u043d\u0430 \n   \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u0435\u0433\u043e \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u0430\n   GET. \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0440\u0430\u0437\u0431\u0438\u0440\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 URL, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443, \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \n   \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432\u043e \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u044e\u044e \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443 \u0441\u043a\u0440\u0438\u043f\u0442\u0430 \u0438 \u0437\u0430\u043d\u043e\u0441\u0438\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f  \n   \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432 result \u0442\u0438\u043f\u0430 array \u0438\u043b\u0438 \n   \u0432 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435.\n  "},"mb_preferred_mime_name":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u0430\u0431\u043e\u0440\u0430 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 MIME","syntax":"\n   string <b>mb_preferred_mime_name<\/b>\n    ( string $encoding\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 string MIME \u043d\u0430\u0431\u043e\u0440\u0430 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0434\u043b\u044f \n   \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438.\n  "},"mb_regex_encoding":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443 \u0434\u043b\u044f \u043c\u043d\u043e\u0433\u043e\u0431\u0430\u0439\u0442\u043e\u0432\u043e\u0433\u043e \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   mixed <b>mb_regex_encoding<\/b>\n    ([ string $encoding\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443 \u0434\u043b\u044f \u043c\u043d\u043e\u0433\u043e\u0431\u0430\u0439\u0442\u043e\u0432\u043e\u0433\u043e \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 string.\n  "},"mb_regex_set_options":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430\/\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0434\u043b\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u0444\u0443\u043d\u043a\u0446\u0438\u0439 mbregex","syntax":"\n   string <b>mb_regex_set_options<\/b>\n    ([ string $options = \"msr\"\n  ] )","desc":""},"mb_send_mail":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f","syntax":"\n   bool <b>mb_send_mail<\/b>\n    ( string $to\n   , string $subject\n   , string $message\n   [, string $additional_headers = NULL\n   [, string $additional_parameter = NULL\n  ]] )","desc":"\n   \u041f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0447\u0442\u044b. \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u044e\u0442\u0441\u044f \n   \u0438 \u043a\u043e\u0434\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u043e\u0439  mb_language(). \n   \u042d\u0442\u043e \u043e\u0431\u0435\u0440\u0442\u043a\u0430 \u0434\u043b\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0438  mail(), \u0442\u0430\u043a \u0447\u0442\u043e \u0441\u0442\u043e\u0438\u0442 \u043e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u0442\u044c\u0441\u044f\n   \u0438 \u0441 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u0438  mail().\n  "},"mb_split":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n   \u0420\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a \u0432 \u043c\u043d\u043e\u0433\u043e\u0431\u0430\u0439\u0442\u043d\u044b\u0445 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0430\u0445, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435\n  ","syntax":"\n   array <b>mb_split<\/b>\n    ( string $pattern\n   , string $string\n   [, int $limit = -1\n  ] )","desc":""},"mb_strcut":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0447\u0430\u0441\u0442\u0438 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   string <b>mb_strcut<\/b>\n    ( string $str\n   , int $start\n   [, int $length\n   [, string $encoding\n  ]] )","desc":"\n    mb_strcut() \u0432\u044b\u0447\u043b\u0435\u043d\u0438\u044f\u0435\u0442 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u0441\u0442\u0440\u043e\u043a\u0438 \u0442\u0430\u043a\u0436\u0435, \u043a\u0430\u043a \n    mb_substr(), \u043d\u043e \u043e\u043f\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0431\u0430\u0439\u0442\u0430\u043c\u0438 \u0432\u043c\u0435\u0441\u0442\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432. \u0415\u0441\u043b\u0438\n   \u043d\u0430\u0447\u0430\u043b\u043e \u0432\u044b\u0440\u0435\u0437\u0430\u0435\u043c\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u043f\u043e\u043f\u0430\u0434\u0430\u0435\u0442 \u043c\u0435\u0436\u0434\u0443 \u0431\u0430\u0439\u0442\u0430\u043c\u0438 \u043e\u0434\u043d\u043e\u0433\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430, \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u044b\u0440\u0435\u0436\u0435\u0442\n   \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0443, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0431\u0430\u0439\u0442\u0430 \u044d\u0442\u043e\u0433\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430. \u042d\u0442\u043e \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u043e\u0442 \n    substr(), \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u043e\u0441\u0442\u043e \u0432\u044b\u0440\u0435\u0436\u0435\u0442 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0443, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \n   \u0441\u0435\u0440\u0435\u0434\u0438\u043d\u044b \u0441\u0438\u043c\u0432\u043e\u043b\u0430, \u0438 \u043d\u0430\u0440\u0443\u0448\u0438\u0442 \u0442\u0435\u043c \u0441\u0430\u043c\u044b\u043c \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0431\u0430\u0439\u0442 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435.\n  "},"mb_strimwidth":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438, \u043e\u0431\u0440\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u0434\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0448\u0438\u0440\u0438\u043d\u044b","syntax":"\n   string <b>mb_strimwidth<\/b>\n    ( string $str\n   , int $start\n   , int $width\n   [, string $trimmarker\n   [, string $encoding\n  ]] )","desc":"\n   \u041e\u0431\u0440\u0435\u0437\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 string str \n   \u043f\u043e \u0448\u0438\u0440\u0438\u043d\u0435 width. \n  "},"mb_stripos":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\n   \u041f\u043e\u0438\u0441\u043a \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0434\u0440\u0443\u0433\u0443\u044e, \u043d\u0435\u0447\u0443\u0432\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u0435\u043d \u043a \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0443\n  ","syntax":"\n   int <b>mb_stripos<\/b>\n    ( string $haystack\n   , string $needle\n   [, int $offset\n   [, string $encoding\n  ]] )","desc":"\n    mb_stripos() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f\n   \u0441\u0442\u0440\u043e\u043a\u0438 needle \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 haystack.\n   \u0412 \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u043e\u0442  mb_strpos(),  mb_stripos()\n   \u043d\u0435 \u0447\u0443\u0432\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u0430 \u043a \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0443 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432. \u0415\u0441\u043b\u0438 \u0441\u0442\u0440\u043e\u043a\u0430 \n   needle \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430, \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u0435\u0440\u043d\u0435\u0442 FALSE.\n  "},"mb_stristr":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u041d\u0430\u0445\u043e\u0434\u0438\u0442 \u043f\u0435\u0440\u0432\u043e\u0435 \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u0431\u0435\u0437 \u0443\u0447\u0435\u0442\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430","syntax":"\n   string <b>mb_stristr<\/b>\n    ( string $haystack\n   , string $needle\n   [, bool $before_needle = false\n   [, string $encoding\n  ]] )","desc":"\n    mb_stristr() \u043d\u0430\u0445\u043e\u0434\u0438\u0442 \u043f\u0435\u0440\u0432\u043e\u0435 \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438\n   needle \u0432 haystack\n   \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0430\u0441\u0442\u044c haystack.\n   \u0412 \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u043e\u0442  mb_strstr(), \n    mb_stristr() \u043d\u0435 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u0440\u0435\u0433\u0438\u0441\u0442\u0440.\n   \u0415\u0441\u043b\u0438 needle \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f FALSE.\n  "},"mb_strlen":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u043b\u0438\u043d\u0443 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   int <b>mb_strlen<\/b>\n    ( string $str\n   [, string $encoding\n  ] )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u043b\u0438\u043d\u0443 \u0441\u0442\u0440\u043e\u043a\u0438 string.\n  "},"mb_strpos":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\n   \u041f\u043e\u0438\u0441\u043a \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0434\u0440\u0443\u0433\u0443\u044e\n  ","syntax":"\n   int <b>mb_strpos<\/b>\n    ( string $haystack\n   , string $needle\n   [, int $offset = 0\n   [, string $encoding\n  ]] )","desc":"\n   \u0418\u0449\u0435\u0442 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 string\n   \u0432 \u0434\u0440\u0443\u0433\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 string.\n  "},"mb_strrchr":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\n   \u041f\u043e\u0438\u0441\u043a \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0434\u0440\u0443\u0433\u0443\u044e\n  ","syntax":"\n   string <b>mb_strrchr<\/b>\n    ( string $haystack\n   , string $needle\n   [, bool $part = false\n   [, string $encoding\n  ]] )","desc":"\n    mb_strrchr() \u0438\u0449\u0435\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0435 \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438\n   needle \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 haystack\n   \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0430\u0441\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0438 haystack.\n   \u0415\u0441\u043b\u0438 needle \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430, \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 FALSE.\n  "},"mb_strrichr":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\n   \u041f\u043e\u0438\u0441\u043a \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0434\u0440\u0443\u0433\u0443\u044e, \u043d\u0435\u0447\u0443\u0432\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043a \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0443\n  ","syntax":"\n   string <b>mb_strrichr<\/b>\n    ( string $haystack\n   , string $needle\n   [, bool $part = false\n   [, string $encoding\n  ]] )","desc":"\n    mb_strrichr() \u0438\u0449\u0435\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0435 \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438\n   needle \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 haystack\n   \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0430\u0441\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0438 haystack. \u0412 \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u043e\u0442\n    mb_strrchr(),  mb_strrichr() \n   \u043d\u0435 \u0447\u0443\u0432\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u0430 \u043a \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0443 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432. \u0415\u0441\u043b\u0438 needle \n   \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430, \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 FALSE.\n  "},"mb_strripos":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\n   \u041f\u043e\u0438\u0441\u043a \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0434\u0440\u0443\u0433\u0443\u044e, \u043d\u0435\u0447\u0443\u0432\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043a \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0443\n  ","syntax":"\n   int <b>mb_strripos<\/b>\n    ( string $haystack\n   , string $needle\n   [, int $offset = 0\n   [, string $encoding\n  ]] )","desc":"\n    mb_strripos() \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u0443\u044e \u0441 \u0442\u043e\u0447\u043a\u0438 \u0437\u0440\u0435\u043d\u0438\u044f \n   \u043c\u043d\u043e\u0433\u043e\u0431\u0430\u0439\u0442\u043d\u044b\u0445 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043e\u043a \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e  strripos(), \u043e\u0441\u043d\u043e\u0432\u044b\u0432\u0430\u044f\u0441\u044c\n   \u043d\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432. \u041f\u043e\u0437\u0438\u0446\u0438\u044f \u0441\u0442\u0440\u043e\u043a\u0438 needle \n   \u0440\u0430\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0441 \u043d\u0430\u0447\u0430\u043b\u0430 \u0441\u0442\u0440\u043e\u043a\u0438 haystack. \u041f\u043e\u0437\u0438\u0446\u0438\u044f \n   \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430 0. \u0412\u0442\u043e\u0440\u043e\u0433\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430 1. \u0412 \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u043e\u0442 \n    mb_strrpos(),  mb_strripos() \u043d\u0435\n   \u0447\u0443\u0432\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u0430 \u043a \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0443.\n  "},"mb_strrpos":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\n   \u041f\u043e\u0438\u0441\u043a \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0434\u0440\u0443\u0433\u0443\u044e\n  ","syntax":"\n   int <b>mb_strrpos<\/b>\n    ( string $haystack\n   , string $needle\n   [, int $offset = 0\n   [, string $encoding\n  ]] )","desc":"\n   \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u0443\u044e \u0441 \u0442\u043e\u0447\u043a\u0438 \u0437\u0440\u0435\u043d\u0438\u044f \u043c\u043d\u043e\u0433\u043e\u0431\u0430\u0439\u0442\u043d\u044b\u0445 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043e\u043a \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e\n    strrpos() , \u043e\u0441\u043d\u043e\u0432\u044b\u0432\u0430\u044f\u0441\u044c \u043d\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432. \n   \u041f\u043e\u0437\u0438\u0446\u0438\u044f \u0441\u0442\u0440\u043e\u043a\u0438 needle\n   \u0440\u0430\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0441 \u043d\u0430\u0447\u0430\u043b\u0430 \u0441\u0442\u0440\u043e\u043a\u0438 haystack. \u041f\u043e\u0437\u0438\u0446\u0438\u044f \n   \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430 0. \u0412\u0442\u043e\u0440\u043e\u0433\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430 1. \n  "},"mb_strstr":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u041d\u0430\u0445\u043e\u0434\u0438\u0442 \u043f\u0435\u0440\u0432\u043e\u0435 \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435","syntax":"\n   string <b>mb_strstr<\/b>\n    ( string $haystack\n   , string $needle\n   [, bool $before_needle = false\n   [, string $encoding\n  ]] )","desc":"\n    mb_strstr() \u043d\u0430\u0445\u043e\u0434\u0438\u0442 \u043f\u0435\u0440\u0432\u043e\u0435 \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438\n   needle \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 haystack\n   \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0430\u0441\u0442\u044c haystack.\n   \u0415\u0441\u043b\u0438 needle \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f FALSE.\n  "},"mb_strtolower":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u041f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u043a \u043d\u0438\u0436\u043d\u0435\u043c\u0443 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0443","syntax":"\n   string <b>mb_strtolower<\/b>\n    ( string $str\n   [, string $encoding = mb_internal_encoding()\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 str, \u0431\u0443\u043a\u0432\u0435\u043d\u043d\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439\n   \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u044b \u043a \u043d\u0438\u0436\u043d\u0435\u043c\u0443 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0443.\n  "},"mb_strtoupper":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u041f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u043a \u0432\u0435\u0440\u0445\u043d\u0435\u043c\u0443 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0443","syntax":"\n   string <b>mb_strtoupper<\/b>\n    ( string $str\n   [, string $encoding = mb_internal_encoding()\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 str, \u0431\u0443\u043a\u0432\u0435\u043d\u043d\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439\n   \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u044b \u043a \u0432\u0435\u0440\u0445\u043d\u0435\u043c\u0443 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0443.\n  "},"mb_strwidth":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0448\u0438\u0440\u0438\u043d\u0443 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   int <b>mb_strwidth<\/b>\n    ( string $str\n   [, string $encoding\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0448\u0438\u0440\u0438\u043d\u0443 \u0441\u0442\u0440\u043e\u043a\u0438 string str.\n  "},"mb_substitute_character":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435\/\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u0437\u0430\u043c\u0435\u0441\u0442\u0438\u0442\u0435\u043b\u044f","syntax":"\n   mixed <b>mb_substitute_character<\/b>\n    ([ mixed $substrchar\n  ] )","desc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u0437\u0430\u043c\u0435\u0449\u0430\u044e\u0449\u0438\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u043d\u0430 \u0441\u043b\u0443\u0447\u0430\u0439, \u043a\u043e\u0433\u0434\u0430 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0430 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0437\u0430\u0434\u0430\u043d\u0430 \n   \u043d\u0435\u0432\u0435\u0440\u043d\u043e \u0438\u043b\u0438 \u043a\u043e\u0434 \u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u043d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0432 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0435 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445. \n   \u041d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0437\u0430\u043c\u0435\u043d\u0435\u043d\u044b \u043d\u0430 NULL (\u043d\u0435\u0442 \u0432\u044b\u0432\u043e\u0434\u0430),\n   \u0441\u0442\u0440\u043e\u043a\u0443 string \u0438\u043b\u0438 \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 integer\n   (\u043a\u043e\u0434 \u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u042e\u043d\u0438\u043a\u043e\u0434\u0430).\n  "},"mb_substr_count":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0439 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   int <b>mb_substr_count<\/b>\n    ( string $haystack\n   , string $needle\n   [, string $encoding\n  ] )","desc":"\n   \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0437 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0430 \n   needle \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442\u0441\u044f \u0432 \u0441\u0442\u0440\u043e\u043a\u0435\n   haystack.\n  "},"mb_substr":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0430\u0441\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   string <b>mb_substr<\/b>\n    ( string $str\n   , int $start\n   [, int $length\n   [, string $encoding\n  ]] )","desc":"\n   \u041a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442  substr() \u0434\u043b\u044f \u043c\u043d\u043e\u0433\u043e\u0431\u0430\u0439\u0442\u043e\u0432\u044b\u0445 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043e\u043a,\n   \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044f \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432. \u041f\u043e\u0437\u0438\u0446\u0438\u044f \u043e\u0442\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043e\u0442 \u043d\u0430\u0447\u0430\u043b\u0430\n   str. \u041f\u043e\u0437\u0438\u0446\u0438\u044f \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430 - 0, \u0432\u0442\u043e\u0440\u043e\u0433\u043e - 1 \u0438 \u0442.\u0434.\n  "},"mcrypt_cbc":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0428\u0438\u0444\u0440\u0443\u0435\u0442\/\u0434\u0435\u0448\u0438\u0444\u0440\u0443\u0435\u0442 \u0434\u0430\u043d\u044b\u0435 \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 CBC","syntax":"\n   string <b>mcrypt_cbc<\/b>\n    ( int $cipher\n   , string $key\n   , string $data\n   , int $mode\n   [, string $iv\n  ] )\n\n   string <b>mcrypt_cbc<\/b>\n    ( string $cipher\n   , string $key\n   , string $data\n   , int $mode\n   [, string $iv\n  ] )\n","desc":"\n   \u041f\u0435\u0440\u0432\u044b\u0439 \u043f\u0440\u043e\u0442\u043e\u0442\u0438\u043f \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043f\u0440\u0438 \u0441\u0432\u044f\u0437\u043a\u0435 \u0441 libmcrypt 2.2.x, \u0432\u0442\u043e\u0440\u043e\u0439 - \u043f\u0440\u0438 \u0441\u0432\u044f\u0437\u043a\u0435 \u0441 libmcrypt 2.4.x \u0438\u043b\u0438 \u0432\u044b\u0448\u0435.\n   \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 mode \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043b\u0438\u0431\u043e\n   MCRYPT_ENCRYPT, \u043b\u0438\u0431\u043e\n   MCRYPT_DECRYPT.\n  "},"mcrypt_cfb":{"version":"(PHP 4, PHP 5)","shortdesc":"Encrypts\/decrypts data in CFB mode","syntax":"\n   string <b>mcrypt_cfb<\/b>\n    ( int $cipher\n   , string $key\n   , string $data\n   , int $mode\n   , string $iv\n   )\n\n   string <b>mcrypt_cfb<\/b>\n    ( string $cipher\n   , string $key\n   , string $data\n   , int $mode\n   [, string $iv\n  ] )\n","desc":"\n   The first prototype is when linked against libmcrypt 2.2.x, the\n   second when linked against libmcrypt 2.4.x or higher. The\n   mode should be either\n   MCRYPT_ENCRYPT or\n   MCRYPT_DECRYPT.\n  "},"mcrypt_create_iv":{"version":"(PHP 4, PHP 5)","shortdesc":"Creates an initialization vector (IV) from a random source","syntax":"\n   string <b>mcrypt_create_iv<\/b>\n    ( int $size\n   [, int $source = MCRYPT_DEV_RANDOM\n  ] )","desc":"\n   Creates an initialization vector (IV) from a random source.\n  "},"mcrypt_decrypt":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Decrypts crypttext with given parameters","syntax":"\n   string <b>mcrypt_decrypt<\/b>\n    ( string $cipher\n   , string $key\n   , string $data\n   , string $mode\n   [, string $iv\n  ] )","desc":"\n   Decrypts the data and returns the unencrypted data.\n  "},"mcrypt_ecb":{"version":"(PHP 4, PHP 5)","shortdesc":"Deprecated: Encrypts\/decrypts data in ECB mode","syntax":"\n   string <b>mcrypt_ecb<\/b>\n    ( int $cipher\n   , string $key\n   , string $data\n   , int $mode\n   )\n\n   string <b>mcrypt_ecb<\/b>\n    ( string $cipher\n   , string $key\n   , string $data\n   , int $mode\n   [, string $iv\n  ] )\n","desc":"\n   The first prototype is when linked against libmcrypt 2.2.x, the\n   second when linked against libmcrypt 2.4.x or higher. The\n   mode should be either\n   MCRYPT_ENCRYPT or\n   MCRYPT_DECRYPT.\n  "},"mcrypt_enc_get_algorithms_name":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Returns the name of the opened algorithm","syntax":"\n   string <b>mcrypt_enc_get_algorithms_name<\/b>\n    ( resource $td\n   )","desc":"\n   This function returns the name of the algorithm.\n  "},"mcrypt_enc_get_block_size":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Returns the blocksize of the opened algorithm","syntax":"\n   int <b>mcrypt_enc_get_block_size<\/b>\n    ( resource $td\n   )","desc":"\n   Gets the blocksize of the opened algorithm.\n  "},"mcrypt_enc_get_iv_size":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Returns the size of the IV of the opened algorithm","syntax":"\n   int <b>mcrypt_enc_get_iv_size<\/b>\n    ( resource $td\n   )","desc":"\n   This function returns the size of the IV of the algorithm specified by the\n   encryption descriptor in bytes. An IV is used in cbc, cfb and ofb modes,\n   and in some algorithms in stream mode.\n  "},"mcrypt_enc_get_key_size":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Returns the maximum supported keysize of the opened mode","syntax":"\n   int <b>mcrypt_enc_get_key_size<\/b>\n    ( resource $td\n   )","desc":"\n   Gets the maximum supported key size of the algorithm in bytes.\n  "},"mcrypt_enc_get_modes_name":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Returns the name of the opened mode","syntax":"\n   string <b>mcrypt_enc_get_modes_name<\/b>\n    ( resource $td\n   )","desc":"\n   This function returns the name of the mode.\n  "},"mcrypt_enc_get_supported_key_sizes":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Returns an array with the supported keysizes of the opened algorithm","syntax":"\n   array <b>mcrypt_enc_get_supported_key_sizes<\/b>\n    ( resource $td\n   )","desc":"\n   Gets the supported key sizes of the opened algorithm.\n  "},"mcrypt_enc_is_block_algorithm_mode":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Checks whether the encryption of the opened mode works on blocks","syntax":"\n   bool <b>mcrypt_enc_is_block_algorithm_mode<\/b>\n    ( resource $td\n   )","desc":"\n   Tells whether the algorithm of the opened mode works on blocks (e.g.\n   FALSE for stream, and TRUE for cbc, cfb, ofb)..\n  "},"mcrypt_enc_is_block_algorithm":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Checks whether the algorithm of the opened mode is a block algorithm","syntax":"\n   bool <b>mcrypt_enc_is_block_algorithm<\/b>\n    ( resource $td\n   )","desc":"\n   Tells whether the algorithm of the opened mode is a block algorithm.\n  "},"mcrypt_enc_is_block_mode":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Checks whether the opened mode outputs blocks","syntax":"\n   bool <b>mcrypt_enc_is_block_mode<\/b>\n    ( resource $td\n   )","desc":"\n   Tells whether the opened mode outputs blocks (e.g. TRUE for cbc and ecb,\n   and FALSE for cfb and stream).\n  "},"mcrypt_enc_self_test":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Runs a self test on the opened module","syntax":"\n   int <b>mcrypt_enc_self_test<\/b>\n    ( resource $td\n   )","desc":"\n   This function runs the self test on the algorithm specified by the\n   descriptor td.\n  "},"mcrypt_encrypt":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Encrypts plaintext with given parameters","syntax":"\n   string <b>mcrypt_encrypt<\/b>\n    ( string $cipher\n   , string $key\n   , string $data\n   , string $mode\n   [, string $iv\n  ] )","desc":"\n   Encrypts the data and returns it.\n  "},"mcrypt_generic_deinit":{"version":"(PHP 4 >= 4.0.7, PHP 5)","shortdesc":"This function deinitializes an encryption module","syntax":"\n   bool <b>mcrypt_generic_deinit<\/b>\n    ( resource $td\n   )","desc":"\n   This function terminates encryption specified by the encryption\n   descriptor (td). It clears all buffers, but does\n   not close the module.  You need to call\n    mcrypt_module_close() yourself. (But PHP does this for\n   you at the end of the script.)\n  "},"mcrypt_generic_end":{"version":"(PHP 4 >= 4.0.2, PHP 5 <= 5.1.6)","shortdesc":"This function terminates encryption","syntax":"\n   bool <b>mcrypt_generic_end<\/b>\n    ( resource $td\n   )","desc":"\n   "},"mcrypt_generic_init":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"This function initializes all buffers needed for encryption","syntax":"\n   int <b>mcrypt_generic_init<\/b>\n    ( resource $td\n   , string $key\n   , string $iv\n   )","desc":"\n   You need to call this function before every call to\n    mcrypt_generic() or\n    mdecrypt_generic().\n  "},"mcrypt_generic":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"This function encrypts data","syntax":"\n   string <b>mcrypt_generic<\/b>\n    ( resource $td\n   , string $data\n   )","desc":"\n   This function encrypts data. The data is padded with \"\\0\"\n   to make sure the length of the data is n * blocksize. This\n   function returns the encrypted data. Note that the length\n   of the returned string can in fact be longer than the input,\n   due to the padding of the data.\n  "},"mcrypt_get_block_size":{"version":"(PHP 4, PHP 5)","shortdesc":"Gets the block size of the specified cipher","syntax":"\n   int <b>mcrypt_get_block_size<\/b>\n    ( int $cipher\n   )\n\n   int <b>mcrypt_get_block_size<\/b>\n    ( string $cipher\n   , string $mode\n   )\n","desc":"\n   The first prototype is when linked against libmcrypt 2.2.x, the\n   second when linked against libmcrypt 2.4.x or 2.5.x.\n  "},"mcrypt_get_cipher_name":{"version":"(PHP 4, PHP 5)","shortdesc":"Gets the name of the specified cipher","syntax":"\n   string <b>mcrypt_get_cipher_name<\/b>\n    ( int $cipher\n   )\n\n   string <b>mcrypt_get_cipher_name<\/b>\n    ( string $cipher\n   )\n","desc":"\n    mcrypt_get_cipher_name() is used to get the\n   name of the specified cipher.\n  "},"mcrypt_get_iv_size":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Returns the size of the IV belonging to a specific cipher\/mode combination","syntax":"\n   int <b>mcrypt_get_iv_size<\/b>\n    ( string $cipher\n   , string $mode\n   )","desc":"\n   Gets the size of the IV belonging to a specific \n   cipher\/mode combination.\n  "},"mcrypt_get_key_size":{"version":"(PHP 4, PHP 5)","shortdesc":"Gets the key size of the specified cipher","syntax":"\n   int <b>mcrypt_get_key_size<\/b>\n    ( int $cipher\n   )\n\n   int <b>mcrypt_get_key_size<\/b>\n    ( string $cipher\n   , string $mode\n   )\n","desc":"\n   The first prototype is when linked against libmcrypt 2.2.x, the\n   second when linked against libmcrypt 2.4.x or 2.5.x.\n  "},"mcrypt_list_algorithms":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Gets an array of all supported ciphers","syntax":"\n   array <b>mcrypt_list_algorithms<\/b>\n    ([ string $lib_dir = ini_get(\"mcrypt.algorithms_dir\")\n  ] )","desc":"\n   Gets the list of all supported algorithms in the\n   lib_dir parameter.\n  "},"mcrypt_list_modes":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Gets an array of all supported modes","syntax":"\n   array <b>mcrypt_list_modes<\/b>\n    ([ string $lib_dir = ini_get(\"mcrypt.modes_dir\")\n  ] )","desc":"\n   Gets the list of all supported modes in the\n   lib_dir parameter.\n  "},"mcrypt_module_close":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Closes the mcrypt module","syntax":"\n   bool <b>mcrypt_module_close<\/b>\n    ( resource $td\n   )","desc":"\n   Closes the specified encryption handle.\n  "},"mcrypt_module_get_algo_block_size":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Returns the blocksize of the specified algorithm","syntax":"\n   int <b>mcrypt_module_get_algo_block_size<\/b>\n    ( string $algorithm\n   [, string $lib_dir\n  ] )","desc":"\n   Gets the blocksize of the specified algorithm.\n  "},"mcrypt_module_get_algo_key_size":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Returns the maximum supported keysize of the opened mode","syntax":"\n   int <b>mcrypt_module_get_algo_key_size<\/b>\n    ( string $algorithm\n   [, string $lib_dir\n  ] )","desc":"\n   Gets the maximum supported keysize of the opened mode.\n  "},"mcrypt_module_get_supported_key_sizes":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Returns an array with the supported keysizes of the opened algorithm","syntax":"\n   array <b>mcrypt_module_get_supported_key_sizes<\/b>\n    ( string $algorithm\n   [, string $lib_dir\n  ] )","desc":"\n   Returns an array with the key sizes supported by the specified algorithm.\n   If it returns an empty array then all key sizes between 1 and\n    mcrypt_module_get_algo_key_size() are supported by the\n   algorithm.\n  "},"mcrypt_module_is_block_algorithm_mode":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Returns if the specified module is a block algorithm or not","syntax":"\n   bool <b>mcrypt_module_is_block_algorithm_mode<\/b>\n    ( string $mode\n   [, string $lib_dir\n  ] )","desc":"\n   This function returns TRUE if the mode is for use with block\n   algorithms, otherwise it returns FALSE. (e.g. FALSE for stream, and\n   TRUE for cbc, cfb, ofb).\n  "},"mcrypt_module_is_block_algorithm":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"This function checks whether the specified algorithm is a block algorithm","syntax":"\n   bool <b>mcrypt_module_is_block_algorithm<\/b>\n    ( string $algorithm\n   [, string $lib_dir\n  ] )","desc":"\n   This function returns TRUE if the specified algorithm is a block\n   algorithm, or FALSE if it is a stream one.\n  "},"mcrypt_module_is_block_mode":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Returns if the specified mode outputs blocks or not","syntax":"\n   bool <b>mcrypt_module_is_block_mode<\/b>\n    ( string $mode\n   [, string $lib_dir\n  ] )","desc":"\n   This function returns TRUE if the mode outputs blocks of bytes or\n   FALSE if it outputs just bytes. (e.g. TRUE for cbc and ecb, and\n   FALSE for cfb and stream).\n  "},"mcrypt_module_open":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Opens the module of the algorithm and the mode to be used","syntax":"\n   resource <b>mcrypt_module_open<\/b>\n    ( string $algorithm\n   , string $algorithm_directory\n   , string $mode\n   , string $mode_directory\n   )","desc":"\n   This function opens the module of the algorithm and the mode to be used.\n   The name of the algorithm is specified in algorithm, e.g. \"twofish\" or is\n   one of the MCRYPT_ciphername constants.  The module is closed by calling\n    mcrypt_module_close().\n  "},"mcrypt_module_self_test":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"This function runs a self test on the specified module","syntax":"\n   bool <b>mcrypt_module_self_test<\/b>\n    ( string $algorithm\n   [, string $lib_dir\n  ] )","desc":"\n   This function runs the self test on the algorithm specified.\n  "},"mcrypt_ofb":{"version":"(PHP 4, PHP 5)","shortdesc":"Encrypts\/decrypts data in OFB mode","syntax":"\n   string <b>mcrypt_ofb<\/b>\n    ( int $cipher\n   , string $key\n   , string $data\n   , int $mode\n   , string $iv\n   )\n\n   string <b>mcrypt_ofb<\/b>\n    ( string $cipher\n   , string $key\n   , string $data\n   , int $mode\n   [, string $iv\n  ] )\n","desc":"\n   The first prototype is when linked against libmcrypt 2.2.x, the\n   second when linked against libmcrypt 2.4.x or higher. The\n   mode should be either\n   MCRYPT_ENCRYPT or\n   MCRYPT_DECRYPT.\n  "},"md5_file":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 MD5-\u0445\u044d\u0448 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   string <b>md5_file<\/b>\n    ( string $filename\n   [, bool $raw_output = false\n  ] )","desc":"\n   \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 MD5-\u0445\u044d\u0448 \u0444\u0430\u0439\u043b\u0430, \u0438\u043c\u044f \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u043e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c\n   filename, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u00bb\u00a0\u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c MD5 RSA Data Security,\n   Inc. \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u044d\u0442\u043e\u0442 \u0445\u044d\u0448. \u0425\u044d\u0448 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 32-\u0437\u043d\u0430\u0447\u043d\u043e\u0435\n   \u0448\u0435\u0441\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u0435\u0440\u0438\u0447\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e.\n  "},"md5":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 MD5-\u0445\u044d\u0448 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   string <b>md5<\/b>\n    ( string $str\n   [, bool $raw_output = false\n  ] )","desc":"\n   \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 MD5-\u0445\u044d\u0448 \u0441\u0442\u0440\u043e\u043a\u0438 str \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f\n   \u00bb\u00a0\u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c MD5 RSA Data Security,\n   Inc. \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u044d\u0442\u043e\u0442 \u0445\u044d\u0448.\n  "},"mdecrypt_generic":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Decrypts data","syntax":"\n   string <b>mdecrypt_generic<\/b>\n    ( resource $td\n   , string $data\n   )","desc":"\n   This function decrypts data. Note that the length of the returned string\n   can in fact be longer than the unencrypted string, due to the padding of\n   the data.\n  "},"memcache_debug":{"version":"(PECL memcache >= 0.2.0)","shortdesc":"\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c\/\u0432\u044b\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0432\u044b\u0432\u043e\u0434 \u043e\u0442\u043b\u0430\u0434\u043e\u0447\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438","syntax":"\n   bool <b>memcache_debug<\/b>\n    ( bool $on_off\n   )","desc":"\n    memcache_debug() \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432\u044b\u0432\u043e\u0434 \u043e\u0442\u043b\u0430\u0434\u043e\u0447\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438, \u0435\u0441\u043b\u0438\n   on_off \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u0432 TRUE \u0438 \u0432\u044b\u043a\u043b\u044e\u0447\u0430\u0435\u0442, \u0435\u0441\u043b\u0438 \u0432 FALSE.\n   "},"memory_get_peak_usage":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0438\u043a\u043e\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043c\u0430 \u043f\u0430\u043c\u044f\u0442\u0438, \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0439 PHP\n  ","syntax":"\n   int <b>memory_get_peak_usage<\/b>\n    ([ bool $real_usage = false\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043c \u043f\u0430\u043c\u044f\u0442\u0438 \u0432 \u0431\u0430\u0439\u0442\u0430\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u044b\u043b \u0432\u044b\u0434\u0435\u043b\u0435\u043d PHP \u0441\u043a\u0440\u0438\u043f\u0442\u0443.\n  "},"memory_get_usage":{"version":"(PHP 4 >= 4.3.2, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0430\u043c\u044f\u0442\u0438 \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0439 PHP\n  ","syntax":"\n   int <b>memory_get_usage<\/b>\n    ([ bool $real_usage = false\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0430\u043c\u044f\u0442\u0438 \u0432 \u0431\u0430\u0439\u0442\u0430\u0445, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0431\u044b\u043b\u043e \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u043e PHP \u0441\u043a\u0440\u0438\u043f\u0442\u0443 \u043d\u0430\n   \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442.\n  "},"metaphone":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043b\u044e\u0447 metaphone \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   string <b>metaphone<\/b>\n    ( string $str\n   [, int $phonemes = 0\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043b\u044e\u0447 metaphone \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u043a\u0438 str.\n  "},"method_exists":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u043a\u043b\u0430\u0441\u0441\u0435","syntax":"\n   bool <b>method_exists<\/b>\n    ( mixed $object\n   , string $method_name\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043a\u043b\u0430\u0441\u0441\u0430, \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u0435\n   object.\n  "},"mhash_count":{"version":"(PHP 4, PHP 5)","shortdesc":"Gets the highest available hash ID","syntax":"\n   int <b>mhash_count<\/b>\n    ( void\n   )","desc":"\n   Gets the highest available hash ID.\n  "},"mhash_get_block_size":{"version":"(PHP 4, PHP 5)","shortdesc":"Gets the block size of the specified hash","syntax":"\n   int <b>mhash_get_block_size<\/b>\n    ( int $hash\n   )","desc":"\n   Gets the size of a block of the specified hash.\n  "},"mhash_get_hash_name":{"version":"(PHP 4, PHP 5)","shortdesc":"Gets the name of the specified hash","syntax":"\n   string <b>mhash_get_hash_name<\/b>\n    ( int $hash\n   )","desc":"\n   Gets the name of the specified hash.\n  "},"mhash_keygen_s2k":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"Generates a key","syntax":"\n   string <b>mhash_keygen_s2k<\/b>\n    ( int $hash\n   , string $password\n   , string $salt\n   , int $bytes\n   )","desc":"\n   Generates a key according to the given hash, using an user\n   provided password.\n  "},"mhash":{"version":"(PHP 4, PHP 5)","shortdesc":"Computes hash","syntax":"\n   string <b>mhash<\/b>\n    ( int $hash\n   , string $data\n   [, string $key\n  ] )","desc":"\n    mhash() applies a hash function specified by\n   hash to the data.\n  "},"microtime":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u043c\u0435\u0442\u043a\u0443 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 Unix \u0441 \u043c\u0438\u043a\u0440\u043e\u0441\u0435\u043a\u0443\u043d\u0434\u0430\u043c\u0438","syntax":"\n   mixed <b>microtime<\/b>\n    ([ bool $get_as_float = false\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  microtime() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u043c\u0435\u0442\u043a\u0443\n   \u0432\u0440\u0435\u043c\u0435\u043d\u0438 Unix \u0441 \u043c\u0438\u043a\u0440\u043e\u0441\u0435\u043a\u0443\u043d\u0434\u0430\u043c\u0438. \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430\n   \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0445 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u0445, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0435\u0441\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0439 \u0432\u044b\u0437\u043e\u0432 gettimeofday().\n  "},"mime_content_type":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 MIME-\u0442\u0438\u043f \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 (\u0443\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0435\u0435)","syntax":"\n   string <b>mime_content_type<\/b>\n    ( string $filename\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 MIME-\u0442\u0438\u043f \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0434\u043b\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f\n   \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 magic.mime. \n  "},"min":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041d\u0430\u0445\u043e\u0434\u0438\u0442 \u043d\u0430\u0438\u043c\u0435\u043d\u044c\u0448\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435","syntax":"\n    mixed <b>min<\/b>\n     ( array $values\n    )\n\n    mixed <b>min<\/b>\n     ( mixed $value1\n    , mixed $value2\n    [, mixed $...\n   ] )\n","desc":"\n   \u0415\u0441\u043b\u0438 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u043f\u0435\u0440\u0435\u0434\u0430\u043d \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d - \u043c\u0430\u0441\u0441\u0438\u0432 \u0447\u0438\u0441\u0435\u043b,  min()\n   \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0430\u0438\u043c\u0435\u043d\u044c\u0448\u0435\u0435 \u0438\u0437 \u043d\u0438\u0445. \u0415\u0441\u043b\u0438 \u043f\u0435\u0440\u0432\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 - integer \u0438\u043b\u0438 float, \u0442\u043e \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\n   \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0445\u043e\u0442\u044f \u0431\u044b \u0435\u0449\u0451 \u043e\u0434\u0438\u043d. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u044f  min() \u0432\u0435\u0440\u043d\u0451\u0442 \u043d\u0430\u0438\u043c\u0435\u043d\u044c\u0448\u0435\u0435 \u0438\u0437 \u043d\u0438\u0445.\n  "},"ming_keypress":{"version":"(PHP 5 <= 5.3.0, PECL ming SVN)","shortdesc":"Returns the action flag for keyPress(char)","syntax":"\n   int <b>ming_keypress<\/b>\n    ( string $char\n   )","desc":""},"ming_setcubicthreshold":{"version":"(PHP 4 >= 4.0.5, PHP 5, PECL ming SVN)","shortdesc":"\n   Set cubic threshold\n  ","syntax":"\n   void <b>ming_setcubicthreshold<\/b>\n    ( int $threshold\n   )","desc":"\n   Sets the threshold error for drawing cubic beziers.\n  "},"ming_setscale":{"version":"(PHP 4 >= 4.0.5, PHP 5, PECL ming SVN)","shortdesc":"\n   Set the global scaling factor.\n  ","syntax":"\n   void <b>ming_setscale<\/b>\n    ( float $scale\n   )","desc":"\n   Sets the scale of the output SWF. Inside the SWF file, coordinates are\n   measured in TWIPS, rather than PIXELS. There are 20 TWIPS in 1 pixel.\n  "},"ming_setswfcompression":{"version":"(PHP 5.2.1-5.3.0, PECL ming SVN)","shortdesc":"Sets the SWF output compression","syntax":"\n   void <b>ming_setswfcompression<\/b>\n    ( int $level\n   )","desc":"\n   Sets the SWF output compression level.\n  "},"ming_useconstants":{"version":"(PHP 5 <= 5.3.0, PECL ming SVN)","shortdesc":"Use constant pool","syntax":"\n   void <b>ming_useconstants<\/b>\n    ( int $use\n   )","desc":""},"ming_useswfversion":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.3.0, PECL ming SVN)","shortdesc":"Sets the SWF version","syntax":"\n   void <b>ming_useswfversion<\/b>\n    ( int $version\n   )","desc":"\n   Sets the SWF version to be used in the movie. This affect the bahaviour\n   of Action Script.\n  "},"mkdir":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e","syntax":"\n   bool <b>mkdir<\/b>\n    ( string $pathname\n   [, int $mode = 0777\n   [, bool $recursive = false\n   [, resource $context\n  ]]] )","desc":"\n   \u041f\u044b\u0442\u0430\u0435\u0442\u0441\u044f \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e, \u0437\u0430\u0434\u0430\u043d\u043d\u0443\u044e \u0432 pathname.\n  "},"mktime":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0435\u0442\u043a\u0443 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 Unix \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0434\u0430\u0442\u044b","syntax":"\n   int <b>mktime<\/b>\n    ([ int $hour = date(\"H\")\n   [, int $minute = date(\"i\")\n   [, int $second = date(\"s\")\n   [, int $month = date(\"n\")\n   [, int $day = date(\"j\")\n   [, int $year = date(\"Y\")\n   [, int $is_dst = -1\n  ]]]]]]] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0435\u0442\u043a\u0443 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 Unix, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0443\u044e \u0434\u0430\u0442\u0435 \u0438\n   \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430\u043c\u0438.\n   \u041c\u0435\u0442\u043a\u0430 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 - \u044d\u0442\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e, \u0440\u0430\u0432\u043d\u043e\u0435 \u0440\u0430\u0437\u043d\u0438\u0446\u0435 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0430\u0445 \u043c\u0435\u0436\u0434\u0443\n   \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0434\u0430\u0442\u043e\u0439\/\u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c \u0438 \u043d\u0430\u0447\u0430\u043b\u043e\u043c \u042d\u043f\u043e\u0445\u0438 Unix (The Unix Epoch,\n   1 \u044f\u043d\u0432\u0430\u0440\u044f 1970 00:00:00 GMT).\n  "},"money_format":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0424\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u0443\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u043a\u0430\u043a \u0434\u0435\u043d\u0435\u0436\u043d\u0443\u044e \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u0443","syntax":"\n   string <b>money_format<\/b>\n    ( string $format\n   , float $number\n   )","desc":"\n    money_format() \u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u0443\u0435\u0442 \u0447\u0438\u0441\u043b\u043e\n   number \u043a\u0430\u043a \u0434\u0435\u043d\u0435\u0436\u043d\u0443\u044e \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u0443.\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e  strfmon() \u044f\u0437\u044b\u043a\u0430 C,\n   \u043d\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u0437\u0430 \u043e\u0434\u0438\u043d \u0432\u044b\u0437\u043e\u0432.\n  "},"move_uploaded_file":{"version":"(PHP 4 >= 4.0.3, PHP 5)","shortdesc":"\u041f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u0435\u0442 \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u0432 \u043d\u043e\u0432\u043e\u0435 \u043c\u0435\u0441\u0442\u043e","syntax":"\n   bool <b>move_uploaded_file<\/b>\n    ( string $filename\n   , string $destination\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0444\u0430\u0439\u043b\n   filename \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u043c \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\n   (\u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u043c \u043f\u043e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0443 HTTP POST). \u0415\u0441\u043b\u0438 \u0444\u0430\u0439\u043b \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e\n   \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440, \u043e\u043d \u0431\u0443\u0434\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0451\u043d \u0432 \u043c\u0435\u0441\u0442\u043e, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0435\n   \u0432 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0435 destination.\n  "},"mqseries_back":{"version":"(PECL mqseries >= 0.10.0)","shortdesc":"MQSeries MQBACK","syntax":"\n   void <b>mqseries_back<\/b>\n    ( resource $hconn\n   , resource &$compCode\n   , resource &$reason\n   )","desc":"\n   The\n    mqseries_back()\n   (MQBACK) call indicates to the queue manager that all the message gets and\n   puts that have occurred since the last syncpoint are to be backed out.\n   Messages put as part of a unit of work are deleted; messages retrieved as\n   part of a unit of work are reinstated on the queue.\n  "},"mqseries_begin":{"version":"(PECL mqseries >= 0.10.0)","shortdesc":"MQseries MQBEGIN","syntax":"\n   void <b>mqseries_begin<\/b>\n    ( resource $hconn\n   , array $beginOptions\n   , resource &$compCode\n   , resource &$reason\n   )","desc":"\n   The\n    mqseries_begin()\n   (MQBEGIN) call begins a unit of work that is coordinated by the queue\n   manager, and that may involve external resource managers.\n  "},"mqseries_close":{"version":"(PECL mqseries >= 0.10.0)","shortdesc":"MQSeries MQCLOSE","syntax":"\n   void <b>mqseries_close<\/b>\n    ( resource $hconn\n   , resource $hobj\n   , int $options\n   , resource &$compCode\n   , resource &$reason\n   )","desc":"\n   The\n    mqseries_close()\n   (MQCLOSE) call relinquishes access to an object, and is the inverse of the\n    mqseries_open()\n   (MQOPEN) call.\n  "},"mqseries_cmit":{"version":"(PECL mqseries >= 0.10.0)","shortdesc":"MQSeries MQCMIT","syntax":"\n   void <b>mqseries_cmit<\/b>\n    ( resource $hconn\n   , resource &$compCode\n   , resource &$reason\n   )","desc":"\n   The\n    mqseries_cmit()\n   (MQCMIT) call indicates to the queue manager that the application has reached\n   a syncpoint, and that all of the message gets and puts that have occurred\n   since the last syncpoint are to be made permanent. Messages put as part of a\n   unit of work are made available to other applications; messages retrieved as\n   part of a unit of work are deleted.\n  "},"mqseries_conn":{"version":"(PECL mqseries >= 0.10.0)","shortdesc":"MQSeries MQCONN","syntax":"\n   void <b>mqseries_conn<\/b>\n    ( string $qManagerName\n   , resource &$hconn\n   , resource &$compCode\n   , resource &$reason\n   )","desc":"\n   The\n    mqseries_conn()\n   (MQCONN) call connects an application program to a queue manager. It provides\n   a queue manager connection handle, which is used by the application on\n   subsequent message queuing calls.\n  "},"mqseries_connx":{"version":"(PECL mqseries >= 0.10.0)","shortdesc":"MQSeries MQCONNX","syntax":"\n   void <b>mqseries_connx<\/b>\n    ( string $qManagerName\n   , array &$connOptions\n   , resource &$hconn\n   , resource &$compCode\n   , resource &$reason\n   )","desc":"\n   The\n    mqseries_connx()\n   (MQCONNX) call connects an application program to a queue manager. It\n   provides a queue manager connection handle, which is used by the application\n   on subsequent MQ calls.\n  "},"mqseries_disc":{"version":"(PECL mqseries >= 0.10.0)","shortdesc":"MQSeries MQDISC","syntax":"\n   void <b>mqseries_disc<\/b>\n    ( resource $hconn\n   , resource &$compCode\n   , resource &$reason\n   )","desc":"\n   The\n    mqseries_disc()\n   (MQDISC) call breaks the connection between the queue manager and the\n   application program, and is the inverse of the\n    mqseries_conn()\n   (MQCONN) or\n    mqseries_connx()\n   (MQCONNX) call.\n  "},"mqseries_get":{"version":"(PECL mqseries >= 0.10.0)","shortdesc":"MQSeries MQGET","syntax":"\n   void <b>mqseries_get<\/b>\n    ( resource $hConn\n   , resource $hObj\n   , array &$md\n   , array &$gmo\n   , int &$bufferLength\n   , string &$msg\n   , int &$data_length\n   , resource &$compCode\n   , resource &$reason\n   )","desc":"\n   The\n    mqseries_get()\n   (MQGET) call retrieves a message from a local queue that has been opened\n   using the\n    mqseries_open()\n   (MQOPEN) call\n  "},"mqseries_inq":{"version":"(PECL mqseries >= 0.10.0)","shortdesc":"MQSeries MQINQ","syntax":"\n   void <b>mqseries_inq<\/b>\n    ( resource $hconn\n   , resource $hobj\n   , int $selectorCount\n   , array $selectors\n   , int $intAttrCount\n   , resource &$intAttr\n   , int $charAttrLength\n   , resource &$charAttr\n   , resource &$compCode\n   , resource &$reason\n   )","desc":"\n   The\n    mqseries_inq()\n   (MQINQ) call returns an array of integers and a set of character strings\n   containing the attributes of an object.\n  "},"mqseries_open":{"version":"(PECL mqseries >= 0.10.0)","shortdesc":"MQSeries MQOPEN","syntax":"\n   void <b>mqseries_open<\/b>\n    ( resource $hconn\n   , array &$objDesc\n   , int $option\n   , resource &$hobj\n   , resource &$compCode\n   , resource &$reason\n   )","desc":"\n   The\n    mqseries_open()\n   (MQOPEN) call establishes access to an object.\n  "},"mqseries_put":{"version":"(PECL mqseries >= 0.10.0)","shortdesc":"MQSeries MQPUT","syntax":"\n   void <b>mqseries_put<\/b>\n    ( resource $hConn\n   , resource $hObj\n   , array &$md\n   , array &$pmo\n   , string $message\n   , resource &$compCode\n   , resource &$reason\n   )","desc":"\n   The\n    mqseries_put()\n   (MQPUT) call puts a message on a queue or distribution list. The queue or\n   distribution list must already be open.\n  "},"mqseries_put1":{"version":"(PECL mqseries >= 0.10.0)","shortdesc":"MQSeries MQPUT1","syntax":"\n   void <b>mqseries_put1<\/b>\n    ( resource $hconn\n   , resource &$objDesc\n   , resource &$msgDesc\n   , resource &$pmo\n   , string $buffer\n   , resource &$compCode\n   , resource &$reason\n   )","desc":"\n   The\n    mqseries_put1()\n   (MQPUT1) call puts one message on a queue. The queue need not be open.\n  "},"mqseries_set":{"version":"(PECL mqseries >= 0.10.0)","shortdesc":"MQSeries MQSET","syntax":"\n   void <b>mqseries_set<\/b>\n    ( resource $hconn\n   , resource $hobj\n   , int $selectorcount\n   , array $selectors\n   , int $intattrcount\n   , array $intattrs\n   , int $charattrlength\n   , array $charattrs\n   , resource &$compCode\n   , resource &$reason\n   )","desc":"\n   The  mqseries_set()\n   (MQSET) call is used to change the attributes of an object represented by a\n   handle. The object must be a queue.\n  "},"mqseries_strerror":{"version":"(PECL mqseries >= 0.10.0)","shortdesc":"Returns the error message corresponding to a result code (MQRC).","syntax":"\n   string <b>mqseries_strerror<\/b>\n    ( int $reason\n   )","desc":"\n    mqseries_strerror()\n   returns the message that correspond to the reason result code.\n  "},"msession_connect":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)","shortdesc":"Connect to msession server","syntax":"\n   bool <b>msession_connect<\/b>\n    ( string $host\n   , string $port\n   )","desc":""},"msession_count":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)","shortdesc":"Get session count","syntax":"\n   int <b>msession_count<\/b>\n    ( void\n   )","desc":""},"msession_create":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)","shortdesc":"Create a session","syntax":"\n   bool <b>msession_create<\/b>\n    ( string $session\n   [, string $classname\n   [, string $data\n  ]] )","desc":""},"msession_destroy":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)","shortdesc":"Destroy a session","syntax":"\n   bool <b>msession_destroy<\/b>\n    ( string $name\n   )","desc":""},"msession_disconnect":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)","shortdesc":"Close connection to msession server","syntax":"\n   void <b>msession_disconnect<\/b>\n    ( void\n   )","desc":""},"msession_find":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)","shortdesc":"Find all sessions with name and value","syntax":"\n   array <b>msession_find<\/b>\n    ( string $name\n   , string $value\n   )","desc":""},"msession_get_array":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)","shortdesc":"Get array of msession variables","syntax":"\n   array <b>msession_get_array<\/b>\n    ( string $session\n   )","desc":""},"msession_get_data":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)","shortdesc":"Get data session unstructured data","syntax":"\n   string <b>msession_get_data<\/b>\n    ( string $session\n   )","desc":""},"msession_get":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)","shortdesc":"Get value from session","syntax":"\n   string <b>msession_get<\/b>\n    ( string $session\n   , string $name\n   , string $value\n   )","desc":""},"msession_inc":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)","shortdesc":"Increment value in session","syntax":"\n   string <b>msession_inc<\/b>\n    ( string $session\n   , string $name\n   )","desc":""},"msession_list":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)","shortdesc":"List all sessions","syntax":"\n   array <b>msession_list<\/b>\n    ( void\n   )","desc":""},"msession_listvar":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)","shortdesc":"List sessions with variable","syntax":"\n   array <b>msession_listvar<\/b>\n    ( string $name\n   )","desc":"\n   Used for searching sessions with common attributes.\n  "},"msession_lock":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)","shortdesc":"Lock a session","syntax":"\n   int <b>msession_lock<\/b>\n    ( string $name\n   )","desc":""},"msession_plugin":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)","shortdesc":"Call an escape function within the msession personality plugin","syntax":"\n   string <b>msession_plugin<\/b>\n    ( string $session\n   , string $val\n   [, string $param\n  ] )","desc":""},"msession_randstr":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)","shortdesc":"Get random string","syntax":"\n   string <b>msession_randstr<\/b>\n    ( int $param\n   )","desc":""},"msession_set_array":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)","shortdesc":"Set msession variables from an array","syntax":"\n   void <b>msession_set_array<\/b>\n    ( string $session\n   , array $tuples\n   )","desc":""},"msession_set_data":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)","shortdesc":"Set data session unstructured data","syntax":"\n   bool <b>msession_set_data<\/b>\n    ( string $session\n   , string $value\n   )","desc":""},"msession_set":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)","shortdesc":"Set value in session","syntax":"\n   bool <b>msession_set<\/b>\n    ( string $session\n   , string $name\n   , string $value\n   )","desc":""},"msession_timeout":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)","shortdesc":"Set\/get session timeout","syntax":"\n   int <b>msession_timeout<\/b>\n    ( string $session\n   [, int $param\n  ] )","desc":""},"msession_uniq":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)","shortdesc":"Get unique id","syntax":"\n   string <b>msession_uniq<\/b>\n    ( int $param\n   [, string $classname\n   [, string $data\n  ]] )","desc":""},"msession_unlock":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)","shortdesc":"Unlock a session","syntax":"\n   int <b>msession_unlock<\/b>\n    ( string $session\n   , int $key\n   )","desc":""},"msg_get_queue":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Create or attach to a message queue","syntax":"\n   resource <b>msg_get_queue<\/b>\n    ( int $key\n   [, int $perms = 0666\n  ] )","desc":"\n    msg_get_queue() returns an id that can be used to\n   access the System V message queue with the given\n   key. The first call creates the message queue with\n   the optional perms.\n   A second call to  msg_get_queue() for the same\n   key will return a different message queue\n   identifier, but both identifiers access the same underlying message\n   queue.\n  "},"msg_queue_exists":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"Check whether a message queue exists","syntax":"\n   bool <b>msg_queue_exists<\/b>\n    ( int $key\n   )","desc":"\n   Checks whether the message queue key exists.\n  "},"msg_receive":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Receive a message from a message queue","syntax":"\n   bool <b>msg_receive<\/b>\n    ( resource $queue\n   , int $desiredmsgtype\n   , int &$msgtype\n   , int $maxsize\n   , mixed &$message\n   [, bool $unserialize = true\n   [, int $flags = 0\n   [, int &$errorcode\n  ]]] )","desc":"\n    msg_receive() will receive the first message from the\n   specified queue of the type specified by\n   desiredmsgtype.\n  "},"msg_remove_queue":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Destroy a message queue","syntax":"\n   bool <b>msg_remove_queue<\/b>\n    ( resource $queue\n   )","desc":"\n    msg_remove_queue() destroys the message queue specified\n   by the queue.  Only use this function when all\n   processes have finished working with the message queue and you need to\n   release the system resources held by it.\n  "},"msg_send":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Send a message to a message queue","syntax":"\n   bool <b>msg_send<\/b>\n    ( resource $queue\n   , int $msgtype\n   , mixed $message\n   [, bool $serialize = true\n   [, bool $blocking = true\n   [, int &$errorcode\n  ]]] )","desc":"\n    msg_send() sends a message of type\n   msgtype (which MUST be greater than 0) to\n   the message queue specified by queue.\n  "},"msg_set_queue":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Set information in the message queue data structure","syntax":"\n   bool <b>msg_set_queue<\/b>\n    ( resource $queue\n   , array $data\n   )","desc":"\n    msg_set_queue() allows you to change the values of the\n   msg_perm.uid, msg_perm.gid, msg_perm.mode and msg_qbytes fields of the\n   underlying message queue data structure.\n  "},"msg_stat_queue":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Returns information from the message queue data structure","syntax":"\n   array <b>msg_stat_queue<\/b>\n    ( resource $queue\n   )","desc":"\n    msg_stat_queue() returns the message queue meta data\n   for the message queue specified by the queue.\n   This is useful, for example, to determine which process sent the message\n   that was just received.\n  "},"msql_affected_rows":{"version":"(PHP 4, PHP 5)","shortdesc":"Returns number of affected rows","syntax":"\n   int <b>msql_affected_rows<\/b>\n    ( resource $result\n   )","desc":"\n   Returns number of affected rows by the last SELECT, UPDATE or DELETE\n   query associated with result.\n  "},"msql_close":{"version":"(PHP 4, PHP 5)","shortdesc":"Close mSQL connection","syntax":"\n   bool <b>msql_close<\/b>\n    ([ resource $link_identifier\n  ] )","desc":"\n    msql_close() closes the non-persistent connection to \n   the mSQL server that's associated with the specified link identifier.\n  "},"msql_connect":{"version":"(PHP 4, PHP 5)","shortdesc":"Open mSQL connection","syntax":"\n   resource <b>msql_connect<\/b>\n    ([ string $hostname\n  ] )","desc":"\n    msql_connect() establishes a connection to a mSQL \n   server.\n  "},"msql_create_db":{"version":"(PHP 4, PHP 5)","shortdesc":"Create mSQL database","syntax":"\n    bool <b>msql_create_db<\/b>\n     ( string $database_name\n    [, resource $link_identifier\n   ] )","desc":"\n    msql_create_db() attempts to create a new database on \n   the mSQL server.\n  "},"msql_createdb":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  msql_create_db()","syntax":"","desc":""},"msql_data_seek":{"version":"(PHP 4, PHP 5)","shortdesc":"Move internal row pointer","syntax":"\n   bool <b>msql_data_seek<\/b>\n    ( resource $result\n   , int $row_number\n   )","desc":"\n    msql_data_seek() moves the internal row\n   pointer of the mSQL result associated with the specified query\n   identifier to point to the specified row number.  The next call\n   to  msql_fetch_row() would return that\n   row.\n  "},"msql_db_query":{"version":"(PHP 4, PHP 5)","shortdesc":"Send mSQL query","syntax":"\n   resource <b>msql_db_query<\/b>\n    ( string $database\n   , string $query\n   [, resource $link_identifier\n  ] )","desc":"\n    msql_db_query() selects a database and executes a query\n   on it.\n  "},"msql_dbname":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  msql_result()","syntax":"","desc":""},"msql_drop_db":{"version":"(PHP 4, PHP 5)","shortdesc":"Drop (delete) mSQL database","syntax":"\n   bool <b>msql_drop_db<\/b>\n    ( string $database_name\n   [, resource $link_identifier\n  ] )","desc":"\n    msql_drop_db() attempts to drop (remove) a database\n   from the mSQL server.\n  "},"msql_error":{"version":"(PHP 4, PHP 5)","shortdesc":"Returns error message of last msql call","syntax":"\n   string <b>msql_error<\/b>\n    ( void\n   )","desc":"\n    msql_error() returns the last issued error by the mSQL\n   server. Note that only the last error message is accessible with \n    msql_error().\n  "},"msql_fetch_array":{"version":"(PHP 4, PHP 5)","shortdesc":"Fetch row as array","syntax":"\n   array <b>msql_fetch_array<\/b>\n    ( resource $result\n   [, int $result_type\n  ] )","desc":"\n    msql_fetch_array() is an extended version of\n    msql_fetch_row().  In addition to storing the\n   data in the numeric indices of the result array, it also stores\n   the data in associative indices, using the field names as keys.\n  "},"msql_fetch_field":{"version":"(PHP 4, PHP 5)","shortdesc":"Get field information","syntax":"\n   object <b>msql_fetch_field<\/b>\n    ( resource $result\n   [, int $field_offset = 0\n  ] )","desc":"  \n    msql_fetch_field() can be used in order to obtain \n   information about fields in a certain query result.  \n  "},"msql_fetch_object":{"version":"(PHP 4, PHP 5)","shortdesc":"Fetch row as object","syntax":"\n   object <b>msql_fetch_object<\/b>\n    ( resource $result\n   \n   )","desc":"\n    msql_fetch_object() is similar to\n    msql_fetch_array(), with one difference - an\n   object is returned, instead of an array.  Indirectly, that means\n   that you can only access the data by the field names, and not by\n   their offsets (numbers are illegal property names).\n  "},"msql_fetch_row":{"version":"(PHP 4, PHP 5)","shortdesc":"Get row as enumerated array","syntax":"\n   array <b>msql_fetch_row<\/b>\n    ( resource $result\n   \n   )","desc":"\n    msql_fetch_row() fetches one row of data from\n   the result associated with the specified query identifier.  The\n   row is returned as an array.  Each result column is stored in an\n   array offset, starting at offset 0.\n  "},"msql_field_flags":{"version":"(PHP 4, PHP 5)","shortdesc":"Get field flags","syntax":"\n   string <b>msql_field_flags<\/b>\n    ( resource $result\n   , int $field_offset\n   )","desc":"\n    msql_field_flags() returns the field flags of\n   the specified field. \n  "},"msql_field_len":{"version":"(PHP 4, PHP 5)","shortdesc":"Get field length","syntax":"\n   int <b>msql_field_len<\/b>\n    ( resource $result\n   , int $field_offset\n   )","desc":"\n    msql_field_len() returns the length of the specified \n   field.\n  "},"msql_field_name":{"version":"(PHP 4, PHP 5)","shortdesc":"Get the name of the specified field in a result","syntax":"\n   string <b>msql_field_name<\/b>\n    ( resource $result\n   , int $field_offset\n   )","desc":"\n    msql_field_name() gets the name of the specified field\n   index.\n  "},"msql_field_seek":{"version":"(PHP 4, PHP 5)","shortdesc":"Set field offset","syntax":"\n   bool <b>msql_field_seek<\/b>\n    ( resource $result\n   , int $field_offset\n   )","desc":"\n   Seeks to the specified field offset. If the next call to\n    msql_fetch_field() won't include a field offset, this \n   field would be returned.\n  "},"msql_field_table":{"version":"(PHP 4, PHP 5)","shortdesc":"Get table name for field","syntax":"\n   int <b>msql_field_table<\/b>\n    ( resource $result\n   , int $field_offset\n   )","desc":"\n   Returns the name of the table that the specified field is in.\n  "},"msql_field_type":{"version":"(PHP 4, PHP 5)","shortdesc":"Get field type","syntax":"\n   string <b>msql_field_type<\/b>\n    ( resource $result\n   , int $field_offset\n   )","desc":"\n    msql_field_type() gets the type of the specified field\n   index.\n  "},"msql_fieldflags":{"version":"(PHP 4, PHP 5)","shortdesc":"Alias of  msql_field_flags()","syntax":"","desc":""},"msql_fieldlen":{"version":"(PHP 4, PHP 5)","shortdesc":"Alias of  msql_field_len()","syntax":"","desc":""},"msql_fieldname":{"version":"(PHP 4, PHP 5)","shortdesc":"Alias of  msql_field_name()","syntax":"","desc":""},"msql_fieldtable":{"version":"(PHP 4, PHP 5)","shortdesc":"Alias of  msql_field_table()","syntax":"","desc":""},"msql_fieldtype":{"version":"(PHP 4, PHP 5)","shortdesc":"Alias of  msql_field_type()","syntax":"","desc":""},"msql_free_result":{"version":"(PHP 4, PHP 5)","shortdesc":"Free result memory","syntax":"\n   bool <b>msql_free_result<\/b>\n    ( resource $result\n   )","desc":"\n    msql_free_result() frees the memory associated\n   with query_identifier.  When PHP completes a\n   request, this memory is freed automatically, so you only need to\n   call this function when you want to make sure you don't use too\n   much memory while the script is running.\n  "},"msql_list_dbs":{"version":"(PHP 4, PHP 5)","shortdesc":"List mSQL databases on server","syntax":"\n   resource <b>msql_list_dbs<\/b>\n    ([ resource $link_identifier\n  ] )","desc":"\n    msql_list_tables() lists the databases available on the\n   specified link_identifier. \n  "},"msql_list_fields":{"version":"(PHP 4, PHP 5)","shortdesc":"List result fields","syntax":"\n   resource <b>msql_list_fields<\/b>\n    ( string $database\n   , string $tablename\n   [, resource $link_identifier\n  ] )","desc":"\n    msql_list_fields() returns information about the given table.\n  "},"msql_list_tables":{"version":"(PHP 4, PHP 5)","shortdesc":"List tables in an mSQL database","syntax":"\n   resource <b>msql_list_tables<\/b>\n    ( string $database\n   [, resource $link_identifier\n  ] )","desc":"\n    msql_list_tables() lists the tables on the specified\n   database. \n  "},"msql_num_fields":{"version":"(PHP 4, PHP 5)","shortdesc":"Get number of fields in result","syntax":"\n   int <b>msql_num_fields<\/b>\n    ( resource $result\n   )","desc":"\n    msql_num_fields() returns the number of fields\n   in a result set.\n  "},"msql_num_rows":{"version":"(PHP 4, PHP 5)","shortdesc":"Get number of rows in result","syntax":"\n   int <b>msql_num_rows<\/b>\n    ( resource $query_identifier\n   )","desc":"\n    msql_num_rows() returns the number of rows in\n   a result set.\n  "},"msql_numfields":{"version":"(PHP 4, PHP 5)","shortdesc":"Alias of  msql_num_fields()","syntax":"","desc":""},"msql_numrows":{"version":"(PHP 4, PHP 5)","shortdesc":"Alias of  msql_num_rows()","syntax":"","desc":""},"msql_pconnect":{"version":"(PHP 4, PHP 5)","shortdesc":"Open persistent mSQL connection","syntax":"\n   resource <b>msql_pconnect<\/b>\n    ([ string $hostname\n  ] )","desc":" \n    msql_pconnect() acts very much like\n    msql_connect() with two major differences.\n  "},"msql_query":{"version":"(PHP 4, PHP 5)","shortdesc":"Send mSQL query","syntax":"\n   resource <b>msql_query<\/b>\n    ( string $query\n   [, resource $link_identifier\n  ] )","desc":"\n    msql_query() sends a query to the currently active \n   database on the server that's associated with the specified link \n   identifier.\n  "},"msql_regcase":{"version":"(PHP 4, PHP 5)","shortdesc":"Alias of  sql_regcase()","syntax":"","desc":""},"msql_result":{"version":"(PHP 4, PHP 5)","shortdesc":"Get result data","syntax":"\n   string <b>msql_result<\/b>\n    ( resource $result\n   , int $row\n   [, mixed $field\n  ] )","desc":" \n    msql_result() returns the contents of one cell from a \n   mSQL result set.  \n  "},"msql_select_db":{"version":"(PHP 4, PHP 5)","shortdesc":"Select mSQL database","syntax":"\n   bool <b>msql_select_db<\/b>\n    ( string $database_name\n   [, resource $link_identifier\n  ] )","desc":"  \n    msql_select_db() sets the current active database on \n   the server that's associated with the specified\n   link_identifier.\n  "},"msql_tablename":{"version":"(PHP 4, PHP 5)","shortdesc":"Alias of  msql_result()","syntax":"","desc":""},"msql":{"version":"(PHP 4, PHP 5)","shortdesc":"Alias of  msql_db_query()","syntax":"","desc":""},"mssql_bind":{"version":"(PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Adds a parameter to a stored procedure or a remote stored procedure","syntax":"\n   bool <b>mssql_bind<\/b>\n    ( resource $stmt\n   , string $param_name\n   , mixed &$var\n   , int $type\n   [, bool $is_output = false\n   [, bool $is_null = false\n   [, int $maxlen = -1\n  ]]] )","desc":"\n   Binds a parameter to a stored procedure or a remote stored procedure.\n  "},"mssql_close":{"version":"(PHP 4, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Close MS SQL Server connection","syntax":"\n   bool <b>mssql_close<\/b>\n    ([ resource $link_identifier\n  ] )","desc":"\n   Closes the link to a MS SQL Server database that's associated with the\n   specified link identifier.  If the link identifier isn't specified, the\n   last opened link is assumed.\n  "},"mssql_connect":{"version":"(PHP 4, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Open MS SQL server connection","syntax":"\n   resource <b>mssql_connect<\/b>\n    ([ string $servername\n   [, string $username\n   [, string $password\n   [, bool $new_link = false\n  ]]]] )","desc":"\n    mssql_connect() establishes a connection to a\n   MS SQL server.\n  "},"mssql_data_seek":{"version":"(PHP 4, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Moves internal row pointer","syntax":"\n   bool <b>mssql_data_seek<\/b>\n    ( resource $result_identifier\n   , int $row_number\n   )","desc":"\n    mssql_data_seek() moves the internal row\n   pointer of the MS SQL result associated with the specified result\n   identifier to point to the specified row number, first row being\n   number 0. The next call to  mssql_fetch_row()\n   would return that row.\n  "},"mssql_execute":{"version":"(PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Executes a stored procedure on a MS SQL server database","syntax":"\n   mixed <b>mssql_execute<\/b>\n    ( resource $stmt\n   [, bool $skip_results = false\n  ] )","desc":"\n   Executes a stored procedure on a MS SQL server database\n  "},"mssql_fetch_array":{"version":"(PHP 4, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Fetch a result row as an associative array, a numeric array, or both","syntax":"\n   array <b>mssql_fetch_array<\/b>\n    ( resource $result\n   [, int $result_type = MSSQL_BOTH\n  ] )","desc":"\n    mssql_fetch_array() is an extended version of\n    mssql_fetch_row().  In addition to storing the\n   data in the numeric indices of the result array, it also stores\n   the data in associative indices, using the field names as keys.\n  "},"mssql_fetch_assoc":{"version":"(PHP 4 >= 4.2.0, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Returns an associative array of the current row in the result","syntax":"\n   array <b>mssql_fetch_assoc<\/b>\n    ( resource $result_id\n   )","desc":"\n   Returns an associative array that corresponds to the fetched row and moves\n   the internal data pointer ahead.  mssql_fetch_assoc() is\n   equivalent to calling  mssql_fetch_array() with\n   MSSQL_ASSOC for the optional second parameter.\n  "},"mssql_fetch_batch":{"version":"(PHP 4 >= 4.0.4, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Returns the next batch of records","syntax":"\n   int <b>mssql_fetch_batch<\/b>\n    ( resource $result\n   )","desc":"\n   Returns the next batch of records.\n  "},"mssql_fetch_field":{"version":"(PHP 4, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Get field information","syntax":"\n   object <b>mssql_fetch_field<\/b>\n    ( resource $result\n   [, int $field_offset = -1\n  ] )","desc":"\n    mssql_fetch_field() can be used in order to\n   obtain information about fields in a certain query result. \n  "},"mssql_fetch_object":{"version":"(PHP 4, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Fetch row as object","syntax":"\n   object <b>mssql_fetch_object<\/b>\n    ( resource $result\n   )","desc":"\n    mssql_fetch_object() is similar to\n    mssql_fetch_array(), with one difference - an\n   object is returned, instead of an array.  Indirectly, that means\n   that you can only access the data by the field names, and not by\n   their offsets (numbers are illegal property names).\n  "},"mssql_fetch_row":{"version":"(PHP 4, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Get row as enumerated array","syntax":"\n   array <b>mssql_fetch_row<\/b>\n    ( resource $result\n   )","desc":"\n    mssql_fetch_row() fetches one row of data from\n   the result associated with the specified result identifier.  The\n   row is returned as an array.  Each result column is stored in an\n   array offset, starting at offset 0.\n  "},"mssql_field_length":{"version":"(PHP 4, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Get the length of a field","syntax":"\n   int <b>mssql_field_length<\/b>\n    ( resource $result\n   [, int $offset = -1\n  ] )","desc":"\n   Returns the length of field no. offset in \n   result. \n  "},"mssql_field_name":{"version":"(PHP 4, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Get the name of a field","syntax":"\n   string <b>mssql_field_name<\/b>\n    ( resource $result\n   [, int $offset = -1\n  ] )","desc":"\n   Returns the name of field no. offset in \n   result. \n  "},"mssql_field_seek":{"version":"(PHP 4, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Seeks to the specified field offset","syntax":"\n   bool <b>mssql_field_seek<\/b>\n    ( resource $result\n   , int $field_offset\n   )","desc":"\n   Seeks to the specified field offset.  If the next call to\n    mssql_fetch_field() won't include a field\n   offset, this field would be returned.\n  "},"mssql_field_type":{"version":"(PHP 4, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Gets the type of a field","syntax":"\n   string <b>mssql_field_type<\/b>\n    ( resource $result\n   [, int $offset = -1\n  ] )","desc":"\n   Returns the type of field no. offset in \n   result. \n  "},"mssql_free_result":{"version":"(PHP 4, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Free result memory","syntax":"\n   bool <b>mssql_free_result<\/b>\n    ( resource $result\n   )","desc":"\n    mssql_free_result() only needs to be called\n   if you are worried about using too much memory while your script\n   is running. All result memory will automatically be freed when\n   the script ends. You may call  mssql_free_result()\n   with the result identifier as an argument and the associated\n   result memory will be freed.\n  "},"mssql_free_statement":{"version":"(PHP 4 >= 4.3.2, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Free statement memory","syntax":"\n   bool <b>mssql_free_statement<\/b>\n    ( resource $stmt\n   )","desc":"\n    mssql_free_statement() only needs to be called\n   if you are worried about using too much memory while your script\n   is running. All statement memory will automatically be freed when\n   the script ends. You may call  mssql_free_statement()\n   with the statement identifier as an argument and the associated\n   statement memory will be freed.\n  "},"mssql_get_last_message":{"version":"(PHP 4, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Returns the last message from the server","syntax":"\n   string <b>mssql_get_last_message<\/b>\n    ( void\n   )","desc":"\n   Gets the last message from the MS-SQL server\n  "},"mssql_guid_string":{"version":"(PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Converts a 16 byte binary GUID to a string","syntax":"\n   string <b>mssql_guid_string<\/b>\n    ( string $binary\n   [, bool $short_format = false\n  ] )","desc":"\n   Converts a 16 byte binary GUID to a string.\n  "},"mssql_init":{"version":"(PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Initializes a stored procedure or a remote stored procedure","syntax":"\n   resource <b>mssql_init<\/b>\n    ( string $sp_name\n   [, resource $link_identifier\n  ] )","desc":"\n   Initializes a stored procedure or a remote stored procedure.\n  "},"mssql_min_error_severity":{"version":"(PHP 4, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Sets the minimum error severity","syntax":"\n   void <b>mssql_min_error_severity<\/b>\n    ( int $severity\n   )","desc":"\n   Sets the minimum error severity.\n  "},"mssql_min_message_severity":{"version":"(PHP 4, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Sets the minimum message severity","syntax":"\n   void <b>mssql_min_message_severity<\/b>\n    ( int $severity\n   )","desc":"\n   Sets the minimum message severity.\n  "},"mssql_next_result":{"version":"(PHP 4 >= 4.0.5, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Move the internal result pointer to the next result","syntax":"\n   bool <b>mssql_next_result<\/b>\n    ( resource $result_id\n   )","desc":"\n   When sending more than one SQL statement to the server or\n   executing a stored procedure with multiple results, it will cause\n   the server to return multiple result sets. This function will\n   test for additional results available form the server. If an\n   additional result set exists it will free the existing result set\n   and prepare to fetch the rows from the new result set.\n  "},"mssql_num_fields":{"version":"(PHP 4, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Gets the number of fields in result","syntax":"\n   int <b>mssql_num_fields<\/b>\n    ( resource $result\n   )","desc":"\n    mssql_num_fields() returns the number of\n   fields in a result set.\n  "},"mssql_num_rows":{"version":"(PHP 4, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Gets the number of rows in result","syntax":"\n   int <b>mssql_num_rows<\/b>\n    ( resource $result\n   )","desc":"\n    mssql_num_rows() returns the number of rows in\n   a result set.\n  "},"mssql_pconnect":{"version":"(PHP 4, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Open persistent MS SQL connection","syntax":"\n   resource <b>mssql_pconnect<\/b>\n    ([ string $servername\n   [, string $username\n   [, string $password\n   [, bool $new_link = false\n  ]]]] )","desc":"\n    mssql_pconnect() acts very much like\n    mssql_connect() with two major differences.\n  "},"mssql_query":{"version":"(PHP 4, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Send MS SQL query","syntax":"\n   mixed <b>mssql_query<\/b>\n    ( string $query\n   [, resource $link_identifier\n   [, int $batch_size = 0\n  ]] )","desc":"\n    mssql_query() sends a query to the currently active\n   database on the server that's associated with the specified link\n   identifier. \n  "},"mssql_result":{"version":"(PHP 4, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Get result data","syntax":"\n   string <b>mssql_result<\/b>\n    ( resource $result\n   , int $row\n   , mixed $field\n   )","desc":"\n    mssql_result() returns the contents of one cell from a\n   MS SQL result set. \n  "},"mssql_rows_affected":{"version":"(PHP 4 >= 4.0.4, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Returns the number of records affected by the query","syntax":"\n   int <b>mssql_rows_affected<\/b>\n    ( resource $link_identifier\n   )","desc":"\n   Returns the number of records affected by the last write query.\n  "},"mssql_select_db":{"version":"(PHP 4, PHP 5, PECL odbtp >= 1.1.1)","shortdesc":"Select MS SQL database","syntax":"\n   bool <b>mssql_select_db<\/b>\n    ( string $database_name\n   [, resource $link_identifier\n  ] )","desc":"\n    mssql_select_db() sets the current active\n   database on the server that's associated with the specified link\n   identifier.\n  "},"mt_getrandmax":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430","syntax":"\n    int <b>mt_getrandmax<\/b>\n     ( void\n    )","desc":""},"mt_rand":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u043e\u043c mt","syntax":"\n   int <b>mt_rand<\/b>\n    ( void\n   )\n\n   int <b>mt_rand<\/b>\n    ( int $min\n   , int $max\n   )\n","desc":""},"mt_srand":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0435\u0440\u0435\u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b mt","syntax":"\n   void <b>mt_srand<\/b>\n    ([ int $seed\n  ] )","desc":"\n   \u041f\u0435\u0440\u0435\u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c\n   seed \u0438\u043b\u0438 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u043c \u0447\u0438\u0441\u043b\u043e\u043c, \u0435\u0441\u043b\u0438\n   seed \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d.\n  "},"mysql_affected_rows":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u0437\u0430\u0442\u0440\u043e\u043d\u0443\u0442\u044b\u0445 \u043f\u0440\u043e\u0448\u043b\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0435\u0439 \u0440\u044f\u0434\u043e\u0432","syntax":"\n   int <b>mysql_affected_rows<\/b>\n    ([ resource $link_identifier = NULL\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u044f\u0434\u043e\u0432, \u0437\u0430\u0442\u0440\u043e\u043d\u0443\u0442\u044b\u0445 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u043c INSERT, UPDATE,\n   REPLACE \u0438\u043b\u0438 DELETE \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u043c \u0441 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u043e\u043c\n   link_identifier.\n  "},"mysql_client_encoding":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f","syntax":"\n   string <b>mysql_client_encoding<\/b>\n    ([ resource $link_identifier = NULL\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 MySQL character_set.\n  "},"mysql_close":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c MySQL","syntax":"\n   bool <b>mysql_close<\/b>\n    ([ resource $link_identifier = NULL\n  ] )","desc":"\n    mysql_close() \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u043d\u0435\u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441\n   \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445 MySQL, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440.\n   \u0415\u0441\u043b\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 link_identifier \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d,\n   \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u0435 (\u0442\u0435\u043a\u0443\u0449\u0435\u0435) \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435.\n  "},"mysql_connect":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c MySQL","syntax":"\n   resource <b>mysql_connect<\/b>\n    ([ string $server = ini_get(\"mysql.default_host\")\n   [, string $username = ini_get(\"mysql.default_user\")\n   [, string $password = ini_get(\"mysql.default_password\")\n   [, bool $new_link = false\n   [, int $client_flags = 0\n  ]]]]] )","desc":"\n   \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u043d\u043e\u0432\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c MySQL \u0438\u043b\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\n   \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0435.\n  "},"mysql_create_db":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 MySQL","syntax":"\n   bool <b>mysql_create_db<\/b>\n    ( string $database_name\n   [, resource $link_identifier = NULL\n  ] )","desc":"\n    mysql_create_db() \u043f\u044b\u0442\u0430\u0435\u0442\u0441\u044f \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430\n   \u0441\u0435\u0440\u0432\u0435\u0440\u0435, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0430\u0441\u0441\u043e\u0446\u0438\u0438\u0440\u043e\u0432\u0430\u043d \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f.\n  "},"mysql_data_seek":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u0435\u0442 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430","syntax":"\n   bool <b>mysql_data_seek<\/b>\n    ( resource $result\n   , int $row_number\n   )","desc":"\n    mysql_data_seek() \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u0435\u0442 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c\n   \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0441\u0432\u044f\u0437\u0430\u043d \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440,\n   \u043a \u0440\u044f\u0434\u0443 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c \u043d\u043e\u043c\u0435\u0440\u043e\u043c. \u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0432\u044b\u0437\u043e\u0432 \u043a \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f\n   \u0434\u0430\u043d\u043d\u044b\u0445 MySQL, \u0442\u0430\u043a\u043e\u0439 \u043a\u0430\u043a  mysql_fetch_assoc(),\n   \u0432\u0435\u0440\u043d\u0451\u0442 \u0438\u043c\u0435\u043d\u043d\u043e \u0435\u0433\u043e.\n  "},"mysql_db_name":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \u0432\u044b\u0437\u043e\u0432\u0430 \u043a  mysql_list_dbs()","syntax":"\n   string <b>mysql_db_name<\/b>\n    ( resource $result\n   , int $row\n   [, mixed $field = NULL\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \u0432\u044b\u0437\u043e\u0432\u0430 \u043a\n    mysql_list_dbs().\n  "},"mysql_db_query":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441","syntax":"\n   resource <b>mysql_db_query<\/b>\n    ( string $database\n   , string $query\n   [, resource $link_identifier = NULL\n  ] )","desc":"\n    mysql_db_query() \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\n   \u0437\u0430\u043f\u0440\u043e\u0441 \u043a \u043d\u0435\u0439.\n  "},"mysql_drop_db":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u043d\u0438\u0447\u0442\u043e\u0436\u0430\u0435\u0442 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 MySQL","syntax":"\n   bool <b>mysql_drop_db<\/b>\n    ( string $database_name\n   [, resource $link_identifier = NULL\n  ] )","desc":"\n    mysql_drop_db() \u043f\u044b\u0442\u0430\u0435\u0442\u0441\u044f \u0443\u043d\u0438\u0447\u0442\u043e\u0436\u0438\u0442\u044c \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445\n   \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u0441\u044b\u043b\u0430\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f.\n   \u0414\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0443\u0441\u0442\u0430\u0440\u0435\u043b\u0430, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0432\u043c\u0435\u0441\u0442\u043e \u043d\u0435\u0435\n    mysql_query() \u0441 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c DROP DATABASE.\n  "},"mysql_errno":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0439 \u043a\u043e\u0434 \u043e\u0448\u0438\u0431\u043a\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441 MySQL","syntax":"\n   int <b>mysql_errno<\/b>\n    ([ resource $link_identifier = NULL\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u0434 \u043e\u0448\u0438\u0431\u043a\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 MySQL.\n  "},"mysql_error":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0441\u0442 \u043e\u0448\u0438\u0431\u043a\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441 MySQL","syntax":"\n   string <b>mysql_error<\/b>\n    ([ resource $link_identifier = NULL\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0441\u0442 \u043e\u0448\u0438\u0431\u043a\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 MySQL.\n   \u041e\u0448\u0438\u0431\u043a\u0438 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 MySQL \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u0432\u044b\u0437\u044b\u0432\u0430\u044e\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0432 PHP. \u0412\u043c\u0435\u0441\u0442\u043e\n   \u044d\u0442\u043e\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u044e  mysql_error(), \u0434\u043b\u044f\n   \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435. \u0423\u0447\u0442\u0438\u0442\u0435, \u0447\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0441\u0442\n   \u043e\u0448\u0438\u0431\u043a\u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 MySQL (\u0438\u0441\u043a\u043b\u044e\u0447\u0430\u044f\n    mysql_error() \u0438  mysql_errno()),\n   \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0443\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0432\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0435 \u0434\u0430\u043d\u043d\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043e \u0432\u044b\u0437\u043e\u0432\u0430\n   \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 MySQL.\n  "},"mysql_escape_string":{"version":"(PHP 4 >= 4.0.3, PHP 5)","shortdesc":"\u042d\u043a\u0440\u0430\u043d\u0438\u0440\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0432 mysql_query","syntax":"\n   string <b>mysql_escape_string<\/b>\n    ( string $unescaped_string\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u044d\u043a\u0440\u0430\u043d\u0438\u0440\u0443\u0435\u0442 unescaped_string \u0442\u0430\u043a\u0438\u043c\n   \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u043f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u0435\u0451 \u043c\u043e\u0436\u043d\u043e \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432  mysql_query().\n   \u0414\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0443\u0441\u0442\u0430\u0440\u0435\u043b\u0430.\n  "},"mysql_fetch_array":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0440\u044f\u0434 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044f \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432, \u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0438\u043b\u0438 \u043e\u0431\u0430","syntax":"\n   array <b>mysql_fetch_array<\/b>\n    ( resource $result\n   [, int $result_type = MYSQL_BOTH\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u043e\u043c\u0443 \u0440\u044f\u0434\u0443 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\n   \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438 \u0441\u0434\u0432\u0438\u0433\u0430\u0435\u0442 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u0434\u0430\u043d\u043d\u044b\u0445 \u0432\u043f\u0435\u0440\u0435\u0434.\n  "},"mysql_fetch_assoc":{"version":"(PHP 4 >= 4.0.3, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u044f\u0434 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430","syntax":"\n   array <b>mysql_fetch_assoc<\/b>\n    ( resource $result\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0432\u0443\u044e\u0449\u0438\u0439 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u043c\u0443 \u0440\u044f\u0434\u0443 \u0438 \u0441\u0434\u0432\u0438\u0433\u0430\u0435\u0442 \u0432\u043f\u0435\u0440\u0435\u0434\n   \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430.\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  mysql_fetch_assoc() \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u0430 \u0432\u044b\u0437\u043e\u0432\u0443 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    mysql_fetch_array() \u0441\u043e \u0432\u0442\u043e\u0440\u044b\u043c \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c, \u0440\u0430\u0432\u043d\u044b\u043c\n   MYSQL_ASSOC. \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432.\n  "},"mysql_fetch_field":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043e\u043b\u043e\u043d\u043a\u0435 \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432 \u0432\u0438\u0434\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430","syntax":"\n   object <b>mysql_fetch_field<\/b>\n    ( resource $result\n   [, int $field_offset = 0\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043e\u043b\u043e\u043d\u043a\u0435. \u042d\u0442\u0443 \u0444\u0443\u043d\u043a\u0446\u0438\u044e\n   \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043f\u043e\u043b\u044f\u0445 \u0432 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u043c\n   \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n  "},"mysql_fetch_lengths":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u043b\u0438\u043d\u0443 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u043e\u043b\u044f \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435","syntax":"\n   array <b>mysql_fetch_lengths<\/b>\n    ( resource $result\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0434\u043b\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u043e\u043b\u044f, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0433\u043e\u0441\u044f \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u043c \u0440\u044f\u0434\u0443\n   \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u043c \u0438\u0437 MySQL.\n  "},"mysql_fetch_object":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0440\u044f\u0434 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442","syntax":"\n   object <b>mysql_fetch_object<\/b>\n    ( resource $result\n   [, string $class_name\n   [, array $params\n  ]] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 \u0441\u043e \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430\u043c\u0438, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c\u0438 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u043c \u0432 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u043e\u043c\n   \u0440\u044f\u0434\u0443 \u0438 \u0441\u0434\u0432\u0438\u0433\u0430\u0435\u0442 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0432\u043f\u0435\u0440\u0435\u0434.\n  "},"mysql_fetch_row":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0440\u044f\u0434 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u043c\u0438 \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u043c\u0438","syntax":"\n   array <b>mysql_fetch_row<\/b>\n    ( resource $result\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u043c\u0438 \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u043c\u0438, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0434\u0430\u043d\u043d\u044b\u0435\n   \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u043e\u0433\u043e \u0440\u044f\u0434\u0430, \u0438 \u0441\u0434\u0432\u0438\u0433\u0430\u0435\u0442 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\n   \u0432\u043f\u0435\u0440\u0435\u0434.\n  "},"mysql_field_flags":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0444\u043b\u0430\u0433\u0438, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c \u043f\u043e\u043b\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430","syntax":"\n   string <b>mysql_field_flags<\/b>\n    ( resource $result\n   , int $field_offset\n   )","desc":"\n    mysql_field_flags() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0444\u043b\u0430\u0433\u0438, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435\n   \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c \u043f\u043e\u043b\u0435\u043c. \u041a\u0430\u0436\u0434\u044b\u0439 \u0444\u043b\u0430\u0433 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a\u0430\u043a \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0435 \u0441\u043b\u043e\u0432\u043e,\n   \u043e\u0442\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0435 \u043e\u0442 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0433\u043e \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u043c. \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0436\u043d\u043e\n   \u0440\u0430\u0437\u0431\u0438\u0442\u044c \u0432 \u043c\u0430\u0441\u0441\u0438\u0432, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044e  explode().\n  "},"mysql_field_len":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u043b\u0438\u043d\u0443 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044f","syntax":"\n   int <b>mysql_field_len<\/b>\n    ( resource $result\n   , int $field_offset\n   )","desc":"\n    mysql_field_len() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u043b\u0438\u043d\u0443 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044f.\n  "},"mysql_field_name":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430","syntax":"\n   string <b>mysql_field_name<\/b>\n    ( resource $result\n   , int $field_offset\n   )","desc":"\n    mysql_field_name() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0441\n   \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u043c.\n  "},"mysql_field_seek":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u043d\u0430 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0435 \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044f","syntax":"\n   bool <b>mysql_field_seek<\/b>\n    ( resource $result\n   , int $field_offset\n   )","desc":"\n   \u041f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043a \u043f\u043e\u043b\u044e \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u0435\u043c. \u0415\u0441\u043b\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439\n   \u0432\u044b\u0437\u043e\u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  mysql_fetch_field() \u043d\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442\n   \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u044f, \u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u043e \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435\u0441\u044f \u0432\n    mysql_field_seek().\n  "},"mysql_field_table":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b, \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0438\u0442 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0435 \u043f\u043e\u043b\u0435","syntax":"\n   string <b>mysql_field_table<\/b>\n    ( resource $result\n   , int $field_offset\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b, \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0438\u0442 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0435 \u043f\u043e\u043b\u0435.\n  "},"mysql_field_type":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0438\u043f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044f \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430","syntax":"\n   string <b>mysql_field_type<\/b>\n    ( resource $result\n   , int $field_offset\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  mysql_field_type() \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    mysql_field_name(). \u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b, \u043d\u043e \u0432\u043c\u0435\u0441\u0442\u043e\n   \u0438\u043c\u0435\u043d\u0438 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0435\u0451 \u0442\u0438\u043f.\n  "},"mysql_free_result":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u0435\u0442 \u043f\u0430\u043c\u044f\u0442\u044c \u043e\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430","syntax":"\n   bool <b>mysql_free_result<\/b>\n    ( resource $result\n   )","desc":"\n    mysql_free_result() \u0432\u044b\u0441\u0432\u043e\u0431\u043e\u0434\u0438\u0442 \u0432\u0441\u044e \u043f\u0430\u043c\u044f\u0442\u044c, \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u043c\u0443\u044e\n   \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u0441\u044b\u043b\u0430\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\n   result.\n  "},"mysql_get_client_info":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e MySQL-\u043a\u043b\u0438\u0435\u043d\u0442\u0435","syntax":"\n   string <b>mysql_get_client_info<\/b>\n    ( void\n   )","desc":"\n    mysql_get_client_info() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0443\u044e\n   \u0432\u0435\u0440\u0441\u0438\u044e \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438.\n  "},"mysql_get_host_info":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0438 \u0441 MySQL","syntax":"\n   string <b>mysql_get_host_info<\/b>\n    ([ resource $link_identifier = NULL\n  ] )","desc":"\n   \u041e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0442\u0438\u043f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u043e\u0433\u043e \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u043c\n   \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u043e\u043c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0438\u043c\u044f \u0445\u043e\u0441\u0442\u0430.\n  "},"mysql_get_proto_info":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0435 MySQL","syntax":"\n   int <b>mysql_get_proto_info<\/b>\n    ([ resource $link_identifier = NULL\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0435 MySQL.\n  "},"mysql_get_server_info":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0435\u0440\u0432\u0435\u0440\u0435 MySQL","syntax":"\n   string <b>mysql_get_server_info<\/b>\n    ([ resource $link_identifier = NULL\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0435\u0440\u0441\u0438\u044e \u0441\u0435\u0440\u0432\u0435\u0440\u0430 MySQL.\n  "},"mysql_info":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u0435","syntax":"\n   string <b>mysql_info<\/b>\n ([ resource $link_identifier = NULL\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u0435.\n  "},"mysql_insert_id":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440, \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043f\u0440\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u043c INSERT-\u0437\u0430\u043f\u0440\u043e\u0441\u0435","syntax":"\n   int <b>mysql_insert_id<\/b>\n    ([ resource $link_identifier = NULL\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440, \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043a\u043e\u043b\u043e\u043d\u043a\u043e\u0439 \u0441 AUTO_INCREMENT\n   \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c (\u043e\u0431\u044b\u0447\u043d\u043e INSERT).\n  "},"mysql_list_dbs":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0431\u0430\u0437 \u0434\u0430\u043d\u043d\u044b\u0445, \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435","syntax":"\n   resource <b>mysql_list_dbs<\/b>\n    ([ resource $link_identifier = NULL\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043d\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0431\u0430\u0437 \u0434\u0430\u043d\u043d\u044b\u0445,\n   \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043d\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c \u0441\u0435\u0440\u0432\u0435\u0440\u0435.\n  "},"mysql_list_fields":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a \u0442\u0430\u0431\u043b\u0438\u0446\u044b","syntax":"\n   resource <b>mysql_list_fields<\/b>\n    ( string $database_name\n   , string $table_name\n   [, resource $link_identifier = NULL\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0442\u0430\u0431\u043b\u0438\u0446\u0435 \u0441 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u043c \u0438\u043c\u0435\u043d\u0435\u043c.\n  "},"mysql_list_processes":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0432 MySQL","syntax":"\n   resource <b>mysql_list_processes<\/b>\n    ([ resource $link_identifier = NULL\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0442\u0435\u043a\u0443\u0449\u0438\u0445 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0432 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435 MySQL.\n  "},"mysql_list_tables":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0442\u0430\u0431\u043b\u0438\u0446 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 MySQL","syntax":"\n   resource <b>mysql_list_tables<\/b>\n    ( string $database\n   [, resource $link_identifier = NULL\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u043c\u0435\u043d \u0442\u0430\u0431\u043b\u0438\u0446 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 MySQL.\n  "},"mysql_num_fields":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u0435\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430","syntax":"\n   int <b>mysql_num_fields<\/b>\n    ( resource $result\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u0435\u0439 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n  "},"mysql_num_rows":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u044f\u0434\u043e\u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430","syntax":"\n   int <b>mysql_num_rows<\/b>\n    ( resource $result\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u044f\u0434\u043e\u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430. \u042d\u0442\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u0430\n   \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0441 \u0437\u0430\u043f\u0440\u043e\u0441\u0430\u043c\u0438 SELECT \u0438\u043b\u0438 SHOW, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0449\u0438\u0445 \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u044b\u0439\n   \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u0430. \u0427\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u044f\u0434\u043e\u0432,\n   \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u044f\u043c\u0438 INSERT, UPDATE, REPLACE \u0438 DELETE,\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u044e  mysql_affected_rows().\n  "},"mysql_pconnect":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c MySQL","syntax":"\n   resource <b>mysql_pconnect<\/b>\n    ([ string $server = ini_get(\"mysql.default_host\")\n   [, string $username = ini_get(\"mysql.default_user\")\n   [, string $password = ini_get(\"mysql.default_password\")\n   [, int $client_flags = 0\n  ]]]] )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c MySQL.\n  "},"mysql_ping":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c \u0438 \u043f\u0435\u0440\u0435\u0441\u043e\u0435\u0434\u0438\u043d\u044f\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438","syntax":"\n   bool <b>mysql_ping<\/b>\n    ([ resource $link_identifier = NULL\n  ] )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043b\u0438 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c. \u0415\u0441\u043b\u0438 \u043e\u043d\u043e\n   \u0443\u0442\u0435\u0440\u044f\u043d\u043e, \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043f\u0440\u0435\u0434\u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442\u0441\u044f \u043f\u043e\u043f\u044b\u0442\u043a\u0430 \u043f\u0435\u0440\u0435\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f. \u042d\u0442\u0430\n   \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0430 \u0432 \u0441\u043a\u0440\u0438\u043f\u0442\u0430\u0445, \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0449\u0438\u0445 \u043d\u0430 \u043f\u0440\u043e\u0442\u044f\u0436\u0435\u043d\u0438\u0438\n   \u0434\u043e\u043b\u0433\u043e\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438.\n  "},"mysql_query":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 MySQL","syntax":"\n   resource <b>mysql_query<\/b>\n    ( string $query\n   [, resource $link_identifier = NULL\n  ] )","desc":"\n    mysql_query() \u043f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 \u043e\u0434\u0438\u043d \u0437\u0430\u043f\u0440\u043e\u0441\n   (\u043f\u043e\u0441\u044b\u043b\u043a\u0430 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f) \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0439 \u0431\u0430\u0437\u0435\n   \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u0435\u0440\u0432\u0435\u0440\u0430, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u0441\u044b\u043b\u0430\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\n   link_identifier.\n  "},"mysql_real_escape_string":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u042d\u043a\u0440\u0430\u043d\u0438\u0440\u0443\u0435\u0442 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u0441\u0442\u0440\u043e\u043a\u0430\u0445 \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0432 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u0445 SQL","syntax":"\n   string <b>mysql_real_escape_string<\/b>\n    ( string $unescaped_string\n   [, resource $link_identifier = NULL\n  ] )","desc":"\n   \u042d\u043a\u0440\u0430\u043d\u0438\u0440\u0443\u0435\u0442 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 unescaped_string, \n   \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u044f \u0432\u043e \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f, \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0447\u0442\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \n   \u043c\u043e\u0436\u043d\u043e \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432 SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  mysql_query().\n   \u0415\u0441\u043b\u0438 \u0432\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435, \u0442\u043e \u043a \u043d\u0438\u043c \u0442\u0430\u043a \u0436\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c \u044d\u0442\u0443 \u0444\u0443\u043d\u043a\u0446\u0438\u044e.\n  "},"mysql_result":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430","syntax":"\n   string <b>mysql_result<\/b>\n    ( resource $result\n   , int $row\n   [, mixed $field = 0\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u043e\u0434\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044f \u0438\u0437 \u043d\u0430\u0431\u043e\u0440\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 MySQL.\n  "},"mysql_select_db":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 MySQL","syntax":"\n   bool <b>mysql_select_db<\/b>\n    ( string $database_name\n   [, resource $link_identifier = NULL\n  ] )","desc":"\n   \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0439\n   \u0441\u0441\u044b\u043b\u0430\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f. \u041a\u0430\u0436\u0434\u044b\u0439 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439\n   \u0432\u044b\u0437\u043e\u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  mysql_query() \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c\n   \u0441 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0439 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445.\n  "},"mysql_set_charset":{"version":"(PHP 5 >= 5.2.3)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430","syntax":"\n   bool <b>mysql_set_charset<\/b>\n    ( string $charset\n   [, resource $link_identifier = NULL\n  ] )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0434\u043b\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f.\n  "},"mysql_stat":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0441\u0442\u0430\u0442\u0443\u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u0430","syntax":"\n   string <b>mysql_stat<\/b>\n    ([ resource $link_identifier = NULL\n  ] )","desc":"\n    mysql_stat() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0441\u0442\u0430\u0442\u0443\u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u0430.\n  "},"mysql_tablename":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u044b, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0439 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0435 \u043f\u043e\u043b\u0435","syntax":"\n   string <b>mysql_tablename<\/b>\n    ( resource $result\n   , int $i\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0438\u0437 result.\n  "},"mysql_thread_id":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u043e\u0442\u043e\u043a\u0430","syntax":"\n   int <b>mysql_thread_id<\/b>\n    ([ resource $link_identifier = NULL\n  ] )","desc":"\n    mysql_thread_id() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\n   \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u043e\u0442\u043e\u043a\u0430. \u0415\u0441\u043b\u0438 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u043f\u043e\u0442\u0435\u0440\u044f\u043d\u043e \u0438 \u0432\u044b \u043f\u0435\u0440\u0435\u0441\u043e\u0435\u0434\u0438\u043d\u0438\u043b\u0438\u0441\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e\n    mysql_ping(), \u0442\u043e \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u0442\u043e\u043a\u0430 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u0441\u044f.\n   \u042d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u0432\u0430\u043c \u043d\u0435 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\n   \u0438 \u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0435\u0433\u043e \u0434\u043b\u044f \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0449\u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f. \u0412\u044b\u0437\u044b\u0432\u0430\u0439\u0442\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u044e\n   \u0442\u043e\u0433\u0434\u0430, \u043a\u043e\u0433\u0434\u0430 \u043e\u043d \u0432\u0430\u043c \u043d\u0443\u0436\u0435\u043d.\n  "},"mysql_unbuffered_query":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\u041f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 MySQL \u0431\u0435\u0437 \u0430\u0432\u0442\u043e-\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0438 \u0435\u0433\u043e \u0431\u0443\u0444\u0435\u0440\u0438\u0437\u0430\u0446\u0438\u0438","syntax":"\n   resource <b>mysql_unbuffered_query<\/b>\n    ( string $query\n   [, resource $link_identifier = NULL\n  ] )","desc":"\n    mysql_unbuffered_query() \u043f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 MySQL\n   query \u0431\u0435\u0437 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0438 \u0431\u0443\u0444\u0435\u0440\u0438\u0437\u0430\u0446\u0438\u0438\n   \u0435\u0451 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430, \u0432 \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u043e\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  mysql_query().\n   \u042d\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0430\u043c\u044f\u0442\u0438 \u0434\u043b\u044f\n   SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0449\u0438\u0445 \u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u0430\u043d\u043d\u044b\u0445. \u041a\u0440\u043e\u043c\u0435 \u0442\u043e\u0433\u043e, \u0432\u044b\n   \u043c\u043e\u0436\u0435\u0442\u0435 \u043d\u0430\u0447\u0430\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 \u0441 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0441\u0440\u0430\u0437\u0443 \u043f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e, \u043a\u0430\u043a \u043f\u0435\u0440\u0432\u044b\u0439\n   \u0440\u044f\u0434 \u0431\u044b\u043b \u043f\u043e\u043b\u0443\u0447\u0435\u043d: \u0432\u0430\u043c \u043d\u0435 \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0436\u0434\u0430\u0442\u044c \u0434\u043e \u043a\u043e\u043d\u0446\u0430 SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u0430. \u041f\u0440\u0438\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438  mysql_unbuffered_query() \u0441 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u043c\u0438\n   \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f\u043c\u0438 MySQL, \u0432\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n   link_identifier.\n  "},"mysqli_bind_param":{"version":"(PHP 5 < 5.4.0)","shortdesc":"\u0421\u0438\u043d\u043e\u043d\u0438\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u0438  mysqli_stmt_bind_param()","syntax":"","desc":""},"mysqli_bind_result":{"version":"(PHP 5 < 5.4.0)","shortdesc":"\u0421\u0438\u043d\u043e\u043d\u0438\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u0438  mysqli_stmt_bind_result()","syntax":"","desc":""},"mysqli_client_encoding":{"version":"(PHP 5 < 5.4.0)","shortdesc":"\u0421\u0438\u043d\u043e\u043d\u0438\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u0438  mysqli_character_set_name()","syntax":"","desc":""},"mysqli_connect":{"version":"(PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  mysqli::__construct()","syntax":"","desc":""},"mysqli::disable_reads_from_master\nmysqli_disable_reads_from_master\n":{"version":"(PHP 5)","shortdesc":"\u0411\u043b\u043e\u043a\u0438\u0440\u0443\u0435\u0442 \u0447\u0442\u0435\u043d\u0438\u0435 \u0441 \u043c\u0430\u0441\u0442\u0435\u0440\u0430","syntax":"\n            void mysqli::disable_reads_from_master\n             ( void\n         )\n\n            bool mysqli_disable_reads_from_master\n             ( mysqli $link\n         )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c"},"mysqli_disable_rpl_parse":{"version":"(PHP 5)","shortdesc":"\u0411\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0440\u0430\u0437\u0431\u043e\u0440 RPL","syntax":"\n   bool <b>mysqli_disable_rpl_parse<\/b>\n    ( mysqli $link\n   )","desc":""},"mysqli_enable_reads_from_master":{"version":"(PHP 5)","shortdesc":"\u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0447\u0442\u0435\u043d\u0438\u0435 \u0441 \u043c\u0430\u0441\u0442\u0435\u0440\u0430","syntax":"\n   bool <b>mysqli_enable_reads_from_master<\/b>\n    ( mysqli $link\n   )","desc":""},"mysqli_enable_rpl_parse":{"version":"(PHP 5)","shortdesc":"\u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0440\u0430\u0437\u0431\u043e\u0440 RPL","syntax":"\n   bool <b>mysqli_enable_rpl_parse<\/b>\n    ( mysqli $link\n   )","desc":""},"mysqli_escape_string":{"version":"(PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u0438  mysqli_real_escape_string()","syntax":"","desc":""},"mysqli_execute":{"version":"(PHP 5)","shortdesc":"\u0421\u0438\u043d\u043e\u043d\u0438\u043c \u0434\u043b\u044f  mysqli_stmt_execute()","syntax":"","desc":""},"mysqli_fetch":{"version":"(PHP 5 < 5.4.0)","shortdesc":"\u0421\u0438\u043d\u043e\u043d\u0438\u043c \u0434\u043b\u044f  mysqli_stmt_fetch()","syntax":"","desc":""},"mysqli_get_cache_stats":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e Zval \u043a\u044d\u0448\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430","syntax":"\n   array <b>mysqli_get_cache_stats<\/b>\n    ( void\n   )","desc":""},"mysqli_get_metadata":{"version":"(PHP 5 < 5.4.0)","shortdesc":"\u0421\u0438\u043d\u043e\u043d\u0438\u043c \u0434\u043b\u044f  mysqli_stmt_result_metadata()","syntax":"","desc":""},"mysqli_master_query":{"version":"(PHP 5)","shortdesc":"\n   \u041f\u0440\u0438\u043d\u0443\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0437\u0430\u043f\u0443\u0441\u043a \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043d\u0430 \u0445\u043e\u0437\u044f\u0438\u043d\u0435 \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0445\u043e\u0437\u044f\u0438\u043d\/\u0440\u0430\u0431\n  ","syntax":"\n   bool <b>mysqli_master_query<\/b>\n    ( mysqli $link\n   , string $query\n   )","desc":""},"mysqli_param_count":{"version":"(PHP 5 < 5.4.0)","shortdesc":"\u0421\u0438\u043d\u043e\u043d\u0438\u043c \u0434\u043b\u044f  mysqli_stmt_param_count()","syntax":"","desc":""},"mysqli_report":{"version":"(PHP 5)","shortdesc":"\n   \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0438\u043b\u0438 \u0432\u044b\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0432\u043e \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u0445\n  ","syntax":"\n   bool <b>mysqli_report<\/b>\n    ( int $flags\n   )","desc":"\n    mysqli_report() \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u043e \u043c\u043e\u0449\u043d\u044b\u0439 \u043c\u0435\u0445\u0430\u043d\u0438\u0437\u043c \u0434\u043b\u044f \u0441\u043e\u0432\u0435\u0440\u0448\u0435\u043d\u0441\u0442\u0432\u043e\u0432\u0430\u043d\u0438\u044f\n   \u0442\u0435\u043a\u0441\u0442\u0430 \u0432\u0430\u0448\u0438\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0438 \u043a\u043e\u0434\u0430 \u043d\u0430 \u044d\u0442\u0430\u043f\u0435 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0438 \u043e\u0442\u043b\u0430\u0434\u043a\u0438. \u0412 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442\n   \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0444\u043b\u0430\u0433\u043e\u0432 \u044d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0437\u0430\u043d\u043e\u0441\u0438\u0442 \u0432 \u0436\u0443\u0440\u043d\u0430\u043b \u043e\u0448\u0438\u0431\u043e\u0447\u043d\u044b\u0435 \u0432\u044b\u0437\u043e\u0432\u044b mysqli\n   \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u0438\u043b\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 \u0438\u043d\u0434\u0435\u043a\u0441 (\u0438\u043b\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 \u043f\u043b\u043e\u0445\u043e\u0439\n   \u0438\u043d\u0434\u0435\u043a\u0441).\n  "},"mysqli_rpl_parse_enabled":{"version":"(PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430, \u0432\u043a\u043b\u044e\u0447\u0435\u043d \u043b\u0438 RPL \u0440\u0430\u0437\u0431\u043e\u0440","syntax":"\n   int <b>mysqli_rpl_parse_enabled<\/b>\n    ( mysqli $link\n   )","desc":""},"mysqli_rpl_probe":{"version":"(PHP 5)","shortdesc":"RPL \u0437\u043e\u043d\u0434","syntax":"\n   bool <b>mysqli_rpl_probe<\/b>\n    ( mysqli $link\n   )","desc":""},"mysqli_send_long_data":{"version":"(PHP 5 < 5.4.0)","shortdesc":"\u0421\u0438\u043d\u043e\u043d\u0438\u043c \u0434\u043b\u044f  mysqli_stmt_send_long_data()","syntax":"","desc":""},"mysqli_set_opt":{"version":"(PHP 5)","shortdesc":"\u0421\u0438\u043d\u043e\u043d\u0438\u043c \u0434\u043b\u044f  mysqli_options()","syntax":"","desc":""},"mysqli_slave_query":{"version":"(PHP 5)","shortdesc":"\n   \u041f\u0440\u0438\u043d\u0443\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0437\u0430\u043f\u0443\u0441\u043a \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043d\u0430 \u0440\u0430\u0431\u0435 \u0432 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0435 \u0445\u043e\u0437\u044f\u0438\u043d\/\u0440\u0430\u0431\n  ","syntax":"\n   bool <b>mysqli_slave_query<\/b>\n    ( mysqli $link\n   , string $query\n   )","desc":""},"mysqlnd_memcache_get_config":{"version":"(PECL mysqlnd_memcache >= 1.0.0)","shortdesc":"Returns information about the plugin configuration","syntax":"\n   array\n    <b>mysqlnd_memcache_get_config<\/b>\n    ( mixed $connection\n   )","desc":"\n   This function returns an array of all mysqlnd_memcache related configuration \n   information that is attached to the MySQL connection. This includes MySQL, the \n   Memcache object provided via  mysqlnd_memcache_set(),\n   and the table mapping configuration that was automatically collected\n   from the MySQL Server.\n  "},"mysqlnd_memcache_set":{"version":"(PECL mysqlnd_memcache >= 1.0.0)","shortdesc":"Associate a MySQL connection with a Memcache connection","syntax":"\n   bool\n    <b>mysqlnd_memcache_set<\/b>\n    ( mixed $mysql_connection\n   [, Memcached $memcache_connection\n   [, string $pattern\n   [, callback $callback\n  ]]] )","desc":"\n   Associate mysql_connection with\n   memcache_connection using pattern\n   as a PCRE regular expression, and callback as a notification\n   callback or to unset the association of mysql_connection.\n  "},"mysqlnd_ms_get_last_gtid":{"version":"(PECL mysqlnd_ms >= 1.2.0)","shortdesc":"Returns the latest global transaction ID","syntax":"\n   string\n    <b>mysqlnd_ms_get_last_gtid<\/b>\n    ( mixed $connection\n   )","desc":"\n   Returns a global transaction identifier which belongs to a write operation no\n   older than the last write performed by the client. It is not guaranteed that\n   the global transaction identifier is identical to that one created for the\n   last write transaction performed by the client.\n  "},"mysqlnd_ms_get_last_used_connection":{"version":"(PECL mysqlnd_ms >= 1.1.0)","shortdesc":"Returns an array which describes the last used connection","syntax":"\n   array\n    <b>mysqlnd_ms_get_last_used_connection<\/b>\n    ( mixed $connection\n   )","desc":"\n   Returns an array which describes the last used connection from the plugins\n   connection pool currently pointed to by the user connection handle. If using the\n   plugin, a user connection handle represents a pool of database connections.\n   It is not possible to tell from the user connection handles properties to which\n   database server from the pool the user connection handle points.\n  "},"mysqlnd_ms_get_stats":{"version":"(PECL mysqlnd_ms >= 1.0.0)","shortdesc":"Returns query distribution and connection statistics","syntax":"\n   array\n    <b>mysqlnd_ms_get_stats<\/b>\n    ( void\n   )","desc":"\n   Returns an array of statistics collected by the replication\n   and load balancing plugin.\n  "},"mysqlnd_ms_match_wild":{"version":"(PECL mysqlnd_ms >= 1.1.0)","shortdesc":"Finds whether a table name matches a wildcard pattern or not","syntax":"\n   bool\n    <b>mysqlnd_ms_match_wild<\/b>\n    ( string $table_name\n   , string $wildcard\n   )","desc":"\n    Finds whether a table name matches a wildcard pattern or not.\n  "},"mysqlnd_ms_query_is_select":{"version":"(PECL mysqlnd_ms >= 1.0.0)","shortdesc":"Find whether to send the query to the master, the slave or the last used MySQL server","syntax":"\n   int\n    <b>mysqlnd_ms_query_is_select<\/b>\n    ( string $query\n   )","desc":"\n   Finds whether to send the query to the master, the slave or the\n   last used MySQL server.\n  "},"mysqlnd_ms_set_qos":{"version":"(PECL mysqlnd_ms < 1.2.0)","shortdesc":"Sets the quality of service needed from the cluster","syntax":"\n   bool\n    <b>mysqlnd_ms_set_qos<\/b>\n    ( mixed $connection\n   , int $service_level\n   [, int $service_level_option\n   [, mixed $option_value\n  ]] )","desc":"\n   Sets the quality of service needed from the cluster. A database cluster delivers\n   a certain quality of service to the user depending on its architecture. A major\n   aspect of the quality of service is the consistency level the cluster can offer.\n   An asynchronous MySQL replication cluster defaults to eventual consistency for\n   slave reads: a slave may serve stale data, current data, or it may have not the\n   requested data at all, because it is not synchronous to the master. In a\n   MySQL replication cluster, only master accesses can give strong consistency, which\n   promises that all clients see each others changes.\n  "},"mysqlnd_ms_set_user_pick_server":{"version":"(PECL mysqlnd_ms < 1.1.0)","shortdesc":"Sets a callback for user-defined read\/write splitting","syntax":"\n   bool\n    <b>mysqlnd_ms_set_user_pick_server<\/b>\n    ( string $function\n   )","desc":"\n   Sets a callback for user-defined read\/write splitting. The plugin will\n   call the callback only if pick[]=user is the default\n   rule for server picking in the relevant section of the plugins configuration\n   file.\n  "},"mysqlnd_qc_clear_cache":{"version":"(PECL mysqlnd_qc >= 1.0.0)","shortdesc":"Flush all cache contents","syntax":"\n   bool\n    <b>mysqlnd_qc_clear_cache<\/b>\n    ( void\n   )","desc":"\n   Flush all cache contents.\n  "},"mysqlnd_qc_get_available_handlers":{"version":"(PECL mysqlnd_qc >= 1.0.0)","shortdesc":"Returns a list of available storage handler","syntax":"\n   array\n    <b>mysqlnd_qc_get_available_handlers<\/b>\n    ( void\n   )","desc":"\n   Which storage are available depends on the compile time\n   configuration of the query cache plugin. The\n   default storage handler is always available.\n   All other storage handler must be enabled explicitly when building the\n   extension.\n  "},"mysqlnd_qc_get_cache_info":{"version":"(PECL mysqlnd_qc >= 1.0.0)","shortdesc":"Returns information on the current handler, the number of cache entries and cache entries, if available","syntax":"\n   array\n    <b>mysqlnd_qc_get_cache_info<\/b>\n    ( void\n   )","desc":"\n\n  "},"mysqlnd_qc_get_core_stats":{"version":"(PECL mysqlnd_qc >= 1.0.0)","shortdesc":"Statistics collected by the core of the query cache","syntax":"\n   array\n    <b>mysqlnd_qc_get_core_stats<\/b>\n    ( void\n   )","desc":"\n   Returns an array of statistics collected by the core of the cache plugin.\n   The same data fields will be reported for any storage handler because the\n   data is collected by the core.\n  "},"mysqlnd_qc_get_normalized_query_trace_log":{"version":"(PECL mysqlnd_qc >= 1.0.0)","shortdesc":"Returns a normalized query trace log for each query inspected by the query cache","syntax":"\n   array\n    <b>mysqlnd_qc_get_normalized_query_trace_log<\/b>\n    ( void\n   )","desc":"\n   Returns a normalized query trace log for each query inspected by the query cache.\n   The collection of the trace log is disabled by default. To collect\n   the trace log you have to set the PHP configuration directive\n   mysqlnd_qc.collect_normalized_query_trace to\n   1\n  "},"mysqlnd_qc_get_query_trace_log":{"version":"(PECL mysqlnd_qc >= 1.0.0)","shortdesc":"Returns a backtrace for each query inspected by the query cache","syntax":"\n   array\n    <b>mysqlnd_qc_get_query_trace_log<\/b>\n    ( void\n   )","desc":"\n   Returns a backtrace for each query inspected by the query cache.\n   The collection of the backtrace is disabled by default. To collect\n   the backtrace you have to set the PHP configuration directive\n   mysqlnd_qc.collect_query_trace to\n   1\n  "},"mysqlnd_qc_set_cache_condition":{"version":"(PECL mysqlnd_qc >= 1.1.0)","shortdesc":"Set conditions for automatic caching","syntax":"\n   bool\n    <b>mysqlnd_qc_set_cache_condition<\/b>\n    ( \n    int\n     $condition_type\n   \n   , \n    mixed\n     $condition\n   \n   , \n    mixed\n     $condition_option\n   \n   )","desc":"\n   Sets a condition for automatic caching of statements which do not contain\n   the necessary SQL hints to enable caching of them.\n  "},"mysqlnd_qc_set_is_select":{"version":"(PECL mysqlnd_qc >= 1.0.0)","shortdesc":"Installs a callback which decides whether a statement is cached","syntax":"\n   mixed\n    <b>mysqlnd_qc_set_is_select<\/b>\n    ( \n    string\n     $callback\n   \n   )","desc":"\n   Installs a callback which decides whether a statement is cached.\n  "},"mysqlnd_qc_set_storage_handler":{"version":"(PECL mysqlnd_qc >= 1.0.0)","shortdesc":"Change current storage handler","syntax":"\n   bool\n    <b>mysqlnd_qc_set_storage_handler<\/b>\n    ( \n    string\n     $handler\n   \n   )","desc":"\n   Sets the storage handler used by the query cache. A list of available\n   storage handler can be obtained from\n    mysqlnd_qc_get_available_handlers().\n   Which storage are available depends on the compile time\n   configuration of the query cache plugin. The\n   default storage handler is always available.\n   All other storage handler must be enabled explicitly when building the\n   extension.\n  "},"mysqlnd_qc_set_user_handlers":{"version":"(PECL mysqlnd_qc >= 1.0.0)","shortdesc":"Sets the callback functions for a user-defined procedural storage handler","syntax":"\n   bool\n    <b>mysqlnd_qc_set_user_handlers<\/b>\n    ( \n    string\n     $get_hash\n   \n   , \n    string\n     $find_query_in_cache\n   \n   , \n    string\n     $return_to_cache\n   \n   , \n    string\n     $add_query_to_cache_if_not_exists\n   \n   , \n    string\n     $query_is_select\n   \n   , \n    string\n     $update_query_run_time_stats\n   \n   , \n    string\n     $get_stats\n   \n   , \n    string\n     $clear_cache\n   \n   )","desc":"\n   Sets the callback functions for a user-defined procedural storage handler.\n  "},"mysqlnd_uh_convert_to_mysqlnd":{"version":"(PECL mysqlnd-uh >= 1.0.0-alpha)","shortdesc":"Converts a MySQL connection handle into a mysqlnd connection handle","syntax":"\n   resource\n    <b>mysqlnd_uh_convert_to_mysqlnd<\/b>\n    ( mysqli &$mysql_connection\n   )","desc":"\n   Converts a MySQL connection handle into a mysqlnd connection handle.\n   After conversion you can execute mysqlnd library calls on the connection handle.\n   This can be used to access mysqlnd functionality not made available\n   through user space API calls.\n  "},"mysqlnd_uh_set_connection_proxy":{"version":"(PECL mysqlnd-uh >= 1.0.0-alpha)","shortdesc":"Installs a proxy for mysqlnd connections","syntax":"\n   bool <b>mysqlnd_uh_set_connection_proxy<\/b>\n    ( MysqlndUhConnection &$connection_proxy\n   [, mysqli &$mysqli_connection\n  ] )","desc":"\n   Installs a proxy object to hook mysqlnd's connection objects methods.\n   Once installed, the proxy will be used for all MySQL connections\n   opened with mysqli,\n   mysql or\n   PDO_MYSQL, assuming that the listed\n   extensions are compiled to use the mysqlnd\n   library.\n  "},"mysqlnd_uh_set_statement_proxy":{"version":"(PECL mysqlnd-uh >= 1.0.0-alpha)","shortdesc":"Installs a proxy for mysqlnd statements","syntax":"\n   bool <b>mysqlnd_uh_set_statement_proxy<\/b>\n    ( MysqlndUhStatement &$statement_proxy\n   )","desc":"\n   Installs a proxy for mysqlnd statements.\n   The proxy object will be used for all mysqlnd prepared\n   statement objects, regardless which PHP MySQL extension\n   (mysqli,\n   mysql,\n   PDO_MYSQL)\n   has created them as long as the extension is compiled\n   to use the mysqlnd\n   library.\n  "},"natcasesort":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \"natural order\" \u0431\u0435\u0437 \u0443\u0447\u0435\u0442\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432","syntax":"\n   bool <b>natcasesort<\/b>\n    ( array &$array\n   )","desc":"\n    natcasesort() - \u044d\u0442\u043e \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u043e\u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u0439 \u0430\u043d\u0430\u043b\u043e\u0433\n    natsort().\n  "},"natsort":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \"natural order\"","syntax":"\n   bool <b>natsort<\/b>\n    ( array &$array\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438, \u043f\u0440\u0438 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u0431\u0443\u043a\u0432\u0435\u043d\u043d\u043e-\u0446\u0438\u0444\u0440\u043e\u0432\u044b\u0445 \u0441\u0442\u0440\u043e\u043a\n   \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0438\u0432\u044b\u0447\u043d\u044b\u043c \u0434\u043b\u044f \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430. \u0422\u0430\u043a\u043e\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \"natural ordering\".\n   \u041e\u0442\u043b\u0438\u0447\u0438\u0435 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \"natural ordering\" \u043e\u0442 \u043e\u0431\u044b\u0447\u043d\u044b\u0445 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u0432 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438, \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u043c\u044b\u0445,\n   \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439  sort() \u043c\u043e\u0436\u043d\u043e \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0432 \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u043d\u0438\u0436\u0435.\n  "},"ncurses_addch":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Add character at current position and advance cursor ","syntax":"\n   int <b>ncurses_addch<\/b>\n    ( int $ch\n   )","desc":""},"ncurses_addchnstr":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Add attributed string with specified length at current position ","syntax":"\n   int <b>ncurses_addchnstr<\/b>\n    ( string $s\n   , int $n\n   )","desc":""},"ncurses_addchstr":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Add attributed string at current position ","syntax":"\n   int <b>ncurses_addchstr<\/b>\n    ( string $s\n   )","desc":""},"ncurses_addnstr":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Add string with specified length at current position ","syntax":"\n   int <b>ncurses_addnstr<\/b>\n    ( string $s\n   , int $n\n   )","desc":""},"ncurses_addstr":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Output text at current position ","syntax":"\n   int <b>ncurses_addstr<\/b>\n    ( string $text\n   )","desc":""},"ncurses_assume_default_colors":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Define default colors for color 0 ","syntax":"\n   int <b>ncurses_assume_default_colors<\/b>\n    ( int $fg\n   , int $bg\n   )","desc":""},"ncurses_attroff":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Turn off the given attributes","syntax":"\n   int <b>ncurses_attroff<\/b>\n    ( int $attributes\n   )","desc":""},"ncurses_attron":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Turn on the given attributes","syntax":"\n   int <b>ncurses_attron<\/b>\n    ( int $attributes\n   )","desc":""},"ncurses_attrset":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Set given attributes","syntax":"\n   int <b>ncurses_attrset<\/b>\n    ( int $attributes\n   )","desc":""},"ncurses_baudrate":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Returns baudrate of terminal ","syntax":"\n   int <b>ncurses_baudrate<\/b>\n    ( void\n   )","desc":""},"ncurses_beep":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Let the terminal beep ","syntax":"\n   int <b>ncurses_beep<\/b>\n    ( void\n   )","desc":""},"ncurses_bkgd":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Set background property for terminal screen ","syntax":"\n   int <b>ncurses_bkgd<\/b>\n    ( int $attrchar\n   )","desc":""},"ncurses_bkgdset":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Control screen background ","syntax":"\n   void <b>ncurses_bkgdset<\/b>\n    ( int $attrchar\n   )","desc":""},"ncurses_border":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Draw a border around the screen using attributed characters","syntax":"\n   int <b>ncurses_border<\/b>\n    ( int $left\n   , int $right\n   , int $top\n   , int $bottom\n   , int $tl_corner\n   , int $tr_corner\n   , int $bl_corner\n   , int $br_corner\n   )","desc":""},"ncurses_bottom_panel":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Moves a visible panel to the bottom of the stack","syntax":"\n   int <b>ncurses_bottom_panel<\/b>\n    ( resource $panel\n   )","desc":""},"ncurses_can_change_color":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Checks if terminal color definitions can be changed","syntax":"\n   bool <b>ncurses_can_change_color<\/b>\n    ( void\n   )","desc":"\n   Checks whether the terminal has color capabilities and whether the\n   programmer can change color definitions using\n    ncurses_init_color(). ncurses must be initialized\n   using  ncurses_init() before calling this function.\n  "},"ncurses_cbreak":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Switch of input buffering ","syntax":"\n   bool <b>ncurses_cbreak<\/b>\n    ( void\n   )","desc":""},"ncurses_clear":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Clear screen ","syntax":"\n   bool <b>ncurses_clear<\/b>\n    ( void\n   )","desc":""},"ncurses_clrtobot":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Clear screen from current position to bottom ","syntax":"\n   bool <b>ncurses_clrtobot<\/b>\n    ( void\n   )","desc":""},"ncurses_clrtoeol":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Clear screen from current position to end of line ","syntax":"\n   bool <b>ncurses_clrtoeol<\/b>\n    ( void\n   )","desc":""},"ncurses_color_content":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Retrieves RGB components of a color","syntax":"\n   int <b>ncurses_color_content<\/b>\n    ( int $color\n   , int &$r\n   , int &$g\n   , int &$b\n   )","desc":"\n   Retrieves the red, green, and blue components for the given color definition.\n   Terminal color capabilities must be initialized with\n    ncurses_start_color() prior to calling this function.\n  "},"ncurses_color_set":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Set active foreground and background colors","syntax":"\n   int <b>ncurses_color_set<\/b>\n    ( int $pair\n   )","desc":"\n   Sets the active foreground and background colors. Any characters written\n   after this function is invoked will have these colors. This function requires\n   terminal colors to be supported and initialized using\n    ncurses_start_color() beforehand.\n  "},"ncurses_curs_set":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Set cursor state ","syntax":"\n   int <b>ncurses_curs_set<\/b>\n    ( int $visibility\n   )","desc":""},"ncurses_def_prog_mode":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Saves terminals (program) mode","syntax":"\n   bool <b>ncurses_def_prog_mode<\/b>\n    ( void\n   )","desc":""},"ncurses_def_shell_mode":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Saves terminals (shell) mode","syntax":"\n   bool <b>ncurses_def_shell_mode<\/b>\n    ( void\n   )","desc":""},"ncurses_define_key":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Define a keycode ","syntax":"\n   int <b>ncurses_define_key<\/b>\n    ( string $definition\n   , int $keycode\n   )","desc":""},"ncurses_del_panel":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Remove panel from the stack and delete it (but not the associated window)","syntax":"\n   bool <b>ncurses_del_panel<\/b>\n    ( resource $panel\n   )","desc":""},"ncurses_delay_output":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Delay output on terminal using padding characters ","syntax":"\n   int <b>ncurses_delay_output<\/b>\n    ( int $milliseconds\n   )","desc":""},"ncurses_delch":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Delete character at current position, move rest of line left ","syntax":"\n   bool <b>ncurses_delch<\/b>\n    ( void\n   )","desc":""},"ncurses_deleteln":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Delete line at current position, move rest of screen up ","syntax":"\n   bool <b>ncurses_deleteln<\/b>\n    ( void\n   )","desc":""},"ncurses_delwin":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Delete a ncurses window ","syntax":"\n   bool <b>ncurses_delwin<\/b>\n    ( resource $window\n   )","desc":""},"ncurses_doupdate":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Write all prepared refreshes to terminal ","syntax":"\n   bool <b>ncurses_doupdate<\/b>\n    ( void\n   )","desc":""},"ncurses_echo":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Activate keyboard input echo ","syntax":"\n   bool <b>ncurses_echo<\/b>\n    ( void\n   )","desc":""},"ncurses_echochar":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Single character output including refresh ","syntax":"\n   int <b>ncurses_echochar<\/b>\n    ( int $character\n   )","desc":""},"ncurses_end":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Stop using ncurses, clean up the screen ","syntax":"\n   int <b>ncurses_end<\/b>\n    ( void\n   )","desc":""},"ncurses_erase":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Erase terminal screen ","syntax":"\n   bool <b>ncurses_erase<\/b>\n    ( void\n   )","desc":""},"ncurses_erasechar":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Returns current erase character ","syntax":"\n   string <b>ncurses_erasechar<\/b>\n    ( void\n   )","desc":""},"ncurses_filter":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Set LINES for iniscr() and newterm() to 1","syntax":"\n   void <b>ncurses_filter<\/b>\n    ( void\n   )","desc":""},"ncurses_flash":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Flash terminal screen (visual bell) ","syntax":"\n   bool <b>ncurses_flash<\/b>\n    ( void\n   )","desc":""},"ncurses_flushinp":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Flush keyboard input buffer ","syntax":"\n   bool <b>ncurses_flushinp<\/b>\n    ( void\n   )","desc":""},"ncurses_getch":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Read a character from keyboard ","syntax":"\n   int <b>ncurses_getch<\/b>\n    ( void\n   )","desc":""},"ncurses_getmaxyx":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Returns the size of a window","syntax":"\n   void <b>ncurses_getmaxyx<\/b>\n    ( resource $window\n   , int &$y\n   , int &$x\n   )","desc":""},"ncurses_getmouse":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Reads mouse event","syntax":"\n   bool <b>ncurses_getmouse<\/b>\n    ( array &$mevent\n   )","desc":""},"ncurses_getyx":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Returns the current cursor position for a window","syntax":"\n   void <b>ncurses_getyx<\/b>\n    ( resource $window\n   , int &$y\n   , int &$x\n   )","desc":""},"ncurses_halfdelay":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Put terminal into halfdelay mode ","syntax":"\n   int <b>ncurses_halfdelay<\/b>\n    ( int $tenth\n   )","desc":""},"ncurses_has_colors":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Checks if terminal has color capabilities","syntax":"\n   bool <b>ncurses_has_colors<\/b>\n    ( void\n   )","desc":"\n   Checks whether the terminal has color capabilities. This function can be\n   used to write terminal-independent programs. ncurses must be initialized\n   using  ncurses_init() before calling this function.\n  "},"ncurses_has_ic":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Check for insert- and delete-capabilities ","syntax":"\n   bool <b>ncurses_has_ic<\/b>\n    ( void\n   )","desc":""},"ncurses_has_il":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Check for line insert- and delete-capabilities ","syntax":"\n   bool <b>ncurses_has_il<\/b>\n    ( void\n   )","desc":""},"ncurses_has_key":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Check for presence of a function key on terminal keyboard ","syntax":"\n   int <b>ncurses_has_key<\/b>\n    ( int $keycode\n   )","desc":""},"ncurses_hide_panel":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Remove panel from the stack, making it invisible","syntax":"\n   int <b>ncurses_hide_panel<\/b>\n    ( resource $panel\n   )","desc":""},"ncurses_hline":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Draw a horizontal line at current position using an attributed character and max. n characters long ","syntax":"\n   int <b>ncurses_hline<\/b>\n    ( int $charattr\n   , int $n\n   )","desc":""},"ncurses_inch":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Get character and attribute at current position ","syntax":"\n   string <b>ncurses_inch<\/b>\n    ( void\n   )","desc":""},"ncurses_init_color":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Define a terminal color","syntax":"\n   int <b>ncurses_init_color<\/b>\n    ( int $color\n   , int $r\n   , int $g\n   , int $b\n   )","desc":"\n   Defines or redefines the given color. When this function is called, all\n   occurrences of the given color on the screen, if any, immediately change\n   to the new definition.\n  "},"ncurses_init_pair":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Define a color pair","syntax":"\n   int <b>ncurses_init_pair<\/b>\n    ( int $pair\n   , int $fg\n   , int $bg\n   )","desc":"\n   Defines or redefines the given color pair to have the given foreground\n   and background colors. If the color pair was previously initialized,\n   the screen is refreshed and all occurrences of it are changed to reflect\n   the new definition.\n  "},"ncurses_init":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Initialize ncurses","syntax":"\n   void <b>ncurses_init<\/b>\n    ( void\n   )","desc":"\n   Initializes the ncurses interface. This function must be used before\n   any other ncurses function call.\n  "},"ncurses_insch":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Insert character moving rest of line including character at current position ","syntax":"\n   int <b>ncurses_insch<\/b>\n    ( int $character\n   )","desc":""},"ncurses_insdelln":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Insert lines before current line scrolling down (negative numbers delete and scroll up) ","syntax":"\n   int <b>ncurses_insdelln<\/b>\n    ( int $count\n   )","desc":""},"ncurses_insertln":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Insert a line, move rest of screen down ","syntax":"\n   int <b>ncurses_insertln<\/b>\n    ( void\n   )","desc":""},"ncurses_insstr":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Insert string at current position, moving rest of line right ","syntax":"\n   int <b>ncurses_insstr<\/b>\n    ( string $text\n   )","desc":""},"ncurses_instr":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Reads string from terminal screen","syntax":"\n   int <b>ncurses_instr<\/b>\n    ( string &$buffer\n   )","desc":""},"ncurses_isendwin":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Ncurses is in endwin mode, normal screen output may be performed","syntax":"\n   bool <b>ncurses_isendwin<\/b>\n    ( void\n   )","desc":""},"ncurses_keyok":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Enable or disable a keycode ","syntax":"\n   int <b>ncurses_keyok<\/b>\n    ( int $keycode\n   , bool $enable\n   )","desc":""},"ncurses_keypad":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Turns keypad on or off","syntax":"\n   int <b>ncurses_keypad<\/b>\n    ( resource $window\n   , bool $bf\n   )","desc":""},"ncurses_killchar":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Returns current line kill character ","syntax":"\n   string <b>ncurses_killchar<\/b>\n    ( void\n   )","desc":""},"ncurses_longname":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Returns terminals description","syntax":"\n   string <b>ncurses_longname<\/b>\n    ( void\n   )","desc":""},"ncurses_meta":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Enables\/Disable 8-bit meta key information","syntax":"\n   int <b>ncurses_meta<\/b>\n    ( resource $window\n   , bool $8bit\n   )","desc":""},"ncurses_mouse_trafo":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Transforms coordinates","syntax":"\n   bool <b>ncurses_mouse_trafo<\/b>\n    ( int &$y\n   , int &$x\n   , bool $toscreen\n   )","desc":""},"ncurses_mouseinterval":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Set timeout for mouse button clicks ","syntax":"\n   int <b>ncurses_mouseinterval<\/b>\n    ( int $milliseconds\n   )","desc":""},"ncurses_mousemask":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Sets mouse options","syntax":"\n   int <b>ncurses_mousemask<\/b>\n    ( int $newmask\n   , int &$oldmask\n   )","desc":""},"ncurses_move_panel":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Moves a panel so that its upper-left corner is at [startx, starty]","syntax":"\n   int <b>ncurses_move_panel<\/b>\n    ( resource $panel\n   , int $startx\n   , int $starty\n   )","desc":""},"ncurses_move":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Move output position ","syntax":"\n   int <b>ncurses_move<\/b>\n    ( int $y\n   , int $x\n   )","desc":""},"ncurses_mvaddch":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Move current position and add character ","syntax":"\n   int <b>ncurses_mvaddch<\/b>\n    ( int $y\n   , int $x\n   , int $c\n   )","desc":""},"ncurses_mvaddchnstr":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Move position and add attributed string with specified length ","syntax":"\n   int <b>ncurses_mvaddchnstr<\/b>\n    ( int $y\n   , int $x\n   , string $s\n   , int $n\n   )","desc":""},"ncurses_mvaddchstr":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Move position and add attributed string ","syntax":"\n   int <b>ncurses_mvaddchstr<\/b>\n    ( int $y\n   , int $x\n   , string $s\n   )","desc":""},"ncurses_mvaddnstr":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Move position and add string with specified length ","syntax":"\n   int <b>ncurses_mvaddnstr<\/b>\n    ( int $y\n   , int $x\n   , string $s\n   , int $n\n   )","desc":""},"ncurses_mvaddstr":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Move position and add string ","syntax":"\n   int <b>ncurses_mvaddstr<\/b>\n    ( int $y\n   , int $x\n   , string $s\n   )","desc":""},"ncurses_mvcur":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Move cursor immediately ","syntax":"\n   int <b>ncurses_mvcur<\/b>\n    ( int $old_y\n   , int $old_x\n   , int $new_y\n   , int $new_x\n   )","desc":""},"ncurses_mvdelch":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Move position and delete character, shift rest of line left ","syntax":"\n   int <b>ncurses_mvdelch<\/b>\n    ( int $y\n   , int $x\n   )","desc":""},"ncurses_mvgetch":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Move position and get character at new position ","syntax":"\n   int <b>ncurses_mvgetch<\/b>\n    ( int $y\n   , int $x\n   )","desc":""},"ncurses_mvhline":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Set new position and draw a horizontal line using an attributed character and max. n characters long ","syntax":"\n   int <b>ncurses_mvhline<\/b>\n    ( int $y\n   , int $x\n   , int $attrchar\n   , int $n\n   )","desc":""},"ncurses_mvinch":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Move position and get attributed character at new position ","syntax":"\n   int <b>ncurses_mvinch<\/b>\n    ( int $y\n   , int $x\n   )","desc":""},"ncurses_mvvline":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Set new position and draw a vertical line using an attributed character and max. n characters long ","syntax":"\n   int <b>ncurses_mvvline<\/b>\n    ( int $y\n   , int $x\n   , int $attrchar\n   , int $n\n   )","desc":""},"ncurses_mvwaddstr":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Add string at new position in window ","syntax":"\n   int <b>ncurses_mvwaddstr<\/b>\n    ( resource $window\n   , int $y\n   , int $x\n   , string $text\n   )","desc":""},"ncurses_napms":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Sleep","syntax":"\n   int <b>ncurses_napms<\/b>\n    ( int $milliseconds\n   )","desc":""},"ncurses_new_panel":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Create a new panel and associate it with window","syntax":"\n   resource <b>ncurses_new_panel<\/b>\n    ( resource $window\n   )","desc":""},"ncurses_newpad":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Creates a new pad (window)","syntax":"\n   resource <b>ncurses_newpad<\/b>\n    ( int $rows\n   , int $cols\n   )","desc":""},"ncurses_newwin":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Create a new window","syntax":"\n   resource <b>ncurses_newwin<\/b>\n    ( int $rows\n   , int $cols\n   , int $y\n   , int $x\n   )","desc":""},"ncurses_nl":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Translate newline and carriage return \/ line feed ","syntax":"\n   bool <b>ncurses_nl<\/b>\n    ( void\n   )","desc":""},"ncurses_nocbreak":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Switch terminal to cooked mode ","syntax":"\n   bool <b>ncurses_nocbreak<\/b>\n    ( void\n   )","desc":""},"ncurses_noecho":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Switch off keyboard input echo ","syntax":"\n   bool <b>ncurses_noecho<\/b>\n    ( void\n   )","desc":""},"ncurses_nonl":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Do not translate newline and carriage return \/ line feed ","syntax":"\n   bool <b>ncurses_nonl<\/b>\n    ( void\n   )","desc":""},"ncurses_noqiflush":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Do not flush on signal characters","syntax":"\n   void <b>ncurses_noqiflush<\/b>\n    ( void\n   )","desc":""},"ncurses_noraw":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Switch terminal out of raw mode ","syntax":"\n   bool <b>ncurses_noraw<\/b>\n    ( void\n   )","desc":""},"ncurses_pair_content":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Retrieves foreground and background colors of a color pair","syntax":"\n   int <b>ncurses_pair_content<\/b>\n    ( int $pair\n   , int &$f\n   , int &$b\n   )","desc":"\n   Retrieves the foreground and background colors that constitute the given\n   color pair. Terminal color capabilities must be initialized with\n    ncurses_start_color() prior to calling this function.\n  "},"ncurses_panel_above":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Returns the panel above panel","syntax":"\n   resource <b>ncurses_panel_above<\/b>\n    ( resource $panel\n   )","desc":""},"ncurses_panel_below":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Returns the panel below panel","syntax":"\n   resource <b>ncurses_panel_below<\/b>\n    ( resource $panel\n   )","desc":""},"ncurses_panel_window":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Returns the window associated with panel","syntax":"\n   resource <b>ncurses_panel_window<\/b>\n    ( resource $panel\n   )","desc":""},"ncurses_pnoutrefresh":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Copies a region from a pad into the virtual screen","syntax":"\n   int <b>ncurses_pnoutrefresh<\/b>\n    ( resource $pad\n   , int $pminrow\n   , int $pmincol\n   , int $sminrow\n   , int $smincol\n   , int $smaxrow\n   , int $smaxcol\n   )","desc":""},"ncurses_prefresh":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Copies a region from a pad into the virtual screen","syntax":"\n   int <b>ncurses_prefresh<\/b>\n    ( resource $pad\n   , int $pminrow\n   , int $pmincol\n   , int $sminrow\n   , int $smincol\n   , int $smaxrow\n   , int $smaxcol\n   )","desc":""},"ncurses_putp":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Apply padding information to the string and output it","syntax":"\n   int <b>ncurses_putp<\/b>\n    ( string $text\n   )","desc":""},"ncurses_qiflush":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Flush on signal characters ","syntax":"\n   void <b>ncurses_qiflush<\/b>\n    ( void\n   )","desc":""},"ncurses_raw":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Switch terminal into raw mode ","syntax":"\n   bool <b>ncurses_raw<\/b>\n    ( void\n   )","desc":""},"ncurses_refresh":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Refresh screen ","syntax":"\n   int <b>ncurses_refresh<\/b>\n    ( int $ch\n   )","desc":""},"ncurses_replace_panel":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Replaces the window associated with panel","syntax":"\n   int <b>ncurses_replace_panel<\/b>\n    ( resource $panel\n   , resource $window\n   )","desc":""},"ncurses_reset_prog_mode":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Resets the prog mode saved by def_prog_mode","syntax":"\n   int <b>ncurses_reset_prog_mode<\/b>\n    ( void\n   )","desc":""},"ncurses_reset_shell_mode":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Resets the shell mode saved by def_shell_mode","syntax":"\n   int <b>ncurses_reset_shell_mode<\/b>\n    ( void\n   )","desc":""},"ncurses_resetty":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Restores saved terminal state ","syntax":"\n   bool <b>ncurses_resetty<\/b>\n    ( void\n   )","desc":""},"ncurses_savetty":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Saves terminal state ","syntax":"\n   bool <b>ncurses_savetty<\/b>\n    ( void\n   )","desc":""},"ncurses_scr_dump":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Dump screen content to file ","syntax":"\n   int <b>ncurses_scr_dump<\/b>\n    ( string $filename\n   )","desc":""},"ncurses_scr_init":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Initialize screen from file dump ","syntax":"\n   int <b>ncurses_scr_init<\/b>\n    ( string $filename\n   )","desc":""},"ncurses_scr_restore":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Restore screen from file dump ","syntax":"\n   int <b>ncurses_scr_restore<\/b>\n    ( string $filename\n   )","desc":""},"ncurses_scr_set":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Inherit screen from file dump ","syntax":"\n   int <b>ncurses_scr_set<\/b>\n    ( string $filename\n   )","desc":""},"ncurses_scrl":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Scroll window content up or down without changing current position ","syntax":"\n   int <b>ncurses_scrl<\/b>\n    ( int $count\n   )","desc":""},"ncurses_show_panel":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Places an invisible panel on top of the stack, making it visible","syntax":"\n   int <b>ncurses_show_panel<\/b>\n    ( resource $panel\n   )","desc":""},"ncurses_slk_attr":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Returns current soft label key attribute","syntax":"\n   int <b>ncurses_slk_attr<\/b>\n    ( void\n   )","desc":""},"ncurses_slk_attroff":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Turn off the given attributes for soft function-key labels","syntax":"\n   int <b>ncurses_slk_attroff<\/b>\n    ( int $intarg\n   )","desc":""},"ncurses_slk_attron":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Turn on the given attributes for soft function-key labels","syntax":"\n   int <b>ncurses_slk_attron<\/b>\n    ( int $intarg\n   )","desc":""},"ncurses_slk_attrset":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Set given attributes for soft function-key labels","syntax":"\n   int <b>ncurses_slk_attrset<\/b>\n    ( int $intarg\n   )","desc":""},"ncurses_slk_clear":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Clears soft labels from screen","syntax":"\n   bool <b>ncurses_slk_clear<\/b>\n    ( void\n   )","desc":""},"ncurses_slk_color":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Sets color for soft label keys","syntax":"\n   int <b>ncurses_slk_color<\/b>\n    ( int $intarg\n   )","desc":""},"ncurses_slk_init":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Initializes soft label key functions","syntax":"\n   bool <b>ncurses_slk_init<\/b>\n    ( int $format\n   )","desc":""},"ncurses_slk_noutrefresh":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Copies soft label keys to virtual screen","syntax":"\n   bool <b>ncurses_slk_noutrefresh<\/b>\n    ( void\n   )","desc":""},"ncurses_slk_refresh":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Copies soft label keys to screen","syntax":"\n   int <b>ncurses_slk_refresh<\/b>\n    ( void\n   )","desc":""},"ncurses_slk_restore":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Restores soft label keys","syntax":"\n   int <b>ncurses_slk_restore<\/b>\n    ( void\n   )","desc":""},"ncurses_slk_set":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Sets function key labels","syntax":"\n   bool <b>ncurses_slk_set<\/b>\n    ( int $labelnr\n   , string $label\n   , int $format\n   )","desc":""},"ncurses_slk_touch":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Forces output when ncurses_slk_noutrefresh is performed","syntax":"\n   int <b>ncurses_slk_touch<\/b>\n    ( void\n   )","desc":""},"ncurses_standend":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Stop using 'standout' attribute ","syntax":"\n   int <b>ncurses_standend<\/b>\n    ( void\n   )","desc":""},"ncurses_standout":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Start using 'standout' attribute ","syntax":"\n   int <b>ncurses_standout<\/b>\n    ( void\n   )","desc":""},"ncurses_start_color":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Initializes color functionality","syntax":"\n   int <b>ncurses_start_color<\/b>\n    ( void\n   )","desc":"\n   Initializes color functionality in ncurses. This function must be called\n   before any color manipulation functions are called and after\n    ncurses_init() is called. It is good practice to call\n   this function right after  ncurses_init().\n  "},"ncurses_termattrs":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Returns a logical OR of all attribute flags supported by terminal ","syntax":"\n   bool <b>ncurses_termattrs<\/b>\n    ( void\n   )","desc":""},"ncurses_termname":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Returns terminals (short)-name","syntax":"\n   string <b>ncurses_termname<\/b>\n    ( void\n   )","desc":""},"ncurses_timeout":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Set timeout for special key sequences ","syntax":"\n   void <b>ncurses_timeout<\/b>\n    ( int $millisec\n   )","desc":""},"ncurses_top_panel":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Moves a visible panel to the top of the stack","syntax":"\n   int <b>ncurses_top_panel<\/b>\n    ( resource $panel\n   )","desc":""},"ncurses_typeahead":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Specify different filedescriptor for typeahead checking ","syntax":"\n   int <b>ncurses_typeahead<\/b>\n    ( int $fd\n   )","desc":""},"ncurses_ungetch":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Put a character back into the input stream ","syntax":"\n   int <b>ncurses_ungetch<\/b>\n    ( int $keycode\n   )","desc":""},"ncurses_ungetmouse":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Pushes mouse event to queue","syntax":"\n   bool <b>ncurses_ungetmouse<\/b>\n    ( array $mevent\n   )","desc":""},"ncurses_update_panels":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Refreshes the virtual screen to reflect the relations between panels in the stack","syntax":"\n   void <b>ncurses_update_panels<\/b>\n    ( void\n   )","desc":""},"ncurses_use_default_colors":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Assign terminal default colors to color id -1 ","syntax":"\n   bool <b>ncurses_use_default_colors<\/b>\n    ( void\n   )","desc":""},"ncurses_use_env":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Control use of environment information about terminal size ","syntax":"\n   void <b>ncurses_use_env<\/b>\n    ( bool $flag\n   )","desc":""},"ncurses_use_extended_names":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Control use of extended names in terminfo descriptions ","syntax":"\n   int <b>ncurses_use_extended_names<\/b>\n    ( bool $flag\n   )","desc":""},"ncurses_vidattr":{"version":"(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Display the string on the terminal in the video attribute mode","syntax":"\n   int <b>ncurses_vidattr<\/b>\n    ( int $intarg\n   )","desc":""},"ncurses_vline":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Draw a vertical line at current position using an attributed character and max. n characters long ","syntax":"\n   int <b>ncurses_vline<\/b>\n    ( int $charattr\n   , int $n\n   )","desc":""},"ncurses_waddch":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Adds character at current position in a window and advance cursor","syntax":"\n   int <b>ncurses_waddch<\/b>\n    ( resource $window\n   , int $ch\n   )","desc":""},"ncurses_waddstr":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Outputs text at current postion in window","syntax":"\n   int <b>ncurses_waddstr<\/b>\n    ( resource $window\n   , string $str\n   [, int $n\n  ] )","desc":""},"ncurses_wattroff":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Turns off attributes for a window","syntax":"\n   int <b>ncurses_wattroff<\/b>\n    ( resource $window\n   , int $attrs\n   )","desc":""},"ncurses_wattron":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Turns on attributes for a window","syntax":"\n   int <b>ncurses_wattron<\/b>\n    ( resource $window\n   , int $attrs\n   )","desc":""},"ncurses_wattrset":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Set the attributes for a window","syntax":"\n   int <b>ncurses_wattrset<\/b>\n    ( resource $window\n   , int $attrs\n   )","desc":""},"ncurses_wborder":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Draws a border around the window using attributed characters","syntax":"\n   int <b>ncurses_wborder<\/b>\n    ( resource $window\n   , int $left\n   , int $right\n   , int $top\n   , int $bottom\n   , int $tl_corner\n   , int $tr_corner\n   , int $bl_corner\n   , int $br_corner\n   )","desc":""},"ncurses_wclear":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Clears window","syntax":"\n   int <b>ncurses_wclear<\/b>\n    ( resource $window\n   )","desc":""},"ncurses_wcolor_set":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Sets windows color pairings","syntax":"\n   int <b>ncurses_wcolor_set<\/b>\n    ( resource $window\n   , int $color_pair\n   )","desc":""},"ncurses_werase":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Erase window contents","syntax":"\n   int <b>ncurses_werase<\/b>\n    ( resource $window\n   )","desc":""},"ncurses_wgetch":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Reads a character from keyboard (window)","syntax":"\n   int <b>ncurses_wgetch<\/b>\n    ( resource $window\n   )","desc":""},"ncurses_whline":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Draws a horizontal line in a window at current position using an attributed character and max. n characters long","syntax":"\n   int <b>ncurses_whline<\/b>\n    ( resource $window\n   , int $charattr\n   , int $n\n   )","desc":""},"ncurses_wmouse_trafo":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Transforms window\/stdscr coordinates","syntax":"\n   bool <b>ncurses_wmouse_trafo<\/b>\n    ( resource $window\n   , int &$y\n   , int &$x\n   , bool $toscreen\n   )","desc":""},"ncurses_wmove":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Moves windows output position","syntax":"\n   int <b>ncurses_wmove<\/b>\n    ( resource $window\n   , int $y\n   , int $x\n   )","desc":""},"ncurses_wnoutrefresh":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Copies window to virtual screen","syntax":"\n   int <b>ncurses_wnoutrefresh<\/b>\n    ( resource $window\n   )","desc":""},"ncurses_wrefresh":{"version":"(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Refresh window on terminal screen ","syntax":"\n   int <b>ncurses_wrefresh<\/b>\n    ( resource $window\n   )","desc":""},"ncurses_wstandend":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"End standout mode for a window","syntax":"\n   int <b>ncurses_wstandend<\/b>\n    ( resource $window\n   )","desc":""},"ncurses_wstandout":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Enter standout mode for a window","syntax":"\n   int <b>ncurses_wstandout<\/b>\n    ( resource $window\n   )","desc":""},"ncurses_wvline":{"version":"(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)","shortdesc":"Draws a vertical line in a window at current position using an attributed character and max. n characters long","syntax":"\n   int <b>ncurses_wvline<\/b>\n    ( resource $window\n   , int $charattr\n   , int $n\n   )","desc":""},"newt_bell":{"version":"(PECL newt >= 0.1)","shortdesc":"Send a beep to the terminal","syntax":"\n   void <b>newt_bell<\/b>\n    ( void\n   )","desc":"\n   This function sends a beep to the terminal.\n  "},"newt_button_bar":{"version":"(PECL newt >= 0.1)","shortdesc":"This function returns a grid containing the buttons created.","syntax":"\n   resource <b>newt_button_bar<\/b>\n    ( array &$buttons\n   )","desc":"\n    This function returns a grid containing the buttons created.\n   "},"newt_button":{"version":"(PECL newt >= 0.1)","shortdesc":"Create a new button","syntax":"\n   resource <b>newt_button<\/b>\n    ( int $left\n   , int $top\n   , string $text\n   )","desc":"\n   Creates a new button.\n  "},"newt_centered_window":{"version":"(PECL newt >= 0.1)","shortdesc":"Open a centered window of the specified size","syntax":"\n   int <b>newt_centered_window<\/b>\n    ( int $width\n   , int $height\n   [, string $title\n  ] )","desc":"Open a centered window of the specified size."},"newt_checkbox_get_value":{"version":"(PECL newt >= 0.1)","shortdesc":"Retreives value of checkox resource","syntax":"\n   string <b>newt_checkbox_get_value<\/b>\n    ( resource $checkbox\n   )","desc":"\n   This function returns the character in the sequence which indicates the current value\n   of the checkbox.\n  "},"newt_checkbox_set_flags":{"version":"(PECL newt >= 0.1)","shortdesc":"Configures checkbox resource","syntax":"\n   void <b>newt_checkbox_set_flags<\/b>\n    ( resource $checkbox\n   , int $flags\n   , int $sense\n   )","desc":"\n   This function allows to set various flags on checkbox resource.\n  "},"newt_checkbox_set_value":{"version":"(PECL newt >= 0.1)","shortdesc":"Sets the value of the checkbox","syntax":"\n   void <b>newt_checkbox_set_value<\/b>\n    ( resource $checkbox\n   , string $value\n   )","desc":"\n   This function allows to set the current value of the checkbox resource.\n  "},"newt_checkbox_tree_add_item":{"version":"(PECL newt >= 0.1)","shortdesc":"Adds new item to the checkbox tree","syntax":"\n   void <b>newt_checkbox_tree_add_item<\/b>\n    ( resource $checkboxtree\n   , string $text\n   , mixed $data\n   , int $flags\n   , int $index\n   [, int $...\n  ] )","desc":"\n   This function allows to add new item to the checkbox tree.\n  "},"newt_checkbox_tree_find_item":{"version":"(PECL newt >= 0.1)","shortdesc":"Finds an item in the checkbox tree","syntax":"\n   array <b>newt_checkbox_tree_find_item<\/b>\n    ( resource $checkboxtree\n   , mixed $data\n   )","desc":"\n   Finds an item in the checkbox tree by item's data.\n  "},"newt_checkbox_tree_get_current":{"version":"(PECL newt >= 0.1)","shortdesc":"Returns checkbox tree selected item","syntax":"\n   mixed <b>newt_checkbox_tree_get_current<\/b>\n    ( resource $checkboxtree\n   )","desc":"\n   This method returns checkbox tree selected tem.\n  "},"newt_checkbox_tree_get_entry_value":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   string <b>newt_checkbox_tree_get_entry_value<\/b>\n    ( resource $checkboxtree\n   , mixed $data\n   )","desc":""},"newt_checkbox_tree_get_multi_selection":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   array <b>newt_checkbox_tree_get_multi_selection<\/b>\n    ( resource $checkboxtree\n   , string $seqnum\n   )","desc":""},"newt_checkbox_tree_get_selection":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   array <b>newt_checkbox_tree_get_selection<\/b>\n    ( resource $checkboxtree\n   )","desc":""},"newt_checkbox_tree_multi":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   resource <b>newt_checkbox_tree_multi<\/b>\n    ( int $left\n   , int $top\n   , int $height\n   , string $seq\n   [, int $flags\n  ] )","desc":""},"newt_checkbox_tree_set_current":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_checkbox_tree_set_current<\/b>\n    ( resource $checkboxtree\n   , mixed $data\n   )","desc":""},"newt_checkbox_tree_set_entry_value":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_checkbox_tree_set_entry_value<\/b>\n    ( resource $checkboxtree\n   , mixed $data\n   , string $value\n   )","desc":""},"newt_checkbox_tree_set_entry":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_checkbox_tree_set_entry<\/b>\n    ( resource $checkboxtree\n   , mixed $data\n   , string $text\n   )","desc":""},"newt_checkbox_tree_set_width":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_checkbox_tree_set_width<\/b>\n    ( resource $checkbox_tree\n   , int $width\n   )","desc":""},"newt_checkbox_tree":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   resource <b>newt_checkbox_tree<\/b>\n    ( int $left\n   , int $top\n   , int $height\n   [, int $flags\n  ] )","desc":""},"newt_checkbox":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   resource <b>newt_checkbox<\/b>\n    ( int $left\n   , int $top\n   , string $text\n   , string $def_value\n   [, string $seq\n  ] )","desc":""},"newt_clear_key_buffer":{"version":"(PECL newt >= 0.1)","shortdesc":"Discards the contents of the terminal's input buffer without\n  waiting for additional input","syntax":"\n   void <b>newt_clear_key_buffer<\/b>\n    ( void\n   )","desc":"\n   Discards the contents of the terminal's input buffer without waiting for\n   additional input.\n  "},"newt_cls":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_cls<\/b>\n    ( void\n   )","desc":""},"newt_compact_button":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   resource <b>newt_compact_button<\/b>\n    ( int $left\n   , int $top\n   , string $text\n   )","desc":""},"newt_component_add_callback":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_component_add_callback<\/b>\n    ( resource $component\n   , mixed $func_name\n   , mixed $data\n   )","desc":""},"newt_component_takes_focus":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_component_takes_focus<\/b>\n    ( resource $component\n   , bool $takes_focus\n   )","desc":""},"newt_create_grid":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   resource <b>newt_create_grid<\/b>\n    ( int $cols\n   , int $rows\n   )","desc":""},"newt_cursor_off":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_cursor_off<\/b>\n    ( void\n   )","desc":""},"newt_cursor_on":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_cursor_on<\/b>\n    ( void\n   )","desc":""},"newt_delay":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_delay<\/b>\n    ( int $microseconds\n   )","desc":""},"newt_draw_form":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_draw_form<\/b>\n    ( resource $form\n   )","desc":""},"newt_draw_root_text":{"version":"(PECL newt >= 0.1)","shortdesc":"Displays the string text at the position indicated","syntax":"\n   void <b>newt_draw_root_text<\/b>\n    ( int $left\n   , int $top\n   , string $text\n   )","desc":"Displays the string text at the position indicated."},"newt_entry_get_value":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   string <b>newt_entry_get_value<\/b>\n    ( resource $entry\n   )","desc":""},"newt_entry_set_filter":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_entry_set_filter<\/b>\n    ( resource $entry\n   , callable $filter\n   , mixed $data\n   )","desc":""},"newt_entry_set_flags":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_entry_set_flags<\/b>\n    ( resource $entry\n   , int $flags\n   , int $sense\n   )","desc":""},"newt_entry_set":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_entry_set<\/b>\n    ( resource $entry\n   , string $value\n   [, bool $cursor_at_end\n  ] )","desc":""},"newt_entry":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   resource <b>newt_entry<\/b>\n    ( int $left\n   , int $top\n   , int $width\n   [, string $init_value\n   [, int $flags\n  ]] )","desc":""},"newt_finished":{"version":"(PECL newt >= 0.1)","shortdesc":"Uninitializes newt interface","syntax":"\n   int <b>newt_finished<\/b>\n    ( void\n   )","desc":"\n   Uninitializes newt interface. This function be called, when program is ready\n   to exit.\n  "},"newt_form_add_component":{"version":"(PECL newt >= 0.1)","shortdesc":"Adds a single component to the form","syntax":"\n   void <b>newt_form_add_component<\/b>\n    ( resource $form\n   , resource $component\n   )","desc":"\n   Adds a single component to the form.\n  "},"newt_form_add_components":{"version":"(PECL newt >= 0.1)","shortdesc":"Add several components to the form","syntax":"\n   void <b>newt_form_add_components<\/b>\n    ( resource $form\n   , array $components\n   )","desc":"\n   Adds several components to the form.\n  "},"newt_form_add_hot_key":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_form_add_hot_key<\/b>\n    ( resource $form\n   , int $key\n   )","desc":""},"newt_form_destroy":{"version":"(PECL newt >= 0.1)","shortdesc":"Destroys a form","syntax":"\n   void <b>newt_form_destroy<\/b>\n    ( resource $form\n   )","desc":"\n   This function frees the memory resources used by the form and all of the\n   components which have been added to the form (including those components\n   which are on subforms). Once a form has been destroyed, none of the form's\n   components can be used.\n  "},"newt_form_get_current":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   resource <b>newt_form_get_current<\/b>\n    ( resource $form\n   )","desc":""},"newt_form_run":{"version":"(PECL newt >= 0.1)","shortdesc":"Runs a form","syntax":"\n   void <b>newt_form_run<\/b>\n    ( resource $form\n   , array &$exit_struct\n   )","desc":"\n   This function runs the form passed to it.\n  "},"newt_form_set_background":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_form_set_background<\/b>\n    ( resource $from\n   , int $background\n   )","desc":""},"newt_form_set_height":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_form_set_height<\/b>\n    ( resource $form\n   , int $height\n   )","desc":""},"newt_form_set_size":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_form_set_size<\/b>\n    ( resource $form\n   )","desc":""},"newt_form_set_timer":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_form_set_timer<\/b>\n    ( resource $form\n   , int $milliseconds\n   )","desc":""},"newt_form_set_width":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_form_set_width<\/b>\n    ( resource $form\n   , int $width\n   )","desc":""},"newt_form_watch_fd":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_form_watch_fd<\/b>\n    ( resource $form\n   , resource $stream\n   [, int $flags\n  ] )","desc":""},"newt_form":{"version":"(PECL newt >= 0.1)","shortdesc":"Create a form","syntax":"\n   resource <b>newt_form<\/b>\n    ([ resource $vert_bar\n   [, string $help\n   [, int $flags\n  ]]] )","desc":"\n   Create a new form.\n  "},"newt_get_screen_size":{"version":"(PECL newt >= 0.1)","shortdesc":"Fills in the passed references with the current size of the\n  terminal","syntax":"\n   void <b>newt_get_screen_size<\/b>\n    ( int &$cols\n   , int &$rows\n   )","desc":"\n   Fills in the passed references with the current size of the terminal.\n  "},"newt_grid_add_components_to_form":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_grid_add_components_to_form<\/b>\n    ( resource $grid\n   , resource $form\n   , bool $recurse\n   )","desc":""},"newt_grid_basic_window":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   resource <b>newt_grid_basic_window<\/b>\n    ( resource $text\n   , resource $middle\n   , resource $buttons\n   )","desc":""},"newt_grid_free":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_grid_free<\/b>\n    ( resource $grid\n   , bool $recurse\n   )","desc":""},"newt_grid_get_size":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_grid_get_size<\/b>\n    ( resouce $grid\n   , int &$width\n   , int &$height\n   )","desc":""},"newt_grid_h_close_stacked":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   resource <b>newt_grid_h_close_stacked<\/b>\n    ( int $element1_type\n   , resource $element1\n   [, int $...\n   [, resource $...\n  ]] )","desc":""},"newt_grid_h_stacked":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   resource <b>newt_grid_h_stacked<\/b>\n    ( int $element1_type\n   , resource $element1\n   [, int $...\n   [, resource $...\n  ]] )","desc":""},"newt_grid_place":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_grid_place<\/b>\n    ( resource $grid\n   , int $left\n   , int $top\n   )","desc":""},"newt_grid_set_field":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_grid_set_field<\/b>\n    ( resource $grid\n   , int $col\n   , int $row\n   , int $type\n   , resource $val\n   , int $pad_left\n   , int $pad_top\n   , int $pad_right\n   , int $pad_bottom\n   , int $anchor\n   [, int $flags\n  ] )","desc":""},"newt_grid_simple_window":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   resource <b>newt_grid_simple_window<\/b>\n    ( resource $text\n   , resource $middle\n   , resource $buttons\n   )","desc":""},"newt_grid_v_close_stacked":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   resource <b>newt_grid_v_close_stacked<\/b>\n    ( int $element1_type\n   , resource $element1\n   [, int $...\n   [, resource $...\n  ]] )","desc":""},"newt_grid_v_stacked":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   resource <b>newt_grid_v_stacked<\/b>\n    ( int $element1_type\n   , resource $element1\n   [, int $...\n   [, resource $...\n  ]] )","desc":""},"newt_grid_wrapped_window_at":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_grid_wrapped_window_at<\/b>\n    ( resource $grid\n   , string $title\n   , int $left\n   , int $top\n   )","desc":""},"newt_grid_wrapped_window":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_grid_wrapped_window<\/b>\n    ( resource $grid\n   , string $title\n   )","desc":""},"newt_init":{"version":"(PECL newt >= 0.1)","shortdesc":"Initialize newt","syntax":"\n   int <b>newt_init<\/b>\n    ( void\n   )","desc":"\n   Initializes the newt interface. This function must be called before any other newt function.\n  "},"newt_label_set_text":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_label_set_text<\/b>\n    ( resource $label\n   , string $text\n   )","desc":""},"newt_label":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   resource <b>newt_label<\/b>\n    ( int $left\n   , int $top\n   , string $text\n   )","desc":""},"newt_listbox_append_entry":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_listbox_append_entry<\/b>\n    ( resource $listbox\n   , string $text\n   , mixed $data\n   )","desc":""},"newt_listbox_clear_selection":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_listbox_clear_selection<\/b>\n    ( resource $listbox\n   )","desc":""},"newt_listbox_clear":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_listbox_clear<\/b>\n    ( resource $listobx\n   )","desc":""},"newt_listbox_delete_entry":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_listbox_delete_entry<\/b>\n    ( resource $listbox\n   , mixed $key\n   )","desc":""},"newt_listbox_get_current":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   string <b>newt_listbox_get_current<\/b>\n    ( resource $listbox\n   )","desc":""},"newt_listbox_get_selection":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   array <b>newt_listbox_get_selection<\/b>\n    ( resource $listbox\n   )","desc":""},"newt_listbox_insert_entry":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_listbox_insert_entry<\/b>\n    ( resource $listbox\n   , string $text\n   , mixed $data\n   , mixed $key\n   )","desc":""},"newt_listbox_item_count":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   int <b>newt_listbox_item_count<\/b>\n    ( resource $listbox\n   )","desc":""},"newt_listbox_select_item":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_listbox_select_item<\/b>\n    ( resource $listbox\n   , mixed $key\n   , int $sense\n   )","desc":""},"newt_listbox_set_current_by_key":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_listbox_set_current_by_key<\/b>\n    ( resource $listbox\n   , mixed $key\n   )","desc":""},"newt_listbox_set_current":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_listbox_set_current<\/b>\n    ( resource $listbox\n   , int $num\n   )","desc":""},"newt_listbox_set_data":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_listbox_set_data<\/b>\n    ( resource $listbox\n   , int $num\n   , mixed $data\n   )","desc":""},"newt_listbox_set_entry":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_listbox_set_entry<\/b>\n    ( resource $listbox\n   , int $num\n   , string $text\n   )","desc":""},"newt_listbox_set_width":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_listbox_set_width<\/b>\n    ( resource $listbox\n   , int $width\n   )","desc":""},"newt_listbox":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   resource <b>newt_listbox<\/b>\n    ( int $left\n   , int $top\n   , int $height\n   [, int $flags\n  ] )","desc":""},"newt_listitem_get_data":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   mixed <b>newt_listitem_get_data<\/b>\n    ( resource $item\n   )","desc":""},"newt_listitem_set":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_listitem_set<\/b>\n    ( resource $item\n   , string $text\n   )","desc":""},"newt_listitem":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   resource <b>newt_listitem<\/b>\n    ( int $left\n   , int $top\n   , string $text\n   , bool $is_default\n   , resouce $prev_item\n   , mixed $data\n   [, int $flags\n  ] )","desc":""},"newt_open_window":{"version":"(PECL newt >= 0.1)","shortdesc":"Open a window of the specified size and position","syntax":"\n   int <b>newt_open_window<\/b>\n    ( int $left\n   , int $top\n   , int $width\n   , int $height\n   [, string $title\n  ] )","desc":"\n   Open a window of the specified size and position.\n  "},"newt_pop_help_line":{"version":"(PECL newt >= 0.1)","shortdesc":"Replaces the current help line with the one from the stack","syntax":"\n   void <b>newt_pop_help_line<\/b>\n    ( void\n   )","desc":"\n   Replaces the current help line with the one from the stack.\n  "},"newt_pop_window":{"version":"(PECL newt >= 0.1)","shortdesc":"Removes the top window from the display","syntax":"\n   void <b>newt_pop_window<\/b>\n    ( void\n   )","desc":"Removes the top window from the display, and redraws the display areas\n  which the window overwrote."},"newt_push_help_line":{"version":"(PECL newt >= 0.1)","shortdesc":"Saves the current help line on a stack, and displays the new line","syntax":"\n   void <b>newt_push_help_line<\/b>\n    ([ string $text\n  ] )","desc":"\n   Saves the current help line on a stack, and displays the new line.\n  "},"newt_radio_get_current":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   resource <b>newt_radio_get_current<\/b>\n    ( resource $set_member\n   )","desc":""},"newt_radiobutton":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   resource <b>newt_radiobutton<\/b>\n    ( int $left\n   , int $top\n   , string $text\n   , bool $is_default\n   [, resource $prev_button\n  ] )","desc":""},"newt_redraw_help_line":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_redraw_help_line<\/b>\n    ( void\n   )","desc":""},"newt_reflow_text":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   string <b>newt_reflow_text<\/b>\n    ( string $text\n   , int $width\n   , int $flex_down\n   , int $flex_up\n   , int &$actual_width\n   , int &$actual_height\n   )","desc":""},"newt_refresh":{"version":"(PECL newt >= 0.1)","shortdesc":"Updates modified portions of the screen","syntax":"\n   void <b>newt_refresh<\/b>\n    ( void\n   )","desc":"\n   To increase performance, newt only updates the display when it needs to,\n   not when the program tells it to write to the terminal. Applications can\n   force newt to immediately update modified portions of the screen by calling\n   this function.\n  "},"newt_resize_screen":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_resize_screen<\/b>\n    ([ bool $redraw\n  ] )","desc":""},"newt_resume":{"version":"(PECL newt >= 0.1)","shortdesc":"Resume using the newt interface after calling\n   newt_suspend()","syntax":"\n   void <b>newt_resume<\/b>\n    ( void\n   )","desc":"\n   Resume using the newt interface after calling\n    newt_suspend().\n  "},"newt_run_form":{"version":"(PECL newt >= 0.1)","shortdesc":"Runs a form","syntax":"\n   resource <b>newt_run_form<\/b>\n    ( resource $form\n   )","desc":"\n   This function runs the form passed to it.\n  "},"newt_scale_set":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_scale_set<\/b>\n    ( resource $scale\n   , int $amount\n   )","desc":""},"newt_scale":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   resource <b>newt_scale<\/b>\n    ( int $left\n   , int $top\n   , int $width\n   , int $full_value\n   )","desc":""},"newt_scrollbar_set":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_scrollbar_set<\/b>\n    ( resource $scrollbar\n   , int $where\n   , int $total\n   )","desc":""},"newt_set_help_callback":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_set_help_callback<\/b>\n    ( mixed $function\n   )","desc":""},"newt_set_suspend_callback":{"version":"(PECL newt >= 0.1)","shortdesc":"Set a callback function which gets invoked when user\n  presses the suspend key","syntax":"\n   void <b>newt_set_suspend_callback<\/b>\n    ( callable $function\n   , mixed $data\n   )","desc":"\n   Set a callback function which gets invoked when user presses the suspend\n   key (normally ^Z). If no suspend callback is registered, the suspend\n   keystroke is ignored.\n  "},"newt_suspend":{"version":"(PECL newt >= 0.1)","shortdesc":"Tells newt to return the terminal to its initial state","syntax":"\n   void <b>newt_suspend<\/b>\n    ( void\n   )","desc":"\n   Tells newt to return the terminal to its initial state. Once this is\n   done, the application can suspend itself (by sending itself a SIGTSTP, fork\n   a child program, or do whatever else it likes).\n  "},"newt_textbox_get_num_lines":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   int <b>newt_textbox_get_num_lines<\/b>\n    ( resource $textbox\n   )","desc":""},"newt_textbox_reflowed":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   resource <b>newt_textbox_reflowed<\/b>\n    ( int $left\n   , int $top\n   , char $*text\n   , int $width\n   , int $flex_down\n   , int $flex_up\n   [, int $flags\n  ] )","desc":""},"newt_textbox_set_height":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_textbox_set_height<\/b>\n    ( resource $textbox\n   , int $height\n   )","desc":""},"newt_textbox_set_text":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_textbox_set_text<\/b>\n    ( resource $textbox\n   , string $text\n   )","desc":""},"newt_textbox":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   resource <b>newt_textbox<\/b>\n    ( int $left\n   , int $top\n   , int $width\n   , int $height\n   [, int $flags\n  ] )","desc":""},"newt_vertical_scrollbar":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   resource <b>newt_vertical_scrollbar<\/b>\n    ( int $left\n   , int $top\n   , int $height\n   [, int $normal_colorset\n   [, int $thumb_colorset\n  ]] )","desc":""},"newt_wait_for_key":{"version":"(PECL newt >= 0.1)","shortdesc":"Doesn't return until a key has been pressed","syntax":"\n   void <b>newt_wait_for_key<\/b>\n    ( void\n   )","desc":"\n   This function doesn't return until a key has been pressed. The keystroke\n   is then ignored. If a key is already in the terminal's buffer, this\n   function discards a keystroke and returns immediately.\n  "},"newt_win_choice":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   int <b>newt_win_choice<\/b>\n    ( string $title\n   , string $button1_text\n   , string $button2_text\n   , string $format\n   [, mixed $args\n   [, mixed $...\n  ]] )","desc":""},"newt_win_entries":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   int <b>newt_win_entries<\/b>\n    ( string $title\n   , string $text\n   , int $suggested_width\n   , int $flex_down\n   , int $flex_up\n   , int $data_width\n   , array &$items\n   , string $button1\n   [, string $...\n  ] )","desc":""},"newt_win_menu":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   int <b>newt_win_menu<\/b>\n    ( string $title\n   , string $text\n   , int $suggestedWidth\n   , int $flexDown\n   , int $flexUp\n   , int $maxListHeight\n   , array $items\n   , int &$listItem\n   [, string $button1\n   [, string $...\n  ]] )","desc":""},"newt_win_message":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_win_message<\/b>\n    ( string $title\n   , string $button_text\n   , string $format\n   [, mixed $args\n   [, mixed $...\n  ]] )","desc":""},"newt_win_messagev":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   void <b>newt_win_messagev<\/b>\n    ( string $title\n   , string $button_text\n   , string $format\n   , array $args\n   )","desc":""},"newt_win_ternary":{"version":"(PECL newt >= 0.1)","shortdesc":"\n ","syntax":"\n   int <b>newt_win_ternary<\/b>\n    ( string $title\n   , string $button1_text\n   , string $button2_text\n   , string $button3_text\n   , string $format\n   [, mixed $args\n   [, mixed $...\n  ]] )","desc":""},"next":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0435\u0440\u0435\u0434\u0432\u0438\u0433\u0430\u0435\u0442 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043d\u0430 \u043e\u0434\u043d\u0443 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u0432\u043f\u0435\u0440\u0451\u0434","syntax":"\n   mixed <b>next<\/b>\n    ( array &$array\n   )","desc":"\n    next() \u0432\u0435\u0434\u0451\u0442 \u0441\u0435\u0431\u044f \u043f\u043e\u0434\u043e\u0431\u043d\u043e\n    current(), \u043d\u043e \u0441 \u043e\u0434\u043d\u0438\u043c \u043e\u0442\u043b\u0438\u0447\u0438\u0435\u043c. \u041f\u0435\u0440\u0435\u0434 \u0442\u0435\u043c, \u043a\u0430\u043a\n   \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u0430, \u044d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0435\u0440\u0435\u0434\u0432\u0438\u0433\u0430\u0435\u0442 \u0435\u0433\u043e\n   \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043d\u0430 \u043e\u0434\u043d\u0443 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u0432\u043f\u0435\u0440\u0451\u0434.\n   \u0414\u0440\u0443\u0433\u0438\u043c\u0438 \u0441\u043b\u043e\u0432\u0430\u043c\u0438, \u043e\u043d\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0438\n   \u0441\u0434\u0432\u0438\u0433\u0430\u0435\u0442 \u0435\u0433\u043e \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043d\u0430 \u043e\u0434\u043d\u0443 \u043f\u043e\u0437\u0438\u0446\u0438\u044e.\n  "},"ngettext":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0412\u0435\u0440\u0441\u0438\u044f gettext \u0434\u043b\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0432\u043e \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u043c \u0447\u0438\u0441\u043b\u0435","syntax":"\n   string <b>ngettext<\/b>\n    ( string $msgid1\n   , string $msgid2\n   , int $n\n   )","desc":"\n   \u0412\u0435\u0440\u0441\u0438\u044f  gettext() \u0434\u043b\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0432\u043e \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u043c\n   \u0447\u0438\u0441\u043b\u0435. \u041d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u044f\u0437\u044b\u043a\u0438 \u0438\u043c\u0435\u044e\u0442 \u0431\u043e\u043b\u044c\u0448\u0435 \u043e\u0434\u043d\u043e\u0439 \u0444\u043e\u0440\u043c\u044b \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0434\u043b\u044f\n   \u0440\u0430\u0437\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430.\n  "},"nl_langinfo":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u044f\u0437\u044b\u043a\u0435 \u0438 \u043b\u043e\u043a\u0430\u043b\u0438","syntax":"\n   string <b>nl_langinfo<\/b>\n    ( int $item\n   )","desc":"\n    nl_langinfo() \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u043c \n   \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0439 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u043b\u043e\u043a\u0430\u043b\u0438.\n   \u0412 \u043e\u0442\u043b\u0438\u0447\u0438\u0438 \u043e\u0442  localeconv(), \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0449\u0435\u0439 \u0432\u0441\u0435 \n   \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b,  nl_langinfo() \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u044b\u0431\u0440\u0430\u0442\u044c \n   \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442.\n  "},"nl2br":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 HTML-\u043a\u043e\u0434 \u0440\u0430\u0437\u0440\u044b\u0432\u0430 \u0441\u0442\u0440\u043e\u043a\u0438 \u043f\u0435\u0440\u0435\u0434 \u043a\u0430\u0436\u0434\u044b\u043c \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u043e\u043c \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   string <b>nl2br<\/b>\n    ( string $string\n   [, bool $is_xhtml = true\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 string, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043f\u0435\u0440\u0435\u0434 \u043a\u0430\u0436\u0434\u044b\u043c\n   \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u043e\u043c \u0441\u0442\u0440\u043e\u043a\u0438 (\\r\\n,\n   \\n\\r, \\n \u0438\n   \\r) \u0432\u0441\u0442\u0430\u0432\u043b\u0435\u043d '<br \/>' \u0438\u043b\u0438 '<br>'.\n  "},"notes_body":{"version":"(PHP 4 >= 4.0.5)","shortdesc":"Open the message msg_number in the specified mailbox on the specified server (leave serv","syntax":"\n   array <b>notes_body<\/b>\n    ( string $server\n   , string $mailbox\n   , int $msg_number\n   )","desc":""},"notes_copy_db":{"version":"(PHP 4 >= 4.0.5)","shortdesc":"Copy a Lotus Notes database","syntax":"\n   bool <b>notes_copy_db<\/b>\n    ( string $from_database_name\n   , string $to_database_name\n   )","desc":""},"notes_create_db":{"version":"(PHP 4 >= 4.0.5)","shortdesc":"Create a Lotus Notes database","syntax":"\n   bool <b>notes_create_db<\/b>\n    ( string $database_name\n   )","desc":""},"notes_create_note":{"version":"(PHP 4 >= 4.0.5)","shortdesc":"Create a note using form form_name","syntax":"\n   bool <b>notes_create_note<\/b>\n    ( string $database_name\n   , string $form_name\n   )","desc":""},"notes_drop_db":{"version":"(PHP 4 >= 4.0.5)","shortdesc":"Drop a Lotus Notes database","syntax":"\n   bool <b>notes_drop_db<\/b>\n    ( string $database_name\n   )","desc":""},"notes_find_note":{"version":"(PHP 4 >= 4.0.5)","shortdesc":"Returns a note id found in database_name","syntax":"\n   int <b>notes_find_note<\/b>\n    ( string $database_name\n   , string $name\n   [, string $type\n  ] )","desc":""},"notes_header_info":{"version":"(PHP 4 >= 4.0.5)","shortdesc":"Open the message msg_number in the specified mailbox on the specified server (leave serv","syntax":"\n   object <b>notes_header_info<\/b>\n    ( string $server\n   , string $mailbox\n   , int $msg_number\n   )","desc":""},"notes_list_msgs":{"version":"(PHP 4 >= 4.0.5)","shortdesc":"Returns the notes from a selected database_name","syntax":"\n   bool <b>notes_list_msgs<\/b>\n    ( string $db\n   )","desc":""},"notes_mark_read":{"version":"(PHP 4 >= 4.0.5)","shortdesc":"Mark a note_id as read for the User user_name","syntax":"\n   bool <b>notes_mark_read<\/b>\n    ( string $database_name\n   , string $user_name\n   , string $note_id\n   )","desc":""},"notes_mark_unread":{"version":"(PHP 4 >= 4.0.5)","shortdesc":"Mark a note_id as unread for the User user_name","syntax":"\n   bool <b>notes_mark_unread<\/b>\n    ( string $database_name\n   , string $user_name\n   , string $note_id\n   )","desc":""},"notes_nav_create":{"version":"(PHP 4 >= 4.0.5)","shortdesc":"Create a navigator name, in database_name","syntax":"\n   bool <b>notes_nav_create<\/b>\n    ( string $database_name\n   , string $name\n   )","desc":""},"notes_search":{"version":"(PHP 4 >= 4.0.5)","shortdesc":"Find notes that match keywords in database_name","syntax":"\n   array <b>notes_search<\/b>\n    ( string $database_name\n   , string $keywords\n   )","desc":""},"notes_unread":{"version":"(PHP 4 >= 4.0.5)","shortdesc":"Returns the unread note id's for the current User user_name","syntax":"\n   array <b>notes_unread<\/b>\n    ( string $database_name\n   , string $user_name\n   )","desc":""},"notes_version":{"version":"(PHP 4 >= 4.0.5)","shortdesc":"Get the version Lotus Notes","syntax":"\n   float <b>notes_version<\/b>\n    ( string $database_name\n   )","desc":""},"nsapi_request_headers":{"version":"(PHP 4 >= 4.3.3, PHP 5)","shortdesc":"Fetch all HTTP request headers","syntax":"\n   array <b>nsapi_request_headers<\/b>\n    ( void\n   )","desc":"\n    nsapi_request_headers() gets all the HTTP headers in\n   the current request. This is only supported when PHP runs as a \n   NSAPI module.\n  "},"nsapi_response_headers":{"version":"(PHP 4 >= 4.3.3, PHP 5)","shortdesc":"\n   Fetch all HTTP response headers\n  ","syntax":"\n   array <b>nsapi_response_headers<\/b>\n    ( void\n   )","desc":"\n   Gets all the NSAPI response headers.\n  "},"nsapi_virtual":{"version":"(PHP 4 >= 4.3.3, PHP 5)","shortdesc":"Perform an NSAPI sub-request","syntax":"\n   bool <b>nsapi_virtual<\/b>\n    ( string $uri\n   )","desc":"\n    nsapi_virtual() is an NSAPI-specific function which\n   is equivalent to <!--#include virtual...-->\n   in SSI\n   (.shtml files). It does an NSAPI sub-request.\n   It is useful for including CGI scripts or .shtml files, or anything\n   else that you'd parse through webserver.\n  "},"nthmac":{"version":"(PECL spplus >= 1.0.0)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c NTHMAC-\u043a\u043b\u044e\u0447 (\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e 2 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430)","syntax":"\n   string <b>nthmac<\/b>\n    ( string $clent\n   , string $data\n   )","desc":""},"number_format":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0424\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u0443\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u0441 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435\u043c \u0433\u0440\u0443\u043f\u043f","syntax":"\n   string <b>number_format<\/b>\n    ( float $number\n   [, int $decimals = 0\n  ] )\n\n   string <b>number_format<\/b>\n    ( float $number\n   , int $decimals = 0\n   , string $dec_point = '.'\n   , string $thousands_sep = ','\n   )\n","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043e\u0434\u0438\u043d, \u0434\u0432\u0430 \u0438\u043b\u0438 \u0447\u0435\u0442\u044b\u0440\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430 (\u043d\u0435 \u0442\u0440\u0438):\n  "},"oauth_get_sbs":{"version":"(PECL OAuth >=0.99.7)","shortdesc":"Generate a Signature Base String","syntax":"\n   string <b>oauth_get_sbs<\/b>\n    ( string $http_method\n   , string $uri\n   [, array $request_parameters\n  ] )","desc":"\n   Generates a Signature Base String according to pecl\/oauth.\n  "},"oauth_urlencode":{"version":"(PECL OAuth >=0.99.2)","shortdesc":"Encode a URI to RFC 3986","syntax":"\n   string <b>oauth_urlencode<\/b>\n    ( string $uri\n   )","desc":"\n   Encodes a URI to \u00bb\u00a0RFC 3986.\n  "},"ob_clean":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u041e\u0447\u0438\u0449\u0430\u0435\u0442 (\u0441\u0442\u0438\u0440\u0430\u0435\u0442) \u0431\u0443\u0444\u0435\u0440 \u0432\u044b\u0432\u043e\u0434\u0430","syntax":"\n   void <b>ob_clean<\/b>\n    ( void\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u0431\u0443\u0444\u0435\u0440\u0430.\n  "},"ob_deflatehandler":{"version":"(PECL pecl_http >= 0.21.0)","shortdesc":"Deflate output handler","syntax":"\n   string <b>ob_deflatehandler<\/b>\n    ( string $data\n   , int $mode\n   )","desc":"\n   \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0432\u043c\u0435\u0441\u0442\u0435 \u0441  ob_start().\n  "},"ob_end_clean":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0447\u0438\u0449\u0430\u0435\u0442 (\u0441\u0442\u0438\u0440\u0430\u0435\u0442) \u0431\u0443\u0444\u0435\u0440 \u0432\u044b\u0432\u043e\u0434\u0430 \u0438 \u043e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0431\u0443\u0444\u0435\u0440\u0438\u0437\u0430\u0446\u0438\u044e \u0432\u044b\u0432\u043e\u0434\u0430","syntax":"\n   bool <b>ob_end_clean<\/b>\n    ( void\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0441\u0430\u043c\u043e\u0433\u043e \u0432\u0435\u0440\u0445\u043d\u0435\u0433\u043e \u0431\u0443\u0444\u0435\u0440\u0430 \u0432\u044b\u0432\u043e\u0434\u0430 \u0438 \u043e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u0442\n   \u044d\u0442\u0443 \u0431\u0443\u0444\u0435\u0440\u0438\u0437\u0430\u0446\u0438\u044e. \u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0431\u0443\u0444\u0435\u0440\u0430, \u0442\u043e \u0432\u0430\u043c\n   \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u044b\u0437\u0432\u0430\u0442\u044c  ob_get_contents() \u043f\u0435\u0440\u0435\u0434\n    ob_end_clean(), \u0442\u0430\u043a \u043a\u0430\u043a \u0432\u0441\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0431\u0443\u0444\u0435\u0440\u0430 \u0443\u0434\u0430\u043b\u044f\u0435\u0442\u0441\u044f\n   \u043f\u0440\u0438 \u0432\u044b\u0437\u043e\u0432\u0435  ob_end_clean().\n  "},"ob_end_flush":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u0431\u0440\u043e\u0441 (\u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430) \u0431\u0443\u0444\u0435\u0440\u0430 \u0432\u044b\u0432\u043e\u0434\u0430 \u0438 \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0431\u0443\u0444\u0435\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0432\u044b\u0432\u043e\u0434\u0430","syntax":"\n   bool <b>ob_end_flush<\/b>\n    ( void\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0431\u0443\u0444\u0435\u0440\u0430 \u0432\u044b\u0432\u043e\u0434\u0430 (\u0435\u0441\u043b\u0438 \u043e\u043d\u043e \u0438\u043c\u0435\u0435\u0442\u0441\u044f) \u0438\n   \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u0442 \u044d\u0442\u0443 \u0431\u0443\u0444\u0435\u0440\u0438\u0437\u0430\u0446\u0438\u044e \u0432\u044b\u0432\u043e\u0434\u0430. \u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\n   \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0431\u0443\u0444\u0435\u0440\u0430, \u0442\u043e \u0432\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u044b\u0437\u0432\u0430\u0442\u044c\n    ob_get_contents() \u043f\u0435\u0440\u0435\u0434\n    ob_end_flush(), \u0442.\u043a. \u0432\u0441\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0431\u0443\u0444\u0435\u0440\u0430 \u0443\u0434\u0430\u043b\u044f\u0435\u0442\u0441\u044f\n   \u043f\u0440\u0438 \u0432\u044b\u0437\u043e\u0432\u0435  ob_end_flush().\n  "},"ob_etaghandler":{"version":"(PECL pecl_http >= 0.10.0)","shortdesc":"ETag output handler","syntax":"\n   string <b>ob_etaghandler<\/b>\n    ( string $data\n   , int $mode\n   )","desc":"\n   \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0432\u043c\u0435\u0441\u0442\u0435 \u0441  ob_start().\n  "},"ob_flush":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0421\u0431\u0440\u043e\u0441 (\u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430) \u0431\u0443\u0444\u0435\u0440\u0430 \u0432\u044b\u0432\u043e\u0434\u0430","syntax":"\n   void <b>ob_flush<\/b>\n    ( void\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0431\u0443\u0444\u0435\u0440\u0430 \u0432\u044b\u0432\u043e\u0434\u0430 (\u0435\u0441\u043b\u0438 \u0438\u043c\u0435\u0435\u0442\u0441\u044f).\n   \u0415\u0441\u043b\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0430\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0431\u0443\u0444\u0435\u0440\u0430 \u0432\u044b\u0432\u043e\u0434\u0430, \u0442\u043e \u0441\u043b\u0435\u0434\u0443\u0435\u0442\n   \u0432\u044b\u0437\u0432\u0430\u0442\u044c  ob_get_contents() \u043f\u0435\u0440\u0435\u0434\n    ob_flush(), \u0442\u0430\u043a \u043a\u0430\u043a \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0431\u0443\u0444\u0435\u0440\u0430 \u0431\u0443\u0434\u0435\u0442\n   \u0443\u0434\u0430\u043b\u0435\u043d\u043e \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u0437\u043e\u0432\u0430  ob_flush().\n  "},"ob_get_clean":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0431\u0443\u0444\u0435\u0440\u0430 \u0438 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0435\u0433\u043e","syntax":"\n   string <b>ob_get_clean<\/b>\n    ( void\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0431\u0443\u0444\u0435\u0440\u0430 \u0438 \u0437\u0430\u0442\u0435\u043c \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0431\u0443\u0444\u0435\u0440.\n  "},"ob_get_contents":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0431\u0443\u0444\u0435\u0440\u0430 \u0432\u044b\u0432\u043e\u0434\u0430","syntax":"\n   string <b>ob_get_contents<\/b>\n    ( void\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0431\u0443\u0444\u0435\u0440\u0430 \u0431\u0435\u0437 \u0435\u0433\u043e \u043e\u0447\u0438\u0441\u0442\u043a\u0438.\n  "},"ob_get_flush":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0421\u0431\u0440\u043e\u0441 \u0431\u0443\u0444\u0435\u0440\u0430 \u0432\u044b\u0432\u043e\u0434\u0430, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044f \u0435\u0433\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0438 \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0431\u0443\u0444\u0435\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0432\u044b\u0432\u043e\u0434\u0430","syntax":"\n   string <b>ob_get_flush<\/b>\n    ( void\n   )","desc":"\n    ob_get_flush() \u0441\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442 \u0431\u0443\u0444\u0435\u0440 \u0432\u044b\u0432\u043e\u0434\u0430, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044f\n   \u0435\u0433\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438 \u043e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0431\u0443\u0444\u0435\u0440\u0438\u0437\u0430\u0446\u0438\u044e \u0432\u044b\u0432\u043e\u0434\u0430.\n  "},"ob_get_length":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0430\u0437\u043c\u0435\u0440 \u0431\u0443\u0444\u0435\u0440\u0430 \u0432\u044b\u0432\u043e\u0434\u0430","syntax":"\n   int <b>ob_get_length<\/b>\n    ( void\n   )","desc":"\n   \u0412\u0435\u0440\u043d\u0435\u0442 \u0440\u0430\u0437\u043c\u0435\u0440 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0433\u043e \u0432 \u0431\u0443\u0444\u0435\u0440\u0435 \u0432\u044b\u0432\u043e\u0434\u0430.\n  "},"ob_get_level":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u043c\u0435\u0445\u0430\u043d\u0438\u0437\u043c\u0430 \u0431\u0443\u0444\u0435\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0432\u044b\u0432\u043e\u0434\u0430","syntax":"\n   int <b>ob_get_level<\/b>\n    ( void\n   )","desc":"\n   \u0412\u0435\u0440\u043d\u0435\u0442 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u043c\u0435\u0445\u0430\u043d\u0438\u0437\u043c\u0430 \u0431\u0443\u0444\u0435\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0432\u044b\u0432\u043e\u0434\u0430.\n  "},"ob_get_status":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0443\u0441 \u0431\u0443\u0444\u0435\u0440\u0430 \u0432\u044b\u0432\u043e\u0434\u0430","syntax":"\n   array <b>ob_get_status<\/b>\n    ([ bool  $full_status  = FALSE\n  ] )","desc":"\n    ob_get_status() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043b\u0438\u0431\u043e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0438\n   \u0431\u0443\u0444\u0435\u0440\u0430 \u0432\u044b\u0432\u043e\u0434\u0430 \u0432\u0435\u0440\u0445\u043d\u0435\u0433\u043e \u0443\u0440\u043e\u0432\u043d\u044f, \u043b\u0438\u0431\u043e, \u0435\u0441\u043b\u0438 full_status\n   \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u0432 TRUE, \u043c\u0430\u0441\u0441\u0438\u0432 \u0443\u0440\u043e\u0432\u043d\u0435\u0439 \u0432\u0441\u0435\u0445 \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0445 \u0431\u0443\u0444\u0435\u0440\u043e\u0432.\n  "},"ob_gzhandler":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"callback-\u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u0430\u044f \u0434\u043b\u044f gzip-\u0441\u0436\u0430\u0442\u0438\u044f \u0431\u0443\u0444\u0435\u0440\u0430 \u0432\u044b\u0432\u043e\u0434\u0430 \u043f\u0440\u0438 \u0432\u044b\u0437\u043e\u0432\u0435 ob_start","syntax":"\n   string <b>ob_gzhandler<\/b>\n    ( string $buffer\n   , int $mode\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0438\u0446\u044f  ob_gzhandler() \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0430 \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0432\n   \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 callback-\u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u043b\u044f  ob_start(), \u0447\u0442\u043e\u0431\u044b\n   \u043e\u0431\u043b\u0435\u0433\u0447\u0438\u0442\u044c \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0443 gz-\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 web-\u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430\u043c, \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0449\u0438\u043c\n   \u0441\u0436\u0430\u0442\u0438\u0435 web-\u0441\u0442\u0440\u0430\u043d\u0438\u0446. \u041f\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043c  ob_gzhandler()\n   \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442 \u0441\u0436\u0430\u0442\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435, \u043e\u043d\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u043a\u0430\u043a\u043e\u0439 \u0442\u0438\u043f \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n   \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0433\u043e \u0441\u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u043d\u044f\u0442\u044c \u0431\u0440\u0430\u0443\u0437\u0435\u0440 (\"gzip\", \"deflate\" \u0438\u043b\u0438 \u0432\u043e\u043e\u0431\u0449\u0435 \u043d\u0438\u043a\u0430\u043a\u043e\u0439)\n   \u0438 \u0432\u0435\u0440\u043d\u0435\u0442 \u0435\u0433\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c. \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u0432\u0441\u0435\n   \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u044b, \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0435 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0435 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u043e \u0442\u043e\u043c, \u0447\u0442\u043e \u043e\u043d\u0438 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u044e\u0442\n   \u0441\u0436\u0430\u0442\u044b\u0435 web-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b. \u0415\u0441\u043b\u0438 \u0431\u0440\u0430\u0443\u0437\u0435\u0440 \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0441\u0436\u0430\u0442\u0438\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\n   \u0432\u0435\u0440\u043d\u0435\u0442 FALSE.\n  "},"ob_iconv_handler":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\n   \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0438\u0437 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 \u0432 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443 \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u0431\u0443\u0444\u0435\u0440\u0430\n  ","syntax":"\n   string <b>ob_iconv_handler<\/b>\n    ( string $contents\n   , int $status\n   )","desc":"\n   \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0432 internal_encoding, \n   \u0432 \u0441\u0442\u0440\u043e\u043a\u0443, \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0432 output_encoding.\n  "},"ob_implicit_flush":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442\/\u0432\u044b\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043d\u0435\u044f\u0432\u043d\u044b\u0439 \u0441\u0431\u0440\u043e\u0441","syntax":"\n   void <b>ob_implicit_flush<\/b>\n    ([ int $flag = true\n  ] )","desc":"\n    ob_implicit_flush() \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0438\u043b\u0438 \u0432\u044b\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043d\u0435\u044f\u0432\u043d\u044b\u0439\n   \u0441\u0431\u0440\u043e\u0441. \u041d\u0435\u044f\u0432\u043d\u044b\u0439 \u0441\u0431\u0440\u043e\u0441 \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a \u0442\u043e\u043c\u0443, \u0447\u0442\u043e \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u0441\u0431\u0440\u043e\u0441\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f\n   \u043f\u043e\u0441\u043b\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u044b\u0432\u043e\u0434\u0430, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u044f\u0432\u043d\u044b\u0435 \u0432\u044b\u0437\u043e\u0432\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u0438  flush()\n   \u043d\u0435 \u043d\u0443\u0436\u043d\u044b.\n  "},"ob_inflatehandler":{"version":"(PECL pecl_http >= 0.21.0)","shortdesc":"Inflate output handler","syntax":"\n   string <b>ob_inflatehandler<\/b>\n    ( string $data\n   , int $mode\n   )","desc":"\n   \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0432\u043c\u0435\u0441\u0442\u0435 \u0441  ob_start().\n  "},"ob_list_handlers":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0421\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0445 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432 \u0432\u044b\u0432\u043e\u0434\u0430","syntax":"\n   array <b>ob_list_handlers<\/b>\n    ( void\n   )","desc":"\n   \u0421\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0445 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432 \u0432\u044b\u0432\u043e\u0434\u0430.\n  "},"ob_start":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0431\u0443\u0444\u0435\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0432\u044b\u0432\u043e\u0434\u0430","syntax":"\n   bool <b>ob_start<\/b>\n    ([ callable $output_callback\n   [, int $chunk_size = 0\n   [, bool $erase = true\n  ]]] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0431\u0443\u0444\u0435\u0440\u0438\u0437\u0430\u0446\u0438\u044e \u0432\u044b\u0432\u043e\u0434\u0430. \u0415\u0441\u043b\u0438 \u0431\u0443\u0444\u0435\u0440\u0438\u0437\u0430\u0446\u0438\u044f \u0432\u044b\u0432\u043e\u0434\u0430 \u0430\u043a\u0442\u0438\u0432\u043d\u0430,\n   \u0432\u044b\u0432\u043e\u0434 \u0441\u043a\u0440\u0438\u043f\u0442\u0430 \u043d\u0435 \u0432\u044b\u0441\u044b\u043b\u0430\u0435\u0442\u0441\u044f (\u043a\u0440\u043e\u043c\u0435 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432), \u0430 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442\u0441\u044f \u0432\u043e\n   \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u043c \u0431\u0443\u0444\u0435\u0440\u0435.\n  "},"ob_tidyhandler":{"version":"(PHP 5)","shortdesc":"\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0432\u044b\u0437\u043e\u0432\u0430 ob_start \u0434\u043b\u044f \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0431\u0443\u0444\u0435\u0440\u0430","syntax":"\n   string <b>ob_tidyhandler<\/b>\n    ( string $input\n   [, int $mode\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0432\u044b\u0437\u043e\u0432\u0430  ob_start() \u0434\u043b\u044f \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0431\u0443\u0444\u0435\u0440\u0430.\n  "},"oci_bind_array_by_name":{"version":"(PHP 5 >= 5.1.2, PECL OCI8 >= 1.2.0)","shortdesc":"\n   \u0421\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 PHP \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u043c Oracle PL\/SQL\n  ","syntax":"\n   bool <b>oci_bind_array_by_name<\/b>\n    ( resource $statement\n   , string $name\n   , array &$var_array\n   , int $max_table_length\n   [, int $max_item_length = -1\n   [, int $type = SQLT_AFC\n  ]] )","desc":"\n   \u0421\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 PHP \u043c\u0430\u0441\u0441\u0438\u0432 var_array \u0441 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u043c Oracle\n   name \u043d\u0430 \u043c\u0430\u0441\u0441\u0438\u0432 Oracle PL\/SQL. \u041d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435, \u0432\u0432\u043e\u0434 \u0438\u043b\u0438\n   \u0432\u044b\u0432\u043e\u0434, \u0434\u043b\u044f \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043c\u0430\u0441\u0441\u0438\u0432 \u0431\u0443\u0434\u0435\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0442\u044c\u0441\u044f \u0432\u043e \u0432\u0440\u0435\u043c\u044f\n   \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f.\n  "},"oci_bind_by_name":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u041f\u0440\u0438\u043a\u0440\u0435\u043f\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e PHP \u043a \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0439 \u043c\u0435\u0442\u043a\u0435 \u0432 SQL-\u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0438","syntax":"\n   bool <b>oci_bind_by_name<\/b>\n    ( resource $statement\n   , string $bv_name\n   , mixed &$variable\n   [, int $maxlength = -1\n   [, int $type = SQLT_CHR\n  ]] )","desc":"\n   \u041f\u0440\u0438\u043a\u0440\u0435\u043f\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e variable \u043a \u043c\u0435\u0442\u043a\u0435 \n   bv_name. \u0422\u0430\u043a\u043e\u0435 \u043f\u0440\u0438\u043a\u0440\u0435\u043f\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u0432\u044b\u0441\u0438\u0442\u044c\n   \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0438 \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c SQL-\u0438\u043d\u044a\u0435\u043a\u0446\u0438\u0439.\n  "},"oci_cancel":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0417\u0430\u043a\u0430\u043d\u0447\u0438\u0432\u0430\u0435\u0442 \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0447\u0442\u0435\u043d\u0438\u044f \u0438\u0437 \u043a\u0443\u0440\u0441\u043e\u0440\u0430","syntax":"\n   bool <b>oci_cancel<\/b>\n    ( resource $statement\n   )","desc":"\n   \u0421\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442 \u043a\u0443\u0440\u0441\u043e\u0440, \u043e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u044f \u0432\u0441\u0435 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u044b \u0438 \u043e\u0442\u043c\u0435\u043d\u044f\u0435\u0442\n   \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0447\u0438\u0442\u0430\u0442\u044c \u0438\u0437 \u043d\u0435\u0433\u043e.\n  "},"oci_client_version":{"version":"(PHP 5.3.7, PECL OCI8 >= 1.4.6)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0435\u0440\u0441\u0438\u044e \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \n  ","syntax":"\n   string <b>oci_client_version<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u043e\u043c\u0435\u0440 \u0432\u0435\u0440\u0441\u0438\u0438 \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 C-\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 Oracle, \u0441\n   \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0441\u0432\u044f\u0437\u0430\u043d PHP.\n  "},"oci_close":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c Oracle","syntax":"\n   bool <b>oci_close<\/b>\n    ( resource $connection\n   )","desc":"\n   \u041e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u0435\u0442 connection. \u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0435 \u0435\u043c\u0443\n   \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445 \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u043a\u0440\u044b\u0442\u043e \u043f\u0440\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0449\u0438\u0445\n   \u0435\u0433\u043e \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432 \u0438 \u0435\u0441\u043b\u0438 \u043e\u043d\u043e \u0431\u044b\u043b\u043e \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043e \u0438\u0437 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    oci_connect() \u0438\u043b\u0438  oci_new_connect().\n  "},"oci_commit":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0424\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u0442 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044e \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445","syntax":"\n   bool <b>oci_commit<\/b>\n    ( resource $connection\n   )","desc":"\n   \u0424\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u0442 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044e \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f connection.\n   \u0424\u0438\u043a\u0441\u0430\u0446\u0438\u044f \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044e \u0438 \u0434\u0435\u043b\u0430\u0435\u0442 \u0432\u0441\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\n   \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u044b\u043c\u0438. \u041e\u043d\u0430 \u0442\u0430\u043a\u0436\u0435 \u043e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u0435\u0442 \u0432\u0441\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0438.\n  "},"oci_connect":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445 Oracle","syntax":"\n   resource <b>oci_connect<\/b>\n    ( string $username\n   , string $password\n   [, string $connection_string\n   [, string $character_set\n   [, int $session_mode\n  ]]] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e\u043c\n   \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u043e\u0434\u0443\u043b\u044f.\n  "},"oci_define_by_name":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0421\u043e\u043f\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e PHP \u0441\u0442\u043e\u043b\u0431\u0446\u0443 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430","syntax":"\n   bool <b>oci_define_by_name<\/b>\n    ( resource $statement\n   , string $column_name\n   , mixed &$variable\n   [, int $type = SQLT_CHR\n  ] )","desc":"\n   \u0421\u043e\u043f\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e PHP \u0441\u0442\u043e\u043b\u0431\u0446\u0443 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0433\u043e\n   \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e  oci_fetch().\n  "},"oci_error":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u043e\u0448\u0438\u0431\u043a\u0443","syntax":"\n   array <b>oci_error<\/b>\n    ([ resource $resource\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443.\n  "},"oci_execute":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d\u043d\u043e\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435","syntax":"\n   bool <b>oci_execute<\/b>\n    ( resource $statement\n   [, int $mode = OCI_COMMIT_ON_SUCCESS\n  ] )","desc":"\n   \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d\u043d\u043e\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435 statement, \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e\n   \u0444\u0443\u043d\u043a\u0446\u0438\u0438  oci_parse().\n  "},"oci_fetch_all":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0432\u0441\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432 \u0434\u0432\u0443\u043c\u0435\u0440\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432","syntax":"\n   int <b>oci_fetch_all<\/b>\n    ( resource $statement\n   , array &$output\n   [, int $skip = 0\n   [, int $maxrows = -1\n   [, int $flags = OCI_FETCHSTATEMENT_BY_COLUMN + OCI_ASSOC\n  ]]] )","desc":"\n   \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0432\u0441\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432 \u0434\u0432\u0443\u043c\u0435\u0440\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432.\n   \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0441\u0435 \u0441\u0442\u0440\u043e\u043a\u0438.\n  "},"oci_fetch_array":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432 \u0432\u0438\u0434\u0435 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u043e\u0433\u043e \u0438\u043b\u0438 \u043d\u0443\u043c\u0435\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430\n  ","syntax":"\n   array <b>oci_fetch_array<\/b>\n    ( resource $statement\n   [, int $mode\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n   \u041a\u0430\u0436\u0434\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0434\u043d\u043e\u043c\u0443 \u043f\u043e\u043b\u044e \u0438\u0437 \u0441\u0442\u0440\u043e\u043a\u0438. \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\n   \u043e\u0431\u044b\u0447\u043d\u043e \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0432 \u0446\u0438\u043a\u043b\u0435, \u043f\u043e\u043a\u0430 \u043e\u043d\u0430 \u043d\u0435 \u0432\u0435\u0440\u043d\u0435\u0442 FALSE, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442\n   \u043d\u0430 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0441\u0442\u0440\u043e\u043a.\n  "},"oci_fetch_assoc":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432 \u0432\u0438\u0434\u0435\n   \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430","syntax":"\n   array <b>oci_fetch_assoc<\/b>\n    ( resource $statement\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437\n   \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430. \u041a\u0430\u0436\u0434\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0441\u0442\u043e\u043b\u0431\u0446\u0443\n   \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0438. \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u044b\u0447\u043d\u043e \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0432 \u0446\u0438\u043a\u043b\u0435, \u043f\u043e\u043a\u0430 \u043d\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\n   FALSE, \u0435\u0441\u043b\u0438 \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435\u0442 \u0441\u0442\u0440\u043e\u043a.\n  "},"oci_fetch_object":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432 \u0432\u0438\u0434\u0435\n   \u043e\u0431\u044a\u0435\u043a\u0442\u0430","syntax":"\n   object <b>oci_fetch_object<\/b>\n    ( resource $statement\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n   \u0418\u043c\u0435\u043d\u0430 \u0441\u0432\u043e\u0439\u0441\u0442\u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u0438\u043c\u0435\u043d\u0430\u043c \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435.\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u044b\u0447\u043d\u043e \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0432 \u0446\u0438\u043a\u043b\u0435 \u043f\u043e\u043a\u0430 \u043d\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 FALSE\n   \u043a\u043e\u0433\u0434\u0430 \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435\u0442 \u0440\u044f\u0434\u043e\u0432.\n  "},"oci_fetch_row":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432 \u0432\u0438\u0434\u0435\n   \u043d\u0443\u043c\u0435\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430","syntax":"\n   array <b>oci_fetch_row<\/b>\n    ( resource $statement\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0443\u043c\u0435\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n   \u041a\u0430\u0436\u0434\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0441\u0442\u043e\u043b\u0431\u0446\u0443 \u0441\u0442\u0440\u043e\u043a\u0438. \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u044b\u0447\u043d\u043e \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0432 \u0446\u0438\u043a\u043b\u0435\n   \u043f\u043e\u043a\u0430 \u043d\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 FALSE, \u0435\u0441\u043b\u0438 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435\u0442 \u0441\u0442\u0440\u043e\u043a.\n  "},"oci_fetch":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0432 \u0431\u0443\u0444\u0435\u0440","syntax":"\n   bool <b>oci_fetch<\/b>\n    ( resource $statement\n   )","desc":"\n   \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432\u043e \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0431\u0443\u0444\u0435\u0440,\n   \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0439 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e  oci_result() \u0438\u043b\u0438 \u0447\u0435\u0440\u0435\u0437 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435,\n   \u0437\u0430\u0440\u0430\u043d\u0435\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e  oci_define_by_name().\n  "},"oci_field_is_null":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0440\u0430\u0432\u043d\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043f\u043e\u043b\u0435 NULL","syntax":"\n   bool <b>oci_field_is_null<\/b>\n    ( resource $statement\n   , mixed $field\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0435 \u0432 \u043f\u043e\u043b\u0435 field\n   \u0438\u0437 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 statement \u0440\u0430\u0432\u043d\u044b\u043c NULL.\n  "},"oci_field_name":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u043f\u043e\u043b\u044f \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430","syntax":"\n   string <b>oci_field_name<\/b>\n    ( resource $statement\n   , int $field\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u043f\u043e\u043b\u044f field \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n  "},"oci_field_precision":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u043b\u044f","syntax":"\n   int <b>oci_field_precision<\/b>\n    ( resource $statement\n   , int $field\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u043b\u044f field.\n  "},"oci_field_scale":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0448\u0442\u0430\u0431 \u043f\u043e\u043b\u044f","syntax":"\n   int <b>oci_field_scale<\/b>\n    ( resource $statement\n   , int $field\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0448\u0442\u0430\u0431 \u043f\u043e\u043b\u044f \u043f\u043e\u0434 \u043d\u043e\u043c\u0435\u0440\u043e\u043c field.\n  "},"oci_field_size":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0430\u0437\u043c\u0435\u0440 \u043f\u043e\u043b\u044f","syntax":"\n   int <b>oci_field_size<\/b>\n    ( resource $statement\n   , mixed $field\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0430\u0437\u043c\u0435\u0440 \u043f\u043e\u043b\u044f field. \n  "},"oci_field_type_raw":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0439 Oracle \u0442\u0438\u043f \u043f\u043e\u043b\u044f","syntax":"\n   int <b>oci_field_type_raw<\/b>\n    ( resource $statement\n   , int $field\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0438\u043f Oracle \u043f\u043e\u043b\u044f field.\n  "},"oci_field_type":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0438\u043f \u043f\u043e\u043b\u044f","syntax":"\n   mixed <b>oci_field_type<\/b>\n    ( resource $statement\n   , int $field\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0438\u043f \u043f\u043e\u043b\u044f.\n  "},"oci_free_descriptor":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u041e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u0435\u0442 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440","syntax":"\n   bool <b>oci_free_descriptor<\/b>\n    ( resource $descriptor\n   )","desc":"\n   \u041e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u0435\u0442 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0439 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e  oci_new_descriptor().\n  "},"oci_free_statement":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u041e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u0435\u0442 \u0440\u0435\u0441\u0443\u0440\u0441\u044b, \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u043c\u044b\u0435 \u043a\u0443\u0440\u0441\u043e\u0440\u043e\u043c \u0438\u043b\u0438 SQL-\u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043c","syntax":"\n   bool <b>oci_free_statement<\/b>\n    ( resource $statement\n   )","desc":"\n   \u041e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u0435\u0442 \u0432\u0441\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u044b, \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u043c\u044b\u0435 \u043a\u0443\u0440\u0441\u043e\u0440\u043e\u043c \u0438\u043b\u0438 SQL-\u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043c, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0431\u044b\u043b\u043e \n   \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439  oci_parse() \u0438\u043b\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043e \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 Oracle.\n  "},"oci_get_implicit_resultset":{"version":"(PECL OCI8 >= 2.0.0)","shortdesc":"Returns the next child statement resource from a parent statement resource that has Oracle Database 12c Implicit Result Sets\n  ","syntax":"\n   resource  <b>oci_get_implicit_resultset<\/b>\n    ( resource $statement\n   )","desc":"\n   Used to fetch consectutive sets of query results after the\n   execution of a stored or anonymous Oracle PL\/SQL block where that\n   block returns query results with\n   Oracle's DBMS_SQL.RETURN_RESULT PL\/SQL\n   function.  This allows PL\/SQL blocks to easily return query\n   results.\n  "},"oci_internal_debug":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0438 \u0432\u044b\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u044e\u044e \u043e\u0442\u043b\u0430\u0434\u043a\u0443","syntax":"\n   void <b>oci_internal_debug<\/b>\n    ( bool $onoff\n   )","desc":"\n   \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0438 \u0432\u044b\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u044e\u044e \u043e\u0442\u043b\u0430\u0434\u043a\u0443\n  "},"oci_lob_copy":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u041a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 LOB","syntax":"\n   bool <b>oci_lob_copy<\/b>\n    ( OCI-Lob $lob_to\n   , OCI-Lob $lob_from\n   [, int $length = 0\n  ] )","desc":"\n   \u041a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435 \u0438\u043b\u0438 \u0447\u0430\u0441\u0442\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 LOB \u0432 \u0434\u0440\u0443\u0433\u043e\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 LOB.\n   \u0421\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 LOB, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442\u0441\u044f.\n  "},"oci_lob_is_equal":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0421\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u0442 \u0434\u0432\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 LOB\/FILE","syntax":"\n   bool <b>oci_lob_is_equal<\/b>\n    ( OCI-Lob $lob1\n   , OCI-Lob $lob2\n   )","desc":"\n   \u0421\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u0442 \u0434\u0432\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 LOB\/FILE.\n  "},"oci_new_collection":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438","syntax":"\n   OCI-Collection <b>oci_new_collection<\/b>\n    ( resource $connection\n   , string $tdo\n   [, string $schema = NULL\n  ] )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438.\n  "},"oci_new_connect":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043d\u043e\u0432\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c Oracle","syntax":"\n   resource <b>oci_new_connect<\/b>\n    ( string $username\n   , string $password\n   [, string $connection_string\n   [, string $character_set\n   [, int $session_mode\n  ]]] )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c Oracle \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0432\u0445\u043e\u0434.\n  "},"oci_new_cursor":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043a\u0443\u0440\u0441\u043e\u0440\u0430","syntax":"\n   resource <b>oci_new_cursor<\/b>\n    ( resource $connection\n   )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u043a\u0443\u0440\u0441\u043e\u0440 \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e\n   \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0435\u0433\u043e \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440.\n  "},"oci_new_descriptor":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 LOB \u0438\u043b\u0438 FILE","syntax":"\n   OCI-Lob <b>oci_new_descriptor<\/b>\n    ( resource $connection\n   [, int $type = OCI_DTYPE_LOB\n  ] )","desc":"\n   \u0420\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u0443\u0435\u0442 \u0440\u0435\u0441\u0443\u0440\u0441\u044b, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0438\u043b\u0438 LOB-\u043b\u043e\u043a\u0430\u0442\u043e\u0440\u0430. \n  "},"oci_num_fields":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u0435\u0439 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430","syntax":"\n   int <b>oci_num_fields<\/b>\n    ( resource $statement\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0432 \u0437\u0430\u043f\u0440\u043e\u0441\u0435, \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u0432 statement.\n  "},"oci_num_rows":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u0440\u043e\u043a, \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u043d\u044b\u0445 \u0432 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f\n   \u0437\u0430\u043f\u0440\u043e\u0441\u0430","syntax":"\n   int <b>oci_num_rows<\/b>\n    ( resource $statement\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u0441\u0442\u0440\u043e\u043a, \u0437\u0430\u0442\u0440\u043e\u043d\u0443\u0442\u044b\u0445 \u0432 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n  "},"oci_parse":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u041f\u043e\u0434\u0433\u043e\u0442\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u043a \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044e","syntax":"\n   resource <b>oci_parse<\/b>\n    ( resource $connection\n   , string $sql_text\n   )","desc":"\n   \u041f\u043e\u0434\u0433\u043e\u0442\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 sql_text \u043a \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044e,\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 connection \u0438\n   \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0434\u0430\u043b\u0435\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\n   \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438 oci_bind_by_name(), oci_execute()\n   \u0438 \u0434\u0440\u0443\u0433\u0438\u043c\u0438.\n  "},"oci_password_change":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u043f\u0430\u0440\u043e\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f Oracle","syntax":"\n   bool <b>oci_password_change<\/b>\n    ( resource $connection\n   , string $username\n   , string $old_password\n   , string $new_password\n   )\n\n    resource <b>oci_password_change<\/b>\n     ( string $dbname\n    , string $username\n    , string $old_password\n    , string $new_password\n    )\n","desc":"\n   \u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u043f\u0430\u0440\u043e\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0432 username.\n  "},"oci_pconnect":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c Oracle","syntax":"\n   resource <b>oci_pconnect<\/b>\n    ( string $username\n   , string $password\n   [, string $connection_string\n   [, string $character_set\n   [, int $session_mode\n  ]]] )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c Oracle \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e.\n  "},"oci_result":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044f \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430","syntax":"\n   mixed <b>oci_result<\/b>\n    ( resource $statement\n   , mixed $field\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u043b\u044f field \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0438, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0439\n   \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439  oci_fetch().\n  "},"oci_rollback":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u041e\u0442\u043a\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438, \u043e\u0436\u0438\u0434\u0430\u044e\u0449\u0438\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438","syntax":"\n   bool <b>oci_rollback<\/b>\n    ( resource $connection\n   )","desc":"\n   \u0414\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0442\u043a\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0432\u0441\u0435 \u043d\u0435\u0437\u0430\u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f Oracle\n   connection \u0438 \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044e.\n   \u041e\u043d\u0430 \u0442\u0430\u043a\u0436\u0435 \u043e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u0435\u0442 \u0432\u0441\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0438. \u0423\u0434\u0430\u043b\u044f\u044e\u0442\u0441\u044f \u0432\u0441\u0435 Oracle\n   SAVEPOINTS.\n  "},"oci_server_version":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0435\u0440\u0441\u0438\u044e \u0441\u0435\u0440\u0432\u0435\u0440\u0430 Oracle","syntax":"\n   string <b>oci_server_version<\/b>\n    ( resource $connection\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 Oracle \u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043e\u043f\u0446\u0438\u044f\u0445\n  "},"oci_set_action":{"version":"(PHP 5.3.2, PECL OCI8 >= 1.4.0)","shortdesc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u0438\u043c\u044f \u0434\u043b\u044f \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f\n  ","syntax":"\n   bool <b>oci_set_action<\/b>\n    ( resource $connection\n   , string $action_name\n   )","desc":"\n   \u041f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u0442 \u0438\u043c\u044f \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044e \u0434\u043b\u044f \u0442\u0440\u0430\u0441\u0441\u0438\u0440\u043e\u0432\u043a\u0438 Oracle.\n  "},"oci_set_client_identifier":{"version":"(PHP 5.3.2, PECL OCI8 >= 1.4.0)","shortdesc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\n  ","syntax":"\n   bool <b>oci_set_client_identifier<\/b>\n    ( resource $connection\n   , string $client_identifier\n   )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043a\u043b\u0438\u0435\u043d\u0442\u0430, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0439 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u043c\u0438 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430\u043c\u0438\n   \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0442\u043e\u043d\u043a\u0438\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432,\n   \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0443\u044e\u0442\u0441\u044f \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043a\u0430\u043a \u043e\u0434\u0438\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c.\n  "},"oci_set_client_info":{"version":"(PHP 5.3.2, PECL OCI8 >= 1.4.0)","shortdesc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0435\n  ","syntax":"\n   bool <b>oci_set_client_info<\/b>\n    ( resource $connection\n   , string $client_info\n   )","desc":"\n   \u0417\u0430\u0434\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0435 \u0434\u043b\u044f \u0442\u0440\u0430\u0441\u0441\u0438\u0440\u043e\u0432\u043a\u0438 Oracle.\n  "},"oci_set_edition":{"version":"(PHP 5.3.2, PECL OCI8 >= 1.4.0)","shortdesc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u0432\u044b\u043f\u0443\u0441\u043a (edition) \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445\n  ","syntax":"\n   bool <b>oci_set_edition<\/b>\n    ( string $edition\n   )","desc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \"\u0441\u0435\u0440\u0438\u044e\" \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043d\u0430 \u043d\u0438\u0436\u0435\u0441\u0442\u043e\u044f\u0449\u0438\u0445 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f\u0445.\n  "},"oci_set_module_name":{"version":"(PHP 5.3.2, PECL OCI8 >= 1.4.0)","shortdesc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u0438\u043c\u044f \u043c\u043e\u0434\u0443\u043b\u044e\n  ","syntax":"\n   bool <b>oci_set_module_name<\/b>\n    ( resource $connection\n   , string $module_name\n   )","desc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u0438\u043c\u044f \u043c\u043e\u0434\u0443\u043b\u044f \u0434\u043b\u044f \u0442\u0440\u0430\u0441\u0441\u0438\u0440\u043e\u0432\u043a\u0438 Oracle.\n  "},"oci_set_prefetch":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u0440\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\n   \u0432\u044b\u0431\u0440\u0430\u043d\u044b \u0432 \u0431\u0443\u0444\u0435\u0440","syntax":"\n   bool <b>oci_set_prefetch<\/b>\n    ( resource $statement\n   , int $rows\n   )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u044f\u0434\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u0432\u044b\u0431\u0440\u0430\u043d\u044b \u0432 \u0431\u0443\u0444\u0435\u0440 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u043c\u0438\n   \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430\u043c\u0438 Oracle \u0441\u0440\u0430\u0437\u0443 \u043f\u043e\u0441\u043b\u0435 \u0443\u0434\u0430\u0447\u043d\u043e\u0433\u043e \u0432\u044b\u0437\u043e\u0432\u0430  oci_execute()\n   \u0438 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u043a \u0431\u0430\u0437\u0435. \u041f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c\n   \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0443\u0432\u0435\u043b\u0438\u0447\u0435\u043d\u0430 \u0434\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0449\u0438\u0445 \u0431\u043e\u043b\u044c\u0448\u043e\u0435\n   \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u044f\u0434\u043e\u0432, \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439\n   \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u0431\u043e\u043b\u044c\u0448\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e\n   oci8.default_prefetch.\n  "},"oci_statement_type":{"version":"(PHP 5, PECL OCI8 >= 1.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0438\u043f \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f","syntax":"\n   string <b>oci_statement_type<\/b>\n    ( resource $statement\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0435 \u043e\u0434\u043d\u043e\u043c\u0443 \u0438\u0437 \u0442\u0438\u043f\u043e\u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \n   statement OCI8.\n  "},"ocibindbyname":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_bind_by_name()","syntax":"","desc":""},"ocicancel":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_cancel()","syntax":"","desc":""},"ocicloselob":{"version":"(PHP 4 >= 4.0.6, PECL OCI8 1.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  OCI-Lob::close()","syntax":"","desc":""},"ocicollappend":{"version":"(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  OCI-Collection::append()","syntax":"","desc":""},"ocicollassign":{"version":"(PHP 4 >= 4.0.6, PECL OCI8 1.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  OCI-Collection::assign()","syntax":"","desc":""},"ocicollassignelem":{"version":"(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  OCI-Collection::assignElem()","syntax":"","desc":""},"ocicollgetelem":{"version":"(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  OCI-Collection::getElem()","syntax":"","desc":""},"ocicollmax":{"version":"(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  OCI-Collection::max()","syntax":"","desc":""},"ocicollsize":{"version":"(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  OCI-Collection::size()","syntax":"","desc":""},"ocicolltrim":{"version":"(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  OCI-Collection::trim()","syntax":"","desc":""},"ocicolumnisnull":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_field_is_null()","syntax":"","desc":""},"ocicolumnname":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_field_name()","syntax":"","desc":""},"ocicolumnprecision":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_field_precision()","syntax":"","desc":""},"ocicolumnscale":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_field_scale()","syntax":"","desc":""},"ocicolumnsize":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_field_size()","syntax":"","desc":""},"ocicolumntype":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_field_type()","syntax":"","desc":""},"ocicolumntyperaw":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_field_type_raw()","syntax":"","desc":""},"ocicommit":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_commit()","syntax":"","desc":""},"ocidefinebyname":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_define_by_name()","syntax":"","desc":""},"ocierror":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_error()","syntax":"","desc":""},"ociexecute":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_execute()","syntax":"","desc":""},"ocifetch":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_fetch()","syntax":"","desc":""},"ocifetchinto":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0440\u044f\u0434 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432 (\u0443\u0441\u0442\u0430\u0440\u0435\u043b\u0430)","syntax":"\n   int <b>ocifetchinto<\/b>\n    ( resource $statement\n   , array &$result\n   [, int $mode = OCI_ASSOC + OCI_NUM\n  ] )","desc":"\n   \u0414\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0443\u0441\u0442\u0430\u0440\u0435\u043b\u0430. \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u043c\u044b\u0435 \u0430\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u044b:\n    oci_fetch_array(),  oci_fetch_object(),\n    oci_fetch_assoc() \u0438\n    oci_fetch_row().\n  "},"ocifetchstatement":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_fetch_all()","syntax":"","desc":""},"ocifreecollection":{"version":"(PHP 4 >= 4.0.7, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  OCI-Collection::free()","syntax":"","desc":""},"ocifreecursor":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_free_statement()","syntax":"","desc":""},"ocifreedesc":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  OCI-Lob::free()","syntax":"","desc":""},"ocifreestatement":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_free_statement()","syntax":"","desc":""},"ociinternaldebug":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_internal_debug()","syntax":"","desc":""},"ociloadlob":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  OCI-Lob::load()","syntax":"","desc":""},"ocilogoff":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_close()","syntax":"","desc":""},"ocilogon":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_connect()","syntax":"","desc":""},"ocinewcollection":{"version":"(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_new_collection()","syntax":"","desc":""},"ocinewcursor":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_new_cursor()","syntax":"","desc":""},"ocinewdescriptor":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_new_descriptor()","syntax":"","desc":""},"ocinlogon":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_new_connect()","syntax":"","desc":""},"ocinumcols":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_num_fields()","syntax":"","desc":""},"ociparse":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_parse()","syntax":"","desc":""},"ociplogon":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_pconnect()","syntax":"","desc":""},"ociresult":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_result()","syntax":"","desc":""},"ocirollback":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_rollback()","syntax":"","desc":""},"ocirowcount":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_num_rows()","syntax":"","desc":""},"ocisavelob":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  OCI-Lob::save()","syntax":"","desc":""},"ocisavelobfile":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  OCI-Lob::import()","syntax":"","desc":""},"ociserverversion":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_server_version()","syntax":"","desc":""},"ocisetprefetch":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_set_prefetch()","syntax":"","desc":""},"ocistatementtype":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  oci_statement_type()","syntax":"","desc":""},"ociwritelobtofile":{"version":"(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  OCI-Lob::export()","syntax":"","desc":""},"ociwritetemporarylob":{"version":"(PHP 4 >= 4.0.6, PECL OCI8 1.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  OCI-Lob::writeTemporary()","syntax":"","desc":""},"octdec":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0447\u0438\u0441\u043b\u043e \u0438\u0437 \u0432\u043e\u0441\u044c\u043c\u0435\u0440\u0438\u0447\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f \u0432 \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u0443\u044e","syntax":"\n   number <b>octdec<\/b>\n    ( string $octal_string\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u044b\u0439 \u044d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442 \u0432\u043e\u0441\u044c\u043c\u0435\u0440\u0438\u0447\u043d\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430,\n   \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0432 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0435 octal_string.\n  "},"odbc_autocommit":{"version":"(PHP 4, PHP 5)","shortdesc":"Toggle autocommit behaviour","syntax":"\n   mixed <b>odbc_autocommit<\/b>\n    ( resource $connection_id\n   [, bool $OnOff = false\n  ] )","desc":"\n   Toggles autocommit behaviour.\n  "},"odbc_binmode":{"version":"(PHP 4, PHP 5)","shortdesc":"Handling of binary column data","syntax":"\n   bool <b>odbc_binmode<\/b>\n    ( resource $result_id\n   , int $mode\n   )","desc":"\n   Enables handling of binary column data. ODBC SQL types affected are\n   BINARY, VARBINARY, and\n   LONGVARBINARY.\n  "},"odbc_close_all":{"version":"(PHP 4, PHP 5)","shortdesc":"Close all ODBC connections","syntax":"\n   void <b>odbc_close_all<\/b>\n    ( void\n   )","desc":"\n    odbc_close_all() will close down all\n   connections to database server(s).\n  "},"odbc_close":{"version":"(PHP 4, PHP 5)","shortdesc":"Close an ODBC connection","syntax":"\n   void <b>odbc_close<\/b>\n    ( resource $connection_id\n   )","desc":"\n   Closes down the connection to the database server.\n  "},"odbc_columnprivileges":{"version":"(PHP 4, PHP 5)","shortdesc":"Lists columns and associated privileges for the given table","syntax":"\n   resource <b>odbc_columnprivileges<\/b>\n    ( resource $connection_id\n   , string $qualifier\n   , string $owner\n   , string $table_name\n   , string $column_name\n   )","desc":"\n   Lists columns and associated privileges for the given table.\n  "},"odbc_columns":{"version":"(PHP 4, PHP 5)","shortdesc":"Lists the column names in specified tables","syntax":"\n   resource <b>odbc_columns<\/b>\n    ( resource $connection_id\n   [, string $qualifier\n   [, string $schema\n   [, string $table_name\n   [, string $column_name\n  ]]]] )","desc":"\n   Lists all columns in the requested range.\n  "},"odbc_commit":{"version":"(PHP 4, PHP 5)","shortdesc":"Commit an ODBC transaction","syntax":"\n   bool <b>odbc_commit<\/b>\n    ( resource $connection_id\n   )","desc":"\n   Commits all pending transactions on the connection.\n  "},"odbc_connect":{"version":"(PHP 4, PHP 5)","shortdesc":"Connect to a datasource","syntax":"\n   resource <b>odbc_connect<\/b>\n    ( string $dsn\n   , string $user\n   , string $password\n   [, int $cursor_type\n  ] )","desc":""},"odbc_cursor":{"version":"(PHP 4, PHP 5)","shortdesc":"Get cursorname","syntax":"\n   string <b>odbc_cursor<\/b>\n    ( resource $result_id\n   )","desc":"\n   Gets the cursorname for the given result_id.\n  "},"odbc_data_source":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Returns information about a current connection","syntax":"\n   array <b>odbc_data_source<\/b>\n    ( resource $connection_id\n   , int $fetch_type\n   )","desc":"\n   This function will return the list of available DSN (after calling it\n   several times).\n  "},"odbc_do":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  odbc_exec()","syntax":"","desc":""},"odbc_error":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"Get the last error code","syntax":"\n   string <b>odbc_error<\/b>\n    ([ resource $connection_id\n  ] )","desc":""},"odbc_errormsg":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"Get the last error message","syntax":"\n   string <b>odbc_errormsg<\/b>\n    ([ resource $connection_id\n  ] )","desc":""},"odbc_exec":{"version":"(PHP 4, PHP 5)","shortdesc":"Prepare and execute an SQL statement","syntax":"\n   resource <b>odbc_exec<\/b>\n    ( resource $connection_id\n   , string $query_string\n   [, int $flags\n  ] )","desc":"\n   Sends an SQL statement to the database server.\n  "},"odbc_execute":{"version":"(PHP 4, PHP 5)","shortdesc":"Execute a prepared statement","syntax":"\n   bool <b>odbc_execute<\/b>\n    ( resource $result_id\n   [, array $parameters_array\n  ] )","desc":"\n   Executes a statement prepared with  odbc_prepare().\n  "},"odbc_fetch_array":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Fetch a result row as an associative array","syntax":"\n   array <b>odbc_fetch_array<\/b>\n    ( resource $result\n   [, int $rownumber\n  ] )","desc":"\n   Fetch an associative array from an ODBC query. See the \n   changelog below for when this function is available.\n  "},"odbc_fetch_into":{"version":"(PHP 4, PHP 5)","shortdesc":"Fetch one result row into array","syntax":"\n   int <b>odbc_fetch_into<\/b>\n    ( resource $result_id\n   , array &$result_array\n   [, int $rownumber\n  ] )","desc":"\n   Fetch one result row into array.\n  "},"odbc_fetch_object":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Fetch a result row as an object","syntax":"\n   object <b>odbc_fetch_object<\/b>\n    ( resource $result\n   [, int $rownumber\n  ] )","desc":"\n   Fetch an object from an ODBC query. See the changelog below\n   for when this function is available.\n  "},"odbc_fetch_row":{"version":"(PHP 4, PHP 5)","shortdesc":"Fetch a row","syntax":"\n   bool <b>odbc_fetch_row<\/b>\n    ( resource $result_id\n   [, int $row_number\n  ] )","desc":"\n   Fetches a row of the data that was returned by  odbc_do()\n   or  odbc_exec(). After  odbc_fetch_row()\n   is called, the fields of that row can be accessed with\n    odbc_result().\n  "},"odbc_field_len":{"version":"(PHP 4, PHP 5)","shortdesc":"Get the length (precision) of a field","syntax":"\n   int <b>odbc_field_len<\/b>\n    ( resource $result_id\n   , int $field_number\n   )","desc":"\n   Gets the length of the field referenced by number in the given result\n   identifier.\n  "},"odbc_field_name":{"version":"(PHP 4, PHP 5)","shortdesc":"Get the columnname","syntax":"\n   string <b>odbc_field_name<\/b>\n    ( resource $result_id\n   , int $field_number\n   )","desc":"\n   Gets the name of the field occupying the given column number in the given\n   result identifier.\n  "},"odbc_field_num":{"version":"(PHP 4, PHP 5)","shortdesc":"Return column number","syntax":"\n   int <b>odbc_field_num<\/b>\n    ( resource $result_id\n   , string $field_name\n   )","desc":"\n   Gets the number of the column slot that corresponds to the named field in\n   the given result identifier.\n  "},"odbc_field_precision":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  odbc_field_len()","syntax":"","desc":""},"odbc_field_scale":{"version":"(PHP 4, PHP 5)","shortdesc":"Get the scale of a field","syntax":"\n   int <b>odbc_field_scale<\/b>\n    ( resource $result_id\n   , int $field_number\n   )","desc":"\n   Gets the scale of the field referenced by number in the given result\n   identifier.\n  "},"odbc_field_type":{"version":"(PHP 4, PHP 5)","shortdesc":"Datatype of a field","syntax":"\n   string <b>odbc_field_type<\/b>\n    ( resource $result_id\n   , int $field_number\n   )","desc":"\n   Gets the SQL type of the field referenced by number in the given result\n   identifier.\n  "},"odbc_foreignkeys":{"version":"(PHP 4, PHP 5)","shortdesc":"Retrieves a list of foreign keys","syntax":"\n   resource <b>odbc_foreignkeys<\/b>\n    ( resource $connection_id\n   , string $pk_qualifier\n   , string $pk_owner\n   , string $pk_table\n   , string $fk_qualifier\n   , string $fk_owner\n   , string $fk_table\n   )","desc":"\n   Retrieves a list of foreign keys in the specified table or a list of\n   foreign keys in other tables that refer to the primary key in the\n   specified table\n  "},"odbc_free_result":{"version":"(PHP 4, PHP 5)","shortdesc":"Free resources associated with a result","syntax":"\n   bool <b>odbc_free_result<\/b>\n    ( resource $result_id\n   )","desc":"\n   Free resources associated with a result.\n  "},"odbc_gettypeinfo":{"version":"(PHP 4, PHP 5)","shortdesc":"Retrieves information about data types supported by the data source","syntax":"\n   resource <b>odbc_gettypeinfo<\/b>\n    ( resource $connection_id\n   [, int $data_type\n  ] )","desc":"\n   Retrieves information about data types supported by the data source.\n  "},"odbc_longreadlen":{"version":"(PHP 4, PHP 5)","shortdesc":"Handling of LONG columns","syntax":"\n   bool <b>odbc_longreadlen<\/b>\n    ( resource $result_id\n   , int $length\n   )","desc":"\n   Enables handling of LONG and LONGVARBINARY columns.\n  "},"odbc_next_result":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"Checks if multiple results are available","syntax":"\n   bool <b>odbc_next_result<\/b>\n    ( resource $result_id\n   )","desc":"\n   Checks if there are more result sets available as well as allowing access\n   to the next result set via  odbc_fetch_array(),\n    odbc_fetch_row(),  odbc_result(), etc.\n  "},"odbc_num_fields":{"version":"(PHP 4, PHP 5)","shortdesc":"Number of columns in a result","syntax":"\n   int <b>odbc_num_fields<\/b>\n    ( resource $result_id\n   )","desc":"\n   Gets the number of fields (columns) in an ODBC result.\n  "},"odbc_num_rows":{"version":"(PHP 4, PHP 5)","shortdesc":"Number of rows in a result","syntax":"\n   int <b>odbc_num_rows<\/b>\n    ( resource $result_id\n   )","desc":"\n   Gets the number of rows in a result. For INSERT, UPDATE and DELETE\n   statements  odbc_num_rows() returns the number of rows\n   affected.  For a SELECT clause this can be the number\n   of rows available.\n  "},"odbc_pconnect":{"version":"(PHP 4, PHP 5)","shortdesc":"Open a persistent database connection","syntax":"\n   resource <b>odbc_pconnect<\/b>\n    ( string $dsn\n   , string $user\n   , string $password\n   [, int $cursor_type\n  ] )","desc":"\n   Opens a persistent database connection.\n  "},"odbc_prepare":{"version":"(PHP 4, PHP 5)","shortdesc":"Prepares a statement for execution","syntax":"\n   resource <b>odbc_prepare<\/b>\n    ( resource $connection_id\n   , string $query_string\n   )","desc":"\n   Prepares a statement for execution. The result identifier can be used\n   later to execute the statement with  odbc_execute().\n  "},"odbc_primarykeys":{"version":"(PHP 4, PHP 5)","shortdesc":"Gets the primary keys for a table","syntax":"\n   resource <b>odbc_primarykeys<\/b>\n    ( resource $connection_id\n   , string $qualifier\n   , string $owner\n   , string $table\n   )","desc":"\n   Returns a result identifier that can be used to fetch the column names\n   that comprise the primary key for a table.\n  "},"odbc_procedurecolumns":{"version":"(PHP 4, PHP 5)","shortdesc":"Retrieve information about parameters to procedures","syntax":"\n   resource <b>odbc_procedurecolumns<\/b>\n    ( resource $connection_id\n   )\n\n   resource <b>odbc_procedurecolumns<\/b>\n    ( resource $connection_id\n   , string $qualifier\n   , string $owner\n   , string $proc\n   , string $column\n   )\n","desc":"\n   Retrieve information about parameters to procedures.\n  "},"odbc_procedures":{"version":"(PHP 4, PHP 5)","shortdesc":"Get the list of procedures stored in a specific data source","syntax":"\n   resource <b>odbc_procedures<\/b>\n    ( resource $connection_id\n   )\n\n   resource <b>odbc_procedures<\/b>\n    ( resource $connection_id\n   , string $qualifier\n   , string $owner\n   , string $name\n   )\n","desc":"\n   Lists all procedures in the requested range.\n  "},"odbc_result_all":{"version":"(PHP 4, PHP 5)","shortdesc":"Print result as HTML table","syntax":"\n   int <b>odbc_result_all<\/b>\n    ( resource $result_id\n   [, string $format\n  ] )","desc":"\n   Prints all rows from a result identifier produced by\n    odbc_exec(). The result is printed in HTML table format.\n  "},"odbc_result":{"version":"(PHP 4, PHP 5)","shortdesc":"Get result data","syntax":"\n   mixed <b>odbc_result<\/b>\n    ( resource $result_id\n   , mixed $field\n   )","desc":"\n   Get result data\n  "},"odbc_rollback":{"version":"(PHP 4, PHP 5)","shortdesc":"Rollback a transaction","syntax":"\n   bool <b>odbc_rollback<\/b>\n    ( resource $connection_id\n   )","desc":"\n   Rolls back all pending statements on the connection.\n  "},"odbc_setoption":{"version":"(PHP 4, PHP 5)","shortdesc":"Adjust ODBC settings","syntax":"\n   bool <b>odbc_setoption<\/b>\n    ( resource $id\n   , int $function\n   , int $option\n   , int $param\n   )","desc":"\n   This function allows fiddling with the ODBC options for a\n   particular connection or query result.  It was written to help\n   find work around to problems in quirky ODBC drivers.  You should\n   probably only use this function if you are an ODBC programmer and\n   understand the effects the various options will have.  You will\n   certainly need a good ODBC reference to explain all the different\n   options and values that can be used.  Different driver versions\n   support different options.\n  "},"odbc_specialcolumns":{"version":"(PHP 4, PHP 5)","shortdesc":"Retrieves special columns","syntax":"\n   resource <b>odbc_specialcolumns<\/b>\n    ( resource $connection_id\n   , int $type\n   , string $qualifier\n   , string $owner\n   , string $table\n   , int $scope\n   , int $nullable\n   )","desc":"\n   Retrieves either the optimal set of columns that uniquely identifies a\n   row in the table, or columns that are automatically updated when any\n   value in the row is updated by a transaction.\n  "},"odbc_statistics":{"version":"(PHP 4, PHP 5)","shortdesc":"Retrieve statistics about a table","syntax":"\n   resource <b>odbc_statistics<\/b>\n    ( resource $connection_id\n   , string $qualifier\n   , string $owner\n   , string $table_name\n   , int $unique\n   , int $accuracy\n   )","desc":"\n   Get statistics about a table and its indexes.\n  "},"odbc_tableprivileges":{"version":"(PHP 4, PHP 5)","shortdesc":"Lists tables and the privileges associated with each table","syntax":"\n   resource <b>odbc_tableprivileges<\/b>\n    ( resource $connection_id\n   , string $qualifier\n   , string $owner\n   , string $name\n   )","desc":"\n   Lists tables in the requested range and the privileges associated\n   with each table.\n  "},"odbc_tables":{"version":"(PHP 4, PHP 5)","shortdesc":"Get the list of table names stored in a specific data source","syntax":"\n   resource <b>odbc_tables<\/b>\n    ( resource $connection_id\n   [, string $qualifier\n   [, string $owner\n   [, string $name\n   [, string $types\n  ]]]] )","desc":"\n   Lists all tables in the requested range.\n  "},"opcache_compile_file":{"version":"(PHP 5 >= 5.5.5, PECL ZendOpcache > 7.0.2)","shortdesc":"Compiles and caches a PHP script without executing it","syntax":"\n   boolean <b>opcache_compile_file<\/b>\n    ( string $file\n   )","desc":"\n   This function compiles a PHP script and adds it to the opcode cache without\n   executing it. This can be used to prime the cache after a Web server\n   restart by pre-caching files that will be included in later requests.\n  "},"opcache_get_configuration":{"version":"(PHP 5 >= 5.5.5, PECL ZendOpcache > 7.0.2)","shortdesc":"Get configuration information about the cache","syntax":"\n   array <b>opcache_get_configuration<\/b>\n    ( void\n   )","desc":"\n   This function returns configuration information about the cache instance\n  "},"opcache_get_status":{"version":"(PHP 5 >= 5.5.5, PECL ZendOpcache > 7.0.2)","shortdesc":"Get status information about the cache","syntax":"\n   array <b>opcache_get_status<\/b>\n    ([ boolean $get_scripts = TRUE\n  ] )","desc":"\n   This function returns state information about the cache instance\n  "},"opcache_invalidate":{"version":"(PHP 5 >= 5.5.0, PECL ZendOpcache >= 7.0.0)","shortdesc":"Invalidates a cached script","syntax":"\n   boolean <b>opcache_invalidate<\/b>\n    ( string $script\n   [, boolean $force = FALSE\n  ] )","desc":"\n   This function invalidates a particular script from the opcode cache. If\n   force is unset or FALSE, the script will only be\n   invalidated if the modification time of the script is newer than the cached\n   opcodes.\n  "},"opcache_reset":{"version":"(PHP 5 >= 5.5.0, PECL ZendOpcache >= 7.0.0)","shortdesc":"Resets the contents of the opcode cache","syntax":"\n   boolean <b>opcache_reset<\/b>\n    ( void\n   )","desc":"\n   This function resets the entire opcode cache. After calling\n    opcache_reset(), all scripts will be reloaded and\n   reparsed the next time they are hit.\n  "},"openal_buffer_create":{"version":"(PECL openal >= 0.1.0)","shortdesc":"\n   Generate OpenAL buffer\n  ","syntax":"\n   resource <b>openal_buffer_create<\/b>\n    ( void\n   )","desc":""},"openal_buffer_data":{"version":"(PECL openal >= 0.1.0)","shortdesc":"\n   Load a buffer with data\n  ","syntax":"\n   bool <b>openal_buffer_data<\/b>\n    ( resource $buffer\n   , int $format\n   , string $data\n   , int $freq\n   )","desc":""},"openal_buffer_destroy":{"version":"(PECL openal >= 0.1.0)","shortdesc":"\n   Destroys an OpenAL buffer\n  ","syntax":"\n   bool <b>openal_buffer_destroy<\/b>\n    ( resource $buffer\n   )","desc":""},"openal_buffer_get":{"version":"(PECL openal >= 0.1.0)","shortdesc":"\n   Retrieve an OpenAL buffer property\n  ","syntax":"\n   int <b>openal_buffer_get<\/b>\n    ( resource $buffer\n   , int $property\n   )","desc":""},"openal_buffer_loadwav":{"version":"(PECL openal >= 0.1.0)","shortdesc":"\n   Load a .wav file into a buffer\n  ","syntax":"\n   bool <b>openal_buffer_loadwav<\/b>\n    ( resource $buffer\n   , string $wavfile\n   )","desc":""},"openal_context_create":{"version":"(PECL openal >= 0.1.0)","shortdesc":"\n   Create an audio processing context \n  ","syntax":"\n   resource <b>openal_context_create<\/b>\n    ( resource $device\n   )","desc":""},"openal_context_current":{"version":"(PECL openal >= 0.1.0)","shortdesc":"\n   Make the specified context current\n  ","syntax":"\n   bool <b>openal_context_current<\/b>\n    ( resource $context\n   )","desc":""},"openal_context_destroy":{"version":"(PECL openal >= 0.1.0)","shortdesc":"\n   Destroys a context\n  ","syntax":"\n   bool <b>openal_context_destroy<\/b>\n    ( resource $context\n   )","desc":""},"openal_context_process":{"version":"(PECL openal >= 0.1.0)","shortdesc":"\n   Process the specified context\n  ","syntax":"\n   bool <b>openal_context_process<\/b>\n    ( resource $context\n   )","desc":""},"openal_context_suspend":{"version":"(PECL openal >= 0.1.0)","shortdesc":"\n   Suspend the specified context\n  ","syntax":"\n   bool <b>openal_context_suspend<\/b>\n    ( resource $context\n   )","desc":""},"openal_device_close":{"version":"(PECL openal >= 0.1.0)","shortdesc":"\n   Close an OpenAL device\n  ","syntax":"\n   bool <b>openal_device_close<\/b>\n    ( resource $device\n   )","desc":""},"openal_device_open":{"version":"(PECL openal >= 0.1.0)","shortdesc":"\n   Initialize the OpenAL audio layer\n  ","syntax":"\n   resource <b>openal_device_open<\/b>\n    ([ string $device_desc\n  ] )","desc":""},"openal_listener_get":{"version":"(PECL openal >= 0.1.0)","shortdesc":"\n   Retrieve a listener property\n  ","syntax":"\n   mixed <b>openal_listener_get<\/b>\n    ( int $property\n   )","desc":""},"openal_listener_set":{"version":"(PECL openal >= 0.1.0)","shortdesc":"\n   Set a listener property\n  ","syntax":"\n   bool <b>openal_listener_set<\/b>\n    ( int $property\n   , mixed $setting\n   )","desc":""},"openal_source_create":{"version":"(PECL openal >= 0.1.0)","shortdesc":"\n   Generate a source resource\n  ","syntax":"\n   resource <b>openal_source_create<\/b>\n    ( void\n   )","desc":""},"openal_source_destroy":{"version":"(PECL openal >= 0.1.0)","shortdesc":"\n   Destroy a source resource\n  ","syntax":"\n   bool <b>openal_source_destroy<\/b>\n    ( resource $source\n   )","desc":""},"openal_source_get":{"version":"(PECL openal >= 0.1.0)","shortdesc":"\n   Retrieve an OpenAL source property\n  ","syntax":"\n   mixed <b>openal_source_get<\/b>\n    ( resource $source\n   , int $property\n   )","desc":""},"openal_source_pause":{"version":"(PECL openal >= 0.1.0)","shortdesc":"\n   Pause the source\n  ","syntax":"\n   bool <b>openal_source_pause<\/b>\n    ( resource $source\n   )","desc":""},"openal_source_play":{"version":"(PECL openal >= 0.1.0)","shortdesc":"\n   Start playing the source\n  ","syntax":"\n   bool <b>openal_source_play<\/b>\n    ( resource $source\n   )","desc":""},"openal_source_rewind":{"version":"(PECL openal >= 0.1.0)","shortdesc":"\n   Rewind the source\n  ","syntax":"\n   bool <b>openal_source_rewind<\/b>\n    ( resource $source\n   )","desc":""},"openal_source_set":{"version":"(PECL openal >= 0.1.0)","shortdesc":"\n   Set source property\n  ","syntax":"\n   bool <b>openal_source_set<\/b>\n    ( resource $source\n   , int $property\n   , mixed $setting\n   )","desc":""},"openal_source_stop":{"version":"(PECL openal >= 0.1.0)","shortdesc":"\n   Stop playing the source\n  ","syntax":"\n   bool <b>openal_source_stop<\/b>\n    ( resource $source\n   )","desc":""},"openal_stream":{"version":"(PECL openal >= 0.1.0)","shortdesc":"\n   Begin streaming on a source\n  ","syntax":"\n   resource <b>openal_stream<\/b>\n    ( resource $source\n   , int $format\n   , int $rate\n   )","desc":""},"opendir":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430","syntax":"\n   resource <b>opendir<\/b>\n    ( string $path\n   [, resource $context\n  ] )","desc":"\n   \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430 \u0434\u043b\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f\n   \u0441 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438  closedir(),\n    readdir() \u0438  rewinddir().\n  "},"openlog":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u043a \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u043c\u0443 \u0436\u0443\u0440\u043d\u0430\u043b\u0443","syntax":"\n   bool <b>openlog<\/b>\n    ( string $ident\n   , int $option\n   , int $facility\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  openlog() \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0434\u043b\u044f \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u043a \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u043c\u0443 \u0436\u0443\u0440\u043d\u0430\u043b\u0443.  \n  "},"openssl_cipher_iv_length":{"version":"(PHP 5 >= PHP 5.3.3)","shortdesc":"Gets the cipher iv length","syntax":"\n   int <b>openssl_cipher_iv_length<\/b>\n    ( string $method\n   )","desc":"\n   Gets the cipher iv length.\n  "},"openssl_csr_export_to_file":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Exports a CSR to a file","syntax":"\n   bool <b>openssl_csr_export_to_file<\/b>\n    ( resource $csr\n   , string $outfilename\n   [, bool $notext = true\n  ] )","desc":"\n    openssl_csr_export_to_file() takes the Certificate\n   Signing Request represented by csr and saves it\n   as ascii-armoured text into the file named by outfilename.\n  "},"openssl_csr_export":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Exports a CSR as a string","syntax":"\n   bool <b>openssl_csr_export<\/b>\n    ( resource $csr\n   , string &$out\n   [, bool $notext = true\n  ] )","desc":"\n    openssl_csr_export() takes the Certificate Signing\n   Request represented by csr and stores it as\n   ascii-armoured text into out, which is passed by\n   reference.\n  "},"openssl_csr_get_public_key":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"Returns the public key of a CERT","syntax":"\n   resource <b>openssl_csr_get_public_key<\/b>\n    ( mixed $csr\n   [, bool $use_shortnames = true\n  ] )","desc":""},"openssl_csr_get_subject":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"Returns the subject of a CERT","syntax":"\n   array <b>openssl_csr_get_subject<\/b>\n    ( mixed $csr\n   [, bool $use_shortnames = true\n  ] )","desc":""},"openssl_csr_new":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Generates a CSR","syntax":"\n   mixed <b>openssl_csr_new<\/b>\n    ( array $dn\n   , resource &$privkey\n   [, array $configargs\n   [, array $extraattribs\n  ]] )","desc":"\n    openssl_csr_new() generates a new CSR (Certificate Signing Request)\n   based on the information provided by dn, which represents the\n   Distinguished Name to be used in the certificate.\n  "},"openssl_csr_sign":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Sign a CSR with another certificate (or itself) and generate a certificate","syntax":"\n   resource <b>openssl_csr_sign<\/b>\n    ( mixed $csr\n   , mixed $cacert\n   , mixed $priv_key\n   , int $days\n   [, array $configargs\n   [, int $serial = 0\n  ]] )","desc":"\n    openssl_csr_sign() generates an x509 certificate\n   resource from the given CSR.\n  "},"openssl_decrypt":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"Decrypts data","syntax":"\n   string <b>openssl_decrypt<\/b>\n    ( string $data\n   , string $method\n   , string $password\n   [, int $options = 0\n   [, string $iv = \"\"\n  ]] )","desc":"\n   Takes a raw or base64 encoded string and decrypts it using a given method and key.\n  "},"openssl_dh_compute_key":{"version":"(PHP 5 >= 5.3.11)","shortdesc":"Computes shared secret for public value of remote DH key and local DH key","syntax":"\n   string <b>openssl_dh_compute_key<\/b>\n    ( string $pub_key\n   , resource $dh_key\n   )","desc":""},"openssl_digest":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"Computes a digest","syntax":"\n   string <b>openssl_digest<\/b>\n    ( string $data\n   , string $method\n   [, bool $raw_output = false\n  ] )","desc":"\n   Computes a digest hash value for the given data using a given method,\n   and returns a raw or binhex encoded string.\n  "},"openssl_encrypt":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"Encrypts data","syntax":"\n   string <b>openssl_encrypt<\/b>\n    ( string $data\n   , string $method\n   , string $password\n   [, int $options = 0\n   [, string $iv = \"\"\n  ]] )","desc":"\n   Encrypts given data with given method and key, returns a raw\n   or base64 encoded string\n  "},"openssl_error_string":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Return openSSL error message","syntax":"\n   string <b>openssl_error_string<\/b>\n    ( void\n   )","desc":"\n    openssl_error_string() returns the last error from the\n   openSSL library.  Error messages are queued, so this function should be\n   called multiple times to collect all of the information. The last error will\n   be the most recent one.\n  "},"openssl_free_key":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"Free key resource","syntax":"\n   void <b>openssl_free_key<\/b>\n    ( resource $key_identifier\n   )","desc":"\n    openssl_free_key() frees the key associated with\n   the specified key_identifier from memory.\n  "},"openssl_get_cipher_methods":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"Gets available cipher methods","syntax":"\n   array <b>openssl_get_cipher_methods<\/b>\n    ([ bool $aliases = false\n  ] )","desc":"\n   Gets a list of available cipher methods.\n  "},"openssl_get_md_methods":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"Gets available digest methods","syntax":"\n   array <b>openssl_get_md_methods<\/b>\n    ([ bool $aliases = false\n  ] )","desc":"\n   Gets a list of available digest methods.\n  "},"openssl_get_privatekey":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  openssl_pkey_get_private()","syntax":"","desc":""},"openssl_get_publickey":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  openssl_pkey_get_public()","syntax":"","desc":""},"openssl_open":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"Open sealed data","syntax":"\n   bool <b>openssl_open<\/b>\n    ( string $sealed_data\n   , string &$open_data\n   , string $env_key\n   , mixed $priv_key_id\n   [, string $method\n  ] )","desc":"\n    openssl_open() opens (decrypts)\n   sealed_data using the private key associated with\n   the key identifier priv_key_id and the envelope key\n   env_key, and fills\n   open_data with the decrypted data.\n   The envelope key is generated when the\n   data are sealed and can only be used by one specific private key. See\n    openssl_seal() for more information.\n  "},"openssl_pbkdf2":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Generates a PKCS5 v2 PBKDF2 string, defaults to SHA-1","syntax":"\n   string <b>openssl_pbkdf2<\/b>\n    ( string $password\n   , string $salt\n   , int $key_length\n   , int $iterations\n   [, string $digest_algorithm\n  ] )","desc":"\n\n  "},"openssl_pkcs12_export_to_file":{"version":"(PHP 5 >= 5.2.2)","shortdesc":"Exports a PKCS#12 Compatible Certificate Store File","syntax":"\n   bool <b>openssl_pkcs12_export_to_file<\/b>\n    ( mixed $x509\n   , string $filename\n   , mixed $priv_key\n   , string $pass\n   [, array $args\n  ] )","desc":"\n    openssl_pkcs12_export_to_file() stores\n   x509 into a file named by\n   filename in a PKCS#12 file format.\n  "},"openssl_pkcs12_export":{"version":"(PHP 5 >= 5.2.2)","shortdesc":"Exports a PKCS#12 Compatible Certificate Store File to variable.","syntax":"\n   bool <b>openssl_pkcs12_export<\/b>\n    ( mixed $x509\n   , string &$out\n   , mixed $priv_key\n   , string $pass\n   [, array $args\n  ] )","desc":"\n    openssl_pkcs12_export() stores\n   x509 into a string named by\n   out in a PKCS#12 file format.\n  "},"openssl_pkcs12_read":{"version":"(PHP 5 >= 5.2.2)","shortdesc":"Parse a PKCS#12 Certificate Store into an array","syntax":"\n   bool <b>openssl_pkcs12_read<\/b>\n    ( string $pkcs12\n   , array &$certs\n   , string $pass\n   )","desc":"\n    openssl_pkcs12_read() parses the PKCS#12 certificate store supplied by\n   pkcs12 into a array named\n   certs.\n  "},"openssl_pkcs7_decrypt":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Decrypts an S\/MIME encrypted message","syntax":"\n   bool <b>openssl_pkcs7_decrypt<\/b>\n    ( string $infilename\n   , string $outfilename\n   , mixed $recipcert\n   [, mixed $recipkey\n  ] )","desc":"\n   Decrypts the S\/MIME encrypted message contained in the file specified by\n   infilename using the certificate and its\n   associated private key specified by recipcert and\n   recipkey.\n  "},"openssl_pkcs7_encrypt":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Encrypt an S\/MIME message","syntax":"\n   bool <b>openssl_pkcs7_encrypt<\/b>\n    ( string $infile\n   , string $outfile\n   , mixed $recipcerts\n   , array $headers\n   [, int $flags = 0\n   [, int $cipherid = OPENSSL_CIPHER_RC2_40\n  ]] )","desc":"\n    openssl_pkcs7_encrypt() takes the contents of the\n   file named infile and encrypts them using an RC2\n   40-bit cipher so that they can only be read by the intended recipients\n   specified by recipcerts.\n  "},"openssl_pkcs7_sign":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Sign an S\/MIME message","syntax":"\n   bool <b>openssl_pkcs7_sign<\/b>\n    ( string $infilename\n   , string $outfilename\n   , mixed $signcert\n   , mixed $privkey\n   , array $headers\n   [, int $flags = PKCS7_DETACHED\n   [, string $extracerts\n  ]] )","desc":"\n    openssl_pkcs7_sign() takes the contents of the file\n   named infilename and signs them using the\n   certificate and its matching private key specified by\n   signcert and privkey\n   parameters.\n  "},"openssl_pkcs7_verify":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Verifies the signature of an S\/MIME signed message","syntax":"\n   mixed <b>openssl_pkcs7_verify<\/b>\n    ( string $filename\n   , int $flags\n   [, string $outfilename\n   [, array $cainfo\n   [, string $extracerts\n   [, string $content\n  ]]]] )","desc":"\n    openssl_pkcs7_verify() reads the S\/MIME message\n   contained in the given file and examines the digital signature.\n  "},"openssl_pkey_export_to_file":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Gets an exportable representation of a key into a file ","syntax":"\n   bool <b>openssl_pkey_export_to_file<\/b>\n    ( mixed $key\n   , string $outfilename\n   [, string $passphrase\n   [, array $configargs\n  ]] )","desc":"\n    openssl_pkey_export_to_file() saves an ascii-armoured\n   (PEM encoded) rendition of key into the file named\n   by outfilename.  \n  "},"openssl_pkey_export":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Gets an exportable representation of a key into a string","syntax":"\n   bool <b>openssl_pkey_export<\/b>\n    ( mixed $key\n   , string &$out\n   [, string $passphrase\n   [, array $configargs\n  ]] )","desc":"\n    openssl_pkey_export() exports\n   key as a PEM encoded string and stores it into\n   out (which is passed by reference).\n  "},"openssl_pkey_free":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Frees a private key","syntax":"\n   void <b>openssl_pkey_free<\/b>\n    ( resource $key\n   )","desc":"\n   This function frees a private key created by\n    openssl_pkey_new().\n  "},"openssl_pkey_get_details":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"Returns an array with the key details","syntax":"\n   array <b>openssl_pkey_get_details<\/b>\n    ( resource $key\n   )","desc":"\n   This function returns the key details (bits, key, type).\n  "},"openssl_pkey_get_private":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Get a private key","syntax":"\n   resource <b>openssl_pkey_get_private<\/b>\n    ( mixed $key\n   [, string $passphrase = \"\"\n  ] )","desc":"\n    openssl_get_privatekey() parses\n   key and prepares it for use by other functions.\n  "},"openssl_pkey_get_public":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Extract public key from certificate and prepare it for use","syntax":"\n   resource <b>openssl_pkey_get_public<\/b>\n    ( mixed $certificate\n   )","desc":"\n    openssl_get_publickey() extracts the public key from\n   certificate and prepares it for use by other\n   functions.\n  "},"openssl_pkey_new":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Generates a new private key ","syntax":"\n   resource <b>openssl_pkey_new<\/b>\n    ([ array $configargs\n  ] )","desc":"\n    openssl_pkey_new() generates a new private and public\n   key pair.  The public component of the key can be obtained using\n    openssl_pkey_get_public().\n  "},"openssl_private_decrypt":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Decrypts data with private key ","syntax":"\n   bool <b>openssl_private_decrypt<\/b>\n    ( string $data\n   , string &$decrypted\n   , mixed $key\n   [, int $padding = OPENSSL_PKCS1_PADDING\n  ] )","desc":"\n    openssl_private_decrypt() decrypts\n   data that was previous encrypted via\n    openssl_public_encrypt() and stores the result into\n   decrypted. \n  "},"openssl_private_encrypt":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Encrypts data with private key ","syntax":"\n   bool <b>openssl_private_encrypt<\/b>\n    ( string $data\n   , string &$crypted\n   , mixed $key\n   [, int $padding = OPENSSL_PKCS1_PADDING\n  ] )","desc":"\n    openssl_private_encrypt() encrypts data\n   with private key and stores the result into\n   crypted. Encrypted data can be decrypted via\n    openssl_public_decrypt(). \n  "},"openssl_public_decrypt":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Decrypts data with public key ","syntax":"\n   bool <b>openssl_public_decrypt<\/b>\n    ( string $data\n   , string &$decrypted\n   , mixed $key\n   [, int $padding = OPENSSL_PKCS1_PADDING\n  ] )","desc":"\n    openssl_public_decrypt() decrypts\n   data that was previous encrypted via\n    openssl_private_encrypt() and stores the result into\n   decrypted.  \n  "},"openssl_public_encrypt":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Encrypts data with public key ","syntax":"\n   bool <b>openssl_public_encrypt<\/b>\n    ( string $data\n   , string &$crypted\n   , mixed $key\n   [, int $padding = OPENSSL_PKCS1_PADDING\n  ] )","desc":"\n    openssl_public_encrypt() encrypts data\n   with public key and stores the result into\n   crypted. Encrypted data can be decrypted via\n    openssl_private_decrypt(). \n  "},"openssl_random_pseudo_bytes":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"Generate a pseudo-random string of bytes","syntax":"\n   string <b>openssl_random_pseudo_bytes<\/b>\n    ( int $length\n   [, bool &$crypto_strong\n  ] )","desc":"\n   Generates a string of pseudo-random bytes, with the number of bytes\n   determined by the length parameter. \n  "},"openssl_seal":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"Seal (encrypt) data","syntax":"\n   int <b>openssl_seal<\/b>\n    ( string $data\n   , string &$sealed_data\n   , array &$env_keys\n   , array $pub_key_ids\n   [, string $method\n  ] )","desc":"\n    openssl_seal() seals (encrypts)\n   data by using RC4 with a randomly generated\n   secret key. The key is encrypted with each of the public keys\n   associated with the identifiers in pub_key_ids\n   and each encrypted key is returned\n   in env_keys. This means that one can send\n   sealed data to multiple recipients (provided one has obtained their\n   public keys). Each recipient must receive both the sealed data and\n   the envelope key that was encrypted with the recipient's public key.\n  "},"openssl_sign":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"Generate signature","syntax":"\n   bool <b>openssl_sign<\/b>\n    ( string $data\n   , string &$signature\n   , mixed $priv_key_id\n   [, int $signature_alg = OPENSSL_ALGO_SHA1\n  ] )","desc":"\n    openssl_sign() computes a signature for the\n   specified data by using SHA1 for hashing\n   followed by encryption using the private key associated with\n   priv_key_id. Note that the data itself is\n   not encrypted.\n  "},"openssl_verify":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"Verify signature","syntax":"\n   int <b>openssl_verify<\/b>\n    ( string $data\n   , string $signature\n   , mixed $pub_key_id\n   [, int $signature_alg = OPENSSL_ALGO_SHA1\n  ] )","desc":"\n    openssl_verify() verifies that the\n   signature is correct for the specified\n   data using the public key associated with\n   pub_key_id. This must be the public key\n   corresponding to the private key used for signing.\n  "},"openssl_x509_check_private_key":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Checks if a private key corresponds to a certificate","syntax":"\n   bool <b>openssl_x509_check_private_key<\/b>\n    ( mixed $cert\n   , mixed $key\n   )","desc":"\n   Checks whether the given key is the private key\n   that corresponds to cert.\n  "},"openssl_x509_checkpurpose":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Verifies if a certificate can be used for a particular purpose","syntax":"\n   int <b>openssl_x509_checkpurpose<\/b>\n    ( mixed $x509cert\n   , int $purpose\n   [, array $cainfo = array()\n   [, string $untrustedfile\n  ]] )","desc":"\n    openssl_x509_checkpurpose() examines a certificate to\n   see if it can be used for the specified purpose.\n  "},"openssl_x509_export_to_file":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Exports a certificate to file","syntax":"\n   bool <b>openssl_x509_export_to_file<\/b>\n    ( mixed $x509\n   , string $outfilename\n   [, bool $notext = TRUE\n  ] )","desc":"\n    openssl_x509_export_to_file() stores\n   x509 into a file named by\n   outfilename in a PEM encoded format.\n  "},"openssl_x509_export":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Exports a certificate as a string","syntax":"\n   bool <b>openssl_x509_export<\/b>\n    ( mixed $x509\n   , string &$output\n   [, bool $notext = TRUE\n  ] )","desc":"\n    openssl_x509_export() stores\n   x509 into a string named by\n   output in a PEM encoded format.\n  "},"openssl_x509_free":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Free certificate resource","syntax":"\n   void <b>openssl_x509_free<\/b>\n    ( resource $x509cert\n   )","desc":"\n    openssl_x509_free() frees the certificate associated\n   with the specified x509cert resource from memory.\n  "},"openssl_x509_parse":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Parse an X509 certificate and return the information as an array","syntax":"\n   array <b>openssl_x509_parse<\/b>\n    ( mixed $x509cert\n   [, bool $shortnames = true\n  ] )","desc":"\n    openssl_x509_parse() returns information about the\n   supplied x509cert, including fields such as subject\n   name, issuer name, purposes, valid from and valid to dates etc.\n  "},"openssl_x509_read":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"Parse an X.509 certificate and return a resource identifier for\n  it","syntax":"\n   resource <b>openssl_x509_read<\/b>\n    ( mixed $x509certdata\n   )","desc":"\n    openssl_x509_read() parses the certificate supplied by\n   x509certdata and returns a resource identifier for\n   it.\n  "},"ord":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 ASCII-\u043a\u043e\u0434 \u0441\u0438\u043c\u0432\u043e\u043b\u0430","syntax":"\n   int <b>ord<\/b>\n    ( string $string\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 ASCII-\u043a\u043e\u0434 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u0441\u0442\u0440\u043e\u043a\u0438\n   string.\n  "},"output_add_rewrite_var":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 URL","syntax":"\n   bool <b>output_add_rewrite_var<\/b>\n    ( string $name\n   , string $value\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u0430\u0440\u0443 \u0438\u043c\u044f\/\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043a \u043c\u0435\u0445\u0430\u043d\u0438\u0437\u043c\u0443 \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u0438 URL.\n   \u0418\u043c\u044f \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0443\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b \u043a URL (\u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 GET \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432) \u0438 \u0444\u043e\u0440\u043c\u0430\u043c\n   (\u043a\u0430\u043a \u0441\u043a\u0440\u044b\u0442\u044b\u0435 \u043f\u043e\u043b\u044f \u0432\u0432\u043e\u0434\u0430) \u0442\u0430\u043a \u0436\u0435, \u043a\u0430\u043a ID \u0441\u0435\u0441\u0441\u0438\u0438, \u043a\u043e\u0433\u0434\u0430 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0430 \u043f\u0440\u043e\u0437\u0440\u0430\u0447\u043d\u0430\u044f\n   \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u044c \u0441\u0441\u044b\u043b\u043e\u043a, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f session.use_trans_sid.\n   \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u044b\u0435 URL (http:\/\/example.com\/..)\n   \u043d\u0435 \u0437\u0430\u0442\u0440\u0430\u0433\u0438\u0432\u0430\u044e\u0442\u0441\u044f.\n  "},"output_reset_rewrite_vars":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0421\u0431\u0440\u043e\u0441 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u043c URL","syntax":"\n   bool <b>output_reset_rewrite_vars<\/b>\n    ( void\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a URL \u0438 \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0432\u0441\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f,\n   \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439  output_add_rewrite_var()\n   \u0438\u043b\u0438 \u043c\u0435\u0445\u0430\u043d\u0438\u0437\u043c\u043e\u043c \u0441\u0435\u0441\u0441\u0438\u0439 (\u0435\u0441\u043b\u0438 session.use_trans_sid\n   \u0431\u044b\u043b \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u0434\u043b\u044f  session_start()).\n  "},"override_function":{"version":"(PECL apd >= 0.2)","shortdesc":"Overrides built-in functions","syntax":"\n   bool <b>override_function<\/b>\n    ( string $function_name\n   , string $function_args\n   , string $function_code\n   )","desc":"\n   Overrides built-in functions by replacing them in the symbol table.\n  "},"ovrimos_close":{"version":"(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)","shortdesc":"Closes the connection to ovrimos","syntax":"\n   void <b>ovrimos_close<\/b>\n    ( int $connection\n   )","desc":"\n   Closes the specified connection to Ovrimos. This \n   has the effect of rolling back uncommitted transactions.\n  "},"ovrimos_commit":{"version":"(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)","shortdesc":"Commits the transaction","syntax":"\n   bool <b>ovrimos_commit<\/b>\n    ( int $connection_id\n   )","desc":"\n   Commits the transaction.\n  "},"ovrimos_connect":{"version":"(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)","shortdesc":"Connect to the specified database","syntax":"\n   int <b>ovrimos_connect<\/b>\n    ( string $host\n   , string $dborport\n   , string $user\n   , string $password\n   )","desc":"\n   Connects to the specified database.\n  "},"ovrimos_cursor":{"version":"(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)","shortdesc":"Returns the name of the cursor","syntax":"\n   string <b>ovrimos_cursor<\/b>\n    ( int $result_id\n   )","desc":"\n   Gets the name of the cursor. Useful when wishing to perform positioned\n   updates or deletes.\n  "},"ovrimos_exec":{"version":"(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)","shortdesc":"Executes an SQL statement","syntax":"\n   int <b>ovrimos_exec<\/b>\n    ( int $connection_id\n   , string $query\n   )","desc":"\n   Executes an SQL statement (query or update) and returns a result \n   identifier. \n  "},"ovrimos_execute":{"version":"(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)","shortdesc":"Executes a prepared SQL statement","syntax":"\n   bool <b>ovrimos_execute<\/b>\n    ( int $result_id\n   [, array $parameters_array\n  ] )","desc":"\n   Executes a prepared statement.  \n  "},"ovrimos_fetch_into":{"version":"(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)","shortdesc":"Fetches a row from the result set","syntax":"\n   bool <b>ovrimos_fetch_into<\/b>\n    ( int $result_id\n   , array &$result_array\n   [, string $how\n   [, int $rownumber\n  ]] )","desc":"\n   Fetches a row from the given result set, into \n   result_array.\n  "},"ovrimos_fetch_row":{"version":"(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)","shortdesc":"Fetches a row from the result set","syntax":"\n   bool <b>ovrimos_fetch_row<\/b>\n    ( int $result_id\n   [, int $how\n   [, int $row_number\n  ]] )","desc":"\n   Fetches a row from the result set. Column values should be retrieved with\n   other calls.\n  "},"ovrimos_field_len":{"version":"(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)","shortdesc":"Returns the length of the output column","syntax":"\n   int <b>ovrimos_field_len<\/b>\n    ( int $result_id\n   , int $field_number\n   )","desc":"\n   Gets the length of the specified output column.\n  "},"ovrimos_field_name":{"version":"(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)","shortdesc":"Returns the output column name","syntax":"\n   string <b>ovrimos_field_name<\/b>\n    ( int $result_id\n   , int $field_number\n   )","desc":"\n   Returns the output column name at the index specified.\n  "},"ovrimos_field_num":{"version":"(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)","shortdesc":"Returns the (1-based) index of the output column","syntax":"\n   int <b>ovrimos_field_num<\/b>\n    ( int $result_id\n   , string $field_name\n   )","desc":"\n   Returns the 1-based index of the specified output column.\n  "},"ovrimos_field_type":{"version":"(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)","shortdesc":"Returns the type of the output column","syntax":"\n   int <b>ovrimos_field_type<\/b>\n    ( int $result_id\n   , int $field_number\n   )","desc":"\n   Returns the type of the output column \n  "},"ovrimos_free_result":{"version":"(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)","shortdesc":"Frees the specified result_id","syntax":"\n   bool <b>ovrimos_free_result<\/b>\n    ( int $result_id\n   )","desc":"\n   Frees the specified result identifier.\n  "},"ovrimos_longreadlen":{"version":"(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)","shortdesc":"Specifies how many bytes are to be retrieved from long datatypes","syntax":"\n   bool <b>ovrimos_longreadlen<\/b>\n    ( int $result_id\n   , int $length\n   )","desc":"\n   Specifies how many bytes are to be retrieved from long datatypes (long\n   varchar and long varbinary).\n  "},"ovrimos_num_fields":{"version":"(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)","shortdesc":"Returns the number of columns","syntax":"\n   int <b>ovrimos_num_fields<\/b>\n    ( int $result_id\n   )","desc":"\n   Returns the number of columns in the specified result identifier.\n  "},"ovrimos_num_rows":{"version":"(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)","shortdesc":"Returns the number of rows affected by update operations","syntax":"\n   int <b>ovrimos_num_rows<\/b>\n    ( int $result_id\n   )","desc":"\n   Gets the number of rows affected by update operations.\n  "},"ovrimos_prepare":{"version":"(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)","shortdesc":"Prepares an SQL statement","syntax":"\n   int <b>ovrimos_prepare<\/b>\n    ( int $connection_id\n   , string $query\n   )","desc":"\n   Prepares an SQL statement.\n  "},"ovrimos_result_all":{"version":"(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)","shortdesc":"Prints the whole result set as an HTML table","syntax":"\n   int <b>ovrimos_result_all<\/b>\n    ( int $result_id\n   [, string $format\n  ] )","desc":"\n   Prints the whole result set as an HTML table. \n  "},"ovrimos_result":{"version":"(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)","shortdesc":"Retrieves the output column","syntax":"\n   string <b>ovrimos_result<\/b>\n    ( int $result_id\n   , mixed $field\n   )","desc":"\n   Retrieves the output column specified by field.\n  "},"ovrimos_rollback":{"version":"(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)","shortdesc":"Rolls back the transaction","syntax":"\n   bool <b>ovrimos_rollback<\/b>\n    ( int $connection_id\n   )","desc":"\n   Rolls back the transaction.\n  "},"pack":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0431\u0438\u043d\u0430\u0440\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443","syntax":"\n   string <b>pack<\/b>\n    ( string $format\n   [, mixed $args\n   [, mixed $...\n  ]] )","desc":"\n   \u0423\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0432 \u0431\u0438\u043d\u0430\u0440\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0441\u043e\u0433\u043b\u0430\u0441\u043d\u043e \u0444\u043e\u0440\u043c\u0430\u0442\u0443 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435\n   format. \n  "},"parse_ini_file":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b","syntax":"\n   array <b>parse_ini_file<\/b>\n    ( string $filename\n   [, bool $process_sections = false\n   [, int $scanner_mode = INI_SCANNER_NORMAL\n  ]] )","desc":"\n    parse_ini_file() \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442\n   ini-\u0444\u0430\u0439\u043b, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0432 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0435 filename,\n   \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0435\u0433\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0432 \u0432\u0438\u0434\u0435 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430.\n  "},"parse_ini_string":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u0420\u0430\u0437\u0431\u0438\u0440\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438","syntax":"\n   array <b>parse_ini_string<\/b>\n    ( string $ini\n   [, bool $process_sections = false\n   [, int $scanner_mode = INI_SCANNER_NORMAL\n  ]] )","desc":"\n    parse_ini_string() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0438\u0437 \u0441\u0442\u0440\u043e\u043a\u0438\n   ini \u0432 \u0432\u0438\u0434\u0435 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430.\n  "},"parse_str":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0420\u0430\u0437\u0431\u0438\u0440\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435","syntax":"\n   void <b>parse_str<\/b>\n    ( string $str\n   [, array &$arr\n  ] )","desc":"\n   \u0420\u0430\u0437\u0431\u0438\u0440\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 str, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0438\u043c\u0435\u0442\u044c\n   \u0444\u043e\u0440\u043c\u0430\u0442 \u0441\u0442\u0440\u043e\u043a\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 URL \u0438 \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c \u0432 \u0442\u0435\u043a\u0443\u0449\u0435\u043c\n   \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0435.\n  "},"parse_url":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0420\u0430\u0437\u0431\u0438\u0440\u0430\u0435\u0442 URL \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0435\u0433\u043e \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b","syntax":"\n   mixed <b>parse_url<\/b>\n    ( string $url\n   [, int $component = -1\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0440\u0430\u0437\u0431\u0438\u0440\u0430\u0435\u0442 URL \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0432\u0441\u0435\n   \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b URL, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432 \u043d\u0451\u043c \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0442.\n  "},"parsekit_compile_file":{"version":"(PECL parsekit >= 0.2.0)","shortdesc":"Compile a string of PHP code and return the resulting op array","syntax":"\n   array <b>parsekit_compile_file<\/b>\n    ( string $filename\n   [, array &$errors\n   [, int $options = PARSEKIT_QUIET\n  ]] )","desc":""},"parsekit_compile_string":{"version":"(PECL parsekit >= 0.2.0)","shortdesc":"Compile a string of PHP code and return the resulting op array","syntax":"\n   array <b>parsekit_compile_string<\/b>\n    ( string $phpcode\n   [, array &$errors\n   [, int $options = PARSEKIT_QUIET\n  ]] )","desc":""},"parsekit_func_arginfo":{"version":"(PECL parsekit >= 0.3.0)","shortdesc":"Return information regarding function argument(s)","syntax":"\n   array <b>parsekit_func_arginfo<\/b>\n    ( mixed $function\n   )","desc":""},"passthru":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0432\u043d\u0435\u0448\u043d\u044e\u044e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u043d\u0435\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0439 \u0432\u044b\u0432\u043e\u0434","syntax":"\n   void <b>passthru<\/b>\n    ( string $command\n   [, int &$return_var\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  passthru() \u043f\u043e\u0445\u043e\u0436\u0430 \u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044e\n    exec() \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u043e\u043d\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u0443\n   command. \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0430 \u0432\u043c\u0435\u0441\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u0438  exec() \u0438\u043b\u0438\n    system() \u043a\u043e\u0433\u0434\u0430 \u0432\u044b\u0432\u043e\u0434 \u043a\u043e\u043c\u0430\u043d\u0434\u044b Unix\n   \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0434\u0432\u043e\u0438\u0447\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0432\n   \u0431\u0440\u0430\u0443\u0437\u0435\u0440. \u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u044d\u0442\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 - \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443, \u0442\u0430\u043a\u0443\u044e, \u043a\u0430\u043a \n   \u0443\u0442\u0438\u043b\u0438\u0442\u044b pbmplus, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b\u0432\u043e\u0434\u044f\u0442 \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u043f\u043e\u0442\u043e\u043a \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f. \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0432\n   Content-type \u0432 image\/gif \u0438\n   \u0437\u0430\u0442\u0435\u043c \u0432\u044b\u0437\u0432\u0430\u0432 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 pbmplus \u0434\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430  gif-\u0440\u0438\u0441\u0443\u043d\u043a\u0430, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \n   PHP-\u0441\u043a\u0440\u0438\u043f\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b\u0432\u043e\u0434\u044f\u0442 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440.\n  "},"password_get_info":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Returns information about the given hash","syntax":"\n   array <b>password_get_info<\/b>\n    ( string $hash\n   )","desc":"\n   When passed in a valid hash created by an algorithm supported by\n    password_hash(), this function will return an array of\n   information about that hash.\n  "},"password_hash":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Creates a password hash","syntax":"\n   string <b>password_hash<\/b>\n    ( string $password\n   , integer $algo\n   [, array $options\n  ] )","desc":"\n    password_hash() creates a new password hash using a strong one-way hashing\n   algorithm.  password_hash() is compatible with  crypt().\n   Therefore, password hashes created by  crypt() can be used with\n    password_hash().\n  "},"password_needs_rehash":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Checks if the given hash matches the given options","syntax":"\n   boolean <b>password_needs_rehash<\/b>\n    ( string $hash\n   , string $algo\n   [, string $options\n  ] )","desc":"\n   This function checks to see if the supplied hash implements the algorithm\n   and options provided. If not, it is assumed that the hash needs to be\n   rehashed.\n  "},"password_verify":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Verifies that a password matches a hash","syntax":"\n   boolean <b>password_verify<\/b>\n    ( string $password\n   , string $hash\n   )","desc":"\n   Verifies that the given hash matches the given password.\n  "},"pathinfo":{"version":"(PHP 4 >= 4.0.3, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u0443\u0442\u0438 \u043a \u0444\u0430\u0439\u043b\u0443","syntax":"\n   mixed <b>pathinfo<\/b>\n    ( string $path\n   [, int $options = PATHINFO_DIRNAME | PATHINFO_BASENAME | PATHINFO_EXTENSION | PATHINFO_FILENAME\n  ] )","desc":"\n    pathinfo() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \n   path \u0432 \u0432\u0438\u0434\u0435 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0438\u043b\u0438\n   \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 options.\n  "},"pclose":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0444\u0430\u0439\u043b\u043e\u0432\u044b\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430","syntax":"\n   int <b>pclose<\/b>\n    ( resource $handle\n   )","desc":"\n   \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0444\u0430\u0439\u043b\u043e\u0432\u044b\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043d\u0430 \u043a\u0430\u043d\u0430\u043b, \u043e\u0442\u043a\u0440\u044b\u0442\u044b\u0439 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438\n    popen().\n  "},"pcntl_alarm":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Set an alarm clock for delivery of a signal","syntax":"\n   int <b>pcntl_alarm<\/b>\n    ( int $seconds\n   )","desc":"\n   Creates a timer that will send a SIGALRM signal to\n   the process after the given number of seconds.\n   Any call to  pcntl_alarm() will cancel any previously\n   set alarm.\n  "},"pcntl_errno":{"version":"(PHP 5 >= 5.3.4)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  pcntl_strerror()","syntax":"","desc":""},"pcntl_exec":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Executes specified program in current process space","syntax":"\n   void <b>pcntl_exec<\/b>\n    ( string $path\n   [, array $args\n   [, array $envs\n  ]] )","desc":"\n   Executes the program with the given arguments.\n  "},"pcntl_fork":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"Forks the currently running process","syntax":"\n   int <b>pcntl_fork<\/b>\n    ( void\n   )","desc":"\n   The  pcntl_fork() function creates a child\n   process that differs from the parent process only in its PID and\n   PPID. Please see your system's fork(2) man page for specific details as to\n   how fork works on your system.\n  "},"pcntl_get_last_error":{"version":"(PHP 5 >= 5.3.4)","shortdesc":"Retrieve the error number set by the last pcntl function which failed","syntax":"\n   int <b>pcntl_get_last_error<\/b>\n    ( void\n   )","desc":"\n\n  "},"pcntl_getpriority":{"version":"(PHP 5)","shortdesc":"Get the priority of any process","syntax":"\n   int <b>pcntl_getpriority<\/b>\n    ([ int $pid = getmypid()\n   [, int $process_identifier = PRIO_PROCESS\n  ]] )","desc":"\n    pcntl_getpriority() gets the priority of\n   pid. Because priority levels can differ between\n   system types and kernel versions, please see your system's getpriority(2)\n   man page for specific details.\n  "},"pcntl_setpriority":{"version":"(PHP 5)","shortdesc":"Change the priority of any process","syntax":"\n   bool <b>pcntl_setpriority<\/b>\n    ( int $priority\n   [, int $pid = getmypid()\n   [, int $process_identifier = PRIO_PROCESS\n  ]] )","desc":"\n    pcntl_setpriority() sets the priority of\n   pid. \n  "},"pcntl_signal_dispatch":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"Calls signal handlers for pending signals","syntax":"\n   bool <b>pcntl_signal_dispatch<\/b>\n    ( void\n   )","desc":"\n   The  pcntl_signal_dispatch() function calls the signal \n   handlers installed by  pcntl_signal() for each pending\n   signal.\n  "},"pcntl_signal":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"Installs a signal handler","syntax":"\n   bool <b>pcntl_signal<\/b>\n    ( int $signo\n   , callable|int $handler\n   [, bool $restart_syscalls = true\n  ] )\n\n        void handler\n         ( int $signo\n        )\n","desc":"\n   The  pcntl_signal() function installs a new\n   signal handler or replaces the current signal handler for the signal indicated by signo.\n  "},"pcntl_sigprocmask":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"Sets and retrieves blocked signals","syntax":"\n   bool <b>pcntl_sigprocmask<\/b>\n    ( int $how\n   , array $set\n   [, array &$oldset\n  ] )","desc":"\n   The  pcntl_sigprocmask() function adds, removes or sets blocked\n   signals, depending on the how parameter.\n  "},"pcntl_sigtimedwait":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"Waits for signals, with a timeout","syntax":"\n   int <b>pcntl_sigtimedwait<\/b>\n    ( array $set\n   [, array &$siginfo\n   [, int $seconds = 0\n   [, int $nanoseconds = 0\n  ]]] )","desc":"\n   The  pcntl_sigtimedwait() function operates in exactly\n   the same way as  pcntl_sigwaitinfo() except that it takes\n   two additional parameters, seconds and\n   nanoseconds, which enable an upper bound to be placed\n   on the time for which the script is suspended.\n  "},"pcntl_sigwaitinfo":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"Waits for signals","syntax":"\n   int <b>pcntl_sigwaitinfo<\/b>\n    ( array $set\n   [, array &$siginfo\n  ] )","desc":"\n   The  pcntl_sigwaitinfo() function suspends execution of the\n   calling script until one of the signals given in set\n   are delivered. If one of the signal is already pending (e.g. blocked by\n    pcntl_sigprocmask()),\n    pcntl_sigwaitinfo() will return immediately.\n  "},"pcntl_strerror":{"version":"(PHP 5 >= 5.3.4)","shortdesc":"Retrieve the system error message associated with the given errno","syntax":"\n   string <b>pcntl_strerror<\/b>\n    ( int $errno\n   )","desc":"\n\n  "},"pcntl_wait":{"version":"(PHP 5)","shortdesc":"Waits on or returns the status of a forked child","syntax":"\n   int <b>pcntl_wait<\/b>\n    ( int &$status\n   [, int $options = 0\n  ] )","desc":"\n   The wait function suspends execution of the current process until a\n   child has exited, or until a signal is delivered whose action is to\n   terminate the current process or to call a signal handling function.  If a\n   child has already exited by the time of the call (a so-called \"zombie\"\n   process), the function returns immediately.  Any system resources used by\n   the child are freed.  Please see your system's wait(2) man page for\n   specific details as to how wait works on your system.\n  "},"pcntl_waitpid":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"Waits on or returns the status of a forked child","syntax":"\n   int <b>pcntl_waitpid<\/b>\n    ( int $pid\n   , int &$status\n   [, int $options = 0\n  ] )","desc":"\n   Suspends execution of the current process until a child as specified by\n   the pid argument has exited, or until a signal is\n   delivered whose action is to terminate the current process or to call a\n   signal handling function.\n  "},"pcntl_wexitstatus":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"Returns the return code of a terminated child","syntax":"\n   int <b>pcntl_wexitstatus<\/b>\n    ( int $status\n   )","desc":"\n   Returns the return code of a terminated child.  This function is\n   only useful if  pcntl_wifexited() returned\n   TRUE.\n  "},"pcntl_wifexited":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"Checks if status code represents a normal exit","syntax":"\n   bool <b>pcntl_wifexited<\/b>\n    ( int $status\n   )","desc":"\n   Checks whether the child status code represents a normal exit.\n  "},"pcntl_wifsignaled":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"Checks whether the status code represents a termination due to a signal","syntax":"\n   bool <b>pcntl_wifsignaled<\/b>\n    ( int $status\n   )","desc":"\n   Checks whether the child process exited because of a signal which was not\n   caught.\n  "},"pcntl_wifstopped":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"Checks whether the child process is currently stopped","syntax":"\n   bool <b>pcntl_wifstopped<\/b>\n    ( int $status\n   )","desc":"\n   Checks whether the child process which caused the return is currently\n   stopped; this is only possible if the call to\n    pcntl_waitpid() was done using the option\n   WUNTRACED.\n  "},"pcntl_wstopsig":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"Returns the signal which caused the child to stop","syntax":"\n   int <b>pcntl_wstopsig<\/b>\n    ( int $status\n   )","desc":"\n   Returns the number of the signal which caused the child to stop.\n   This function is only useful if\n    pcntl_wifstopped() returned TRUE.\n  "},"pcntl_wtermsig":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"Returns the signal which caused the child to terminate","syntax":"\n   int <b>pcntl_wtermsig<\/b>\n    ( int $status\n   )","desc":"\n   Returns the number of the signal that caused the child process to\n   terminate. This function is only useful if\n    pcntl_wifsignaled() returned TRUE.\n  "},"PDF_activate_item":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Activate structure element or other content item","syntax":"\n   bool <b>PDF_activate_item<\/b>\n    ( resource $pdfdoc\n   , int $id\n   )","desc":"\n   Activates a previously created structure element or other content item.\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_add_annotation":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Add annotation [deprecated]","syntax":"","desc":""},"PDF_add_bookmark":{"version":"(PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0)","shortdesc":"Add bookmark for current page [deprecated]","syntax":"","desc":""},"PDF_add_launchlink":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"Add launch annotation for current page [deprecated]","syntax":"\n   bool <b>PDF_add_launchlink<\/b>\n    ( resource $pdfdoc\n   , float $llx\n   , float $lly\n   , float $urx\n   , float $ury\n   , string $filename\n   )","desc":"\n   Adds a link to a web resource.\n  "},"PDF_add_locallink":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"Add link annotation for current page [deprecated]","syntax":"\n   bool <b>PDF_add_locallink<\/b>\n    ( resource $pdfdoc\n   , float $lowerleftx\n   , float $lowerlefty\n   , float $upperrightx\n   , float $upperrighty\n   , int $page\n   , string $dest\n   )","desc":"\n   Add a link annotation to a target within the current PDF file.\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_add_nameddest":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Create named destination","syntax":"\n   bool <b>PDF_add_nameddest<\/b>\n    ( resource $pdfdoc\n   , string $name\n   , string $optlist\n   )","desc":"\n   Creates a named destination on an arbitrary page in the current document.\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_add_note":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"Set annotation for current page [deprecated]","syntax":"\n   bool <b>PDF_add_note<\/b>\n    ( resource $pdfdoc\n   , float $llx\n   , float $lly\n   , float $urx\n   , float $ury\n   , string $contents\n   , string $title\n   , string $icon\n   , int $open\n   )","desc":"\n   Sets an annotation for the current page. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_add_outline":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Add bookmark for current page [deprecated]","syntax":"","desc":""},"PDF_add_pdflink":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Add file link annotation for current page [deprecated]","syntax":"\n   bool <b>PDF_add_pdflink<\/b>\n    ( resource $pdfdoc\n   , float $bottom_left_x\n   , float $bottom_left_y\n   , float $up_right_x\n   , float $up_right_y\n   , string $filename\n   , int $page\n   , string $dest\n   )","desc":"\n   Add a file link annotation to a PDF target.\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_add_table_cell":{"version":"(PECL pdflib >= 2.1.0)","shortdesc":"Add a cell to a new or existing table","syntax":"\n    int <b>PDF_add_table_cell<\/b>\n     ( resource $pdfdoc\n    , int $table\n    , int $column\n    , int $row\n    , string $text\n    , string $optlist\n    )","desc":"\n    Adds a cell to a new or existing table.\n   "},"PDF_add_textflow":{"version":"(PECL pdflib >= 2.1.0)","shortdesc":"Create Textflow or add text to existing Textflow","syntax":"\n   int <b>PDF_add_textflow<\/b>\n    ( resource $pdfdoc\n   , int $textflow\n   , string $text\n   , string $optlist\n   )","desc":"\n   Creates a Textflow object, or adds text and explicit options to an\n   existing Textflow.\n  "},"PDF_add_thumbnail":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"Add thumbnail for current page","syntax":"\n   bool <b>PDF_add_thumbnail<\/b>\n    ( resource $pdfdoc\n   , int $image\n   )","desc":"\n   Adds an existing image as thumbnail for the current page.\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_add_weblink":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Add weblink for current page [deprecated]","syntax":"\n   bool <b>PDF_add_weblink<\/b>\n    ( resource $pdfdoc\n   , float $lowerleftx\n   , float $lowerlefty\n   , float $upperrightx\n   , float $upperrighty\n   , string $url\n   )","desc":"\n   Adds a weblink annotation to a target url on the Web.\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_arc":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"\u0420\u0438\u0441\u0443\u0435\u0442 \u0434\u0443\u0433\u0443 \u043e\u043a\u0440\u0443\u0436\u043d\u043e\u0441\u0442\u0438 \u043f\u0440\u043e\u0442\u0438\u0432 \u0447\u0430\u0441\u043e\u0432\u043e\u0439 \u0441\u0442\u0440\u0435\u043b\u043a\u0438","syntax":"\n   bool <b>PDF_arc<\/b>\n    ( resource $p\n   , float $x\n   , float $y\n   , float $r\n   , float $alpha\n   , float $beta\n   )","desc":"\n   \u0420\u0438\u0441\u0443\u0435\u0442 \u0434\u0443\u0433\u0443 \u043e\u043a\u0440\u0443\u0436\u043d\u043e\u0441\u0442\u0438 \u043f\u0440\u043e\u0442\u0438\u0432 \u0447\u0430\u0441\u043e\u0432\u043e\u0439 \u0441\u0442\u0440\u0435\u043b\u043a\u0438.\n  "},"PDF_arcn":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"\u0420\u0438\u0441\u0443\u0435\u0442 \u0434\u0443\u0433\u0443 \u043e\u043a\u0440\u0443\u0436\u043d\u043e\u0441\u0442\u0438 \u043f\u043e \u0447\u0430\u0441\u043e\u0432\u043e\u0439 \u0441\u0442\u0440\u0435\u043b\u043a\u0435","syntax":"\n   bool <b>PDF_arcn<\/b>\n    ( resource $p\n   , float $x\n   , float $y\n   , float $r\n   , float $alpha\n   , float $beta\n   )","desc":"\n   \u0417\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0440\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u044f, \u044d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u0435\u0434\u0435\u0442 \u0441\u0435\u0431\u044f \u0442\u0430\u043a \u0436\u0435, \u043a\u0430\u043a \n    PDF_arc().\n  "},"PDF_attach_file":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"Add file attachment for current page [deprecated]","syntax":"\n   bool <b>PDF_attach_file<\/b>\n    ( resource $pdfdoc\n   , float $llx\n   , float $lly\n   , float $urx\n   , float $ury\n   , string $filename\n   , string $description\n   , string $author\n   , string $mimetype\n   , string $icon\n   )","desc":"\n   Adds a file attachment annotation. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_begin_document":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Create new PDF file","syntax":"\n   int <b>PDF_begin_document<\/b>\n    ( resource $pdfdoc\n   , string $filename\n   , string $optlist\n   )","desc":"\n   Creates a new PDF file subject to various options.\n  "},"PDF_begin_font":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Start a Type 3 font definition","syntax":"\n   bool <b>PDF_begin_font<\/b>\n    ( resource $pdfdoc\n   , string $filename\n   , float $a\n   , float $b\n   , float $c\n   , float $d\n   , float $e\n   , float $f\n   , string $optlist\n   )","desc":"\n   Starts a Type 3 font definition.\n  "},"PDF_begin_glyph":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Start glyph definition for Type 3 font","syntax":"\n   bool <b>PDF_begin_glyph<\/b>\n    ( resource $pdfdoc\n   , string $glyphname\n   , float $wx\n   , float $llx\n   , float $lly\n   , float $urx\n   , float $ury\n   )","desc":"\n   Starts a glyph definition for a Type 3 font.\n  "},"PDF_begin_item":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Open structure element or other content item","syntax":"\n   int <b>PDF_begin_item<\/b>\n    ( resource $pdfdoc\n   , string $tag\n   , string $optlist\n   )","desc":"\n   Opens a structure element or other content item with attributes supplied\n   as options.\n  "},"PDF_begin_layer":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Start layer","syntax":"\n   bool <b>PDF_begin_layer<\/b>\n    ( resource $pdfdoc\n   , int $layer\n   )","desc":"\n   Starts a layer for subsequent output on the page. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_begin_page_ext":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Start new page","syntax":"\n   bool <b>PDF_begin_page_ext<\/b>\n    ( resource $pdfdoc\n   , float $width\n   , float $height\n   , string $optlist\n   )","desc":"\n   Adds a new page to the document, and specifies various options.\n   The parameters width and height\n   are the dimensions of the new page in points. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_begin_page":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Start new page [deprecated]","syntax":"\n   bool <b>PDF_begin_page<\/b>\n    ( resource $pdfdoc\n   , float $width\n   , float $height\n   )","desc":"\n   Adds a new page to the document. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_begin_pattern":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"Start pattern definition","syntax":"\n   int <b>PDF_begin_pattern<\/b>\n    ( resource $pdfdoc\n   , float $width\n   , float $height\n   , float $xstep\n   , float $ystep\n   , int $painttype\n   )","desc":"\n   Starts a new pattern definition.\n  "},"PDF_begin_template_ext":{"version":"(PECL pdflib >= 2.1.0)","shortdesc":"Start template definition","syntax":"\n   int <b>PDF_begin_template_ext<\/b>\n    ( resource $pdfdoc\n   , float $width\n   , float $height\n    , string $optlist\n   )","desc":"\n   Starts a new template definition.\n  "},"PDF_begin_template":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"Start template definition [deprecated]","syntax":"\n   int <b>PDF_begin_template<\/b>\n    ( resource $pdfdoc\n   , float $width\n   , float $height\n   )","desc":"\n   Starts a new template definition.\n  "},"PDF_circle":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"\u0420\u0438\u0441\u0443\u0435\u0442 \u043e\u043a\u0440\u0443\u0436\u043d\u043e\u0441\u0442\u044c","syntax":"\n   bool <b>PDF_circle<\/b>\n    ( resource $pdfdoc\n   , float $x\n   , float $y\n   , float $r\n   )","desc":"\n   \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u043a\u0440\u0443\u0436\u043d\u043e\u0441\u0442\u044c. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_clip":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Clip to current path","syntax":"\n   bool <b>PDF_clip<\/b>\n    ( resource $p\n   )","desc":"\n   Uses the current path as clipping path, and terminate the path. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_close_image":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435","syntax":"\n   bool <b>PDF_close_image<\/b>\n    ( resource $p\n   , int $image\n   )","desc":"\n   \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 image, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e\n   \u0444\u0443\u043d\u043a\u0446\u0438\u0438  PDF_open_image().\n  "},"PDF_close_pdi_page":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"Close the page handle","syntax":"\n   bool <b>PDF_close_pdi_page<\/b>\n    ( resource $p\n   , int $page\n   )","desc":"\n   Closes the page handle, and frees all page-related resources. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_close_pdi":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"Close the input PDF document [deprecated]","syntax":"\n   bool <b>PDF_close_pdi<\/b>\n    ( resource $p\n   , int $doc\n   )","desc":"\n   Closes all open page handles, and closes the input PDF document. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_close":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 pdf-\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 [\u0443\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0435\u0435]","syntax":"\n   bool <b>PDF_close<\/b>\n    ( resource $p\n   )","desc":"\n   \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 PDF-\u0444\u0430\u0439\u043b \u0438 \u043e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u0435\u0442 \u0432\u0441\u0435 \u043e\u0442\u043d\u043e\u0441\u044f\u0449\u0438\u0435\u0441\u044f \u043a \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0443 \u0440\u0435\u0441\u0443\u0440\u0441\u044b.\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_closepath_fill_stroke":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Close, fill and stroke current path","syntax":"\n   bool <b>PDF_closepath_fill_stroke<\/b>\n    ( resource $p\n   )","desc":"\n   Closes the path, fills, and strokes it. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_closepath_stroke":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Close and stroke path","syntax":"\n   bool <b>PDF_closepath_stroke<\/b>\n    ( resource $p\n   )","desc":"\n   Closes the path, and strokes it. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_closepath":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Close current path","syntax":"\n   bool <b>PDF_closepath<\/b>\n    ( resource $p\n   )","desc":"\n   Closes the current path. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_concat":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"Concatenate a matrix to the CTM","syntax":"\n   bool <b>PDF_concat<\/b>\n    ( resource $p\n   , float $a\n   , float $b\n   , float $c\n   , float $d\n   , float $e\n   , float $f\n   )","desc":"\n   Concatenates a matrix to the current transformation matrix (CTM). \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_continue_text":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Output text in next line","syntax":"\n   bool <b>PDF_continue_text<\/b>\n    ( resource $p\n   , string $text\n   )","desc":"\n   Prints text at the next line. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_create_3dview":{"version":"(PECL pdflib >= 2.1.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043c\u043d\u043e\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435","syntax":"\n   int <b>PDF_create_3dview<\/b>\n    ( resource $pdfdoc\n   , string $username\n   , string $optlist\n   )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043c\u043d\u043e\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435.\n  "},"PDF_create_action":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0434\u043b\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0438\u043b\u0438 \u0441\u043e\u0431\u044b\u0442\u0438\u044f","syntax":"\n   int <b>PDF_create_action<\/b>\n    ( resource $pdfdoc\n   , string $type\n   , string $optlist\n   )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u043e \u043a \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c \u0438\u043b\u0438 \u0441\u043e\u0431\u044b\u0442\u0438\u044f\u043c.\n  "},"PDF_create_annotation":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0443\u044e \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u044e","syntax":"\n   bool <b>PDF_create_annotation<\/b>\n    ( resource $pdfdoc\n   , float $llx\n   , float $lly\n   , float $urx\n   , float $ury\n   , string $type\n   , string $optlist\n   )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0443\u044e \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u044e \u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435.\n  "},"PDF_create_bookmark":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Create bookmark","syntax":"\n   int <b>PDF_create_bookmark<\/b>\n    ( resource $pdfdoc\n   , string $text\n   , string $optlist\n   )","desc":"\n   Creates a bookmark subject to various options.\n  "},"PDF_create_field":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Create form field","syntax":"\n   bool <b>PDF_create_field<\/b>\n    ( resource $pdfdoc\n   , float $llx\n   , float $lly\n   , float $urx\n   , float $ury\n   , string $name\n   , string $type\n   , string $optlist\n   )","desc":"\n   Creates a form field on the current page subject to various options.\n  "},"PDF_create_fieldgroup":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Create form field group","syntax":"\n   bool <b>PDF_create_fieldgroup<\/b>\n    ( resource $pdfdoc\n   , string $name\n   , string $optlist\n   )","desc":"\n   Creates a form field group subject to various options.\n  "},"PDF_create_gstate":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Create graphics state object","syntax":"\n   int <b>PDF_create_gstate<\/b>\n    ( resource $pdfdoc\n   , string $optlist\n   )","desc":"\n   Creates a graphics state object subject to various options.\n  "},"PDF_create_pvf":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Create PDFlib virtual file","syntax":"\n   bool <b>PDF_create_pvf<\/b>\n    ( resource $pdfdoc\n   , string $filename\n   , string $data\n   , string $optlist\n   )","desc":"\n   Creates a named virtual read-only file from data provided in memory.\n  "},"PDF_create_textflow":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Create textflow object","syntax":"\n   int <b>PDF_create_textflow<\/b>\n    ( resource $pdfdoc\n   , string $text\n   , string $optlist\n   )","desc":"\n   Preprocesses text for later formatting and creates a textflow object.\n  "},"PDF_curveto":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Draw Bezier curve","syntax":"\n   bool <b>PDF_curveto<\/b>\n    ( resource $p\n   , float $x1\n   , float $y1\n   , float $x2\n   , float $y2\n   , float $x3\n   , float $y3\n   )","desc":"\n   Draws a Bezier curve from the current point, using 3 more control points.\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_define_layer":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Create layer definition","syntax":"\n   int <b>PDF_define_layer<\/b>\n    ( resource $pdfdoc\n   , string $name\n   , string $optlist\n   )","desc":"\n   Creates a new layer definition.\n  "},"PDF_delete_pvf":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Delete PDFlib virtual file","syntax":"\n    int <b>PDF_delete_pvf<\/b>\n     ( resource $pdfdoc\n    , string $filename\n    )","desc":"\n   Deletes a named virtual file and frees its data structures (but not\n   the contents).\n  "},"PDF_delete_table":{"version":"(PECL pdflib >= 2.1.0)","shortdesc":"Delete table object","syntax":"\n    bool <b>PDF_delete_table<\/b>\n     ( resource $pdfdoc\n    , int $table\n    , string $optlist\n    )","desc":"\n   Deletes a table and all associated data structures.\n  "},"PDF_delete_textflow":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Delete textflow object","syntax":"\n    bool <b>PDF_delete_textflow<\/b>\n     ( resource $pdfdoc\n    , int $textflow\n    )","desc":"\n   Deletes a textflow and the associated data structures.\n  "},"PDF_delete":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 PDFlib","syntax":"\n    bool <b>PDF_delete<\/b>\n     ( resource $pdfdoc\n    )","desc":"\n   \u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 PDFlib \u0438 \u043e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u0435\u0442 \u0432\u0441\u0435 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u044b. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_encoding_set_char":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Add glyph name and\/or Unicode value","syntax":"\n    bool <b>PDF_encoding_set_char<\/b>\n     ( resource $pdfdoc\n    , string $encoding\n    , int $slot\n    , string $glyphname\n    , int $uv\n    )","desc":"\n   Adds a glyph name and\/or Unicode value to a custom encoding.\n  "},"PDF_end_document":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Close PDF file","syntax":"\n    bool <b>PDF_end_document<\/b>\n     ( resource $pdfdoc\n    , string $optlist\n    )","desc":"\n   Closes the generated PDF file and applies various options.\n  "},"PDF_end_font":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Terminate Type 3 font definition","syntax":"\n    bool <b>PDF_end_font<\/b>\n     ( resource $pdfdoc\n    )","desc":"\n   Terminates a Type 3 font definition.\n  "},"PDF_end_glyph":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Terminate glyph definition for Type 3 font","syntax":"\n    bool <b>PDF_end_glyph<\/b>\n     ( resource $pdfdoc\n    )","desc":"\n   Terminates a glyph definition for a Type 3 font.\n  "},"PDF_end_item":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Close structure element or other content item","syntax":"\n    bool <b>PDF_end_item<\/b>\n     ( resource $pdfdoc\n    , int $id\n    )","desc":"\n   Closes a structure element or other content item.\n  "},"PDF_end_layer":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Deactivate all active layers","syntax":"\n    bool <b>PDF_end_layer<\/b>\n     ( resource $pdfdoc\n    )","desc":"\n   Deactivates all active layers. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_end_page_ext":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Finish page","syntax":"\n    bool <b>PDF_end_page_ext<\/b>\n     ( resource $pdfdoc\n    , string $optlist\n    )","desc":"\n   Finishes a page, and applies various options. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_end_page":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Finish page","syntax":"\n    bool <b>PDF_end_page<\/b>\n     ( resource $p\n    )","desc":"\n   Finishes the page. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_end_pattern":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"Finish pattern","syntax":"\n    bool <b>PDF_end_pattern<\/b>\n     ( resource $p\n    )","desc":"\n   Finishes the pattern definition. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_end_template":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"Finish template","syntax":"\n    bool <b>PDF_end_template<\/b>\n     ( resource $p\n    )","desc":"\n   Finishes a template definition. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_endpath":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"End current path","syntax":"\n   bool <b>PDF_endpath<\/b>\n    ( resource $p\n   )","desc":"\n   Ends the current path without filling or stroking it.\n  "},"PDF_fill_imageblock":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Fill image block with variable data","syntax":"\n    int <b>PDF_fill_imageblock<\/b>\n     ( resource $pdfdoc\n    , int $page\n    , string $blockname\n    , int $image\n    , string $optlist\n    )","desc":"\n   Fills an image block with variable data according to its properties.\n  "},"PDF_fill_pdfblock":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Fill PDF block with variable data","syntax":"\n    int <b>PDF_fill_pdfblock<\/b>\n     ( resource $pdfdoc\n    , int $page\n    , string $blockname\n    , int $contents\n    , string $optlist\n    )","desc":"\n   Fills a PDF block with variable data according to its properties.\n  "},"PDF_fill_stroke":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Fill and stroke path","syntax":"\n    bool <b>PDF_fill_stroke<\/b>\n     ( resource $p\n    )","desc":"\n   Fills and strokes the current path with the current fill and stroke color.\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_fill_textblock":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Fill text block with variable data","syntax":"\n    int <b>PDF_fill_textblock<\/b>\n     ( resource $pdfdoc\n    , int $page\n    , string $blockname\n    , string $text\n    , string $optlist\n    )","desc":"\n   Fills a text block with variable data according to its properties.\n  "},"PDF_fill":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Fill current path","syntax":"\n    bool <b>PDF_fill<\/b>\n     ( resource $p\n    )","desc":"\n   Fills the interior of the current path with the current fill color.\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_findfont":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"Prepare font for later use [deprecated]","syntax":"\n    int <b>PDF_findfont<\/b>\n     ( resource $p\n    , string $fontname\n    , string $encoding\n    , int $embed\n    )","desc":"\n   Search for a font and prepare it for later use with  PDF_setfont().\n   The metrics will be loaded, and if embed is\n   nonzero, the font file will be checked, but not yet used.\n   encoding is one of builtin,\n   macroman, winansi,\n   host, a user-defined encoding name or the name of\n   a CMap.\n   Parameter embed is optional before PHP 4.3.5 or\n   with PDFlib less than 5.\n  "},"PDF_fit_image":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Place image or template","syntax":"\n    bool <b>PDF_fit_image<\/b>\n     ( resource $pdfdoc\n    , int $image\n    , float $x\n    , float $y\n    , string $optlist\n    )","desc":"\n   Places an image or template on the page, subject to various options.\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_fit_pdi_page":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Place imported PDF page","syntax":"\n    bool <b>PDF_fit_pdi_page<\/b>\n     ( resource $pdfdoc\n    , int $page\n    , float $x\n    , float $y\n    , string $optlist\n    )","desc":"\n   Places an imported PDF page on the page, subject to various options.\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_fit_table":{"version":"(PECL pdflib >= 2.1.0)","shortdesc":"Place table on page","syntax":"\n    string <b>PDF_fit_table<\/b>\n     ( resource $pdfdoc\n    , int $table\n    , float $llx\n    , float $lly\n    , float $urx\n    , float $ury\n    , string $optlist\n    )","desc":"\n   Places a table on the page fully or partially.\n  "},"PDF_fit_textflow":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Format textflow in rectangular area","syntax":"\n    string <b>PDF_fit_textflow<\/b>\n     ( resource $pdfdoc\n    , int $textflow\n    , float $llx\n    , float $lly\n    , float $urx\n    , float $ury\n    , string $optlist\n    )","desc":"\n   Formats the next portion of a textflow into a rectangular area.\n  "},"PDF_fit_textline":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Place single line of text","syntax":"\n    bool <b>PDF_fit_textline<\/b>\n     ( resource $pdfdoc\n    , string $text\n    , float $x\n    , float $y\n    , string $optlist\n    )","desc":"\n   Places a single line of text on the page, subject to various options. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_get_apiname":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Get name of unsuccessfull API function","syntax":"\n    string <b>PDF_get_apiname<\/b>\n     ( resource $pdfdoc\n    )","desc":"\n   Gets the name of the API function which threw the last exception or failed.\n  "},"PDF_get_buffer":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"Get PDF output buffer","syntax":"\n    string <b>PDF_get_buffer<\/b>\n     ( resource $p\n    )","desc":"\n    Fetches the buffer containing the generated PDF data.\n  "},"PDF_get_errmsg":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0441\u0442 \u043e\u0448\u0438\u0431\u043a\u0438","syntax":"\n    string <b>PDF_get_errmsg<\/b>\n     ( resource $pdfdoc\n    )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0441\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0431\u0440\u043e\u0448\u0435\u043d\u043d\u043e\u0433\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0438\u043b\u0438 \u043f\u0440\u0438\u0447\u0438\u043d\u044b \u043d\u0435\u0443\u0434\u0430\u0447\u0438 \u043f\u0440\u0438 \n   \u0432\u044b\u0437\u043e\u0432\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438.\n  "},"PDF_get_errnum":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u0434 \u043e\u0448\u0438\u0431\u043a\u0438","syntax":"\n    int <b>PDF_get_errnum<\/b>\n     ( resource $pdfdoc\n    )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u043e\u043c\u0435\u0440 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0431\u0440\u043e\u0448\u0435\u043d\u043d\u043e\u0433\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0438\u043b\u0438 \u043f\u0440\u0438\u0447\u0438\u043d\u044b \u043d\u0435\u0443\u0434\u0430\u0447\u0438 \u043f\u0440\u0438\n   \u0432\u044b\u0437\u043e\u0432\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438.\n  "},"PDF_get_font":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0448\u0440\u0438\u0444\u0442 [\u0443\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0435\u0435]","syntax":"","desc":""},"PDF_get_fontname":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0448\u0440\u0438\u0444\u0442\u0430 [\u0443\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0435\u0435]","syntax":"","desc":""},"PDF_get_fontsize":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Font handling [deprecated]","syntax":"","desc":""},"PDF_get_image_height":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u044b\u0441\u043e\u0442\u0443 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f [\u0443\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0435\u0435]","syntax":"","desc":""},"PDF_get_image_width":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0448\u0438\u0440\u0438\u043d\u0443 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f [\u0443\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0435\u0435]","syntax":"","desc":""},"PDF_get_majorversion":{"version":"(PHP 4 >= 4.2.0, PECL pdflib >= 1.0.0)","shortdesc":"Get major version number [deprecated]","syntax":"\n    int <b>PDF_get_majorversion<\/b>\n     ( void\n    )","desc":"\n   This function is deprecated since PDFlib version 5, use\n    PDF_get_value() with the parameter\n   major instead.\n  "},"PDF_get_minorversion":{"version":"(PHP 4 >= 4.2.0, PECL pdflib >= 1.0.0)","shortdesc":"Get minor version number [deprecated]","syntax":"\n    int <b>PDF_get_minorversion<\/b>\n     ( void\n    )","desc":"\n   Returns the minor version number of the PDFlib version.\n  "},"PDF_get_parameter":{"version":"(PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0)","shortdesc":"Get string parameter","syntax":"\n    string <b>PDF_get_parameter<\/b>\n     ( resource $p\n    , string $key\n    , float $modifier\n    )","desc":"\n    Gets the contents of some PDFlib parameter with string type.\n  "},"PDF_get_pdi_parameter":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"Get PDI string parameter [deprecated]","syntax":"\n    string <b>PDF_get_pdi_parameter<\/b>\n     ( resource $p\n    , string $key\n    , int $doc\n    , int $page\n    , int $reserved\n    )","desc":"\n   Gets the contents of a PDI document parameter with string type.\n  "},"PDF_get_pdi_value":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"Get PDI numerical parameter [deprecated]","syntax":"\n    float <b>PDF_get_pdi_value<\/b>\n     ( resource $p\n    , string $key\n    , int $doc\n    , int $page\n    , int $reserved\n    )","desc":"\n    Gets the contents of a PDI document parameter with numerical type.\n  "},"PDF_get_value":{"version":"(PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0)","shortdesc":"Get numerical parameter","syntax":"\n    float <b>PDF_get_value<\/b>\n     ( resource $p\n    , string $key\n    , float $modifier\n    )","desc":"\n    Gets the value of some PDFlib parameter with numerical type.\n  "},"PDF_info_font":{"version":"(PECL pdflib >= 2.1.0)","shortdesc":"Query detailed information about a loaded font","syntax":"\n   float <b>PDF_info_font<\/b>\n    ( resource $pdfdoc\n   , int $font\n   , string $keyword\n   , string $optlist\n   )","desc":"\n   Queries detailed information about a loaded font.\n  "},"PDF_info_matchbox":{"version":"(PECL pdflib >= 2.1.0)","shortdesc":"Query matchbox information","syntax":"\n    float <b>PDF_info_matchbox<\/b>\n     ( resource $pdfdoc\n    , string $boxname\n    , int $num\n    , string $keyword\n    )","desc":"\n   Queries information about a matchbox on the current page.\n  "},"PDF_info_table":{"version":"(PECL pdflib >= 2.1.0)","shortdesc":"Retrieve table information","syntax":"\n    float <b>PDF_info_table<\/b>\n     ( resource $pdfdoc\n    , int $table\n    , string $keyword\n    )","desc":"\n   Retrieves table information related to the most recently placed\n   table instance.\n  "},"PDF_info_textflow":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Query textflow state","syntax":"\n    float <b>PDF_info_textflow<\/b>\n     ( resource $pdfdoc\n    , int $textflow\n    , string $keyword\n    )","desc":"\n   Queries the current state of a textflow.\n  "},"PDF_info_textline":{"version":"(PECL pdflib >= 2.1.0)","shortdesc":"Perform textline formatting and query metrics","syntax":"\n    float <b>PDF_info_textline<\/b>\n     ( resource $pdfdoc\n    , string $text\n    , string $keyword\n    , string $optlist\n    )","desc":"\n   Performs textline formatting and queries the resulting metrics.\n  "},"PDF_initgraphics":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"Reset graphic state","syntax":"\n    bool <b>PDF_initgraphics<\/b>\n     ( resource $p\n    )","desc":"\n   Reset all color and graphics state parameters to their defaults.\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_lineto":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Draw a line","syntax":"\n    bool <b>PDF_lineto<\/b>\n     ( resource $p\n    , float $x\n    , float $y\n    )","desc":"\n   Draws a line from the current point to another point. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_load_3ddata":{"version":"(PECL pdflib >= 2.1.0)","shortdesc":"Load 3D model","syntax":"\n    int <b>PDF_load_3ddata<\/b>\n     ( resource $pdfdoc\n    , string $filename\n    , string $optlist\n    )","desc":"\n   Loads a 3D model from a disk-based or virtual file.\n  "},"PDF_load_font":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Search and prepare font","syntax":"\n    int <b>PDF_load_font<\/b>\n     ( resource $pdfdoc\n    , string $fontname\n    , string $encoding\n    , string $optlist\n    )","desc":"\n   Searches for a font and prepares it for later use.\n  "},"PDF_load_iccprofile":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Search and prepare ICC profile","syntax":"\n    int <b>PDF_load_iccprofile<\/b>\n     ( resource $pdfdoc\n    , string $profilename\n    , string $optlist\n    )","desc":"\n   Searches for an ICC profile, and prepares it for later use.\n  "},"PDF_load_image":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Open image file","syntax":"\n    int <b>PDF_load_image<\/b>\n     ( resource $pdfdoc\n    , string $imagetype\n    , string $filename\n    , string $optlist\n    )","desc":"\n   Opens a disk-based or virtual image file subject to various options.\n  "},"PDF_makespotcolor":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"Make spot color","syntax":"\n    int <b>PDF_makespotcolor<\/b>\n     ( resource $p\n    , string $spotname\n    )","desc":"\n   Finds a built-in spot color name, or makes a named spot color from the\n   current fill color. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_moveto":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Set current point","syntax":"\n    bool <b>PDF_moveto<\/b>\n     ( resource $p\n    , float $x\n    , float $y\n    )","desc":"\n   Sets the current point for graphics output. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_new":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 PDFlib","syntax":"\n    resource <b>PDF_new<\/b>\n     ( void\n    )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 PDFlib \u0441 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u043c\u0438 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e.\n  "},"PDF_open_ccitt":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"Open raw CCITT image [deprecated]","syntax":"\n    int <b>PDF_open_ccitt<\/b>\n     ( resource $pdfdoc\n    , string $filename\n    , int $width\n    , int $height\n    , int $BitReverse\n    , int $k\n    , int $Blackls1\n    )","desc":"\n   Opens a raw CCITT image.\n  "},"PDF_open_file":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 PDF-\u0444\u0430\u0439\u043b [\u0443\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0435\u0435]","syntax":"\n    bool <b>PDF_open_file<\/b>\n     ( resource $p\n    , string $filename\n    )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 PDF-\u0444\u0430\u0439\u043b \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0438\u043c\u0435\u043d\u0438 \u0444\u0430\u0439\u043b\u0430.\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_open_gif":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 GIF-\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 [\u0443\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0435\u0435]","syntax":"","desc":""},"PDF_open_image_file":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Read image from file [deprecated]","syntax":"\n    int <b>PDF_open_image_file<\/b>\n     ( resource $p\n    , string $imagetype\n    , string $filename\n    , string $stringparam\n    , int $intparam\n    )","desc":"\n    Opens an image file.\n  "},"PDF_open_image":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"Use image data [deprecated]","syntax":"\n    int <b>PDF_open_image<\/b>\n     ( resource $p\n    , string $imagetype\n    , string $source\n    , string $data\n    , int $length\n    , int $width\n    , int $height\n    , int $components\n    , int $bpc\n    , string $params\n    )","desc":"\n   Uses image data from a variety of data sources.\n  "},"PDF_open_jpeg":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 JPEG-\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 [\u0443\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0435\u0435]","syntax":"","desc":""},"PDF_open_memory_image":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Open image created with PHP's image functions [not supported]","syntax":"\n   int <b>PDF_open_memory_image<\/b>\n    ( resource $p\n   , resource $image\n   )","desc":"\n   This function is not supported by PDFlib GmbH.\n  "},"PDF_open_pdi_document":{"version":"(PECL pdflib >= 2.1.0)","shortdesc":"Prepare a pdi document","syntax":"\n   int <b>PDF_open_pdi_document<\/b>\n    ( resource $p\n   , string $filename\n   , string $optlist\n   )","desc":"\n   Open a disk-based or virtual PDF document and prepare it for later use.\n  "},"PDF_open_pdi_page":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"Prepare a page","syntax":"\n       int <b>PDF_open_pdi_page<\/b>\n        ( resource $p\n       , int $doc\n       , int $pagenumber\n       , string $optlist\n       )","desc":"\n      Prepares a page for later use with  PDF_fit_pdi_page().\n    "},"PDF_open_pdi":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"Open PDF file [deprecated]","syntax":"\n    int <b>PDF_open_pdi<\/b>\n     ( resource $pdfdoc\n    , string $filename\n    , string $optlist\n    , int $len\n    )","desc":"\n    Opens a disk-based or virtual PDF document and prepares it for later use.\n   "},"PDF_open_tiff":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 TIFF-\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 [\u0443\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0435\u0435]","syntax":"","desc":""},"PDF_pcos_get_number":{"version":"(PECL pdflib >= 2.1.0)","shortdesc":"Get value of pCOS path with type number or boolean","syntax":"\n    float <b>PDF_pcos_get_number<\/b>\n     ( resource $p\n    , int $doc\n    , string $path\n    )","desc":"\n    Gets the value of a pCOS path with type number or boolean.\n  "},"PDF_pcos_get_stream":{"version":"(PECL pdflib >= 2.1.0)","shortdesc":"Get contents of pCOS path with type stream, fstream, or string","syntax":"\n    string <b>PDF_pcos_get_stream<\/b>\n     ( resource $p\n    , int $doc\n    , string $optlist\n    , string $path\n    )","desc":"\n    Gets the contents of a pCOS path with type stream, fstream, or\n    string.\n  "},"PDF_pcos_get_string":{"version":"(PECL pdflib >= 2.1.0)","shortdesc":"Get value of pCOS path with type name, string, or boolean","syntax":"\n    string <b>PDF_pcos_get_string<\/b>\n     ( resource $p\n    , int $doc\n    , string $path\n    )","desc":"\n   Gets the value of a pCOS path with type name, string, or boolean.\n  "},"PDF_place_image":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Place image on the page [deprecated]","syntax":"\n    bool <b>PDF_place_image<\/b>\n     ( resource $pdfdoc\n    , int $image\n    , float $x\n    , float $y\n    , float $scale\n    )","desc":"\n   Places an image and scales it. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_place_pdi_page":{"version":"(PHP 4 >= 4.0.6, PECL pdflib >= 1.0.0)","shortdesc":"Place PDF page [deprecated]","syntax":"\n    bool <b>PDF_place_pdi_page<\/b>\n     ( resource $pdfdoc\n    , int $page\n    , float $x\n    , float $y\n    , float $sx\n    , float $sy\n    )","desc":"\n   Places a PDF page and scales it. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_process_pdi":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Process imported PDF document","syntax":"\n    int <b>PDF_process_pdi<\/b>\n     ( resource $pdfdoc\n    , int $doc\n    , int $page\n    , string $optlist\n    )","desc":"\n    Processes certain elements of an imported PDF document.\n   "},"PDF_rect":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"\u0420\u0438\u0441\u0443\u0435\u0442 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a","syntax":"\n    bool <b>PDF_rect<\/b>\n     ( resource $p\n    , float $x\n    , float $y\n    , float $width\n    , float $height\n    )","desc":"\n   \u0420\u0438\u0441\u0443\u0435\u0442 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_restore":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Restore graphics state","syntax":"\n    bool <b>PDF_restore<\/b>\n     ( resource $p\n    )","desc":"\n   Restores the most recently saved graphics state. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_resume_page":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Resume page","syntax":"\n    bool <b>PDF_resume_page<\/b>\n     ( resource $pdfdoc\n    , string $optlist\n    )","desc":"\n   Resumes a page to add more content to it.\n  "},"PDF_rotate":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"\u041f\u043e\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u0435\u0442 \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442","syntax":"\n    bool <b>PDF_rotate<\/b>\n     ( resource $p\n    , float $phi\n    )","desc":"\n   \u041f\u043e\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u0435\u0442 \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_save":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Save graphics state","syntax":"\n    bool <b>PDF_save<\/b>\n     ( resource $p\n    )","desc":"\n   Saves the current graphics state. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_scale":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"\u041c\u0430\u0441\u0448\u0442\u0430\u0431\u0438\u0440\u0443\u0435\u0442 \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442","syntax":"\n    bool <b>PDF_scale<\/b>\n     ( resource $p\n    , float $sx\n    , float $sy\n    )","desc":"\n   \u041c\u0430\u0441\u0448\u0442\u0430\u0431\u0438\u0440\u0443\u0435\u0442 \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_set_border_color":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Set border color of annotations [deprecated]","syntax":"\n    bool <b>PDF_set_border_color<\/b>\n     ( resource $p\n    , float $red\n    , float $green\n    , float $blue\n    )","desc":"\n   Sets the border color for all kinds of annotations. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_set_border_dash":{"version":"(PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0)","shortdesc":"Set border dash style of annotations [deprecated]","syntax":"\n    bool <b>PDF_set_border_dash<\/b>\n     ( resource $pdfdoc\n    , float $black\n    , float $white\n    )","desc":"\n   Sets the border dash style for all kinds of annotations. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_set_border_style":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Set border style of annotations [deprecated]","syntax":"\n    bool <b>PDF_set_border_style<\/b>\n     ( resource $pdfdoc\n    , string $style\n    , float $width\n    )","desc":"\n   Sets the border style for all kinds of annotations. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_set_char_spacing":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Set character spacing [deprecated]","syntax":"","desc":""},"PDF_set_duration":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Set duration between pages [deprecated]","syntax":"","desc":""},"PDF_set_gstate":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Activate graphics state object","syntax":"\n    bool <b>PDF_set_gstate<\/b>\n     ( resource $pdfdoc\n    , int $gstate\n    )","desc":"\n   Activates a graphics state object.\n  "},"PDF_set_horiz_scaling":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Set horizontal text scaling [deprecated]","syntax":"","desc":""},"PDF_set_info_author":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Fill the author document info field [deprecated]","syntax":"","desc":""},"PDF_set_info_creator":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Fill the creator document info field [deprecated]","syntax":"","desc":""},"PDF_set_info_keywords":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Fill the keywords document info field [deprecated]","syntax":"","desc":""},"PDF_set_info_subject":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Fill the subject document info field [deprecated]","syntax":"","desc":""},"PDF_set_info_title":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Fill the title document info field [deprecated]","syntax":"","desc":""},"PDF_set_info":{"version":"(PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0)","shortdesc":"Fill document info field","syntax":"\n    bool <b>PDF_set_info<\/b>\n     ( resource $p\n    , string $key\n    , string $value\n    )","desc":"\n   Fill document information field key with\n   value. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_set_layer_dependency":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Define relationships among layers","syntax":"\n    bool <b>PDF_set_layer_dependency<\/b>\n     ( resource $pdfdoc\n    , string $type\n    , string $optlist\n    )","desc":"\n   Defines hierarchical and group relationships among layers. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_set_leading":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Set distance between text lines [deprecated]","syntax":"","desc":""},"PDF_set_parameter":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Set string parameter","syntax":"\n    bool <b>PDF_set_parameter<\/b>\n     ( resource $p\n    , string $key\n    , string $value\n    )","desc":"\n   Sets some PDFlib parameter with string type. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_set_text_matrix":{"version":"(PHP 4 <= 4.0.4)","shortdesc":"Set text matrix [deprecated]","syntax":"","desc":""},"PDF_set_text_pos":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u0442\u0435\u043a\u0441\u0442\u0430","syntax":"\n    bool <b>PDF_set_text_pos<\/b>\n     ( resource $p\n    , float $x\n    , float $y\n    )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u0432\u044b\u0432\u043e\u0434\u0430 \u0442\u0435\u043a\u0441\u0442\u0430 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_set_text_rendering":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Determine text rendering [deprecated]","syntax":"","desc":""},"PDF_set_text_rise":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Set text rise [deprecated]","syntax":"","desc":""},"PDF_set_value":{"version":"(PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0)","shortdesc":"Set numerical parameter","syntax":"\n    bool <b>PDF_set_value<\/b>\n     ( resource $p\n    , string $key\n    , float $value\n    )","desc":"\n   Sets the value of some PDFlib parameter with numerical type. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_set_word_spacing":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Set spacing between words [deprecated]","syntax":"","desc":""},"PDF_setcolor":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"Set fill and stroke color","syntax":"\n    bool <b>PDF_setcolor<\/b>\n     ( resource $p\n    , string $fstype\n    , string $colorspace\n    , float $c1\n    , float $c2\n    , float $c3\n    , float $c4\n    )","desc":"\n   Sets the current color space and color. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_setdash":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Set simple dash pattern","syntax":"\n   bool <b>PDF_setdash<\/b>\n    ( resource $pdfdoc\n   , float $b\n   , float $w\n   )","desc":"\n    Sets the current dash pattern to b black\n    and w white units. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_setdashpattern":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Set dash pattern","syntax":"\n   bool <b>PDF_setdashpattern<\/b>\n    ( resource $pdfdoc\n   , string $optlist\n   )","desc":"\n    Sets a dash pattern defined by an option list. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_setflat":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Set flatness","syntax":"\n    bool <b>PDF_setflat<\/b>\n     ( resource $pdfdoc\n    , float $flatness\n    )","desc":"\n   Sets the flatness parameter. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_setfont":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"Set font","syntax":"\n   bool <b>PDF_setfont<\/b>\n    ( resource $pdfdoc\n   , int $font\n   , float $fontsize\n   )","desc":"\n   Sets the current font in the specified size, using a\n   font handle returned by  PDF_load_font().\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_setgray_fill":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Set fill color to gray [deprecated]","syntax":"\n    bool <b>PDF_setgray_fill<\/b>\n     ( resource $p\n    , float $g\n    )","desc":"\n   Sets the current fill color to a gray value between 0 and 1 inclusive.\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_setgray_stroke":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Set stroke color to gray [deprecated]","syntax":"\n    bool <b>PDF_setgray_stroke<\/b>\n     ( resource $p\n    , float $g\n    )","desc":"\n   Sets the current stroke color to a gray value between 0 and 1 inclusive.\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_setgray":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Set color to gray [deprecated]","syntax":"\n    bool <b>PDF_setgray<\/b>\n     ( resource $p\n    , float $g\n    )","desc":"\n   Sets the current fill and stroke color to a gray value between 0 and 1 inclusive. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_setlinecap":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Set linecap parameter","syntax":"\n    bool <b>PDF_setlinecap<\/b>\n     ( resource $p\n    , int $linecap\n    )","desc":"\n   Sets the linecap parameter to control the shape\n   at the end of a path with respect to stroking.\n  "},"PDF_setlinejoin":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Set linejoin parameter","syntax":"\n    bool <b>PDF_setlinejoin<\/b>\n     ( resource $p\n    , int $value\n    )","desc":"\n   Sets the linejoin parameter to specify the shape\n   at the corners of paths that are stroked. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_setlinewidth":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Set line width","syntax":"\n    bool <b>PDF_setlinewidth<\/b>\n     ( resource $p\n    , float $width\n    )","desc":"\n   Sets the current line width. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_setmatrix":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"Set current transformation matrix","syntax":"\n    bool <b>PDF_setmatrix<\/b>\n     ( resource $p\n    , float $a\n    , float $b\n    , float $c\n    , float $d\n    , float $e\n    , float $f\n    )","desc":"\n   Explicitly sets the current transformation matrix. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_setmiterlimit":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Set miter limit","syntax":"\n    bool <b>PDF_setmiterlimit<\/b>\n     ( resource $pdfdoc\n    , float $miter\n    )","desc":"\n   Sets the miter limit.\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_setpolydash":{"version":"(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)","shortdesc":"Set complicated dash pattern [deprecated]","syntax":"","desc":""},"PDF_setrgbcolor_fill":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Set fill rgb color values [deprecated]","syntax":"\n    bool <b>PDF_setrgbcolor_fill<\/b>\n     ( resource $p\n    , float $red\n    , float $green\n    , float $blue\n    )","desc":"\n   Sets the current fill color to the supplied RGB values. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_setrgbcolor_stroke":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Set stroke rgb color values [deprecated]","syntax":"\n    bool <b>PDF_setrgbcolor_stroke<\/b>\n     ( resource $p\n    , float $red\n    , float $green\n    , float $blue\n    )","desc":"\n   Sets the current stroke color to the supplied RGB values. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_setrgbcolor":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Set fill and stroke rgb color values [deprecated]","syntax":"\n    bool <b>PDF_setrgbcolor<\/b>\n     ( resource $p\n    , float $red\n    , float $green\n    , float $blue\n    )","desc":"\n   Sets the current fill and stroke color to the supplied RGB values.\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_shading_pattern":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Define shading pattern","syntax":"\n    int <b>PDF_shading_pattern<\/b>\n     ( resource $pdfdoc\n    , int $shading\n    , string $optlist\n    )","desc":"\n   Defines a shading pattern using a shading object.\n  "},"PDF_shading":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Define blend","syntax":"\n    int <b>PDF_shading<\/b>\n     ( resource $pdfdoc\n    , string $shtype\n    , float $x0\n    , float $y0\n    , float $x1\n    , float $y1\n    , float $c1\n    , float $c2\n    , float $c3\n    , float $c4\n    , string $optlist\n    )","desc":"\n   Defines a blend from the current fill color to another color.\n  "},"PDF_shfill":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Fill area with shading","syntax":"\n    bool <b>PDF_shfill<\/b>\n     ( resource $pdfdoc\n    , int $shading\n    )","desc":"\n   Fills an area with a shading, based on a shading object.\n  "},"PDF_show_boxed":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Output text in a box [deprecated]","syntax":"\n    int <b>PDF_show_boxed<\/b>\n     ( resource $p\n    , string $text\n    , float $left\n    , float $top\n    , float $width\n    , float $height\n    , string $mode\n    , string $feature\n    )","desc":"\n   This function is deprecated since PDFlib version 6, use\n    PDF_fit_textline() for single lines, or the\n    PDF_*_textflow() functions for multi-line formatting\n   instead.\n  "},"PDF_show_xy":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Output text at given position","syntax":"\n    bool <b>PDF_show_xy<\/b>\n     ( resource $p\n    , string $text\n    , float $x\n    , float $y\n    )","desc":"\n   Prints text in the current font. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_show":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Output text at current position","syntax":"\n    bool <b>PDF_show<\/b>\n     ( resource $pdfdoc\n    , string $text\n    )","desc":"\n   Prints text in the current font and size at\n   the current position. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_skew":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Skew the coordinate system","syntax":"\n    bool <b>PDF_skew<\/b>\n     ( resource $p\n    , float $alpha\n    , float $beta\n    )","desc":"\n   Skews the coordinate system in x and y direction by alpha\n   and beta degrees. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_stringwidth":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Return width of text","syntax":"\n    float <b>PDF_stringwidth<\/b>\n     ( resource $p\n    , string $text\n    , int $font\n    , float $fontsize\n    )","desc":"\n    Returns the width of text in an arbitrary font.\n  "},"PDF_stroke":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Stroke path","syntax":"\n    bool <b>PDF_stroke<\/b>\n     ( resource $p\n    )","desc":"\n   Strokes the path with the current color and line width, and clear it.\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f  \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"PDF_suspend_page":{"version":"(PECL pdflib >= 2.0.0)","shortdesc":"Suspend page","syntax":"\n    bool <b>PDF_suspend_page<\/b>\n     ( resource $pdfdoc\n    , string $optlist\n    )","desc":"\n   Suspends the current page so that it can later be resumed with\n    PDF_resume_page().\n  "},"PDF_translate":{"version":"(PHP 4, PECL pdflib >= 1.0.0)","shortdesc":"Set origin of coordinate system","syntax":"\n    bool <b>PDF_translate<\/b>\n     ( resource $p\n    , float $tx\n    , float $ty\n    )","desc":"\n    Translates the origin of the coordinate system.\n  "},"PDF_utf16_to_utf8":{"version":"(PECL pdflib >= 2.0.3)","shortdesc":"\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 UTF-16 \u0432 UTF-8","syntax":"\n    string <b>PDF_utf16_to_utf8<\/b>\n     ( resource $pdfdoc\n    , string $utf16string\n    )","desc":"\n   \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u0444\u043e\u0440\u043c\u0430\u0442\u0430 UTF-16 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442 UTF-8.\n  "},"PDF_utf32_to_utf16":{"version":"(PECL pdflib >= Unknown future)","shortdesc":"\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 UTF-32 \u0432 UTF-16","syntax":"\n    string <b>PDF_utf32_to_utf16<\/b>\n     ( resource $pdfdoc\n    , string $utf32string\n    , string $ordering\n    )","desc":"\n   \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u0444\u043e\u0440\u043c\u0430\u0442\u0430 UTF-32 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442 UTF-16.\n  "},"PDF_utf8_to_utf16":{"version":"(PECL pdflib >= 2.0.3)","shortdesc":"\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 UTF-8 \u0432 UTF-16","syntax":"\n    string <b>PDF_utf8_to_utf16<\/b>\n     ( resource $pdfdoc\n    , string $utf8string\n    , string $ordering\n    )","desc":"\n   \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u0444\u043e\u0440\u043c\u0430\u0442\u0430 UTF-8 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442 UTF-16.\n  "},"pfsockopen":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u0438\u043b\u0438 \u0441\u043e\u043a\u0435\u0442\u043e\u043c Unix \u0434\u043e\u043c\u0435\u043d\u0430","syntax":"\n   resource <b>pfsockopen<\/b>\n    ( string $hostname\n   [, int $port = -1\n   [, int &$errno\n   [, string &$errstr\n   [, float $timeout = ini_get(\"default_socket_timeout\")\n  ]]]] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u043e\u043b\u043d\u044b\u043c \u0430\u043d\u0430\u043b\u043e\u0433\u043e\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u0438  fsockopen() \u0441 \u0442\u043e\u0439 \u043b\u0438\u0448\u044c \u0440\u0430\u0437\u043d\u0438\u0446\u0435\u0439, \u0447\u0442\u043e \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u043d\u0435 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u043a\u0440\u0438\u043f\u0442\u0430.\n   \u042d\u0442\u043e \u0432\u0435\u0440\u0441\u0438\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0438  fsockopen() \u0441 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c\u044e \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f.\n  "},"pg_affected_rows":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u0442\u0440\u043e\u043d\u0443\u0442\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c \u0437\u0430\u043f\u0438\u0441\u0435\u0439 (\u043a\u043e\u0440\u0442\u0435\u0436\u0435\u0439)","syntax":"\n   int <b>pg_affected_rows<\/b>\n    ( resource $result\n   )","desc":"\n    pg_affected_rows() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u0440\u0442\u0435\u0436\u0435\u0439\n   (\u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439\/\u0437\u0430\u043f\u0438\u0441\u0435\u0439\/\u0440\u044f\u0434\u043e\u0432) \u0437\u0430\u0442\u0440\u043e\u043d\u0443\u0442\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c INSERT, \n   UPDATE, \u0438 DELETE\n   queries. \n  "},"pg_cancel_query":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n   \u041e\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n  ","syntax":"\n   bool <b>pg_cancel_query<\/b>\n    ( resource $connection\n   )","desc":"\n    pg_cancel_query() \u043e\u0442\u043c\u0435\u043d\u044f\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438\n    pg_send_query(),  pg_send_query_params()\n   \u0438\u043b\u0438  pg_send_execute(). \u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u043d\u043e\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 \n    pg_query().\n  "},"pg_client_encoding":{"version":"(PHP 4 >= 4.0.3, PHP 5)","shortdesc":"\n    \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u0430.\n  ","syntax":"\n   string <b>pg_client_encoding<\/b>\n    ([ resource $connection\n  ] )","desc":"\n   PostgreSQL \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0430\u0431\u043e\u0440\u043e\u0432 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432\n   \u043c\u0435\u0436\u0434\u0443 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c \u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c \u0434\u043b\u044f \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043e\u043a.\n    pg_client_encoding() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e\n   \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443 \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a\u0438, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0435\u0439 \u0441\u043e\u0431\u043e\u0439 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \n   \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 PostgreSQL.\n  "},"pg_close":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445 PostgreSQL","syntax":"\n   bool <b>pg_close<\/b>\n    ([ resource $connection\n  ] )","desc":"\n    pg_close() \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u043e\u0431\u044b\u0447\u043d\u043e\u0435 (\u043d\u0435\u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u043e\u0435) \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435\n   \u0441 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445 PostgreSQL, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u0443 connection.\n  "},"pg_connect":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445 PostgreSQL","syntax":"\n   resource <b>pg_connect<\/b>\n    ( string $connection_string\n   [, int $connect_type\n  ] )","desc":"\n    pg_connect() \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445 \n   PostgreSQL, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0435 \u0441\u0442\u0440\u043e\u043a\u043e\u0439 connection_string.\n  "},"pg_connection_busy":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0437\u0430\u043d\u044f\u0442\u043e \u043b\u0438 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0432 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442.\n  ","syntax":"\n   bool <b>pg_connection_busy<\/b>\n    ( resource $connection\n   )","desc":"\n    pg_connection_busy() \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u0437\u0430\u043d\u044f\u0442\u043e \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0432 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u0438\u043b\u0438 \u043d\u0435\u0442.\n   \u0421\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0437\u0430\u043d\u044f\u0442\u043e, \u043a\u043e\u0433\u0434\u0430 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u0435\u0449\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f. \u0424\u0443\u043d\u043a\u0446\u0438\u044f  pg_get_result() \n   \u0442\u0430\u043a\u0436\u0435 \u0431\u043b\u043e\u043a\u0438\u0440\u0443\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u043d\u0430 \u0432\u0440\u0435\u043c\u044f \u0441\u0432\u043e\u0435\u0433\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f.\n  "},"pg_connection_reset":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n   \u0421\u0431\u0440\u043e\u0441 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 (\u043f\u0435\u0440\u0435\u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435)\n  ","syntax":"\n   bool <b>pg_connection_reset<\/b>\n    ( resource $connection\n   )","desc":"\n    pg_connection_reset() \u0441\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435. \n   \u041c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0430 \u0434\u043b\u044f \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043e\u043a.\n  "},"pg_connection_status":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f\n  ","syntax":"\n   int <b>pg_connection_status<\/b>\n    ( resource $connection\n   )","desc":"\n    pg_connection_status() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0433\u043e \n   \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f connection.\n  "},"pg_convert":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\n   \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0432 \u043f\u0440\u0438\u0435\u043c\u043b\u0435\u043c\u044b\u0435 \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0432 SQL \u0437\u0430\u043f\u0440\u043e\u0441\u0430\u0445\n  ","syntax":"\n   array <b>pg_convert<\/b>\n    ( resource $connection\n   , string $table_name\n   , array $assoc_array\n   [, int $options = 0\n  ] )","desc":"\n    pg_convert() \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0438 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438\u0437\n   assoc_array \u0432 \u043f\u0440\u0438\u0435\u043c\u043b\u0435\u043c\u044b\u0435 \u0434\u043b\u044f SQL \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e, \n   \u0447\u0442\u043e\u0431\u044b \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043e\u0432\u0430\u043b\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u0430 table_name, \u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \n   \u043a\u043e\u043b\u043e\u043d\u043e\u043a \u0432 \u043d\u0435\u0439 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043d\u0435 \u043c\u0435\u043d\u044c\u0448\u0435, \u0447\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435 assoc_array. \n   \u0418\u043c\u0435\u043d\u0430 \u043a\u043e\u043b\u043e\u043d\u043e\u043a \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 table_name \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0442\u044c \u0441 \n   \u043a\u043b\u044e\u0447\u0430\u043c\u0438 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 assoc_array, \u0442\u0438\u043f\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \n   \u0442\u0430\u043a\u0436\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0442\u044c \u0441 \u0442\u0438\u043f\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043a\u043e\u043b\u043e\u043d\u043e\u043a. \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0434\u0430\u0447\u043d\u043e\u0439 \n   \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, \u0438\u043d\u0430\u0447\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 FALSE.\n  "},"pg_copy_from":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n   \u0412\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0443\n  ","syntax":"\n   bool <b>pg_copy_from<\/b>\n    ( resource $connection\n   , string $table_name\n   , array $rows\n   [, string $delimiter\n   [, string $null_as\n  ]] )","desc":"\n    pg_copy_from() \u0432\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u0438 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 rows. \n   \u0412 \u0445\u043e\u0434\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442 SQL \u043a\u043e\u043c\u0430\u043d\u0434\u0443 COPY FROM \u0434\u043b\u044f \u0432\u0441\u0442\u0430\u0432\u043a\u0438 \u0437\u0430\u043f\u0438\u0441\u0435\u0439.\n  "},"pg_copy_to":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n   \u041a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\n  ","syntax":"\n   array <b>pg_copy_to<\/b>\n    ( resource $connection\n   , string $table_name\n   [, string $delimiter\n   [, string $null_as\n  ]] )","desc":"\n    pg_copy_to() \u043a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0432 \u043c\u0430\u0441\u0441\u0438\u0432.\n   \u0414\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u043f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 SQL COPY TO.\n  "},"pg_dbname":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0438\u043c\u044f \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445","syntax":"\n   string <b>pg_dbname<\/b>\n    ([ resource $connection\n  ] )","desc":"\n    pg_dbname() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0439\n   \u0440\u0435\u0441\u0443\u0440\u0441\u0443 PostgreSQL connection.\n  "},"pg_delete":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\n   \u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u0438\n  ","syntax":"\n   mixed <b>pg_delete<\/b>\n    ( resource $connection\n   , string $table_name\n   , array $assoc_array\n   [, int $options = PGSQL_DML_EXEC\n  ] )","desc":"\n    pg_delete() \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0437\u0430\u043f\u0438\u0441\u0438, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043a\u043b\u044e\u0447\u0430\u043c \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\n   \u043c\u0430\u0441\u0441\u0438\u0432\u0430 assoc_array. \u0415\u0441\u043b\u0438 \u0437\u0430\u0434\u0430\u043d \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 options,\n   \u0442\u043e \u043c\u0430\u0441\u0441\u0438\u0432 assoc_array \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\n   \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439  pg_convert(), \u0432\u044b\u0437\u0432\u0430\u043d\u043d\u043e\u0439 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c\u0438\n   \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438.\n  "},"pg_end_copy":{"version":"(PHP 4 >= 4.0.3, PHP 5)","shortdesc":"\u0421\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0441 \u0431\u044d\u043a\u0435\u043d\u0434\u043e\u043c PostgreSQL","syntax":"\n   bool <b>pg_end_copy<\/b>\n    ([ resource $connection\n  ] )","desc":"\n    pg_end_copy() \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043c\u0435\u0436\u0434\u0443 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u043e\u043c\n   PostgreSQL (\u043e\u0431\u044b\u0447\u043d\u043e \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u043c \u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440\u0430) \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c PostgreSQL \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f\n   \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445, \u0441\u043e\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u044b\u0445 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0438  pg_put_line().\n   \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435  pg_end_copy() \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e,\n   \u0447\u0442\u043e\u0431\u044b \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u0440\u0430\u0441\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0430\u0446\u0438\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 PostgreSQL \u0441 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u043e\u043c\n   \u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0430\u0445.\n  "},"pg_escape_bytea":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n   \u042d\u043a\u0440\u0430\u043d\u0438\u0440\u0443\u0435\u0442 \u0441\u043f\u0435\u0446\u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u0434\u043b\u044f \u0432\u0441\u0442\u0430\u0432\u043a\u0438 \u0432 \u043f\u043e\u043b\u0435 \u0442\u0438\u043f\u0430 bytea\n  ","syntax":"\n   string <b>pg_escape_bytea<\/b>\n    ([ resource $connection\n   ], string $data\n   )","desc":"\n    pg_escape_bytea() \u044d\u043a\u0440\u0430\u043d\u0438\u0440\u0443\u0435\u0442 \u0441\u043f\u0435\u0446\u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \n   \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u0430 bytea. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u044d\u043a\u0440\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443.\n  "},"pg_escape_identifier":{"version":"(PHP 5 >= 5.4.4)","shortdesc":"\n   Escape a identifier for insertion into a text field\n  ","syntax":"\n   string <b>pg_escape_identifier<\/b>\n    ([ resource $connection\n   ], string $data\n   )","desc":"\n    pg_escape_identifier() escapes a identifier\n   (e.g. table, field names) for quering the database.  It returns an\n   escaped identifier string for PostgreSQL\n   server.  pg_escape_identifier() adds double\n   quotes before and after data. Users should not add double\n   quotes. Use of this function is recommended for identifier\n   parameters in query. For SQL literals (i.e. parameters except\n   bytea),  pg_escape_literal()\n   or  pg_escape_string() muse be used. For bytea\n   type fields,  pg_escape_bytea() must be used\n   instead.\n  "},"pg_escape_literal":{"version":"(PHP 5 >= 5.4.4)","shortdesc":"\n   Escape a literal for insertion into a text field\n  ","syntax":"\n   string <b>pg_escape_literal<\/b>\n    ([ resource $connection\n   ], string $data\n   )","desc":"\n    pg_escape_literal() escapes a literal for\n   querying the PostgreSQL database. It returns an escaped literal in\n   the PostgreSQL format.  pg_escape_literal() adds\n   quotes before and after data. Users should not add quotes. Use of\n   this function is recommended instead\n   of  pg_escape_string().  If the type of the\n   column is bytea,  pg_escape_bytea() must be used\n   instead. For escaping identifiers (e.g. table, field\n   names),  pg_escape_identifier() must be used.\n  "},"pg_escape_string":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n    \u042d\u043a\u0440\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u043f\u0435\u0446\u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430\n  ","syntax":"\n   string <b>pg_escape_string<\/b>\n    ([ resource $connection\n   ], string $data\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  pg_escape_string() \u044d\u043a\u0440\u0430\u043d\u0438\u0440\u0443\u0435\u0442 \u0441\u043f\u0435\u0446\u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0434\u043b\u044f \n   \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445. \u041e\u043d\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u044d\u043a\u0440\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \n   \u0444\u043e\u0440\u043c\u0430\u0442\u0435 PostgreSQL. \u0424\u0443\u043d\u043a\u0446\u0438\u044f  pg_escape_string() \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f\n   \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0441\u043f\u043e\u0441\u043e\u0431\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f SQL \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0434\u043b\u044f PostgreSQL, \u0432 \u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043a\u0430\u043a\n    addslashes() \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0441 PostgreSQL.\n   \u0415\u0441\u043b\u0438 \u0442\u0438\u043f \u0441\u0442\u043e\u043b\u0431\u0446\u0430\n   bytea, \u0442\u043e \u0434\u043e\u043b\u0436\u043d\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f  pg_escape_bytea()\n   \u0432\u043c\u0435\u0441\u0442\u043e pg_escape_string. \u0424\u0443\u043d\u043a\u0446\u0438\u044f  pg_escape_identifier() \u0434\u043e\u043b\u0436\u043d\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f\n   \u044d\u043a\u0440\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u043e\u0432 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0438\u043c\u0435\u043d\u0430 \u0442\u0430\u0431\u043b\u0438\u0446 \u0438\u043b\u0438 \u043f\u043e\u043b\u0435\u0439).\n  "},"pg_execute":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0440\u0430\u043d\u0435\u0435 \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438 \u0436\u0434\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442","syntax":"\n   resource <b>pg_execute<\/b>\n    ([ resource $connection\n   ], string $stmtname\n   , array $params\n   )","desc":"\n   \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0440\u0430\u043d\u0435\u0435 \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \n   \u0438 \u0436\u0434\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442. \n  "},"pg_fetch_all_columns":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0432\u0441\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u0437 \u043e\u0434\u043d\u043e\u0439 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438 \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u0442 \u0438\u0445 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432","syntax":"\n   array <b>pg_fetch_all_columns<\/b>\n    ( resource $result\n   [, int $column = 0\n  ] )","desc":"\n    pg_fetch_all_columns() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0432\u0441\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \n   \u043e\u0434\u043d\u043e\u0439 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n  "},"pg_fetch_all":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0432\u0441\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438 \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u0442 \u0438\u0445 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432","syntax":"\n   array <b>pg_fetch_all<\/b>\n    ( resource $result\n   )","desc":"\n    pg_fetch_all() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \n   \u0432\u0441\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n  "},"pg_fetch_array":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0432 \u0432\u0438\u0434\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u0430","syntax":"\n   array <b>pg_fetch_array<\/b>\n    ( resource $result\n   [, int $row\n   [, int $result_type = PGSQL_BOTH\n  ]] )","desc":"\n    pg_fetch_array() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 (\u0437\u0430\u043f\u0438\u0441\u0438).\n  "},"pg_fetch_assoc":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438 \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432","syntax":"\n   array <b>pg_fetch_assoc<\/b>\n    ( resource $result\n   [, int $row\n  ] )","desc":"\n    pg_fetch_assoc() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \n   \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u0437 \u0441\u0442\u0440\u043e\u043a\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n  "},"pg_fetch_object":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0432\u0438\u0434\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430","syntax":"\n   object <b>pg_fetch_object<\/b>\n    ( resource $result\n   [, int $row\n   [, int $result_type = PGSQL_ASSOC\n  ]] )\n\n   object <b>pg_fetch_object<\/b>\n    ( resource $result\n   [, int $row\n   [, string $class_name\n   [, array $params\n  ]]] )\n","desc":"\n    pg_fetch_object() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442, \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \n   \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u0438\u043c\u0435\u043d\u0430\u043c \u043f\u043e\u043b\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438. \u0422\u0430\u043a\u0436\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440  \n   \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0435\u0433\u043e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0443.\n  "},"pg_fetch_result":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u044c \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430","syntax":"\n   string <b>pg_fetch_result<\/b>\n    ( resource $result\n   , int $row\n   , mixed $field\n   )\n\n   string <b>pg_fetch_result<\/b>\n    ( resource $result\n   , mixed $field\n   )\n","desc":"\n    pg_fetch_result() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u044f\u0447\u0435\u0439\u043a\u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \n   \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n  "},"pg_fetch_row":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438 \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432","syntax":"\n   array <b>pg_fetch_row<\/b>\n    ( resource $result\n   [, int $row\n   \n  ] )","desc":"\n    pg_fetch_row() \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u043e\u0434\u043d\u0443 \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \n   \u0437\u0430\u043f\u0440\u043e\u0441\u0430 result.\n  "},"pg_field_is_null":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043f\u043e\u043b\u044f \u043d\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 SQL NULL","syntax":"\n   int <b>pg_field_is_null<\/b>\n    ( resource $result\n   , int $row\n   , mixed $field\n   )\n\n   int <b>pg_field_is_null<\/b>\n    ( resource $result\n   , mixed $field\n   )\n","desc":"\n    pg_field_is_null() \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043b\u0438 \u044f\u0447\u0435\u0439\u043a\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \n   \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 SQL NULL.\n  "},"pg_field_name":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u044f","syntax":"\n   string <b>pg_field_name<\/b>\n    ( resource $result\n   , int $field_number\n   )","desc":"\n    pg_field_name() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u043f\u043e\u043b\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \n   \u0437\u0430\u043f\u0440\u043e\u0441\u0430 result \u0441 \u043f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u044b\u043c \u043d\u043e\u043c\u0435\u0440\u043e\u043c \n   field_number. \u041d\u0443\u043c\u0435\u0440\u0430\u0446\u0438\u044f \u043f\u043e\u043b\u0435\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 \n   \u043d\u0443\u043b\u044f.\n  "},"pg_field_num":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u044b\u0439 \u043d\u043e\u043c\u0435\u0440 \u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044f","syntax":"\n   int <b>pg_field_num<\/b>\n    ( resource $result\n   , string $field_name\n   )","desc":"\n    pg_field_num() \u0432\u0435\u0440\u043d\u0435\u0442 \u043f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u044b\u0439 \u043d\u043e\u043c\u0435\u0440 \u043f\u043e\u043b\u044f \n   \u0441 \u0438\u043c\u0435\u043d\u0435\u043c field_name \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \n   result.\n  "},"pg_field_prtlen":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0435\u0447\u0430\u0442\u0430\u0435\u043c\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432","syntax":"\n   int <b>pg_field_prtlen<\/b>\n    ( resource $result\n   , int $row_number\n   , mixed $field_name_or_number\n   )\n\n   int <b>pg_field_prtlen<\/b>\n    ( resource $result\n   , mixed $field_name_or_number\n   )\n","desc":"\n    pg_field_prtlen() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u043b\u0438\u043d\u0443 \u0441\u0442\u0440\u043e\u043a\u0438 \n   (\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432) \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044f \u043f\u0440\u0438 \u0432\u044b\u0432\u043e\u0434\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 result. \u0421\u0442\u0440\u043e\u043a\u0438 \u043d\u0443\u043c\u0435\u0440\u0443\u044e\u0442\u0441\u044f \n   \u0441 \u043d\u0443\u043b\u044f. \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u0435\u0440\u043d\u0435\u0442 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"pg_field_size":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0430\u0437\u043c\u0435\u0440 \u043f\u043e\u043b\u044f\n  ","syntax":"\n   int <b>pg_field_size<\/b>\n    ( resource $result\n   , int $field_number\n   )","desc":"\n    pg_field_size() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043c \u043f\u0430\u043c\u044f\u0442\u0438 (\u0432 \n   \u0431\u0430\u0439\u0442\u0430\u0445), \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u043c\u044b\u0439 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u043f\u043e\u043b\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 PostgreSQL \n   result.\n  "},"pg_field_table":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u043b\u0438 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0442\u0430\u0431\u043b\u0438\u0446\u044b, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0439 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0435 \u043f\u043e\u043b\u0435","syntax":"\n   mixed <b>pg_field_table<\/b>\n    ( resource $result\n   , int $field_number\n   [, bool $oid_only = false\n  ] )","desc":"\n    pg_field_table() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u044b, \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0438\u0442 \n   \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0435 \u043f\u043e\u043b\u0435. \u0415\u0441\u043b\u0438 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430 oid_only \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442\u0441\u044f \n   TRUE, \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u0435\u0440\u043d\u0435\u0442 oid-\u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0442\u0430\u0431\u043b\u0438\u0446\u044b.\n  "},"pg_field_type_oid":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0442\u0438\u043f\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044f\n  ","syntax":"\n   int <b>pg_field_type_oid<\/b>\n    ( resource $result\n   , int $field_number\n   )","desc":"\n    pg_field_type_oid() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0446\u0435\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \n   \u0431\u0430\u0437\u043e\u0432\u043e\u0433\u043e \u0442\u0438\u043f\u0430 (OID) \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 result \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c \n   field_number.\n  "},"pg_field_type":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u0442\u0438\u043f\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044f\n  ","syntax":"\n   string <b>pg_field_type<\/b>\n    ( resource $result\n   , int $field_number\n   )","desc":"\n    pg_field_type() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0443\u044e \u0438\u043c\u044f \n   \u0431\u0430\u0437\u043e\u0432\u043e\u0433\u043e \u0442\u0438\u043f\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 result \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c \n   field_number.\n  "},"pg_free_result":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u041e\u0447\u0438\u0441\u0442\u043a\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438 \u043e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u043f\u0430\u043c\u044f\u0442\u0438","syntax":"\n   bool <b>pg_free_result<\/b>\n    ( resource $result\n   )","desc":"\n    pg_free_result()  \u043e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u0435\u0442 \u043f\u0430\u043c\u044f\u0442\u044c, \u0437\u0430\u043d\u044f\u0442\u0443\u044e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c \n   \u0437\u0430\u043f\u0440\u043e\u0441\u0442\u0430 PostgreSQL resource. \n  "},"pg_get_notify":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 SQL NOTIFY \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f","syntax":"\n   array <b>pg_get_notify<\/b>\n    ( resource $connection\n   [, int $result_type\n  ] )","desc":"\n    pg_get_notify() \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f, \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \n   \u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439 SQL NOTIFY. \u0414\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \n   \u043a\u043e\u043c\u0430\u043d\u0434\u0443 SQL LISTEN.\n  "},"pg_get_pid":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 ID \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0411\u0414","syntax":"\n   int <b>pg_get_pid<\/b>\n    ( resource $connection\n   )","desc":"\n    pg_get_pid() \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 PID \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445. PID \u043f\u043e\u043b\u0435\u0437\u0435\u043d, \n   \u043a\u043e\u0433\u0434\u0430 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c, \u043a\u0430\u043a\u043e\u0439 \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u043b NOTIFY \n   \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u043f\u0440\u0438\u043d\u044f\u0442\u043e\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439  pg_get_notify() (\u0442\u043e\u0447\u043d\u0435\u0435 \u0443\u0437\u043d\u0430\u0442\u044c, \n   \u0441\u0435\u0440\u0432\u0435\u0440 \u0435\u0433\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u043b \u0438\u043b\u0438 \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u0434\u0440\u0443\u0433\u043e\u0439 \u043f\u0440\u043e\u0446\u0435\u0441\u0441).\n  "},"pg_get_result":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430\n  ","syntax":"\n   resource <b>pg_get_result<\/b>\n    ([ resource $connection\n  ] )","desc":"\n    pg_get_result() \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0440\u0435\u0441\u0443\u0440\u0441 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0433\u043e\n   \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u043d\u043e\u0433\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438  pg_send_query(), \n    pg_send_query_params() \u0438\u043b\u0438  pg_send_execute(). \n  "},"pg_host":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u0445\u043e\u0441\u0442\u0430, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044e\n  ","syntax":"\n   string <b>pg_host<\/b>\n    ([ resource $connection\n  ] )","desc":"\n    pg_host()  \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u0445\u043e\u0441\u0442\u0430, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c \n   \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0435 PostgreSQL \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \n   connection. \n  "},"pg_insert":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\n   \u0417\u0430\u043d\u043e\u0441\u0438\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445\n  ","syntax":"\n   mixed <b>pg_insert<\/b>\n    ( resource $connection\n   , string $table_name\n   , array $assoc_array\n   [, int $options = PGSQL_DML_EXEC\n  ] )","desc":"\n    pg_insert() \u0432\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \n   assoc_array \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0443 table_name. \n   \u0415\u0441\u043b\u0438 \u0437\u0430\u0434\u0430\u043d \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 options, \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \n   \u0431\u0443\u0434\u0443\u0442 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439  pg_convert()\n   \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 \u0438\u0437 \u044d\u0442\u043e\u0433\u043e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430.\n  "},"pg_last_error":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u0435\u0434\u0448\u0435\u0439 \u043e\u0448\u0438\u0431\u043a\u0435 \u043d\u0430 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0438 \u0441 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445","syntax":"\n   string <b>pg_last_error<\/b>\n    ([ resource $connection\n  ] )","desc":"\n    pg_last_error() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043e\u0448\u0438\u0431\u043a\u0435 \n   \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0438 connection. \n  "},"pg_last_notice":{"version":"(PHP 4 >= 4.0.6, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0435 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 PostgreSQL \n  ","syntax":"\n   string <b>pg_last_notice<\/b>\n    ( resource $connection\n   )","desc":"\n    pg_last_notice() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0435 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \n   \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c PostgreSQL \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0438 connection. \n   \u0412 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0441\u043b\u0443\u0447\u0430\u044f\u0445 \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 \n   \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0442\u0438\u043f\u0430 SERIAL.\n  "},"pg_last_oid":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 OID \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0439 \u0432 \u0431\u0430\u0437\u0443 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   string <b>pg_last_oid<\/b>\n    ( resource $result\n   )","desc":"\n    pg_last_oid() \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \n   OID, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u0432\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0439 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \n   \u0441\u0442\u0440\u043e\u043a\u0435.\n  "},"pg_lo_close":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u043e\u0431\u044a\u0435\u043a\u0442","syntax":"\n   bool <b>pg_lo_close<\/b>\n    ( resource $large_object\n   )","desc":"\n    pg_lo_close() \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u043e\u0431\u044a\u0435\u043a\u0442.\n   large_object - \u0440\u0435\u0441\u0443\u0440\u0441 \u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430, \n   \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439  pg_lo_open(). \n  "},"pg_lo_create":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u043e\u0431\u044a\u0435\u043a\u0442","syntax":"\n   int <b>pg_lo_create<\/b>\n    ([ resource $connection\n   [, mixed $object_id\n  ]] )\n\n   int <b>pg_lo_create<\/b>\n    ( mixed $object_id\n   )\n","desc":"\n    pg_lo_create() \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \n   \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0435\u0433\u043e OID. \u0420\u0435\u0436\u0438\u043c\u044b \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \n   PostgreSQL INV_READ, INV_WRITE, \n   \u0438 INV_ARCHIVE \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442\u0441\u044f, \u043e\u0431\u044a\u0435\u043a\u0442 \u0432\u0441\u0435\u0433\u0434\u0430 \n   \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u0441 \u0434\u043e\u0441\u0442\u0443\u043f\u043e\u043c \u043d\u0430 \u0447\u0442\u0435\u043d\u0438\u0435 \u0438 \u0437\u0430\u043f\u0438\u0441\u044c. \u0420\u0435\u0436\u0438\u043c INV_ARCHIVE \n   \u0443\u0431\u0440\u0430\u043d \u0438\u0437 PostgreSQL \u0432\u0435\u0440\u0441\u0438\u0439 6.3 \u0438 \u0432\u044b\u0448\u0435.\n  "},"pg_lo_export":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0412\u044b\u0432\u043e\u0434 \u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0432 \u0444\u0430\u0439\u043b","syntax":"\n   bool <b>pg_lo_export<\/b>\n    ([ resource $connection\n   ], int $oid\n   , string $pathname\n   )","desc":"\n    pg_lo_export() \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0438\u0437 \u0431\u0430\u0437\u044b \n   \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0435\u0433\u043e \u0434\u0430\u043d\u043d\u044b\u0435 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e \u0432 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u0435.\n  "},"pg_lo_import":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0418\u043c\u043f\u043e\u0440\u0442 \u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   int <b>pg_lo_import<\/b>\n    ([ resource $connection\n   ], string $pathname\n   [, mixed $object_id\n  ] )\n\n         int <b>pg_lo_import<\/b>\n          ( string $pathname\n         [, resource $connection\n        ] )\n","desc":"\n    pg_lo_import() \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445, \n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445.\n  "},"pg_lo_open":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445","syntax":"\n   resource <b>pg_lo_open<\/b>\n    ( resource $connection\n   , int $oid\n   , string $mode\n   )","desc":"\n    pg_lo_open() \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \n   \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0435\u0433\u043e \u0440\u0435\u0441\u0443\u0440\u0441.\n  "},"pg_lo_read_all":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n   \u0427\u0438\u0442\u0430\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0438 \u043f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e \u0432 \u0431\u0440\u043e\u0443\u0437\u0435\u0440\n  ","syntax":"\n   int <b>pg_lo_read_all<\/b>\n    ( resource $large_object\n   )","desc":"\n    pg_lo_read_all() \u0447\u0438\u0442\u0430\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0438 \u043f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 \n   \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e \u0432 \u0431\u0440\u043e\u0443\u0437\u0435\u0440 \u043f\u043e\u0441\u043b\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0432\u0441\u0435\u0445 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0445 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432. \n   \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0432 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u043c \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0441\u044b\u043b\u043a\u0438 \u0434\u0432\u043e\u0438\u0447\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445, \u0442\u0430\u043a\u0438\u0445 \u043a\u0430\u043a \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \n   \u0438\u043b\u0438 \u0437\u0432\u0443\u043a.\n  "},"pg_lo_read":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0427\u0438\u0442\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430","syntax":"\n   string <b>pg_lo_read<\/b>\n    ( resource $large_object\n   [, int $len = 8192\n  ] )","desc":"\n    pg_lo_read() \u0447\u0438\u0442\u0430\u0435\u0442 len \n   \u0431\u0430\u0439\u0442 \u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0445 \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a\u0438.\n  "},"pg_lo_seek":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n   \u041f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u0435\u0442 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430\n  ","syntax":"\n   bool <b>pg_lo_seek<\/b>\n    ( resource $large_object\n   , int $offset\n   [, int $whence = PGSQL_SEEK_CUR\n  ] )","desc":"\n    pg_lo_seek() \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u0435\u0442 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \n   \u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430.\n  "},"pg_lo_tell":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0433\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f \u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430\n  ","syntax":"\n   int <b>pg_lo_tell<\/b>\n    ( resource $large_object\n   )","desc":"\n    pg_lo_tell() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u043f\u043e\u0437\u0438\u0446\u0438\u044e (\u043e\u0442\u0441\u0442\u0443\u043f \n   \u043e\u0442 \u043d\u0430\u0447\u0430\u043b\u0430) \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0433\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f \u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430.\n  "},"pg_lo_unlink":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430","syntax":"\n   bool <b>pg_lo_unlink<\/b>\n    ( resource $connection\n   , int $oid\n   )","desc":"\n    pg_lo_unlink() \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0441 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u043e\u043c \n   oid.\n  "},"pg_lo_write":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0417\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u043e\u0431\u044a\u0435\u043a\u0442","syntax":"\n   int <b>pg_lo_write<\/b>\n    ( resource $large_object\n   , string $data\n   [, int $len\n  ] )","desc":"\n    pg_lo_write() \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u043e\u0431\u044a\u0435\u043a\u0442, \n   \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0433\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f.\n  "},"pg_meta_data":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0430\u0431\u043b\u0438\u0446\u044b\n  ","syntax":"\n   array <b>pg_meta_data<\/b>\n    ( resource $connection\n   , string $table_name\n   )","desc":"\n    pg_meta_data() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \n   table_name \u0432 \u0432\u0438\u0434\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u0430.\n  "},"pg_num_fields":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u0435\u0439 \u0432 \u0432\u044b\u0431\u043e\u0440\u043a\u0435","syntax":"\n   int <b>pg_num_fields<\/b>\n    ( resource $result\n   )","desc":"\n    pg_num_fields() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u0435\u0439 \n   (\u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432) \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 PostgreSQL.\n  "},"pg_num_rows":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u0440\u043e\u043a \u0432 \u0432\u044b\u0431\u043e\u0440\u043a\u0435","syntax":"\n   int <b>pg_num_rows<\/b>\n    ( resource $result\n   )","desc":"\n    pg_num_rows() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u0440\u043e\u043a \u0432 \n   \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 PostgreSQL.\n  "},"pg_options":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c \u0431\u0430\u0437 \u0434\u0430\u043d\u043d\u044b\u0445","syntax":"\n   string <b>pg_options<\/b>\n    ([ resource $connection\n  ] )","desc":"\n    pg_options() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0443\u044e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \n   \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f PostgreSQL connection. \n  "},"pg_parameter_status":{"version":"(PHP 5)","shortdesc":"\u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0442\u0435\u043a\u0443\u0449\u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0441\u0435\u0440\u0432\u0435\u0440\u0430","syntax":"\n   string <b>pg_parameter_status<\/b>\n    ([ resource $connection\n   ], string $param_name\n   )","desc":"\n    \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430.\n  "},"pg_pconnect":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c PostgreSQL","syntax":"\n   resource <b>pg_pconnect<\/b>\n    ( string $connection_string\n   [, int $connect_type\n  ] )","desc":"\n    pg_pconnect() \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445 \n   PostgreSQL. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0441\u0443\u0440\u0441 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0439 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0430 \n   \u0444\u0443\u043d\u043a\u0446\u0438\u0439 PostgreSQL.\n  "},"pg_ping":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0441 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445","syntax":"\n   bool <b>pg_ping<\/b>\n    ([ resource $connection\n  ] )","desc":"\n    pg_ping() \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \n   \u043f\u0435\u0440\u0435\u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f, \u0435\u0441\u043b\u0438 \u043e\u043d\u043e \u043d\u0430\u0440\u0443\u0448\u0435\u043d\u043e.\n  "},"pg_port":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u043e\u043c\u0435\u0440 \u043f\u043e\u0440\u0442\u0430, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044e\n  ","syntax":"\n   int <b>pg_port<\/b>\n    ([ resource $connection\n  ] )","desc":"\n    pg_port() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u043e\u043c\u0435\u0440 \u043f\u043e\u0440\u0442\u0430, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \n   \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044e PostgreSQL connection.\n  "},"pg_prepare":{"version":"(PHP 5 >= 5.1.0)","shortdesc":" \u041f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e SQL \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f \n  \u0438 \u0436\u0434\u0435\u0442 \u0435\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f","syntax":"\n   resource <b>pg_prepare<\/b>\n    ([ resource $connection\n   ], string $stmtname\n   , string $query\n   )","desc":"\n    pg_prepare() \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0437\u0430\u0433\u043e\u0442\u043e\u0432\u043a\u0443 SQL \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435 \n   \u0434\u043b\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438  pg_execute() \n   \u0438\u043b\u0438  pg_send_execute(). \u042d\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043c\u043d\u043e\u0433\u043e\u043a\u0440\u0430\u0442\u043d\u043e \n   \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u0435\u0434\u0438\u043d\u043e\u0436\u0434\u044b \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0441 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438. \n    pg_prepare() \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f PostgreSQL \u0432\u0435\u0440\u0441\u0438\u0438 7.4 \n   \u0438 \u0432\u044b\u0448\u0435. \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c c \u0441\u0435\u0440\u0432\u0435\u0440\u0430\u043c\u0438 \u0440\u0430\u043d\u043d\u0438\u0445 \u0432\u0435\u0440\u0441\u0438\u0439. \n  "},"pg_put_line":{"version":"(PHP 4 >= 4.0.3, PHP 5)","shortdesc":"\u041f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u043d\u0430 PostgreSQL \u0441\u0435\u0440\u0432\u0435\u0440 \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u044e\u0449\u0438\u043c \u043d\u0443\u043b\u0435\u043c","syntax":"\n   bool <b>pg_put_line<\/b>\n    ([ resource $connection\n   ], string $data\n   )","desc":"\n    pg_put_line() \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u043d\u0430 PostgreSQL \u0441\u0435\u0440\u0432\u0435\u0440 \n   \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u044e\u0449\u0438\u043c \u043d\u0443\u043b\u0435\u043c. \u0417\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c NULL \n   \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u0438 \u0435\u0435 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0438 \u0441 \u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439 PostgreSQL \n   COPY FROM.\n  "},"pg_query_params":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\n   \u041f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442\u0441\u044f \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e \u043e\u0442 \u0442\u0435\u043a\u0441\u0442\u0430 SQL \u0437\u0430\u043f\u0440\u043e\u0441\u0430\n  ","syntax":"\n   resource <b>pg_query_params<\/b>\n    ([ resource $connection\n   ], string $query\n   , array $params\n   )","desc":"\n   \u041f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440 \u0438 \u0436\u0434\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442. \n   \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442\u0441\u044f \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e \u043e\u0442 \u0441\u0442\u0440\u043e\u043a\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n  "},"pg_query":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441","syntax":"\n   resource <b>pg_query<\/b>\n    ([ resource $connection\n   ], string $query\n   )","desc":"\n    pg_query() \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 query\n   \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0411\u0414 connection.\n  "},"pg_result_error_field":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0435 \u043f\u043e\u043b\u0435 \u0438\u0437 \u043e\u0442\u0447\u0435\u0442\u0430 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0430\u0445 \n  ","syntax":"\n   string <b>pg_result_error_field<\/b>\n    ( resource $result\n   , int $fieldcode\n   )","desc":"\n    pg_result_error_field() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0434\u043d\u043e \u0438\u0437 \u043f\u043e\u043b\u0435\u0439 \n   \u043e\u0442\u0447\u0435\u0442\u0430 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0430\u0445, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0441 \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u043c result. \n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430\u043c\u0438 PostgreSQL \u0432\u0435\u0440\u0441\u0438\u0439 7.4 \u0438 \u0432\u044b\u0448\u0435. \u041d\u0443\u0436\u043d\u043e\u0435 \n   \u043f\u043e\u043b\u0435 \u0437\u0430\u0434\u0430\u0435\u0442\u0441\u044f \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c fieldcode.\n  "},"pg_result_error":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u043e\u0439 \u0441 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\n  ","syntax":"\n   string <b>pg_result_error<\/b>\n    ( resource $result\n   )","desc":"\n    pg_result_error() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e \u043b\u044e\u0431\u043e\u0439 \n   \u043e\u0448\u0438\u0431\u043a\u0435, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u043e\u0439 \u0441 \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u043c result. \n   \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0431\u043e\u043b\u0435\u0435 \u0432\u0435\u0440\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435, \n   \u0447\u0435\u043c \u043f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438  pg_last_error().\n  "},"pg_result_seek":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\n   \u0421\u043c\u0435\u0449\u0430\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0443 \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u0432 \u0440\u0435\u0441\u0443\u0440\u0441\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430\n  ","syntax":"\n   bool <b>pg_result_seek<\/b>\n    ( resource $result\n   , int $offset\n   )","desc":"\n    pg_result_seek() \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0433\u043e \n   \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f \u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0443 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n  "},"pg_result_status":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430\n  ","syntax":"\n   mixed <b>pg_result_status<\/b>\n    ( resource $result\n   [, int $type = PGSQL_STATUS_LONG\n  ] )","desc":"\n    pg_result_status() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \n   \u0440\u0435\u0441\u0443\u0440\u0441\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u043b\u0438\u0431\u043e \u0442\u044d\u0433 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \n   \u0441 \u044d\u0442\u0438\u043c \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u043c.\n  "},"pg_select":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\n   \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u0437 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445\n  ","syntax":"\n   mixed <b>pg_select<\/b>\n    ( resource $connection\n   , string $table_name\n   , array $assoc_array\n   [, int $options = PGSQL_DML_EXEC\n  ] )","desc":"\n    pg_select() \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u0437 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445, \n   \u0443\u0434\u043e\u0432\u043b\u0435\u0442\u0432\u043e\u0440\u044f\u044e\u0449\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c field=>value, \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \n   \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435 assoc_array.\n  "},"pg_send_execute":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\n   \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0439 SQL \u0437\u0430\u043f\u0440\u043e\u0441 \u0438 \n   \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0435\u043c\u0443 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b; \u043d\u0435 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0433\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \n  ","syntax":"\n   bool <b>pg_send_execute<\/b>\n    ( resource $connection\n   , string $stmtname\n   , array $params\n   )","desc":"\n   \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0439 SQL \u0437\u0430\u043f\u0440\u043e\u0441 \u0438 \n   \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0435\u043c\u0443 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b; \u043d\u0435 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0433\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430. \n  "},"pg_send_prepare":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\n   \u041f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e SQL \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f; \n   \u043d\u0435 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u0435\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f\n  ","syntax":"\n   bool <b>pg_send_prepare<\/b>\n    ( resource $connection\n   , string $stmtname\n   , string $query\n   )","desc":"\n   \u041f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e SQL \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438  \n   \u043d\u0435 \u0436\u0434\u0435\u0442 \u0435\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f.\n  "},"pg_send_query_params":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\n   \u041f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440, \u043d\u0435 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0433\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\n  ","syntax":"\n   bool <b>pg_send_query_params<\/b>\n    ( resource $connection\n   , string $query\n   , array $params\n   )","desc":"\n   \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0438 \u043d\u0435 \u0436\u0434\u0435\u0442 \u0435\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f. \n   \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442\u0441\u044f \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e \u043e\u0442 \u0442\u0435\u043a\u0441\u0442\u0430 SQL \u0437\u0430\u043f\u0440\u043e\u0441\u0430. \n  "},"pg_send_query":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\n   \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441\n  ","syntax":"\n   bool <b>pg_send_query<\/b>\n    ( resource $connection\n   , string $query\n   )","desc":"\n    pg_send_query() \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \n   \u0437\u0430\u043f\u0440\u043e\u0441. \u0412 \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u043e\u0442  pg_query() \u0437\u0430\u043f\u0440\u043e\u0441 \u043c\u043e\u0436\u0435\u0442 \n   \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e SQL \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0439, \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u0442\u043e\u0447\u043a\u043e\u0439 \u0441 \u0437\u0430\u043f\u044f\u0442\u043e\u0439.\n   \u0414\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \n    pg_get_result().\n  "},"pg_set_client_encoding":{"version":"(PHP 4 >= 4.0.3, PHP 5)","shortdesc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443\n  ","syntax":"\n   int <b>pg_set_client_encoding<\/b>\n    ([ resource $connection\n   ], string $encoding\n   )","desc":"\n    pg_set_client_encoding() \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \n   \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 0 \u043f\u0440\u0438 \u0443\u0441\u043f\u0435\u0445\u0435, -1 \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"pg_set_error_verbosity":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\n   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u043e\u0431\u044a\u0435\u043c \u0442\u0435\u043a\u0441\u0442\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438 \n    pg_last_error() \u0438  pg_result_error() \n  ","syntax":"\n   int <b>pg_set_error_verbosity<\/b>\n    ([ resource $connection\n   ], int $verbosity\n   )","desc":"\n   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u043e\u0431\u044a\u0435\u043c \u0442\u0435\u043a\u0441\u0442\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438 \n    pg_last_error() \u0438 \n    pg_result_error(). \n  "},"pg_trace":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0442\u0440\u0430\u0441\u0441\u0438\u0440\u043e\u0432\u043a\u0443 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f PostgreSQL","syntax":"\n   bool <b>pg_trace<\/b>\n    ( string $pathname\n   [, string $mode = \"w\"\n   [, resource $connection\n  ]] )","desc":"\n    pg_trace() \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0442\u0440\u0430\u0441\u0441\u0438\u0440\u043e\u0432\u043a\u0443 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0441 \n   PostgreSQL \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c \u0432\u043e \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u0444\u0430\u0439\u043b. \u0427\u0442\u043e\u0431\u044b \u043f\u043e\u043d\u0438\u043c\u0430\u0442\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0442\u0430\u043a\u0438\u0445 \n   \u0444\u0430\u0439\u043b\u043e\u0432, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0445\u043e\u0440\u043e\u0448\u043e \u0440\u0430\u0437\u0431\u0438\u0440\u0430\u0442\u044c\u0441\u044f \u0432\u043e \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u043c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \n   \u043a\u043b\u0438\u0435\u043d\u0442-\u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f.\n  "},"pg_transaction_status":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435\n  ","syntax":"\n   int <b>pg_transaction_status<\/b>\n    ( resource $connection\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435.\n  "},"pg_tty":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0430 TTY, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u043e\u0435 \u0441 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435\u043c\n  ","syntax":"\n   string <b>pg_tty<\/b>\n    ([ resource $connection\n  ] )","desc":"\n    pg_tty() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0430, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0441 \n   \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c PostgreSQL connection, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \n   \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043e\u0442\u043b\u0430\u0434\u043e\u0447\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f.\n  "},"pg_unescape_bytea":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\n   \u0423\u0431\u0438\u0440\u0430\u0435\u0442 \u044d\u043a\u0440\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0432\u043e\u0438\u0447\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u0430 bytea\n  ","syntax":"\n   string <b>pg_unescape_bytea<\/b>\n    ( string $data\n   )","desc":"\n    pg_unescape_bytea() \u0443\u0431\u0438\u0440\u0430\u0435\u0442 \u044d\u043a\u0440\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u043f\u0435\u0446\u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \n   \u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u0445 \u0442\u0438\u043f\u0430 PostgreSQL bytea. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0435\u044d\u043a\u0440\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443, \n   \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0443\u044e \u0434\u0432\u043e\u0438\u0447\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435.\n  "},"pg_untrace":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\u041e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0442\u0440\u0430\u0441\u0441\u0438\u0440\u043e\u0432\u043a\u0443 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0441 PostgreSQL","syntax":"\n   bool <b>pg_untrace<\/b>\n    ([ resource $connection\n  ] )","desc":"\n   \u041e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0442\u0440\u0430\u0441\u0441\u0438\u0440\u043e\u0432\u043a\u0443, \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u043d\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439  pg_trace().\n  "},"pg_update":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\n   \u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435\n  ","syntax":"\n   mixed <b>pg_update<\/b>\n    ( resource $connection\n   , string $table_name\n   , array $data\n   , array $condition\n   [, int $options = PGSQL_DML_EXEC\n  ] )","desc":"\n    pg_update() \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u0438 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435, \n   \u0443\u0434\u043e\u0432\u043b\u0435\u0442\u0432\u043e\u0440\u044f\u044e\u0449\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c condition \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \n   data. \u0415\u0441\u043b\u0438 \u0437\u0430\u0434\u0430\u043d \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 options, \n   \u0434\u0430\u043d\u043d\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439  pg_convert(), \n   \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0431\u0443\u0434\u0443\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u044b \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0438\u0437 \u044d\u0442\u043e\u0433\u043e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430.\n  "},"pg_version":{"version":"(PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0432\u0435\u0440\u0441\u0438\u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u0430, \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 \u043a\u043b\u0438\u0435\u043d\u0442-\u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \n   \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (\u0435\u0441\u043b\u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e)\n  ","syntax":"\n   array <b>pg_version<\/b>\n    ([ resource $connection\n  ] )","desc":"\n    pg_version() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0432\u0435\u0440\u0441\u0438\u0438 \n   \u043a\u043b\u0438\u0435\u043d\u0442\u0430, \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 \u043a\u043b\u0438\u0435\u043d\u0442-\u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0412\u0435\u0440\u0441\u0438\u0438 \n   \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b, \u0442\u043e\u043b\u044c\u043a\u043e \u0435\u0441\u043b\u0438 PHP-\u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0441\u043a\u043e\u043c\u043f\u0438\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u043e \n   \u0434\u043b\u044f PostgreSQL \u0432\u0435\u0440\u0441\u0438\u0438 7.4 \u0438\u043b\u0438 \u0432\u044b\u0448\u0435.\n  "},"php_check_syntax":{"version":"(PHP 5 <= 5.0.4)","shortdesc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 (\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442) PHP \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430\n  ","syntax":"\n   bool <b>php_check_syntax<\/b>\n    ( string $filename\n   [, string &$error_message\n  ] )","desc":"\n   \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0430 (\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442 \u0432\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e) \u0444\u0430\u0439\u043b\u0430,\n   \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0432 filename \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u044f \u043e\u0448\u0438\u0431\u043a\u0438 \u0432 \u043a\u043e\u0434\u0435.\n  "},"php_ini_loaded_file":{"version":"(PHP 5 >= 5.2.4)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0430\u0434\u0440\u0435\u0441\u0430 \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u043e\u0433\u043e php.ini \u0444\u0430\u0439\u043b\u0430\n  ","syntax":"\n   string <b>php_ini_loaded_file<\/b>\n    ( void\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d \u043b\u0438 \u0444\u0430\u0439\u043b php.ini, \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0435\u0433\u043e \u0430\u0434\u0440\u0435\u0441.\n  "},"php_ini_scanned_files":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a .ini \u0444\u0430\u0439\u043b\u043e\u0432 \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0445 \u0432 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 ini \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438\n  ","syntax":"\n   string <b>php_ini_scanned_files<\/b>\n    ( void\n   )","desc":"\n    php_ini_scanned_files() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445\n   \u0437\u0430\u043f\u044f\u0442\u044b\u043c\u0438 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432, \u043f\u0440\u043e\u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u0441\u043b\u0435 php.ini. \u042d\u0442\u043e \u0444\u0430\u0439\u043b\u044b,\n   \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0435 \u0432 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u044b\u043b\u0430 \u0437\u0430\u0434\u0430\u043d\u0430 \u043f\u0440\u0438 \u043a\u043e\u043c\u043f\u0438\u043b\u044f\u0446\u0438\u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u043e\u0439 --with-config-file-scan-dir\n.\n  "},"php_logo_guid":{"version":"(PHP 4, PHP 5 < 5.5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 guid \u043b\u043e\u0433\u043e\u0442\u0438\u043f\u0430\n  ","syntax":"\n   string <b>php_logo_guid<\/b>\n    ( void\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 ID, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430 \u043b\u043e\u0433\u043e\u0442\u0438\u043f\u0430 PHP,\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435. \u041b\u043e\u0433\u043e\u0442\u0438\u043f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f, \u0442\u043e\u043b\u044c\u043a\u043e \u0435\u0441\u043b\u0438 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0430\n   \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 expose_php.\n  "},"php_sapi_name":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0438\u043f \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u043c\u0435\u0436\u0434\u0443 \u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c \u0438 PHP\n  ","syntax":"\n   string <b>php_sapi_name<\/b>\n    ( void\n   )","desc":""},"php_strip_whitespace":{"version":"(PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u043a\u043e\u0434 \u0431\u0435\u0437 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432 \u0438 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u0432","syntax":"\n   string <b>php_strip_whitespace<\/b>\n    ( string $filename\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u043a\u043e\u0434 PHP \u0432 \u0444\u0430\u0439\u043b (filename) \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u044f\n   \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \u0438 \u043f\u0440\u043e\u0431\u0435\u043b\u044b. \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u043e\u043b\u0435\u0437\u043d\u043e\u0439 \u0434\u043b\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f\n   \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043c\u0430 \u0447\u0438\u0441\u0442\u043e\u0433\u043e \u043a\u043e\u0434\u0430 \u0432 \u0441\u043a\u0440\u0438\u043f\u0442\u0430\u0445 \u043f\u043e \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044e \u0441 \u043e\u0431\u044a\u0435\u043c\u043e\u043c \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432.\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e php -w \u0438\u0437\n   \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438.\n  "},"php_uname":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\n   \u0412\u044b\u0434\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u0435, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0437\u0430\u043f\u0443\u0449\u0435\u043d PHP\n  ","syntax":"\n   string <b>php_uname<\/b>\n    ([ string $mode = \"a\"\n  ] )","desc":"\n    php_uname() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b,\n   \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0437\u0430\u043f\u0443\u0449\u0435\u043d PHP. \u042d\u0442\u043e \u0442\u0430 \u0436\u0435 \u0441\u0442\u0440\u043e\u043a\u0430, \u0441 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0432\u044b\u0432\u043e\u0434\n    phpinfo(). \u0414\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0430 PHP_OS. \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435,\n   \u0447\u0442\u043e \u044d\u0442\u0430 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u0439\n   PHP \u0431\u044b\u043b \u0441\u043e\u0431\u0440\u0430\u043d (built).\n  "},"phpcredits":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432 PHP\n  ","syntax":"\n   bool <b>phpcredits<\/b>\n    ([ int $flag = CREDITS_ALL\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432 PHP, \u043c\u043e\u0434\u0443\u043b\u0435\u0439 \u0438 \u0442.\u043f. \u041e\u043d\u0430 \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \n   \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 HTML \u043a\u043e\u0434 \u0434\u043b\u044f \u0432\u0441\u0442\u0430\u0432\u043a\u0438 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443.\n  "},"phpinfo":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 PHP\n  ","syntax":"\n   bool <b>phpinfo<\/b>\n    ([ int $what = INFO_ALL\n  ] )","desc":"\n   \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0438 PHP.\n   \u0421\u044e\u0434\u0430 \u0432\u0445\u043e\u0434\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u0445 \u043a\u043e\u043c\u043f\u0438\u043b\u044f\u0446\u0438\u0438 PHP, \u043e \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f\u0445,\n   \u043e \u0432\u0435\u0440\u0441\u0438\u0438, \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0441\u0435\u0440\u0432\u0435\u0440\u0435 \u0438 \u0441\u0440\u0435\u0434\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f (\u0435\u0441\u043b\u0438 PHP\n   \u043a\u043e\u043c\u043f\u0438\u043b\u0438\u0440\u043e\u0432\u0430\u043b\u0441\u044f \u043a\u0430\u043a \u043c\u043e\u0434\u0443\u043b\u044c), \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0438 PHP, \u0432\u0435\u0440\u0441\u0438\u0438 \u041e\u0421, \u043e \u043f\u0443\u0442\u044f\u0445, \u043e\u0431\n   \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0438 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u0445 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438, \u043e HTTP \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u0445 \u0438\n   \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438 PHP.\n  "},"phpversion":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u0434\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0432\u0435\u0440\u0441\u0438\u044e PHP","syntax":"\n   string <b>phpversion<\/b>\n    ([ string $extension\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c \u0432\u0435\u0440\u0441\u0438\u0438 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e PHP-\u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430 \u0438\u043b\u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f.\n  "},"pi":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u041f\u0438","syntax":"\n    float <b>pi<\/b>\n     ( void\n    )","desc":""},"png2wbmp":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\n   \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 PNG \u0444\u0430\u0439\u043b\u0430 \u0432 WBMP\n  ","syntax":"\n   bool <b>png2wbmp<\/b>\n    ( string $pngname\n   , string $wbmpname\n   , int $dest_height\n   , int $dest_width\n   , int $threshold\n   )","desc":"\n   \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 PNG \u0444\u0430\u0439\u043b \u0432 WBMP.\n  "},"popen":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0444\u0430\u0439\u043b\u043e\u0432\u044b\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430","syntax":"\n   resource <b>popen<\/b>\n    ( string $command\n   , string $mode\n   )","desc":"\n   \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u0442\u043e\u043a \u043a \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0443, \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u0443\u044e \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0444\u043e\u0440\u043a\u0430\n   \u043a\u043e\u043c\u0430\u043d\u0434\u044b, \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 command.\n  "},"pos":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  current()","syntax":"","desc":""},"posix_access":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\n   Determine accessibility of a file\n  ","syntax":"\n   bool <b>posix_access<\/b>\n    ( string $file\n   [, int $mode = POSIX_F_OK\n  ] )","desc":"\n    posix_access() checks the user's permission of a file.\n  "},"posix_ctermid":{"version":"(PHP 4, PHP 5)","shortdesc":"Get path name of controlling terminal","syntax":"\n   string <b>posix_ctermid<\/b>\n    ( void\n   )","desc":"\n   Generates a string which is the pathname for the current \n   controlling terminal for the process.  On error this will set errno, \n   which can be checked using  posix_get_last_error()\n  "},"posix_errno":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  posix_get_last_error()","syntax":"","desc":""},"posix_get_last_error":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Retrieve the error number set by the last posix function that failed","syntax":"\n   int <b>posix_get_last_error<\/b>\n    ( void\n   )","desc":"\n   Retrieve the error number set by the last posix function that failed.\n   The system error message associated with the errno may be checked with\n    posix_strerror().\n  "},"posix_getcwd":{"version":"(PHP 4, PHP 5)","shortdesc":"Pathname of current directory","syntax":"\n   string <b>posix_getcwd<\/b>\n    ( void\n   )","desc":"\n   Gets the absolute pathname of the script's current working directory.\n   On error, it sets errno which can be checked using\n    posix_get_last_error()\n  "},"posix_getegid":{"version":"(PHP 4, PHP 5)","shortdesc":"Return the effective group ID of the current process","syntax":"\n   int <b>posix_getegid<\/b>\n    ( void\n   )","desc":"\n   Return the numeric effective group ID of the current process. \n  "},"posix_geteuid":{"version":"(PHP 4, PHP 5)","shortdesc":"Return the effective user ID of the current process","syntax":"\n   int <b>posix_geteuid<\/b>\n    ( void\n   )","desc":"\n   Return the numeric effective user ID of the current process. See\n   also  posix_getpwuid() for information on how\n   to convert this into a useable username.\n  "},"posix_getgid":{"version":"(PHP 4, PHP 5)","shortdesc":"Return the real group ID of the current process","syntax":"\n   int <b>posix_getgid<\/b>\n    ( void\n   )","desc":"\n   Return the numeric real group ID of the current process.\n  "},"posix_getgrgid":{"version":"(PHP 4, PHP 5)","shortdesc":"Return info about a group by group id","syntax":"\n   array <b>posix_getgrgid<\/b>\n    ( int $gid\n   )","desc":"\n   Gets information about a group provided its id.\n  "},"posix_getgrnam":{"version":"(PHP 4, PHP 5)","shortdesc":"Return info about a group by name","syntax":"\n   array <b>posix_getgrnam<\/b>\n    ( string $name\n   )","desc":"\n   Gets information about a group provided its name. \n  "},"posix_getgroups":{"version":"(PHP 4, PHP 5)","shortdesc":"Return the group set of the current process","syntax":"\n   array <b>posix_getgroups<\/b>\n    ( void\n   )","desc":"\n   Gets the group set of the current process.\n  "},"posix_getlogin":{"version":"(PHP 4, PHP 5)","shortdesc":"Return login name","syntax":"\n   string <b>posix_getlogin<\/b>\n    ( void\n   )","desc":"\n   Returns the login name of the user owning the current process.\n  "},"posix_getpgid":{"version":"(PHP 4, PHP 5)","shortdesc":"Get process group id for job control","syntax":"\n   int <b>posix_getpgid<\/b>\n    ( int $pid\n   )","desc":"\n   Returns the process group identifier of the process\n   pid \u0438\u043b\u0438 FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"posix_getpgrp":{"version":"(PHP 4, PHP 5)","shortdesc":"Return the current process group identifier","syntax":"\n   int <b>posix_getpgrp<\/b>\n    ( void\n   )","desc":"\n   Return the process group identifier of the current process. \n  "},"posix_getpid":{"version":"(PHP 4, PHP 5)","shortdesc":"Return the current process identifier","syntax":"\n   int <b>posix_getpid<\/b>\n    ( void\n   )","desc":"\n   Return the process identifier of the current process.\n  "},"posix_getppid":{"version":"(PHP 4, PHP 5)","shortdesc":"Return the parent process identifier","syntax":"\n   int <b>posix_getppid<\/b>\n    ( void\n   )","desc":"\n   Return the process identifier of the parent process of the\n   current process.\n  "},"posix_getpwnam":{"version":"(PHP 4, PHP 5)","shortdesc":"Return info about a user by username","syntax":"\n   array <b>posix_getpwnam<\/b>\n    ( string $username\n   )","desc":"\n   Returns an array of information about the given user.\n  "},"posix_getpwuid":{"version":"(PHP 4, PHP 5)","shortdesc":"Return info about a user by user id","syntax":"\n   array <b>posix_getpwuid<\/b>\n    ( int $uid\n   )","desc":"\n   Returns an array of information about the user \n   referenced by the given user ID.\n  "},"posix_getrlimit":{"version":"(PHP 4, PHP 5)","shortdesc":"Return info about system resource limits","syntax":"\n   array <b>posix_getrlimit<\/b>\n    ( void\n   )","desc":"\n    posix_getrlimit() returns an array\n   of information about the current resource's soft and hard limits.\n  "},"posix_getsid":{"version":"(PHP 4, PHP 5)","shortdesc":"Get the current sid of the process","syntax":"\n   int <b>posix_getsid<\/b>\n    ( int $pid\n   )","desc":"\n   Return the session id of the process pid.\n   The session id of a process is the process group id of the session leader.\n  "},"posix_getuid":{"version":"(PHP 4, PHP 5)","shortdesc":"Return the real user ID of the current process","syntax":"\n   int <b>posix_getuid<\/b>\n    ( void\n   )","desc":"\n   Return the numeric real user ID of the current process. \n  "},"posix_initgroups":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"Calculate the group access list","syntax":"\n   bool <b>posix_initgroups<\/b>\n    ( string $name\n   , int $base_group_id\n   )","desc":"\n   Calculates the group access list for the user specified in name.\n  "},"posix_isatty":{"version":"(PHP 4, PHP 5)","shortdesc":"Determine if a file descriptor is an interactive terminal","syntax":"\n   bool <b>posix_isatty<\/b>\n    ( int $fd\n   )","desc":"\n    Determines if the file descriptor fd refers to a valid\n    terminal type device.\n  "},"posix_kill":{"version":"(PHP 4, PHP 5)","shortdesc":"Send a signal to a process","syntax":"\n   bool <b>posix_kill<\/b>\n    ( int $pid\n   , int $sig\n   )","desc":"\n   Send the signal sig to the process with\n   the process identifier pid.\n  "},"posix_mkfifo":{"version":"(PHP 4, PHP 5)","shortdesc":"Create a fifo special file (a named pipe)","syntax":"\n   bool <b>posix_mkfifo<\/b>\n    ( string $pathname\n   , int $mode\n   )","desc":"\n    posix_mkfifo() creates a special\n   FIFO file which exists in the file system and acts as\n   a bidirectional communication endpoint for processes.\n  "},"posix_mknod":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\n   Create a special or ordinary file (POSIX.1)\n  ","syntax":"\n   bool <b>posix_mknod<\/b>\n    ( string $pathname\n   , int $mode\n   [, int $major = 0\n   [, int $minor = 0\n  ]] )","desc":"\n   Creates a special or ordinary file.\n  "},"posix_setegid":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Set the effective GID of the current process","syntax":"\n   bool <b>posix_setegid<\/b>\n    ( int $gid\n   )","desc":"\n   Set the effective group ID of the current process. This is a\n   privileged function and needs appropriate privileges (usually\n   root) on the system to be able to perform this function.\n  "},"posix_seteuid":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"Set the effective UID of the current process","syntax":"\n   bool <b>posix_seteuid<\/b>\n    ( int $uid\n   )","desc":"\n   Set the real user ID of the current process. This is a privileged\n   function and needs appropriate privileges (usually root) on\n   the system to be able to perform this function.\n  "},"posix_setgid":{"version":"(PHP 4, PHP 5)","shortdesc":"Set the GID of the current process","syntax":"\n   bool <b>posix_setgid<\/b>\n    ( int $gid\n   )","desc":"\n   Set the real group ID of the current process. This is a\n   privileged function and needs appropriate privileges (usually\n   root) on the system to be able to perform this function. The\n   appropriate order of function calls is\n    posix_setgid() first,\n    posix_setuid() last.\n  "},"posix_setpgid":{"version":"(PHP 4, PHP 5)","shortdesc":"Set process group id for job control","syntax":"\n   bool <b>posix_setpgid<\/b>\n    ( int $pid\n   , int $pgid\n   )","desc":"\n   Let the process pid join the process group\n   pgid. \n  "},"posix_setsid":{"version":"(PHP 4, PHP 5)","shortdesc":"Make the current process a session leader","syntax":"\n   int <b>posix_setsid<\/b>\n    ( void\n   )","desc":"\n   Make the current process a session leader. \n  "},"posix_setuid":{"version":"(PHP 4, PHP 5)","shortdesc":"Set the UID of the current process","syntax":"\n   bool <b>posix_setuid<\/b>\n    ( int $uid\n   )","desc":"\n   Set the real user ID of the current process. This is a privileged\n   function that needs appropriate privileges (usually root) on\n   the system to be able to perform this function.\n  "},"posix_strerror":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Retrieve the system error message associated with the given errno","syntax":"\n   string <b>posix_strerror<\/b>\n    ( int $errno\n   )","desc":"\n   Returns the POSIX system error message associated with the given\n   errno.  You may get the\n   errno parameter by calling\n    posix_get_last_error().\n  "},"posix_times":{"version":"(PHP 4, PHP 5)","shortdesc":"Get process times","syntax":"\n   array <b>posix_times<\/b>\n    ( void\n   )","desc":"\n   Gets information about the current CPU usage.\n  "},"posix_ttyname":{"version":"(PHP 4, PHP 5)","shortdesc":"Determine terminal device name","syntax":"\n   string <b>posix_ttyname<\/b>\n    ( int $fd\n   )","desc":"\n   Returns a string for the absolute path to the current\n   terminal device that is open on the file descriptor\n   fd.\n  "},"posix_uname":{"version":"(PHP 4, PHP 5)","shortdesc":"Get system name","syntax":"\n   array <b>posix_uname<\/b>\n    ( void\n   )","desc":"\n   Gets information about the system.\n  "},"pow":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0432 \u0441\u0442\u0435\u043f\u0435\u043d\u044c","syntax":"\n   number <b>pow<\/b>\n    ( number $base\n   , number $exp\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 base, \u0432\u043e\u0437\u0432\u0435\u0434\u0435\u043d\u043d\u043e\u0435 \u0432 \u0441\u0442\u0435\u043f\u0435\u043d\u044c\n   exp.\n  "},"preg_filter":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u041f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u0438\u0441\u043a \u0438 \u0437\u0430\u043c\u0435\u043d\u0443 \u043f\u043e \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u043c\u0443 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044e","syntax":"\n   mixed <b>preg_filter<\/b>\n    ( mixed $pattern\n   , mixed $replacement\n   , mixed $subject\n   [, int $limit = -1\n   [, int &$count\n  ]] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  preg_filter() \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  preg_replace()\n   \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f (\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0435), \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445\n   \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u0441\u043e\u0432\u043f\u0430\u0434\u0435\u043d\u0438\u0435. \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u043e \u0440\u0430\u0431\u043e\u0442\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u043a \n    preg_replace().\n  "},"preg_grep":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u0448\u0430\u0431\u043b\u043e\u043d\u0443","syntax":"\n   array <b>preg_grep<\/b>\n    ( string $pattern\n   , array $input\n   [, int $flags = 0\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432, \u0441\u043e\u0441\u0442\u043e\u044f\u0449\u0438\u0439 \u0438\u0437 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0432\u0445\u043e\u0434\u044f\u0449\u0435\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430\n   input, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443\n   \u0448\u0430\u0431\u043b\u043e\u043d\u0443 pattern.\n  "},"preg_last_error":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u0434 \u043e\u0448\u0438\u0431\u043a\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f PCRE","syntax":"\n   int <b>preg_last_error<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u0434 \u043e\u0448\u0438\u0431\u043a\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f PCRE.\n  "},"preg_match_all":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u043e\u0438\u0441\u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0430 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435","syntax":"\n   int <b>preg_match_all<\/b>\n    ( string $pattern\n   , string $subject\n   [, array &$matches\n   [, int $flags = PREG_PATTERN_ORDER\n   [, int $offset = 0\n  ]]] )","desc":"\n   \u0418\u0449\u0435\u0442 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 subject \u0432\u0441\u0435 \u0441\u043e\u0432\u043f\u0430\u0434\u0435\u043d\u0438\u044f \u0441 \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u043c\n   pattern \u0438 \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\n   matches \u0432 \u043f\u043e\u0440\u044f\u0434\u043a\u0435, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c\u043e\u043c\n   \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u0435\u0439 \u0444\u043b\u0430\u0433\u043e\u0432 flags.\n  "},"preg_match":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u043d\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u043c\u0443 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044e","syntax":"\n   int <b>preg_match<\/b>\n    ( string $pattern\n   , string $subject\n   [, array &$matches\n   [, int $flags = 0\n   [, int $offset = 0\n  ]]] )","desc":"\n   \u0418\u0449\u0435\u0442 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u0442\u0435\u043a\u0441\u0442\u0435 subject \u0441\u043e\u0432\u043f\u0430\u0434\u0435\u043d\u0438\u044f\n   \u0441 \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u043c pattern.\n  "},"preg_quote":{"version":"(PHP 4, PHP 5)","shortdesc":"\u042d\u043a\u0440\u0430\u043d\u0438\u0440\u0443\u0435\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u044b\u0445 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u0445","syntax":"\n   string <b>preg_quote<\/b>\n    ( string $str\n  [, string $delimiter = NULL\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  preg_quote() \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 str\n   \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0431\u0440\u0430\u0442\u043d\u044b\u0439 \u0441\u043b\u044d\u0448 \u043f\u0435\u0440\u0435\u0434 \u043a\u0430\u0436\u0434\u044b\u043c \u0441\u043b\u0443\u0436\u0435\u0431\u043d\u044b\u043c \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u043c.\n   \u042d\u0442\u043e \u0431\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u0435\u0437\u043d\u043e, \u0435\u0441\u043b\u0438 \u0432 \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u0448\u0430\u0431\u043b\u043e\u043d\u0430 \u0443\u0447\u0430\u0441\u0442\u0432\u0443\u044e\u0442 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435,\n   \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0432 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u043a\u0440\u0438\u043f\u0442\u0430 \u043c\u043e\u0436\u0435\u0442 \u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f.\n  "},"preg_replace_callback":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u043c\u0443 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044e \u0438 \u0437\u0430\u043c\u0435\u043d\u0443 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c callback-\u0444\u0443\u043d\u043a\u0446\u0438\u0438","syntax":"\n   mixed <b>preg_replace_callback<\/b>\n    ( mixed $pattern\n   , callable $callback\n   , mixed $subject\n   [, int $limit = -1\n   [, int &$count\n  ]] )","desc":"\n   \u041f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u044d\u0442\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0432\u043e \u043c\u043d\u043e\u0433\u043e\u043c \u043d\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u0435\u0442\n    preg_replace(), \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u0432\u043c\u0435\u0441\u0442\u043e\n   \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 replacement \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c\n   callback-\u0444\u0443\u043d\u043a\u0446\u0438\u044e.\n  "},"preg_replace":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043f\u043e\u0438\u0441\u043a \u0438 \u0437\u0430\u043c\u0435\u043d\u0443 \u043f\u043e \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u043c\u0443 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044e","syntax":"\n   mixed <b>preg_replace<\/b>\n    ( mixed $pattern\n   , mixed $replacement\n   , mixed $subject\n   [, int $limit = -1\n   [, int &$count\n  ]] )","desc":"\n   \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043f\u043e\u0438\u0441\u043a \u0441\u043e\u0432\u043f\u0430\u0434\u0435\u043d\u0438\u0439 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 subject \u0441 \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u043c\n   pattern \u0438 \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u0438\u0445 \u043d\u0430\n   replacement.\n  "},"preg_split":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0420\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u043f\u043e \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u043c\u0443 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044e","syntax":"\n   array <b>preg_split<\/b>\n    ( string $pattern\n   , string $subject\n   [, int $limit = -1\n   [, int $flags = 0\n  ]] )","desc":"\n   \u0420\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u043f\u043e \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u043c\u0443 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044e.\n  "},"prev":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0435\u0440\u0435\u0434\u0432\u0438\u0433\u0430\u0435\u0442 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043d\u0430 \u043e\u0434\u043d\u0443 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u043d\u0430\u0437\u0430\u0434","syntax":"\n   mixed <b>prev<\/b>\n    ( array &$array\n   )","desc":"\n   \u041f\u0435\u0440\u0435\u0434\u0432\u0438\u0433\u0430\u0435\u0442 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043d\u0430 \u043e\u0434\u043d\u0443 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u043d\u0430\u0437\u0430\u0434.\n  "},"print_r":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0443\u0434\u043e\u0431\u043e\u0447\u0438\u0442\u0430\u0435\u043c\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439\n  ","syntax":"\n   mixed <b>print_r<\/b>\n    ( mixed $expression\n   [, bool $return = false\n  ] )","desc":"\n    print_r() \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439\n   \u0432 \u0443\u0434\u043e\u0431\u043e\u0447\u0438\u0442\u0430\u0435\u043c\u043e\u043c \u0432\u0438\u0434\u0435.\n  "},"print":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0441\u0442\u0440\u043e\u043a\u0443","syntax":"\n   int <b>print<\/b>\n    ( string $arg\n   )","desc":"\n   \u0412\u044b\u0432\u043e\u0434\u0438\u0442 arg.\n  "},"printer_abort":{"version":"(PECL printer SVN)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0444\u0430\u0439\u043b \u0438\u0437 \u0431\u0443\u0444\u0435\u0440\u0430 \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0438 \u043a \u043f\u0435\u0447\u0430\u0442\u0438","syntax":"\n   void <b>printer_abort<\/b>\n    ( resource $printer_handle\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0444\u0430\u0439\u043b \u0438\u0437 \u0431\u0443\u0444\u0435\u0440\u0430 \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0438 \u043a \u043f\u0435\u0447\u0430\u0442\u0438.\n  "},"printer_close":{"version":"(PECL printer SVN)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u043e\u043c","syntax":"\n   void <b>printer_close<\/b>\n    ( resource $printer_handle\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c.\n    printer_close() \u0442\u0430\u043a\u0436\u0435 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430.\n  "},"printer_create_brush":{"version":"(PECL printer SVN)","shortdesc":"Create a new brush","syntax":"\n   resource <b>printer_create_brush<\/b>\n    ( int $style\n   , string $color\n   )","desc":"\n   The function creates a new brush and returns a handle to it. A brush is\n   used to fill shapes. For an example see\n    printer_select_brush().\n  "},"printer_create_dc":{"version":"(PECL printer SVN)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430","syntax":"\n   void <b>printer_create_dc<\/b>\n    ( resource $printer_handle\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430. \u041a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f\n   \u0434\u043b\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430.\n  "},"printer_create_font":{"version":"(PECL printer SVN)","shortdesc":"Create a new font","syntax":"\n   resource <b>printer_create_font<\/b>\n    ( string $face\n   , int $height\n   , int $width\n   , int $font_weight\n   , bool $italic\n   , bool $underline\n   , bool $strikeout\n   , int $orientation\n   )","desc":"\n   The function creates a new font and returns a handle to it. A font is\n   used to draw text. For an example see\n    printer_select_font().\n  "},"printer_create_pen":{"version":"(PECL printer SVN)","shortdesc":"Create a new pen","syntax":"\n   resource <b>printer_create_pen<\/b>\n    ( int $style\n   , int $width\n   , string $color\n   )","desc":"\n   The function creates a new pen and returns a handle to it. A pen is\n   used to draw lines and curves. For an example see\n    printer_select_pen().\n  "},"printer_delete_brush":{"version":"(PECL printer SVN)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043a\u0438\u0441\u0442\u044c","syntax":"\n   void <b>printer_delete_brush<\/b>\n    ( resource $brush_handle\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u0443\u044e \u043a\u0438\u0441\u0442\u044c. \u0417\u0430 \u043f\u0440\u0438\u043c\u0435\u0440\u043e\u043c \u043e\u0431\u0440\u0430\u0449\u0430\u0439\u0442\u0435\u0441\u044c \u043a \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    printer_select_brush().\n  "},"printer_delete_dc":{"version":"(PECL printer SVN)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430","syntax":"\n   bool <b>printer_delete_dc<\/b>\n    ( resource $printer_handle\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430.\n   \u0417\u0430 \u043f\u0440\u0438\u043c\u0435\u0440\u043e\u043c \u043e\u0431\u0440\u0430\u0449\u0430\u0439\u0442\u0435\u0441\u044c \u043a \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0438  printer_create_dc().\n  "},"printer_delete_font":{"version":"(PECL printer SVN)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0439 \u0448\u0440\u0438\u0444\u0442","syntax":"\n   void <b>printer_delete_font<\/b>\n    ( resource $font_handle\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0439 \u0448\u0440\u0438\u0444\u0442. \u0417\u0430 \u043f\u0440\u0438\u043c\u0435\u0440\u043e\u043c \u043e\u0431\u0440\u0430\u0449\u0430\u0439\u0442\u0435\u0441\u044c \u043a \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    printer_select_font().\n  "},"printer_delete_pen":{"version":"(PECL printer SVN)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u043e","syntax":"\n   void <b>printer_delete_pen<\/b>\n    ( resource $pen_handle\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0435 \u043f\u0435\u0440\u043e. \u0417\u0430 \u043f\u0440\u0438\u043c\u0435\u0440\u043e\u043c \u043e\u0431\u0440\u0430\u0449\u0430\u0439\u0442\u0435\u0441\u044c \u043a \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    printer_select_pen().\n  "},"printer_draw_bmp":{"version":"(PECL printer SVN)","shortdesc":"\u0420\u0438\u0441\u0443\u0435\u0442 bmp","syntax":"\n   bool <b>printer_draw_bmp<\/b>\n    ( resource $printer_handle\n   , string $filename\n   , int $x\n   , int $y\n   [, int $width\n   ], int $height\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0440\u0438\u0441\u0443\u0435\u0442 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0443 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u0441 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435\u043c .bmp. \n  "},"printer_draw_chord":{"version":"(PECL printer SVN)","shortdesc":"\u0420\u0438\u0441\u0443\u0435\u0442 \u0445\u043e\u0440\u0434\u0443","syntax":"\n   void <b>printer_draw_chord<\/b>\n    ( resource $printer_handle\n   , int $rec_x\n   , int $rec_y\n   , int $rec_x1\n   , int $rec_y1\n   , int $rad_x\n   , int $rad_y\n   , int $rad_x1\n   , int $rad_y1\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0440\u0438\u0441\u0443\u0435\u0442 \u0445\u043e\u0440\u0434\u0443.\n  "},"printer_draw_elipse":{"version":"(PECL printer SVN)","shortdesc":"\u0420\u0438\u0441\u0443\u0435\u0442 \u044d\u043b\u043b\u0438\u043f\u0441","syntax":"\n   void <b>printer_draw_elipse<\/b>\n    ( resource $printer_handle\n   , int $ul_x\n   , int $ul_y\n   , int $lr_x\n   , int $lr_y\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0440\u0438\u0441\u0443\u0435\u0442 \u044d\u043b\u043b\u0438\u043f\u0441.\n  "},"printer_draw_line":{"version":"(PECL printer SVN)","shortdesc":"\u0420\u0438\u0441\u0443\u0435\u0442 \u043b\u0438\u043d\u0438\u044e","syntax":"\n   void <b>printer_draw_line<\/b>\n    ( resource $printer_handle\n   , int $from_x\n   , int $from_y\n   , int $to_x\n   , int $to_y\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0440\u0438\u0441\u0443\u0435\u0442 \u043b\u0438\u043d\u0438\u044e, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0435 \u043f\u0435\u0440\u043e.\n  "},"printer_draw_pie":{"version":"(PECL printer SVN)","shortdesc":"\u0420\u0438\u0441\u0443\u0435\u0442 \u0441\u0435\u043a\u0442\u043e\u0440 \u043a\u0440\u0443\u0433\u0430","syntax":"\n   void <b>printer_draw_pie<\/b>\n    ( resource $printer_handle\n   , int $rec_x\n   , int $rec_y\n   , int $rec_x1\n   , int $rec_y1\n   , int $rad1_x\n   , int $rad1_y\n   , int $rad2_x\n   , int $rad2_y\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0440\u0438\u0441\u0443\u0435\u0442 \u0441\u0435\u043a\u0442\u043e\u0440 \u043a\u0440\u0443\u0433\u0430.\n  "},"printer_draw_rectangle":{"version":"(PECL printer SVN)","shortdesc":"\u0420\u0438\u0441\u0443\u0435\u0442 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a","syntax":"\n   void <b>printer_draw_rectangle<\/b>\n    ( resource $printer_handle\n   , int $ul_x\n   , int $ul_y\n   , int $lr_x\n   , int $lr_y\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0440\u0438\u0441\u0443\u0435\u0442 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a.\n  "},"printer_draw_roundrect":{"version":"(PECL printer SVN)","shortdesc":"\u0420\u0438\u0441\u0443\u0435\u0442 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a \u0441\u043e \u0441\u0433\u043b\u0430\u0436\u0435\u043d\u043d\u044b\u043c\u0438 \u0443\u0433\u043b\u0430\u043c\u0438","syntax":"\n   void <b>printer_draw_roundrect<\/b>\n    ( resource $printer_handle\n   , int $ul_x\n   , int $ul_y\n   , int $lr_x\n   , int $lr_y\n   , int $width\n   , int $height\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0440\u0438\u0441\u0443\u0435\u0442 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a \u0441\u043e \u0441\u0433\u043b\u0430\u0436\u0435\u043d\u043d\u044b\u043c\u0438 \u0443\u0433\u043b\u0430\u043c\u0438.\n  "},"printer_draw_text":{"version":"(PECL printer SVN)","shortdesc":"\u0420\u0438\u0441\u0443\u0435\u0442 \u0442\u0435\u043a\u0441\u0442","syntax":"\n   void <b>printer_draw_text<\/b>\n    ( resource $printer_handle\n   , string $text\n   , int $x\n   , int $y\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0440\u0438\u0441\u0443\u0435\u0442 \u0442\u0435\u043a\u0441\u0442 text \u043d\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u0438\n   x, y, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0439\n   \u0448\u0440\u0438\u0444\u0442.\n  "},"printer_end_doc":{"version":"(PECL printer SVN)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442","syntax":"\n   bool <b>printer_end_doc<\/b>\n    ( resource $printer_handle\n   )","desc":"\n   \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0432 \u0441\u043f\u0443\u043b\u0435\u0440\u0435 \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u0430. \u041f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e\n   \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0433\u043e\u0442\u043e\u0432 \u043a \u043f\u0435\u0447\u0430\u0442\u0438. \u0417\u0430 \u043f\u0440\u0438\u043c\u0435\u0440\u043e\u043c \u043e\u0431\u0440\u0430\u0449\u0430\u0439\u0442\u0435\u0441\u044c \u043a \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    printer_start_doc().\n  "},"printer_end_page":{"version":"(PECL printer SVN)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0430\u043a\u0442\u0438\u0432\u043d\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443","syntax":"\n   bool <b>printer_end_page<\/b>\n    ( resource $printer_handle\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0430\u043a\u0442\u0438\u0432\u043d\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0432 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0435. \u0417\u0430 \u043f\u0440\u0438\u043c\u0435\u0440\u043e\u043c \u043e\u0431\u0440\u0430\u0449\u0430\u0439\u0442\u0435\u0441\u044c \u043a\n   \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0438  printer_start_doc().\n  "},"printer_get_option":{"version":"(PECL printer SVN)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u0430","syntax":"\n   mixed <b>printer_get_option<\/b>\n    ( resource $printer_handle\n   , string $option\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043e\u043f\u0446\u0438\u0438, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 option.\n  "},"printer_list":{"version":"(PECL printer SVN)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u043e\u0432, \u043f\u043e\u0434\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u043d\u044b\u0445 \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443","syntax":"\n   array <b>printer_list<\/b>\n    ( int $enumtype\n   [, string $name\n   [, int $level\n  ]] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u044b \u0438 \u0438\u0445 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438.\n  "},"printer_logical_fontheight":{"version":"(PECL printer SVN)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0432\u044b\u0441\u043e\u0442\u0443 \u0448\u0440\u0438\u0444\u0442\u0430","syntax":"\n   int <b>printer_logical_fontheight<\/b>\n    ( resource $printer_handle\n   , int $height\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0432\u044b\u0441\u043e\u0442\u0443 \u0448\u0440\u0438\u0444\u0442\u0430 height. \n  "},"printer_open":{"version":"(PECL printer SVN)","shortdesc":"\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u043e\u043c","syntax":"\n   resource <b>printer_open<\/b>\n    ([ string $printername\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u044b\u0442\u0430\u0435\u0442\u0441\u044f \u043e\u0442\u043a\u0440\u044b\u0442\u044c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c \u043f\u0440\u0438\u043d\u0435\u0442\u0440\u043e\u043c.\n  "},"printer_select_brush":{"version":"(PECL printer SVN)","shortdesc":"\u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u043a\u0438\u0441\u0442\u044c","syntax":"\n   void <b>printer_select_brush<\/b>\n    ( resource $printer_handle\n   , resource $brush_handle\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u043a\u0438\u0441\u0442\u044c, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u043c \u0440\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u044f \n   \u0434\u043b\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430. \u041a\u0438\u0441\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0430\u0441\u043a\u0438 \u0444\u0438\u0433\u0443\u0440. \u0415\u0441\u043b\u0438 \u0432\u044b \u0440\u0438\u0441\u0443\u0435\u0442\u0435 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a,\n   \u043a\u0438\u0441\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0440\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u044f \u0444\u0438\u0433\u0443\u0440\u044b, \u0430 \u043f\u0435\u0440\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0440\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u0440\u0430\u0435\u0432.\n  "},"printer_select_font":{"version":"(PECL printer SVN)","shortdesc":"\u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0448\u0440\u0438\u0444\u0442","syntax":"\n   void <b>printer_select_font<\/b>\n    ( resource $printer_handle\n   , resource $font_handle\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0448\u0440\u0438\u0444\u0442 \u0434\u043b\u044f \u0440\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u044f \u0442\u0435\u043a\u0441\u0442\u0430.\n  "},"printer_select_pen":{"version":"(PECL printer SVN)","shortdesc":"\u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u043f\u0435\u0440\u043e","syntax":"\n   void <b>printer_select_pen<\/b>\n    ( resource $printer_handle\n   , resource $pen_handle\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u043f\u0435\u0440\u043e, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u043c \u0440\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u044f\n   \u0434\u043b\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430. \u041f\u0435\u0440\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0440\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u0440\u044f\u043c\u044b\u0445 \u0438 \u043a\u0440\u0438\u0432\u044b\u0445 \u043b\u0438\u043d\u0438\u0439. \u041a \u043f\u0440\u0438\u043c\u0435\u0440\u0443,\n   \u0435\u0441\u043b\u0438 \u0432\u044b \u0440\u0438\u0441\u0443\u0435\u0442\u0435 \u043e\u0434\u0438\u043d\u043e\u0447\u043d\u0443\u044e \u043b\u0438\u043d\u0438\u044e, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u043e. \u0415\u0441\u043b\u0438 \u0432\u044b \u0440\u0438\u0441\u0443\u0435\u0442\u0435 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a, \u043f\u0435\u0440\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f\n   \u0434\u043b\u044f \u0440\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u0440\u0430\u0435\u0432, \u0430 \u043a\u0438\u0441\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0430\u0441\u043a\u0438 \u0444\u0438\u0433\u0443\u0440\u044b.\n   \u0415\u0441\u043b\u0438 \u0432\u044b \u043d\u0435 \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u043f\u0435\u0440\u043e \u043f\u0435\u0440\u0435\u0434 \u0440\u0438\u0441\u043e\u0432\u0430\u043d\u0438\u0435\u043c, \u0444\u0438\u0433\u0443\u0440\u0430 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0438\u043c\u0435\u0442\u044c \u043a\u0440\u043e\u043c\u043a\u0438. \n  "},"printer_set_option":{"version":"(PECL printer SVN)","shortdesc":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0441 \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u043e\u043c","syntax":"\n   bool <b>printer_set_option<\/b>\n    ( resource $printer_handle\n   , int $option\n   , mixed $value\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u0442 \u043e\u043f\u0446\u0438\u0438 \u0434\u043b\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f.\n  "},"printer_start_doc":{"version":"(PECL printer SVN)","shortdesc":"\u041d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442","syntax":"\n   bool <b>printer_start_doc<\/b>\n    ( resource $printer_handle\n   [, string $document\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0432 \u0441\u043f\u0443\u043b\u0435\u0440\u0435 \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u0430. \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u043c\u043e\u0436\u0435\u0442\n   \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0442\u0440\u0430\u043d\u0438\u0446, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u043b\u0430\u043d\u0438\u0440\u043e\u0432\u043a\u0438 \u0437\u0430\u0434\u0430\u0447\u0438 \u043f\u0435\u0447\u0430\u0442\u0438\n   \u0432 \u0441\u043f\u0443\u043b\u0435\u0440\u0435.\n  "},"printer_start_page":{"version":"(PECL printer SVN)","shortdesc":"\u041d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u043d\u043e\u0432\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443","syntax":"\n   bool <b>printer_start_page<\/b>\n    ( resource $printer_handle\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0432 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0435. \u0414\u043b\u044f \u043f\u0440\u0438\u043c\u0435\u0440\u0430\n   \u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u044e  printer_start_doc().\n  "},"printer_write":{"version":"(PECL printer SVN)","shortdesc":"\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 \u043f\u0440\u0438\u043d\u0442\u0435\u0440","syntax":"\n   bool <b>printer_write<\/b>\n    ( resource $printer_handle\n   , string $content\n   )","desc":"\n   \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 content \u043f\u0440\u044f\u043c\u043e \u043d\u0430 \u043f\u0440\u0438\u043d\u0442\u0435\u0440.\n  "},"printf":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043e\u0442\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443","syntax":"\n   int <b>printf<\/b>\n    ( string $format\n   [, mixed $args\n   [, mixed $...\n  ]] )","desc":""},"proc_close":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0417\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u043f\u0440\u043e\u0446\u0435\u0441\u0441, \u043e\u0442\u043a\u0440\u044b\u0442\u044b\u0439 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  proc_open() \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u0434 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u044d\u0442\u043e\u0433\u043e \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430","syntax":"\n   int <b>proc_close<\/b>\n    ( resource $process\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  proc_close() \u043f\u043e\u0445\u043e\u0436\u0430 \u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044e  pclose(),\n   \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u043e\u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0441 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430\u043c\u0438, \u043e\u0442\u043a\u0440\u044b\u0442\u044b\u043c\u0438 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    proc_open().\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  proc_close() \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430 \u0438 \n   \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0435\u0433\u043e \u043a\u043e\u0434 \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0430. \u0415\u0441\u043b\u0438 \u0432\u044b \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u043b\u0438 \u043f\u0430\u0439\u043f\u044b \u0443 \u044d\u0442\u043e\u0433\u043e \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430, \u0432\u044b\n   \u0434\u043e\u043b\u0436\u043d\u044b \u0437\u0430\u043a\u0440\u044b\u0442\u044c \u0438\u0445 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  fclose() \u043f\u0435\u0440\u0435\u0434 \u0442\u0435\u043c, \u043a\u0430\u043a \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c \u044d\u0442\u0443 \u0444\u0443\u043d\u043a\u0446\u0438\u044e\n   \u0434\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u043f\u043e\u043b\u043d\u043e\u0439 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b: \u0434\u043e\u0447\u0435\u0440\u043d\u0438\u0435 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u044b \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043d\u0435\u0441\u043f\u043e\u0441\u043e\u0431\u043d\u044b \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c\u0441\u044f,\n   \u0435\u0441\u043b\u0438 \u043f\u0430\u0439\u043f\u044b \u043e\u0442\u043a\u0440\u044b\u0442\u044b.\n  "},"proc_get_status":{"version":"(PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435, \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u043c \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  proc_open()","syntax":"\n   array <b>proc_get_status<\/b>\n    ( resource $process\n   )","desc":"\n    proc_get_status() \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\n   \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435, \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u043c \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  proc_open().\n  "},"proc_nice":{"version":"(PHP 5)","shortdesc":"\u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430","syntax":"\n   bool <b>proc_nice<\/b>\n    ( int $increment\n   )","desc":"\n    proc_nice() \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430\n   \u043d\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0435 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 increment. \n   \u041f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 increment \u0431\u0443\u0434\u0435\u0442 \u0443\u043c\u0435\u043d\u044c\u0448\u0430\u0442\u044c \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \n   \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430, \u0430 \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 increment\n   \u0431\u0443\u0434\u0435\u0442 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0442\u044c \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442.\n  "},"proc_open":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\n     \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0438 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043d\u0430 \u0444\u0430\u0439\u043b \u0434\u043b\u044f \u0432\u0432\u043e\u0434\u0430\/\u0432\u044b\u0432\u043e\u0434\u0430\n    ","syntax":"\n      resource <b>proc_open<\/b>\n       ( string $cmd\n      , array $descriptorspec\n      , array &$pipes\n      [, string $cwd\n      [, array $env\n      [, array $other_options\n     ]]] )","desc":"\n      proc_open() \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u0430  popen()\n     \u043d\u043e \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430\u043c\u043d\u043e\u0433\u043e \u0431\u043e\u043b\u044c\u0448\u0435 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044f \u043d\u0430\u0434 \u0438\u0441\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435\u043c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b.\n    "},"proc_terminate":{"version":"(PHP 5)","shortdesc":"\u0423\u043d\u0438\u0447\u0442\u043e\u0436\u0430\u0435\u0442 \u043f\u0440\u043e\u0446\u0435\u0441\u0441, \u043e\u0442\u043a\u0440\u044b\u0442\u044b\u0439 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 proc_open","syntax":"\n   bool <b>proc_terminate<\/b>\n    ( resource $process\n   [, int $signal = 15\n  ] )","desc":"\n   \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0443 process (\u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    proc_open()) \u0441\u0438\u0433\u043d\u0430\u043b, \u0433\u043e\u0432\u043e\u0440\u044f\u0449\u0438\u0439 \u043e \u0442\u043e\u043c, \u0447\u0442\u043e \u043e\u043d \u0434\u043e\u043b\u0436\u0435\u043d \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c\u0441\u044f.\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  proc_terminate() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043d\u0435\u043c\u0435\u0434\u043b\u0435\u043d\u043d\u043e \u0438 \u043d\u0435 \u043e\u0436\u0438\u0434\u0430\u0435\u0442\n   \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430.\n  "},"property_exists":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043b\u0438 \u043e\u0431\u044a\u0435\u043a\u0442 \u0438\u043b\u0438 \u043a\u043b\u0430\u0441\u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\n  ","syntax":"\n   bool <b>property_exists<\/b>\n    ( mixed $class\n   , string $property\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u043b\u0438 \u0430\u0442\u0440\u0438\u0431\u0443\u0442 property\n   \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c \u043a\u043b\u0430\u0441\u0441\u0435.\n  "},"ps_add_bookmark":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Add bookmark to current page","syntax":"\n   int <b>ps_add_bookmark<\/b>\n    ( resource $psdoc\n   , string $text\n   [, int $parent = 0\n   [, int $open = 0\n  ]] )","desc":"\n   Adds a bookmark for the current page. Bookmarks usually appear in\n   PDF-Viewers left of the page in a hierarchical tree. Clicking on a\n   bookmark will jump to the given page.\n  "},"ps_add_launchlink":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Adds link which launches file","syntax":"\n   bool <b>ps_add_launchlink<\/b>\n    ( resource $psdoc\n   , float $llx\n   , float $lly\n   , float $urx\n   , float $ury\n   , string $filename\n   )","desc":"\n   Places a hyperlink at the given position pointing to a file program\n   which is being started when clicked on. The hyperlink's source position\n   is a rectangle\n   with its lower left corner at (llx, lly) and its upper right corner at\n   (urx, ury). The rectangle has by default a thin blue border.\n  "},"ps_add_locallink":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Adds link to a page in the same document","syntax":"\n   bool <b>ps_add_locallink<\/b>\n    ( resource $psdoc\n   , float $llx\n   , float $lly\n   , float $urx\n   , float $ury\n   , int $page\n   , string $dest\n   )","desc":"\n   Places a hyperlink at the given position pointing to a page in the same\n   document. Clicking on the link will jump to the given page. The first page\n   in a document has number 1.\n  "},"ps_add_note":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Adds note to current page","syntax":"\n   bool <b>ps_add_note<\/b>\n    ( resource $psdoc\n   , float $llx\n   , float $lly\n   , float $urx\n   , float $ury\n   , string $contents\n   , string $title\n   , string $icon\n   , int $open\n   )","desc":"\n   Adds a note at a certain position on the page. Notes are like little\n   rectangular sheets with text on it, which can be placed anywhere on\n   a page. They\n   are shown either folded or unfolded. If folded, the specified icon\n   is used as a placeholder.\n  "},"ps_add_pdflink":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Adds link to a page in a second pdf document","syntax":"\n   bool <b>ps_add_pdflink<\/b>\n    ( resource $psdoc\n   , float $llx\n   , float $lly\n   , float $urx\n   , float $ury\n   , string $filename\n   , int $page\n   , string $dest\n   )","desc":"\n   Places a hyperlink at the given position pointing to a second pdf document.\n   Clicking on the link will branch to the document at the given page. The\n   first page in a document has number 1.\n  "},"ps_add_weblink":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Adds link to a web location","syntax":"\n   bool <b>ps_add_weblink<\/b>\n    ( resource $psdoc\n   , float $llx\n   , float $lly\n   , float $urx\n   , float $ury\n   , string $url\n   )","desc":"\n   Places a hyperlink at the given position pointing to a web page. The \n   hyperlink's source position is a rectangle with its lower left corner at\n   (llx, lly) and\n   its upper right corner at (urx,\n   ury). The rectangle has by default a thin\n   blue border.\n  "},"ps_arc":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Draws an arc counterclockwise","syntax":"\n   bool <b>ps_arc<\/b>\n    ( resource $psdoc\n   , float $x\n   , float $y\n   , float $radius\n   , float $alpha\n   , float $beta\n   )","desc":"\n   Draws a portion of a circle with at middle point at\n   (x, y). The arc starts at an\n   angle of alpha and ends at an angle of\n   beta. It is drawn counterclockwise (use\n    ps_arcn() to draw clockwise). The subpath added\n   to the current path starts on the arc at angle alpha\n   and ends on the arc at angle beta.\n  "},"ps_arcn":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Draws an arc clockwise","syntax":"\n   bool <b>ps_arcn<\/b>\n    ( resource $psdoc\n   , float $x\n   , float $y\n   , float $radius\n   , float $alpha\n   , float $beta\n   )","desc":"\n   Draws a portion of a circle with at middle point at\n   (x, y). The arc starts at an\n   angle of alpha and ends at an angle of\n   beta. It is drawn clockwise (use\n    ps_arc() to draw counterclockwise). The subpath added to\n   the current path starts on the arc at angle beta and\n   ends on the arc at angle alpha.\n  "},"ps_begin_page":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Start a new page","syntax":"\n   bool <b>ps_begin_page<\/b>\n    ( resource $psdoc\n   , float $width\n   , float $height\n   )","desc":"\n   Starts a new page. Although the parameters width\n   and height imply a different page size for each\n   page, this is not possible in PostScript. The first call of\n    ps_begin_page() will set the page size for the whole\n   document. Consecutive calls will have no effect, except for creating a new\n   page. The situation is different if you intent to convert the PostScript\n   document into PDF. This function places pdfmarks into the document which\n   can set the size for each page indiviually. The resulting PDF document will\n   have different page sizes.\n  "},"ps_begin_pattern":{"version":"(PECL ps >= 1.2.0)","shortdesc":"Start a new pattern","syntax":"\n   int <b>ps_begin_pattern<\/b>\n    ( resource $psdoc\n   , float $width\n   , float $height\n   , float $xstep\n   , float $ystep\n   , int $painttype\n   )","desc":"\n   Starts a new pattern. A pattern is like a page containing e.g. a drawing\n   which can be used for filling areas. It is used like a color by calling\n    ps_setcolor() and setting the color space to\n   pattern.\n  "},"ps_begin_template":{"version":"(PECL ps >= 1.2.0)","shortdesc":"Start a new template","syntax":"\n   int <b>ps_begin_template<\/b>\n    ( resource $psdoc\n   , float $width\n   , float $height\n   )","desc":"\n   Starts a new template. A template is called a form in the postscript\n   language. It is created similar to a pattern but used like an image.\n   Templates are often used for drawings which are placed several times\n   through out the document, e.g. like a company logo. All drawing functions\n   may be used within a template. The template will not be drawn until\n   it is placed by  ps_place_image().\n  "},"ps_circle":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Draws a circle","syntax":"\n   bool <b>ps_circle<\/b>\n    ( resource $psdoc\n   , float $x\n   , float $y\n   , float $radius\n   )","desc":"\n   Draws a circle with its middle point at (x,\n   y). The circle starts and ends at position\n   (x+radius,\n   y). If this function is called outside a path it\n   will start a new path. If it is called within a path it will add the circle\n   as a subpath. If the last drawing operation does not end in point\n   (x+radius,\n   y) then there will be a gap in the path.\n   "},"ps_clip":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Clips drawing to current path","syntax":"\n   bool <b>ps_clip<\/b>\n    ( resource $psdoc\n   )","desc":"\n   Takes the current path and uses it to define the border of a clipping area.\n   Everything drawn outside of that area will not be visible.\n  "},"ps_close_image":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Closes image and frees memory","syntax":"\n   void <b>ps_close_image<\/b>\n    ( resource $psdoc\n   , int $imageid\n   )","desc":"\n   Closes an image and frees its resources. Once an image is closed\n   it cannot be used anymore.\n  "},"ps_close":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Closes a PostScript document","syntax":"\n   bool <b>ps_close<\/b>\n    ( resource $psdoc\n   )","desc":"\n   Closes the PostScript document.\n  "},"ps_closepath_stroke":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Closes and strokes path","syntax":"\n   bool <b>ps_closepath_stroke<\/b>\n    ( resource $psdoc\n   )","desc":"\n   Connects the last point with first point of a path and draws the resulting\n   closed line.\n  "},"ps_closepath":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Closes path","syntax":"\n   bool <b>ps_closepath<\/b>\n    ( resource $psdoc\n   )","desc":"\n   Connects the last point with the first point of a path. The resulting\n   path can be used for stroking, filling, clipping, etc..\n  "},"ps_continue_text":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Continue text in next line","syntax":"\n   bool <b>ps_continue_text<\/b>\n    ( resource $psdoc\n   , string $text\n   )","desc":"\n   Output a text one line below the last line. The line spacing is\n   taken from the value \"leading\" which must be set with\n    ps_set_value(). The actual position of the\n   text is determined by the values \"textx\" and \"texty\" which can be requested\n   with  ps_get_value()\n  "},"ps_curveto":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Draws a curve","syntax":"\n   bool <b>ps_curveto<\/b>\n    ( resource $psdoc\n   , float $x1\n   , float $y1\n   , float $x2\n   , float $y2\n   , float $x3\n   , float $y3\n   )","desc":"\n   Add a section of a cubic B\u00e9zier curve described by the three given control\n   points to the current path.\n  "},"ps_delete":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Deletes all resources of a PostScript document","syntax":"\n   bool <b>ps_delete<\/b>\n    ( resource $psdoc\n   )","desc":"\n   Mainly frees memory used by the document. Also closes a file, if it was not\n   closed before with  ps_close(). You should in any case\n   close the file with  ps_close() before, because\n    ps_close() not just closes the file but also outputs a\n   trailor containing PostScript comments like the number of pages in the\n   document and adding the bookmark hierarchy.\n  "},"ps_end_page":{"version":"(PECL ps >= 1.1.0)","shortdesc":"End a page","syntax":"\n   bool <b>ps_end_page<\/b>\n    ( resource $psdoc\n   )","desc":"\n   Ends a page which was started with  ps_begin_page().\n   Ending a page will leave the current drawing context, which e.g. requires\n   to reload fonts if they were loading within the page, and to set many\n   other drawing parameters like the line width, or color..\n  "},"ps_end_pattern":{"version":"(PECL ps >= 1.2.0)","shortdesc":"End a pattern","syntax":"\n   bool <b>ps_end_pattern<\/b>\n    ( resource $psdoc\n   )","desc":"\n   Ends a pattern which was started with  ps_begin_pattern().\n   Once a pattern has been ended, it can be used like a color to fill\n   areas.\n  "},"ps_end_template":{"version":"(PECL ps >= 1.2.0)","shortdesc":"End a template","syntax":"\n   bool <b>ps_end_template<\/b>\n    ( resource $psdoc\n   )","desc":"\n   Ends a template which was started with  ps_begin_template().\n   Once a template has been ended, it can be used like an image.\n  "},"ps_fill_stroke":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Fills and strokes the current path","syntax":"\n   bool <b>ps_fill_stroke<\/b>\n    ( resource $psdoc   \n   )","desc":"\n   Fills and draws the path constructed with previously called drawing\n   functions like  ps_lineto().\n  "},"ps_fill":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Fills the current path","syntax":"\n   bool <b>ps_fill<\/b>\n    ( resource $psdoc\n   )","desc":"\n   Fills the path constructed with previously called drawing functions like\n    ps_lineto().\n  "},"ps_findfont":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Loads a font","syntax":"\n   int <b>ps_findfont<\/b>\n    ( resource $psdoc\n   , string $fontname\n   , string $encoding\n   [, bool $embed = false\n  ] )","desc":"\n   Loads a font for later use. Before text is output with a loaded font it\n   must be set with  ps_setfont(). This function needs the\n   adobe font metric file in order to calculate the space used up by the\n   characters. A font which is loaded within a page will only be available on\n   that page. Fonts which are to be used in the complete document have to be\n   loaded before the first call of  ps_begin_page(). Calling\n    ps_findfont() between pages will make that font\n   available for all following pages.\n  "},"ps_get_buffer":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Fetches the full buffer containig the generated PS data","syntax":"\n   string <b>ps_get_buffer<\/b>\n    ( resource $psdoc\n   )","desc":"This function is not implemented yet. It will always return an empty\n   string. The idea for a later implementation is to write the contents of\n   the postscript file into an internal buffer if in memory creation is\n   requested, and retrieve the buffer content with this function.\n   Currently, documents\n   created in memory are send to the browser without buffering.\n  "},"ps_get_parameter":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Gets certain parameters","syntax":"\n   string <b>ps_get_parameter<\/b>\n    ( resource $psdoc\n   , string $name\n   [, float $modifier\n  ] )","desc":"\n   Gets several parameters which were directly set by\n    ps_set_parameter() or indirectly by one of the other\n   functions. Parameters are by definition string\n   values. This function cannot be used to retrieve resources which were also\n   set by  ps_set_parameter().\n  "},"ps_get_value":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Gets certain values","syntax":"\n   float <b>ps_get_value<\/b>\n    ( resource $psdoc\n   , string $name\n   [, float $modifier\n  ] )","desc":"Gets several values which were set by\n    ps_set_value(). Values are by definition float values.\n  "},"ps_hyphenate":{"version":"(PECL ps >= 1.1.1)","shortdesc":"Hyphenates a word","syntax":"\n   array <b>ps_hyphenate<\/b>\n    ( resource $psdoc\n   , string $text\n   )","desc":"\n   Hyphenates the passed word.  ps_hyphenate() evaluates the\n   value hyphenminchars (set by  ps_set_value()) and\n   the parameter hyphendict (set by  ps_set_parameter()).\n   hyphendict must be set before calling this function.\n  "},"ps_include_file":{"version":"(PECL ps >= 1.3.4)","shortdesc":"Reads an external file with raw PostScript code","syntax":"\n   bool <b>ps_include_file<\/b>\n    ( resource $psdoc\n   , string $file\n   )","desc":"\n   "},"ps_lineto":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Draws a line","syntax":"\n   bool <b>ps_lineto<\/b>\n    ( resource $psdoc\n   , float $x\n   , float $y\n   )","desc":"\n   Adds a straight line from the current point to the given coordinates to the\n   current path. Use  ps_moveto() to set the starting point\n   of the line.\n  "},"ps_makespotcolor":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Create spot color","syntax":"\n   int <b>ps_makespotcolor<\/b>\n    ( resource $psdoc\n   , string $name\n   [, int $reserved = 0\n  ] )","desc":"\n   Creates a spot color from the current fill color. The fill color must be\n   defined in rgb, cmyk or gray colorspace. The spot color name can be an\n   arbitrary name. A spot color can be set as any color with\n    ps_setcolor(). When the document is not printed\n   but displayed by an postscript viewer the given color in the specified\n   color space is use.\n  "},"ps_moveto":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Sets current point","syntax":"\n   bool <b>ps_moveto<\/b>\n    ( resource $psdoc\n   , float $x\n   , float $y\n   )","desc":"\n   Sets the current point to new coordinates. If this is the first call of\n    ps_moveto() after a previous path has been ended then it\n   will start a new path. If this function is called in the middle of a path\n   it will just set the current point and start a subpath.\n  "},"ps_new":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Creates a new PostScript document object","syntax":"\n   resource <b>ps_new<\/b>\n    ( void\n   )","desc":"\n   Creates a new document instance. It does not create the file on disk or in\n   memory, it just sets up everything.  ps_new() is usually\n   followed by a call of  ps_open_file() to actually create\n   the postscript document.\n  "},"ps_open_file":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Opens a file for output","syntax":"\n   bool <b>ps_open_file<\/b>\n    ( resource $psdoc\n   [, string $filename\n  ] )","desc":"\n   Creates a new file on disk and writes the PostScript document into it. The\n   file will be closed when  ps_close() is called.\n  "},"ps_open_image_file":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Opens image from file","syntax":"\n   int <b>ps_open_image_file<\/b>\n    ( resource $psdoc\n   , string $type\n   , string $filename\n   [, string $stringparam\n   [, int $intparam = 0\n  ]] )","desc":"\n   Loads an image for later use.\n  "},"ps_open_image":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Reads an image for later placement","syntax":"\n   int <b>ps_open_image<\/b>\n    ( resource $psdoc\n   , string $type\n   , string $source\n   , string $data\n   , int $lenght\n   , int $width\n   , int $height\n   , int $components\n   , int $bpc\n   , string $params\n   )","desc":"\n    Reads an image which is already available in memory. The parameter\n    source is currently not evaluated and assumed to be\n    memory. The image data is a sequence of pixels starting\n    in th upper left corner and ending in the lower right corner. Each pixel\n    consists of components color components, and each\n    component has bpc bits.\n  "},"ps_open_memory_image":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Takes an GD image and returns an image for placement in a PS document","syntax":"\n   int <b>ps_open_memory_image<\/b>\n    ( resource $psdoc\n   , int $gd\n   )","desc":"\n   "},"ps_place_image":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Places image on the page","syntax":"\n   bool <b>ps_place_image<\/b>\n    ( resource $psdoc\n   , int $imageid\n   , float $x\n   , float $y\n   , float $scale\n   )","desc":"\n   Places a formerly loaded image on the page. The image can be scaled.\n   If the image shall be rotated as well, you will have to rotate the\n   coordinate system before with  ps_rotate().\n  "},"ps_rect":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Draws a rectangle","syntax":"\n   bool <b>ps_rect<\/b>\n    ( resource $psdoc\n   , float $x\n   , float $y\n   , float $width\n   , float $height\n   )","desc":"\n   Draws a rectangle with its lower left corner at (x,\n   y). The rectangle starts and ends in its lower left\n   corner. If this function is called outside a path it will start a new path.\n   If it is called within a path it will add the rectangle as a subpath. If\n   the last drawing operation does not end in the lower left corner then there\n   will be a gap in the path.\n  "},"ps_restore":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Restore previously save context","syntax":"\n   bool <b>ps_restore<\/b>\n    ( resource $psdoc\n   )","desc":"\n   Restores a previously saved graphics context. Any call of\n    ps_save() must be accompanied by a call to\n    ps_restore(). All coordinate transformations, line\n   style settings, color settings, etc. are being restored to the state\n   before the call of  ps_save().\n  "},"ps_rotate":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Sets rotation factor","syntax":"\n   bool <b>ps_rotate<\/b>\n    ( resource $psdoc\n   , float $rot\n   )","desc":"\n   Sets the rotation of the coordinate system.\n  "},"ps_save":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Save current context","syntax":"\n   bool <b>ps_save<\/b>\n    ( resource $psdoc\n   )","desc":"\n   Saves the current graphics context, containing colors, translation and\n   rotation settings and some more. A saved context can be restored with\n    ps_restore().\n  "},"ps_scale":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Sets scaling factor","syntax":"\n   bool <b>ps_scale<\/b>\n    ( resource $psdoc\n   , float $x\n   , float $y\n   )","desc":"\n   Sets horizontal and vertical scaling of the coordinate system.\n  "},"ps_set_border_color":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Sets color of border for annotations","syntax":"\n   bool <b>ps_set_border_color<\/b>\n    ( resource $psdoc\n   , float $red\n   , float $green\n   , float $blue\n   )","desc":"\n   Links added with one of the functions  ps_add_weblink(),\n    ps_add_pdflink(), etc. will be displayed with a\n   surounded rectangle when the postscript document is converted to\n   pdf and viewed in a pdf viewer. This rectangle is not visible in\n   the postscript document.\n   This function sets the color of the rectangle's border line.\n  "},"ps_set_border_dash":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Sets length of dashes for border of annotations","syntax":"\n   bool <b>ps_set_border_dash<\/b>\n    ( resource $psdoc\n   , float $black\n   , float $white\n   )","desc":"\n   Links added with one of the functions  ps_add_weblink(),\n    ps_add_pdflink(), etc. will be displayed with a\n   surounded rectangle when the postscript document is converted to\n   pdf and viewed in a pdf viewer. This rectangle is not visible in\n   the postscript document.\n   This function sets the length of the black and white portion of a\n   dashed border line.\n  "},"ps_set_border_style":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Sets border style of annotations","syntax":"\n   bool <b>ps_set_border_style<\/b>\n    ( resource $psdoc\n   , string $style\n   , float $width\n   )","desc":"\n   Links added with one of the functions  ps_add_weblink(),\n    ps_add_pdflink(), etc. will be displayed with a\n   surounded rectangle when the postscript document is converted to\n   pdf and viewed in a pdf viewer. This rectangle is not visible in\n   the postscript document.\n   This function sets the appearance and width of the border line.\n  "},"ps_set_info":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Sets information fields of document","syntax":"\n   bool <b>ps_set_info<\/b>\n    ( resource $p\n   , string $key\n   , string $val\n   )","desc":"\n   Sets certain information fields of the document. This fields will be shown\n   as a comment in the header of the PostScript file. If the document is\n   converted to pdf this fields will also be used for the document\n   information.\n  "},"ps_set_parameter":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Sets certain parameters","syntax":"\n   bool <b>ps_set_parameter<\/b>\n    ( resource $psdoc\n   , string $name\n   , string $value\n   )","desc":"\n   Sets several parameters which are used by many functions. Parameters are by\n   definition string values.\n  "},"ps_set_text_pos":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Sets position for text output","syntax":"\n   bool <b>ps_set_text_pos<\/b>\n    ( resource $psdoc\n   , float $x\n   , float $y\n   )","desc":"\n   Set the position for the next text output. You may alternatively set the x\n   and y value separately by calling  ps_set_value() and\n   choosing textx respectively texty as\n   the value name.\n  "},"ps_set_value":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Sets certain values","syntax":"\n   bool <b>ps_set_value<\/b>\n    ( resource $psdoc\n   , string $name\n   , float $value\n   )","desc":"\n   Sets several values which are used by many functions. Parameters are by\n   definition float values.\n  "},"ps_setcolor":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Sets current color","syntax":"\n   bool <b>ps_setcolor<\/b>\n    ( resource $psdoc\n   , string $type\n   , string $colorspace\n   , float $c1\n   , float $c2\n   , float $c3\n   , float $c4\n   )","desc":"\n   Sets the color for drawing, filling, or both.\n  "},"ps_setdash":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Sets appearance of a dashed line","syntax":"\n   bool <b>ps_setdash<\/b>\n    ( resource $psdoc\n   , float $on\n   , float $off\n   )","desc":"\n   Sets the length of the black and white portions of a dashed line.\n  "},"ps_setflat":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Sets flatness","syntax":"\n   bool <b>ps_setflat<\/b>\n    ( resource $psdoc\n   , float $value\n   )","desc":"\n   "},"ps_setfont":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Sets font to use for following output","syntax":"\n   bool <b>ps_setfont<\/b>\n    ( resource $psdoc\n   , int $fontid\n   , float $size\n   )","desc":"\n   Sets a font, which has to be loaded before with\n    ps_findfont(). Outputting text without setting a font\n   results in an error.\n  "},"ps_setgray":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Sets gray value","syntax":"\n   bool <b>ps_setgray<\/b>\n    ( resource $psdoc\n   , float $gray\n   )","desc":"\n   Sets the gray value for all following drawing operations.\n  "},"ps_setlinecap":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Sets appearance of line ends","syntax":"\n   bool <b>ps_setlinecap<\/b>\n    ( resource $psdoc\n   , int $type\n   )","desc":"\n   Sets how line ends look like.\n  "},"ps_setlinejoin":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Sets how contected lines are joined","syntax":"\n   bool <b>ps_setlinejoin<\/b>\n    ( resource $psdoc\n   , int $type\n   )","desc":"\n   Sets how lines are joined.\n  "},"ps_setlinewidth":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Sets width of a line","syntax":"\n   bool <b>ps_setlinewidth<\/b>\n    ( resource $psdoc\n   , float $width\n   )","desc":"\n   Sets the line width for all following drawing operations.\n  "},"ps_setmiterlimit":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Sets the miter limit","syntax":"\n   bool <b>ps_setmiterlimit<\/b>\n    ( resource $psdoc\n   , float $value\n   )","desc":"\n   If two lines join in a small angle and the line join is set to\n   PS_LINEJOIN_MITER, then\n   the resulting spike will be very long. The miter limit is the maximum\n   ratio of the miter length (the length of the spike) and the line width.\n  "},"ps_setoverprintmode":{"version":"(PECL ps >= 1.3.0)","shortdesc":"Sets overprint mode","syntax":"\n   bool <b>ps_setoverprintmode<\/b>\n    ( resource $psdoc\n   , int $mode\n   )","desc":"\n   "},"ps_setpolydash":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Sets appearance of a dashed line","syntax":"\n   bool <b>ps_setpolydash<\/b>\n    ( resource $psdoc\n   , float $arr\n   )","desc":"\n   Sets the length of the black and white portions of a dashed line.\n    ps_setpolydash() is used to set more complicated dash\n   patterns.\n  "},"ps_shading_pattern":{"version":"(PECL ps >= 1.3.0)","shortdesc":"Creates a pattern based on a shading","syntax":"\n   int <b>ps_shading_pattern<\/b>\n    ( resource $psdoc\n   , int $shadingid\n   , string $optlist\n   )","desc":"\n   Creates a pattern based on a shading, which has to be created before with\n    ps_shading(). Shading patterns can be used like regular\n   patterns.\n  "},"ps_shading":{"version":"(PECL ps >= 1.3.0)","shortdesc":"Creates a shading for later use","syntax":"\n   int <b>ps_shading<\/b>\n    ( resource $psdoc\n   , string $type\n   , float $x0\n   , float $y0\n   , float $x1\n   , float $y1\n   , float $c1\n   , float $c2\n   , float $c3\n   , float $c4\n   , string $optlist\n   )","desc":"\n   Creates a shading, which can be used by  ps_shfill() or\n    ps_shading_pattern().\n  "},"ps_shfill":{"version":"(PECL ps >= 1.3.0)","shortdesc":"Fills an area with a shading","syntax":"\n   bool <b>ps_shfill<\/b>\n    ( resource $psdoc\n   , int $shadingid\n   )","desc":"\n   Fills an area with a shading, which has to be created before with\n    ps_shading(). This is an alternative way to creating\n   a pattern from a shading  ps_shading_pattern() and using\n   the pattern as the filling color.\n  "},"ps_show_boxed":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Output text in a box","syntax":"\n   int <b>ps_show_boxed<\/b>\n    ( resource $psdoc\n   , string $text\n   , float $left\n   , float $bottom\n   , float $width\n   , float $height\n   , string $hmode\n   [, string $feature\n  ] )","desc":"\n   Outputs a text in a given box. The lower left corner of the box is at\n   (left, bottom). Line breaks\n   will be inserted where needed. Multiple spaces are treated as one.\n   Tabulators are treated as spaces.\n  "},"ps_show_xy":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Output text at given position","syntax":"\n   bool <b>ps_show_xy<\/b>\n    ( resource $psdoc\n   , string $text\n   , float $x\n   , float $y\n   )","desc":"\n   Output a text at the given text position.\n  "},"ps_show_xy2":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Output text at position","syntax":"\n   bool <b>ps_show_xy2<\/b>\n    ( resource $psdoc\n   , string $text\n   , int $len\n   , float $xcoor\n   , float $ycoor\n   )","desc":"\n   "},"ps_show":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Output text","syntax":"\n   bool <b>ps_show<\/b>\n    ( resource $psdoc\n   , string $text\n   )","desc":"\n   Output a text at the current text position. The text position can be set\n   by storing the x and y coordinates into the values textx\n   and texty with the function\n    ps_set_value(). The function will issue an\n   error if a font was not set before with  ps_setfont().\n  "},"ps_show2":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Output a text at current position","syntax":"\n   bool <b>ps_show2<\/b>\n    ( resource $psdoc\n   , string $text\n   , int $len\n   )","desc":"\n   "},"ps_string_geometry":{"version":"(PECL ps >= 1.2.0)","shortdesc":"Gets geometry of a string","syntax":"\n   array <b>ps_string_geometry<\/b>\n    ( resource $psdoc\n   , string $text\n   [, int $fontid = 0\n   [, float $size = 0.0\n  ]] )","desc":"\n   This function is similar to  ps_stringwidth() but returns\n   an array of dimensions containing the width, ascender, and descender\n   of the text.\n   "},"ps_stringwidth":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Gets width of a string","syntax":"\n   float <b>ps_stringwidth<\/b>\n    ( resource $psdoc\n   , string $text\n   [, int $fontid = 0\n   [, float $size = 0.0\n  ]] )","desc":"\n   Calculates the width of a string in points if it was output\n   in the given font and font size.\n   This function needs an Adobe font\n   metrics file to calculate the precise width. If kerning is turned on,\n   it will be taken into account.\n  "},"ps_stroke":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Draws the current path","syntax":"\n   bool <b>ps_stroke<\/b>\n    ( resource $psdoc\n   )","desc":"\n   Draws the path constructed with previously called drawing functions like\n    ps_lineto().\n  "},"ps_symbol_name":{"version":"(PECL ps >= 1.2.0)","shortdesc":"Gets name of a glyph","syntax":"\n   string <b>ps_symbol_name<\/b>\n    ( resource $psdoc\n   , int $ord\n   [, int $fontid = 0\n  ] )","desc":"\n   This function needs an Adobe font metrics file to know which glyphs are\n   available.\n  "},"ps_symbol_width":{"version":"(PECL ps >= 1.2.0)","shortdesc":"Gets width of a glyph","syntax":"\n   float <b>ps_symbol_width<\/b>\n    ( resource $psdoc\n   , int $ord\n   [, int $fontid = 0\n   [, float $size = 0.0\n  ]] )","desc":"\n   Calculates the width of a glyph in points if it was output in the given\n   font and font size.  This function needs an Adobe font metrics file to\n   calculate the precise width.\n  "},"ps_symbol":{"version":"(PECL ps >= 1.2.0)","shortdesc":"Output a glyph","syntax":"\n   bool <b>ps_symbol<\/b>\n    ( resource $psdoc\n   , int $ord\n   )","desc":"\n   Output the glyph at position ord in the font\n   encoding vector of the current font. The font encoding for a font can be\n   set when loading the font with  ps_findfont().\n  "},"ps_translate":{"version":"(PECL ps >= 1.1.0)","shortdesc":"Sets translation","syntax":"\n   bool <b>ps_translate<\/b>\n    ( resource $psdoc\n   , float $x\n   , float $y\n   )","desc":"\n   Sets a new initial point of the coordinate system.\n  "},"pspell_add_to_personal":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043b\u043e\u0432\u043e \u0432 \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u043b\u043e\u0432","syntax":"\n   bool <b>pspell_add_to_personal<\/b>\n    ( int $dictionary_link\n   , string $word\n   )","desc":""},"pspell_add_to_session":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043b\u043e\u0432\u043e \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u043b\u043e\u0432 \u0432 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0441\u0435\u0441\u0441\u0438\u0438","syntax":"\n   bool <b>pspell_add_to_session<\/b>\n    ( int $dictionary_link\n   , string $word\n   )","desc":""},"pspell_check":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0441\u043b\u043e\u0432\u043e","syntax":"\n   bool <b>pspell_check<\/b>\n    ( int $dictionary_link\n   , string $word\n   )","desc":""},"pspell_clear_session":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u041e\u0447\u0438\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0441\u0435\u0441\u0441\u0438\u044e","syntax":"\n   bool <b>pspell_clear_session<\/b>\n    ( int $dictionary_link\n   )","desc":""},"pspell_config_create":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044e, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u0443\u044e \u0434\u043b\u044f \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u044f \u0441\u043b\u043e\u0432\u0430\u0440\u044f","syntax":"\n   int <b>pspell_config_create<\/b>\n    ( string $language\n   [, string $spelling\n   [, string $jargon\n   [, string $encoding\n  ]]] )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044e, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u0443\u044e \u0434\u043b\u044f \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u044f \u0441\u043b\u043e\u0432\u0430\u0440\u044f.\n  "},"pspell_config_data_dir":{"version":"(PHP 5)","shortdesc":"\u0420\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432 \u0441 \u044f\u0437\u044b\u043a\u043e\u0432\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438","syntax":"\n   bool <b>pspell_config_data_dir<\/b>\n    ( int $conf\n   , string $directory\n   )","desc":"\n   "},"pspell_config_dict_dir":{"version":"(PHP 5)","shortdesc":"\u0420\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430 \u0441\u043b\u043e\u0432","syntax":"\n   bool <b>pspell_config_dict_dir<\/b>\n    ( int $conf\n   , string $directory\n   )","desc":"\n   "},"pspell_config_ignore":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u0418\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0435\u0442 \u0441\u043b\u043e\u0432\u0430 \u0434\u043b\u0438\u043d\u043e\u0439 \u043c\u0435\u043d\u0435\u0435 N \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432","syntax":"\n   bool <b>pspell_config_ignore<\/b>\n    ( int $dictionary_link\n   , int $n\n   )","desc":""},"pspell_config_mode":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u0440\u0435\u0436\u0438\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u0445 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f","syntax":"\n   bool <b>pspell_config_mode<\/b>\n    ( int $dictionary_link\n   , int $mode\n   )","desc":""},"pspell_config_personal":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0444\u0430\u0439\u043b, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u043b\u043e\u0432","syntax":"\n   bool <b>pspell_config_personal<\/b>\n    ( int $dictionary_link\n   , string $file\n   )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0444\u0430\u0439\u043b, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u043b\u043e\u0432. \u041f\u0435\u0440\u0441\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u043b\u043e\u0432 \u0431\u0443\u0434\u0435\u0442\n   \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d \u0432 \u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043a \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u043c\u0443 \u043f\u043e\u0441\u043b\u0435 \u0442\u0433\u043e, \u043a\u0430\u043a \u0432\u044b \u0432\u044b\u0437\u043e\u0432\u0438\u0442\u0435\n    pspell_new_config(). \u042d\u0442\u043e \u0442\u043e\u0442 \u0436\u0435 \u0441\u0430\u043c\u044b\u0439 \u0444\u0430\u0439\u043b, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\n    pspell_save_wordlist() \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442 \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u043b\u043e\u0432.\n  "},"pspell_config_repl":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0444\u0430\u0439\u043b, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0437\u0430\u043c\u0435\u0449\u0430\u044e\u0449\u0438\u0435 \u043f\u0430\u0440\u044b","syntax":"\n   bool <b>pspell_config_repl<\/b>\n    ( int $dictionary_link\n   , string $file\n   )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0444\u0430\u0439\u043b, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0437\u0430\u043c\u0435\u0449\u0430\u044e\u0449\u0438\u0435 \u043f\u0430\u0440\u044b.\n  "},"pspell_config_runtogether":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0451\u043d\u043d\u044b\u0435 \u0441\u043b\u043e\u0432\u0430 \u043a\u0430\u043a \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0435 \u0441\u043b\u043e\u0436\u043d\u044b\u0435 \u0441\u043b\u043e\u0432\u0430","syntax":"\n   bool <b>pspell_config_runtogether<\/b>\n    ( int $dictionary_link\n   , bool $flag\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u0431\u0443\u0434\u0443\u0442 \u043b\u0438 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0451\u043d\u043d\u044b\u0435 \u0441\u043b\u043e\u0432\u0430 \u0440\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u043a\u0430\u043a\n   \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0435 \u0441\u043b\u043e\u0436\u043d\u044b\u0435 \u0441\u043b\u043e\u0432\u0430. \u0422\u0430\u043a, \"thecat\" \u0431\u0443\u0434\u0435\u0442 \u0441\u0447\u0438\u0442\u0430\u0442\u044c\u0441\u044f \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u043c \u0441\u043b\u043e\u0436\u043d\u044b\u043c \u0441\u043b\u043e\u0432\u043e\u043c, \n   \u0445\u043e\u0442\u044f \u043c\u0435\u0436\u0434\u0443 \u0430\u0440\u0442\u0438\u043a\u043b\u0435\u043c \u0438 \u0441\u043b\u043e\u0432\u043e\u043c \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043f\u0440\u043e\u0431\u0435\u043b.\n   \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u044d\u0442\u043e\u0439 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0432\u043b\u0438\u044f\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439\n    pspell_check();  pspell_suggest()\n   \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0442\u044c \u0432\u044b\u0434\u0430\u0432\u0430\u0442\u044c \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f.\n  "},"pspell_config_save_repl":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c \u043b\u0438 \u0441\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u043c\u0435\u0449\u0430\u044e\u0449\u0438\u0445 \u043f\u0430\u0440 \n  \u0432\u043c\u0435\u0441\u0442\u0435 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0441\u043b\u043e\u0432","syntax":"\n   bool <b>pspell_config_save_repl<\/b>\n    ( int $dictionary_link\n   , bool $flag\n   )","desc":"\n    pspell_config_save_repl() \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u0431\u0443\u0434\u0435\u0442 \u043b\u0438\n    pspell_save_wordlist() \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c \u0437\u0430\u043c\u0435\u0449\u0430\u044e\u0449\u0438\u0435 \u043f\u0430\u0440\u044b \n   \u0432\u043c\u0435\u0441\u0442\u0435 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0441\u043b\u043e\u0432. \u041e\u0431\u044b\u0447\u043d\u043e \u043d\u0435\u0442 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u0443 \u0444\u0443\u043d\u043a\u0446\u0438\u044e,\n   \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443, \u0435\u0441\u043b\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f  pspell_config_repl(), \n   \u0437\u0430\u043c\u0435\u0449\u0430\u044e\u0449\u0438\u0435 \u043f\u0430\u0440\u044b \u0431\u0443\u0434\u0443\u0442 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u044b\n    pspell_save_wordlist() \u0432 \u043b\u044e\u0431\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0438, \u0435\u0441\u043b\u0438 \u043e\u043d\u0430 \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f,\n   \u0437\u0430\u043c\u0435\u0449\u0430\u044e\u0449\u0438\u0435 \u043f\u0430\u0440\u044b \u043d\u0435 \u0431\u0443\u0434\u0443\u0442 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f.\n  "},"pspell_new_config":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0441 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430\u043c\u0438 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438\n  ","syntax":"\n   int <b>pspell_new_config<\/b>\n    ( int $config\n   )","desc":""},"pspell_new_personal":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0441 \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u043c \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0441\u043b\u043e\u0432","syntax":"\n   int <b>pspell_new_personal<\/b>\n    ( string $personal\n   , string $language\n   [, string $spelling\n   [, string $jargon\n   [, string $encoding\n   [, int $mode = 0\n  ]]]] )","desc":""},"pspell_new":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u0441\u043b\u043e\u0432\u0430\u0440\u044c","syntax":"\n   int <b>pspell_new<\/b>\n    ( string $language\n   [, string $spelling\n   [, string $jargon\n   [, string $encoding\n   [, int $mode = 0\n  ]]]] )","desc":"\n    pspell_new() \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0438 \n   \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0432 \u0434\u0440\u0443\u0433\u0438\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u0445\n   pspell.\n  "},"pspell_save_wordlist":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u0421\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u043b\u043e\u0432 \u0432 \u0444\u0430\u0439\u043b\u0435","syntax":"\n   bool <b>pspell_save_wordlist<\/b>\n    ( int $dictionary_link\n   )","desc":""},"pspell_store_replacement":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u0421\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0437\u0430\u043c\u0435\u0449\u0430\u044e\u0449\u0443\u044e \u043f\u0430\u0440\u0443 \u0434\u043b\u044f \u0441\u043b\u043e\u0432\u0430","syntax":"\n   bool <b>pspell_store_replacement<\/b>\n    ( int $dictionary_link\n   , string $misspelled\n   , string $correct\n   )","desc":""},"pspell_suggest":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u041f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u0435\u0442 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0441\u043b\u043e\u0432\u0430","syntax":"\n   array <b>pspell_suggest<\/b>\n    ( int $dictionary_link\n   , string $word\n   )","desc":""},"putenv":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0441\u0440\u0435\u0434\u044b","syntax":"\n   bool <b>putenv<\/b>\n    ( string $setting\n   )","desc":"\n   \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 setting \u0432 \u0441\u0440\u0435\u0434\u0443 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0431\u0443\u0434\u0435\u0442\n   \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430 \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430. \u041f\u043e \u0435\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0438\n   \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0432\u0435\u0440\u043d\u0435\u0442\u0441\u044f \u0432 \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435.\n  "},"px_close":{"version":"(PECL paradox >= 1.0.0)","shortdesc":"Closes a paradox database","syntax":"\n   bool <b>px_close<\/b>\n    ( resource $pxdoc\n   )","desc":"\n   Closes the paradox database. This function will not close the file. You will\n   have to call  fclose() afterwards.\n  "},"px_create_fp":{"version":"(PECL paradox >= 1.0.0)","shortdesc":"Create a new paradox database","syntax":"\n   bool <b>px_create_fp<\/b>\n    ( resource $pxdoc\n   , resource $file\n   , array $fielddesc\n   )","desc":"\n   Create a new paradox database file. The actual file has to be opened before\n   with  fopen(). Make sure the file is writable.\n  "},"px_date2string":{"version":"(PECL paradox >= 1.4.0)","shortdesc":"\n   Converts a date into a string.\n  ","syntax":"\n   string <b>px_date2string<\/b>\n    ( resource $pxdoc\n   , int $value\n   , string $format\n   )","desc":"\n   Turns a date as it stored in the paradox file into human readable\n   format. Paradox dates are the number of days since 1.1.0000.\n   This function is just for convenience. It can be easily replaced by some\n   math and the calendar functions as demonstrated in the example below.\n  "},"px_delete_record":{"version":"(PECL paradox >= 1.4.0)","shortdesc":"Deletes record from paradox database","syntax":"\n   bool <b>px_delete_record<\/b>\n    ( resource $pxdoc\n   , int $num\n   )","desc":"\n   This function deletes a record from the database. It does not free\n   the space in the database file but just marks it as deleted. Inserting\n   a new record afterwards will reuse the space.\n  "},"px_delete":{"version":"(PECL paradox >= 1.0.0)","shortdesc":"Deletes resource of paradox database","syntax":"\n   bool <b>px_delete<\/b>\n    ( resource $pxdoc\n   )","desc":"\n   Deletes the resource of the paradox file and frees all memory.\n  "},"px_get_field":{"version":"(PECL paradox >= 1.0.0)","shortdesc":"Returns the specification of a single field","syntax":"\n   array <b>px_get_field<\/b>\n    ( resource $pxdoc\n   , int $fieldno\n   )","desc":""},"px_get_info":{"version":"(PECL paradox >= 1.0.0)","shortdesc":"Return lots of information about a paradox file","syntax":"\n   array <b>px_get_info<\/b>\n    ( resource $pxdoc\n   )","desc":""},"px_get_parameter":{"version":"(PECL paradox >= 1.1.0)","shortdesc":"Gets a parameter","syntax":"\n   string <b>px_get_parameter<\/b>\n    ( resource $pxdoc\n   , string $name\n   )","desc":"\n   Gets various parameters. \n  "},"px_get_record":{"version":"(PECL paradox >= 1.0.0)","shortdesc":"Returns record of paradox database","syntax":"\n   array <b>px_get_record<\/b>\n    ( resource $pxdoc\n   , int $num\n   [, int $mode = 0\n  ] )","desc":""},"px_get_schema":{"version":"(PECL paradox >= 1.0.0)","shortdesc":"Returns the database schema","syntax":"\n   array <b>px_get_schema<\/b>\n    ( resource $pxdoc\n   [, int $mode = 0\n  ] )","desc":"\n    px_get_schema() returns the database schema.\n  "},"px_get_value":{"version":"(PECL paradox >= 1.1.0)","shortdesc":"Gets a value","syntax":"\n   float <b>px_get_value<\/b>\n    ( resource $pxdoc\n   , string $name\n   )","desc":"\n   Gets various values.\n  "},"px_insert_record":{"version":"(PECL paradox >= 1.4.0)","shortdesc":"Inserts record into paradox database","syntax":"\n   int <b>px_insert_record<\/b>\n    ( resource $pxdoc\n   , array $data\n   )","desc":"\n   Inserts a new record into the database. The record is not necessarily\n   inserted at the end of the database, but may be inserted at any\n   position depending on where the first free slot is found.\n  "},"px_new":{"version":"(PECL paradox >= 1.0.0)","shortdesc":"Create a new paradox object","syntax":"\n   resource <b>px_new<\/b>\n    ( void\n   )","desc":"\n   Create a new paradox object. You will have to call this function before any\n   further functions.  px_new() does not create any file on\n   the disk, it just creates an instance of a paradox object. This function\n   must not be called if the object oriented interface is used. Use new\n   paradox_db() instead.\n  "},"px_numfields":{"version":"(PECL paradox >= 1.0.0)","shortdesc":"Returns number of fields in a database","syntax":"\n   int <b>px_numfields<\/b>\n    ( resource $pxdoc\n   )","desc":"\n   Get the number of fields in a database file.\n  "},"px_numrecords":{"version":"(PECL paradox >= 1.0.0)","shortdesc":"Returns number of records in a database","syntax":"\n   int <b>px_numrecords<\/b>\n    ( resource $pxdoc\n   )","desc":"\n   Get the number of records in a database file.\n  "},"px_open_fp":{"version":"(PECL paradox >= 1.0.0)","shortdesc":"Open paradox database","syntax":"\n   bool <b>px_open_fp<\/b>\n    ( resource $pxdoc\n   , resource $file\n   )","desc":"\n   Open an existing paradox database file. The actual file has to be opened\n   before with  fopen(). This function can also be used to\n   open primary index files and tread them like a paradox database. This is\n   supported for those who would like to investigate a primary index. It\n   cannot be used to accelerate access to a database file.\n  "},"px_put_record":{"version":"(PECL paradox >= 1.0.0)","shortdesc":"Stores record into paradox database","syntax":"\n   bool <b>px_put_record<\/b>\n    ( resource $pxdoc\n   , array $record\n   [, int $recpos = -1\n  ] )","desc":"\n   Stores a record into a paradox database. The record is always added at\n   the end of the database, regardless of any free slots. Use\n    px_insert_record() to add a new record into the first\n   free slot found in the database.\n  "},"px_retrieve_record":{"version":"(PECL paradox >= 1.4.0)","shortdesc":"Returns record of paradox database","syntax":"\n   array <b>px_retrieve_record<\/b>\n    ( resource $pxdoc\n   , int $num\n   [, int $mode = 0\n  ] )","desc":"\n   This function is very similar to  px_get_record()\n   but uses internally a different approach to retrieve the data. It\n   relies on pxlib for reading each single field value, which usually\n   results in support for more field types.\n  "},"px_set_blob_file":{"version":"(PECL paradox >= 1.3.0)","shortdesc":"Sets the file where blobs are read from","syntax":"\n   bool <b>px_set_blob_file<\/b>\n    ( resource $pxdoc\n   , string $filename\n   )","desc":"\n   Sets the name of the file where blobs are going to be read from or written\n   into. Without\n   calling this function,  px_get_record() or\n    px_retrieve_record()  will only return\n   data in blob fields if the data is part of the record and not stored in the\n   blob file. Blob data is stored in the record if it is small enough to fit\n   in the size of the blob field."},"px_set_parameter":{"version":"(PECL paradox >= 1.1.0)","shortdesc":"Sets a parameter","syntax":"\n   bool <b>px_set_parameter<\/b>\n    ( resource $pxdoc\n   , string $name\n   , string $value\n   )","desc":"\n   Sets various parameters.\n  "},"px_set_tablename":{"version":"(PECL paradox >= 1.0.0)","shortdesc":"Sets the name of a table (deprecated)","syntax":"\n   void <b>px_set_tablename<\/b>\n    ( resource $pxdoc\n   , string $name\n   )","desc":"\n   Sets the table name of a paradox database, which was created with\n    px_create_fp(). This function is deprecated use\n    px_set_parameter() instead.\n  "},"px_set_targetencoding":{"version":"(PECL paradox >= 1.0.0)","shortdesc":"Sets the encoding for character fields (deprecated)","syntax":"\n   bool <b>px_set_targetencoding<\/b>\n    ( resource $pxdoc\n   , string $encoding\n   )","desc":"\n   Set the encoding for data retrieved from a character field. All character\n   fields will be recoded to the encoding set by this function. If the\n   encoding is not set, the character data will be returned in the DOS code\n   page encoding as specified in the database file. The\n   encoding can be any string identifier known to\n   iconv or recode. On Unix systems run iconv -l for\n   a list of available encodings.\n  "},"px_set_value":{"version":"(PECL paradox >= 1.1.0)","shortdesc":"Sets a value","syntax":"\n   bool <b>px_set_value<\/b>\n    ( resource $pxdoc\n   , string $name\n   , float $value\n   )","desc":"\n   Sets various values.\n  "},"px_timestamp2string":{"version":"(PECL paradox >= 1.4.0)","shortdesc":"\n   Converts the timestamp into a string.\n  ","syntax":"\n   string <b>px_timestamp2string<\/b>\n    ( resource $pxdoc\n   , float $value\n   , string $format\n   )","desc":"\n   Turns a timestamp as it stored in the paradox file into human readable\n   format. Paradox timestamps are the number of miliseconds since 0001-01-02.\n   This function is just for convenience. It can be easily replaced by some\n   math and the calendar functions as demonstrated in the following example.\n  "},"px_update_record":{"version":"(PECL paradox >= 1.4.0)","shortdesc":"Updates record in paradox database","syntax":"\n   bool <b>px_update_record<\/b>\n    ( resource $pxdoc\n   , array $data\n   , int $num\n   )","desc":"\n   Updates an exiting record in the database. The record starts at 0.\n  "},"qdom_error":{"version":"(PHP 4 >= 4.0.5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u043e\u0448\u0438\u0431\u043a\u0438 \u0438\u0437 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 QDOM \u0438\u043b\u0438 FALSE, \u0435\u0441\u043b\u0438 \u043e\u0448\u0438\u0431\u043e\u043a \u043d\u0435 \u0431\u044b\u043b\u043e","syntax":"\n   string <b>qdom_error<\/b>\n    ( void\n   )","desc":""},"qdom_tree":{"version":"(PHP 4 >= 4.0.4)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0434\u0435\u0440\u0435\u0432\u043e XML-\u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   QDomDocument <b>qdom_tree<\/b>\n    ( string $doc\n   )","desc":""},"quoted_printable_decode":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u043c\u0435\u0442\u043e\u0434\u043e\u043c quoted-printable \u0432 8-\u0431\u0438\u0442\u043e\u0432\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443","syntax":"\n   string <b>quoted_printable_decode<\/b>\n    ( string $str\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0440\u0430\u0449\u0430\u0435\u0442 8-\u0431\u0438\u0442\u043d\u0443\u044e \u0431\u0438\u043d\u0430\u0440\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0443\u044e\n   \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0435 quoted-printable (\u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438\n   \u0441 \u0440\u0430\u0437\u0434\u0435\u043b\u043e\u043c 6.7 \u00bb\u00a0RFC2045, \u0430\n   \u043d\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u043e\u043c 4.5.2 \u00bb\u00a0RFC2821,\n   \u0442.\u0435. \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u043e\u0447\u043a\u0438 \u043d\u0435 \u0431\u0443\u0434\u0443\u0442 \u0432\u044b\u0440\u0435\u0437\u0430\u043d\u044b \u0438\u0437 \u043d\u0430\u0447\u0430\u043b\u0430 \u0441\u0442\u0440\u043e\u043a\u0438).\n  "},"quoted_printable_encode":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u041a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 8-\u0431\u0438\u0442\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 quoted-printable","syntax":"\n   string <b>quoted_printable_encode<\/b>\n    ( string $str\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0432 \u0444\u043e\u0440\u043c\u0430\u0442 quoted-printable\n   \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0440\u0430\u0437\u0434\u0435\u043b\u043e\u043c 6.7 \u00bb\u00a0RFC2045.\n  "},"quotemeta":{"version":"(PHP 4, PHP 5)","shortdesc":"\u042d\u043a\u0440\u0430\u043d\u0438\u0440\u0443\u0435\u0442 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b","syntax":"\n   string <b>quotemeta<\/b>\n    ( string $str\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u043e\u0434\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043f\u0435\u0440\u0435\u0434 \u043a\u0430\u0436\u0434\u044b\u043c \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u043c \u0438\u0437\n   \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430: "},"rad2deg":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0438\u0437 \u0440\u0430\u0434\u0438\u0430\u043d\u043e\u0432 \u0432 \u0433\u0440\u0430\u0434\u0443\u0441\u044b\n  ","syntax":"\n   float <b>rad2deg<\/b>\n    ( float $number\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 number \u0438\u0437 \u0440\u0430\u0434\u0438\u0430\u043d\u043e\u0432 \u0432 \u0433\u0440\u0430\u0434\u0443\u0441\u044b.\n  "},"radius_acct_open":{"version":"(PECL radius >= 1.1.0)","shortdesc":"Creates a Radius handle for accounting","syntax":"\n   resource <b>radius_acct_open<\/b>\n    ( void\n   )","desc":"\n  "},"radius_add_server":{"version":"(PECL radius >= 1.1.0)","shortdesc":"Adds a server","syntax":"\n   bool <b>radius_add_server<\/b>\n    ( resource $radius_handle\n   , string $hostname\n   , int $port\n   , string $secret\n   , int $timeout\n   , int $max_tries\n   )","desc":"\n    radius_add_server() may be called multiple times, and it\n   may be used together with  radius_config(). At most 10\n   servers may be specified. When multiple servers are given, they are tried\n   in round-robin fashion until a valid response is received, or until each\n   server's max_tries limit has been reached.\n  "},"radius_auth_open":{"version":"(PECL radius >= 1.1.0)","shortdesc":"Creates a Radius handle for authentication","syntax":"\n   resource <b>radius_auth_open<\/b>\n    ( void\n   )","desc":"\n  "},"radius_close":{"version":"(PECL radius >= 1.1.0)","shortdesc":"Frees all ressources","syntax":"\n   bool <b>radius_close<\/b>\n    ( resource $radius_handle\n   )","desc":"\n   It is not needed to call this function because php frees all resources at\n   the end of each request.\n  "},"radius_config":{"version":"(PECL radius >= 1.1.0)","shortdesc":"Causes the library to read the given configuration file","syntax":"\n   bool <b>radius_config<\/b>\n    ( resource $radius_handle\n   , string $file\n   )","desc":"\n   Before issuing any Radius requests, the library must be made aware of the\n   servers it can contact. The easiest way to configure the library is to\n   call  radius_config().  radius_config()\n   causes the library to read a configuration file whose format is described\n   in \u00bb\u00a0radius.conf.\n  "},"radius_create_request":{"version":"(PECL radius >= 1.1.0)","shortdesc":"Create accounting or authentication request","syntax":"\n  bool <b>radius_create_request<\/b>\n   ( resource $radius_handle\n  , int $type      \n  )","desc":"\n   A Radius request consists of a code specifying the kind of request, and\n   zero or more attributes which provide additional information. To begin\n   constructing a new request, call  radius_create_request().\n  "},"radius_cvt_addr":{"version":"(PECL radius >= 1.1.0)","shortdesc":"Converts raw data to IP-Address","syntax":"\n   string <b>radius_cvt_addr<\/b>\n    ( string $data\n   )","desc":"\n   \n  "},"radius_cvt_int":{"version":"(PECL radius >= 1.1.0)","shortdesc":"Converts raw data to integer","syntax":"\n   int <b>radius_cvt_int<\/b>\n    ( string $data\n   )","desc":"\n\n  "},"radius_cvt_string":{"version":"(PECL radius >= 1.1.0)","shortdesc":"Converts raw data to string","syntax":"\n   string <b>radius_cvt_string<\/b>\n    ( string $data\n   )","desc":"\n   \n  "},"radius_demangle_mppe_key":{"version":"(PECL radius >= 1.2.0)","shortdesc":"Derives mppe-keys from mangled data","syntax":"\n   string <b>radius_demangle_mppe_key<\/b>\n    ( resource $radius_handle      \n   , string $mangled\n   )","desc":"\n   When using MPPE with MS-CHAPv2, the send- and recv-keys are mangled\n   (see \u00bb\u00a0RFC 2548), however this function is\n   useless, because I don't think that there is or will be a PPTP-MPPE\n   implementation in PHP.  \n  "},"radius_demangle":{"version":"(PECL radius >= 1.2.0)","shortdesc":"Demangles data","syntax":"\n   string <b>radius_demangle<\/b>\n    ( resource $radius_handle\n   , string $mangled\n   )","desc":"\n   Some data (Passwords, MS-CHAPv1 MPPE-Keys) is mangled for security reasons,\n   and must be demangled before you can use them.\n  "},"radius_get_attr":{"version":"(PECL radius >= 1.1.0)","shortdesc":"Extracts an attribute","syntax":"\n   mixed <b>radius_get_attr<\/b>\n    ( resource $radius_handle\n   )","desc":"\n   Like Radius requests, each response may contain zero or more attributes.\n   After a response has been received successfully by\n    radius_send_request(), its attributes can be extracted\n   one by one using  radius_get_attr(). Each time\n    radius_get_attr() is called, it gets the next attribute\n   from the current response.\n  "},"radius_get_tagged_attr_data":{"version":"(PECL radius >= 1.3.0)","shortdesc":"Extracts the data from a tagged attribute","syntax":"\n   string <b>radius_get_tagged_attr_data<\/b>\n    ( string $data\n   )","desc":"\n   If a tagged attribute has been returned from\n    radius_get_attr(),\n    radius_get_tagged_attr_data() will return the data from\n   the attribute.\n  "},"radius_get_tagged_attr_tag":{"version":"(PECL radius >= 1.3.0)","shortdesc":"Extracts the tag from a tagged attribute","syntax":"\n   integer <b>radius_get_tagged_attr_tag<\/b>\n    ( string $data\n   )","desc":"\n   If a tagged attribute has been returned from\n    radius_get_attr(),\n    radius_get_tagged_attr_data() will return the tag from\n   the attribute.\n  "},"radius_get_vendor_attr":{"version":"(PECL radius >= 1.1.0)","shortdesc":"Extracts a vendor specific attribute","syntax":"\n   array <b>radius_get_vendor_attr<\/b>\n    ( string $data\n   )","desc":"\n   If  radius_get_attr() returns\n   RADIUS_VENDOR_SPECIFIC,\n    radius_get_vendor_attr() may be called to determine the\n   vendor.\n  "},"radius_put_addr":{"version":"(PECL radius >= 1.1.0)","shortdesc":"Attaches an IP address attribute","syntax":"\n   bool <b>radius_put_addr<\/b>\n    ( resource $radius_handle\n   , int $type      \n   , string $addr            \n   [, int $options = 0\n   [, int $tag\n  ]] )","desc":"\n   Attaches an IP address attribute to the current RADIUS request.\n  "},"radius_put_attr":{"version":"(PECL radius >= 1.1.0)","shortdesc":"Attaches a binary attribute","syntax":"\n   bool <b>radius_put_attr<\/b>\n    ( resource $radius_handle\n   , int $type      \n   , string $value            \n   [, int $options = 0\n   [, int $tag\n  ]] )","desc":"\n   Attaches a binary attribute to the current RADIUS request.\n  "},"radius_put_int":{"version":"(PECL radius >= 1.1.0)","shortdesc":"Attaches an integer attribute","syntax":"\n   bool <b>radius_put_int<\/b>\n    ( resource $radius_handle\n   , int $type      \n   , int $value            \n   [, int $options = 0\n   [, int $tag\n  ]] )","desc":"\n   Attaches an integer attribute to the current RADIUS request.\n  "},"radius_put_string":{"version":"(PECL radius >= 1.1.0)","shortdesc":"Attaches a string attribute","syntax":"\n   bool <b>radius_put_string<\/b>\n    ( resource $radius_handle\n   , int $type      \n   , string $value            \n   [, int $options = 0\n   [, int $tag\n  ]] )","desc":"\n   Attaches a string attribute to the current RADIUS request. In general,\n    radius_put_attr() is a more useful function for\n   attaching string attributes, as it is binary safe.\n  "},"radius_put_vendor_addr":{"version":"(PECL radius >= 1.1.0)","shortdesc":"Attaches a vendor specific IP address attribute","syntax":"\n   bool <b>radius_put_vendor_addr<\/b>\n    ( resource $radius_handle\n   , int $vendor            \n   , int $type      \n   , string $addr            \n   )","desc":"\n   Attaches an IP address vendor specific attribute to the current RADIUS\n   request.\n  "},"radius_put_vendor_attr":{"version":"(PECL radius >= 1.1.0)","shortdesc":"Attaches a vendor specific binary attribute","syntax":"\n   bool <b>radius_put_vendor_attr<\/b>\n    ( resource $radius_handle\n   , int $vendor\n   , int $type\n   , string $value\n   [, int $options = 0\n   [, int $tag\n  ]] )","desc":"\n   Attaches a vendor specific binary attribute to the current RADIUS request.\n  "},"radius_put_vendor_int":{"version":"(PECL radius >= 1.1.0)","shortdesc":"Attaches a vendor specific integer attribute","syntax":"\n   bool <b>radius_put_vendor_int<\/b>\n    ( resource $radius_handle\n   , int $vendor            \n   , int $type      \n   , int $value            \n   [, int $options = 0\n   [, int $tag\n  ]] )","desc":"\n   Attaches a vendor specific integer attribute to the current RADIUS request.\n  "},"radius_put_vendor_string":{"version":"(PECL radius >= 1.1.0)","shortdesc":"Attaches a vendor specific string attribute","syntax":"\n   bool <b>radius_put_vendor_string<\/b>\n    ( resource $radius_handle\n   , int $vendor            \n   , int $type      \n   , string $value            \n   [, int $options = 0\n   [, int $tag\n  ]] )","desc":"\n   Attaches a vendor specific string attribute to the current RADIUS request.\n   In general,  radius_put_vendor_attr() is a more useful\n   function for attaching string attributes, as it is binary safe.\n  "},"radius_request_authenticator":{"version":"(PECL radius >= 1.1.0)","shortdesc":"Returns the request authenticator","syntax":"\n   string <b>radius_request_authenticator<\/b>\n    ( resource $radius_handle\n   )","desc":"\n   The request authenticator is needed for demangling mangled data like\n   passwords and encryption-keys.\n  "},"radius_salt_encrypt_attr":{"version":"(PECL radius >= 1.3.0)","shortdesc":"Salt-encrypts a value","syntax":"\n   string <b>radius_salt_encrypt_attr<\/b>\n    ( resource $radius_handle\n   , string $data\n   )","desc":"\n   Applies the RADIUS salt-encryption algorithm to the given value.\n  "},"radius_send_request":{"version":"(PECL radius >= 1.1.0)","shortdesc":"Sends the request and waites for a reply","syntax":"\n   int <b>radius_send_request<\/b>\n    ( resource $radius_handle\n   )","desc":"\n   After the Radius request has been constructed, it is sent by\n    radius_send_request().\n  "},"radius_server_secret":{"version":"(PECL radius >= 1.1.0)","shortdesc":"Returns the shared secret","syntax":"\n   string <b>radius_server_secret<\/b>\n    ( resource $radius_handle\n   )","desc":"\n   The shared secret is needed as salt for demangling mangled data like\n   passwords and encryption-keys.\n  "},"radius_strerror":{"version":"(PECL radius >= 1.1.0)","shortdesc":"Returns an error message","syntax":"\n   string <b>radius_strerror<\/b>\n    ( resource $radius_handle\n   )","desc":"\n   If Radius-functions fail then they record an error message. This error\n   message can be retrieved with this function.\n  "},"rand":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e","syntax":"\n   int <b>rand<\/b>\n    ( void\n   )\n\n   int <b>rand<\/b>\n    ( int $min\n   , int $max\n   )\n","desc":""},"range":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432","syntax":"\n   array <b>range<\/b>\n    ( mixed $start\n   , mixed $end\n   [, number $step = 1\n  ] )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432.\n  "},"rar_wrapper_cache_stats":{"version":"(PECL rar >= 3.0.0)","shortdesc":"\u041a\u044d\u0448 \u0434\u043e\u0441\u0442\u0443\u043f\u043e\u0432 \u0438 \u043e\u0442\u043a\u0430\u0437\u043e\u0432 \u043e\u0431\u0435\u0440\u0442\u043a\u0438 URL","syntax":"\n   string <b>rar_wrapper_cache_stats<\/b>\n    ( void\n   )","desc":"\n\n  "},"rawurldecode":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0414\u0435\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 URL-\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   string <b>rawurldecode<\/b>\n    ( string $str\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0437\u043d\u0430\u043a\u043e\u0432 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u0430\n   (%) \u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430 \u043d\u0438\u043c \u0434\u0432\u0430 \u0448\u0435\u0441\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u0435\u0440\u0438\u0447\u043d\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 \u0437\u0430\u043c\u0435\u043d\u0435\u043d\u044b \u0431\u0443\u043a\u0432\u0435\u043d\u043d\u044b\u043c\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c\u0438.\n  "},"rawurlencode":{"version":"(PHP 4, PHP 5)","shortdesc":"URL-\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0441\u043e\u0433\u043b\u0430\u0441\u043d\u043e RFC 3986","syntax":"\n   string <b>rawurlencode<\/b>\n    ( string $str\n   )","desc":"\n   \u041a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u043e\u0433\u043b\u0430\u0441\u043d\u043e \u00bb\u00a0RFC 3986.\n  "},"read_exif_data":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  exif_read_data()","syntax":"","desc":""},"readdir":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430 \u043f\u043e \u0435\u0433\u043e \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0443","syntax":"\n   string <b>readdir<\/b>\n    ([ resource $dir_handle\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u043f\u043e \u043f\u043e\u0440\u044f\u0434\u043a\u0443 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430. \u042d\u043b\u0435\u043c\u0435\u043d\u0442\u044b\n   \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442\u0441\u044f \u0432 \u0442\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043e\u043d\u0438 \u0445\u0440\u0430\u043d\u044f\u0442\u0441\u044f \u0432 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u0435.\n  "},"readfile":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0444\u0430\u0439\u043b","syntax":"\n   int <b>readfile<\/b>\n    ( string $filename\n   [, bool $use_include_path = false\n   [, resource $context\n  ]] )","desc":"\n   \u0427\u0438\u0442\u0430\u0435\u0442 \u0444\u0430\u0439\u043b \u0438 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0435\u0433\u043e \u0432 \u0431\u0443\u0444\u0435\u0440 \u0432\u044b\u0432\u043e\u0434\u0430.\n  "},"readgzfile":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 gz-\u0444\u0430\u0439\u043b\u0430","syntax":"\n   int <b>readgzfile<\/b>\n    ( string $filename\n   [, int $use_include_path = 0\n  ] )","desc":" \n   \u0427\u0438\u0442\u0430\u0435\u0442 \u0444\u0430\u0439\u043b, \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0435\u0433\u043e \u0438 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0432 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u0432\u044b\u0432\u043e\u0434.\n  "},"readline_add_history":{"version":"(PHP 4, PHP 5)","shortdesc":"Adds a line to the history","syntax":"\n   bool <b>readline_add_history<\/b>\n    ( string $line\n   )","desc":"\n   This function adds a line to the command line history.\n  "},"readline_callback_handler_install":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"Initializes the readline callback interface and terminal, prints the prompt and returns immediately","syntax":"\n   bool <b>readline_callback_handler_install<\/b>\n    ( string $prompt\n   , callable $callback\n   )","desc":"\n   Sets up a readline callback interface then prints\n   prompt and immediately returns.  \n   Calling this function twice without removing the previous\n   callback interface will automatically and conveniently overwrite the old\n   interface.\n  "},"readline_callback_handler_remove":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"Removes a previously installed callback handler and restores terminal settings","syntax":"\n   bool <b>readline_callback_handler_remove<\/b>\n    ( void\n   )","desc":"\n   Removes a previously installed callback handler and restores terminal\n   settings.\n  "},"readline_callback_read_char":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"Reads a character and informs the readline callback interface when a line is received","syntax":"\n   void <b>readline_callback_read_char<\/b>\n    ( void\n   )","desc":"\n   Reads a character of user input. When a line is received, this function\n   informs the readline callback interface installed using\n    readline_callback_handler_install() that a line\n   is ready for input.\n  "},"readline_clear_history":{"version":"(PHP 4, PHP 5)","shortdesc":"Clears the history","syntax":"\n   bool <b>readline_clear_history<\/b>\n    ( void\n   )","desc":"\n   This function clears the entire command line history.\n  "},"readline_completion_function":{"version":"(PHP 4, PHP 5)","shortdesc":"Registers a completion function","syntax":"\n   bool <b>readline_completion_function<\/b>\n    ( callable $function\n   )","desc":"\n   This function registers a completion function. This is the same kind of\n   functionality you'd get if you hit your tab key while using Bash.\n  "},"readline_info":{"version":"(PHP 4, PHP 5)","shortdesc":"Gets\/sets various internal readline variables","syntax":"\n   mixed <b>readline_info<\/b>\n    ([ string $varname\n   [, string $newvalue\n  ]] )","desc":"\n   Gets or sets various internal readline variables.\n  "},"readline_list_history":{"version":"(PHP 4, PHP 5)","shortdesc":"Lists the history","syntax":"\n   array <b>readline_list_history<\/b>\n    ( void\n   )","desc":"\n   Gets the entire command line history.\n  "},"readline_on_new_line":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"Inform readline that the cursor has moved to a new line","syntax":"\n   void <b>readline_on_new_line<\/b>\n    ( void\n   )","desc":"\n   Tells readline that the cursor has moved to a new line.\n  "},"readline_read_history":{"version":"(PHP 4, PHP 5)","shortdesc":"Reads the history","syntax":"\n   bool <b>readline_read_history<\/b>\n    ([ string $filename\n  ] )","desc":"\n   This function reads a command history from a file.\n  "},"readline_redisplay":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"Redraws the display","syntax":"\n   void <b>readline_redisplay<\/b>\n    ( void\n   )","desc":"\n   Redraws readline to redraw the display.\n  "},"readline_write_history":{"version":"(PHP 4, PHP 5)","shortdesc":"Writes the history","syntax":"\n   bool <b>readline_write_history<\/b>\n    ([ string $filename\n  ] )","desc":"\n   This function writes the command history to a file.\n  "},"readline":{"version":"(PHP 4, PHP 5)","shortdesc":"Reads a line","syntax":"\n   string <b>readline<\/b>\n    ([ string $prompt\n  ] )","desc":"\n   Reads a single line from the user. You must add this line to the history\n   yourself using  readline_add_history().\n  "},"readlink":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0444\u0430\u0439\u043b, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0441\u0441\u044b\u043b\u043a\u0430","syntax":"\n   string <b>readlink<\/b>\n    ( string $path\n   )","desc":"\n   readlink() \u0434\u0435\u043b\u0430\u0435\u0442 \u0442\u043e \u0436\u0435 \u0441\u0430\u043c\u043e\u0435, \u0447\u0442\u043e \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u044f C readlink.\n  "},"realpath_cache_get":{"version":"(PHP 5 >= 5.3.2)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u0437 \u043a\u044d\u0448\u0430 \u0440\u0435\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0443\u0442\u0438","syntax":"\n   array <b>realpath_cache_get<\/b>\n    ( void\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u043a\u044d\u0448\u0430 \u0440\u0435\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0443\u0442\u0438.\n  "},"realpath_cache_size":{"version":"(PHP 5 >= 5.3.2)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0440\u0430\u0437\u043c\u0435\u0440 \u043a\u044d\u0448\u0430 \u0440\u0435\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0443\u0442\u0438","syntax":"\n   int <b>realpath_cache_size<\/b>\n    ( void\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043c \u043f\u0430\u043c\u044f\u0442\u0438, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u043e\u0439 \u043f\u0440\u0438 \u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u0440\u0435\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0443\u0442\u0438.\n  "},"realpath":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u0430\u043d\u043e\u043d\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u044b\u0439 \u043f\u0443\u0442\u044c \u043a \u0444\u0430\u0439\u043b\u0443","syntax":"\n   string <b>realpath<\/b>\n    ( string $path\n   )","desc":"\n    realpath() \u0440\u0430\u0441\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0432\u0441\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0441\u0441\u044b\u043b\u043a\u0438,\n   \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u044b \u0442\u0438\u043f\u0430 '\/.\/', '\/..\/' \u0438 \u043b\u0438\u0448\u043d\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b '\/' \u0432 \u043f\u0443\u0442\u0438\n   path, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044f \u043a\u0430\u043d\u043e\u043d\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u044b\u0439\n   \u043f\u0443\u0442\u044c \u043a \u0444\u0430\u0439\u043b\u0443.\n  "},"recode_file":{"version":"(PHP 4, PHP 5)","shortdesc":"Recode from file to file according to recode request","syntax":"\n   bool <b>recode_file<\/b>\n    ( string $request\n   , resource $input\n   , resource $output\n   )","desc":"\n   Recode the file referenced by file handle\n   input into the file referenced by file\n   handle output according to the recode\n   request.\n  "},"recode_string":{"version":"(PHP 4, PHP 5)","shortdesc":"Recode a string according to a recode request","syntax":"\n   string <b>recode_string<\/b>\n    ( string $request\n   , string $string\n   )","desc":"\n   Recode the string string according to\n   the recode request request. \n  "},"recode":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  recode_string()","syntax":"","desc":""},"register_shutdown_function":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0441\u044f \u043f\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0438 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u043a\u0440\u0438\u043f\u0442\u0430","syntax":"\n   void <b>register_shutdown_function<\/b>\n    ( callable $callback\n   [, mixed $parameter\n   [, mixed $...\n  ]] )","desc":"\n   \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e callback, \u043a\u043e\u0442\u043e\u0440\u0430\u044f\n   \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u043a\u0440\u0438\u043f\u0442\u0430 \u0438\u043b\u0438 \u043f\u0440\u0438 \u0432\u044b\u0437\u043e\u0432\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    exit().\n  "},"register_tick_function":{"version":"(PHP 4 >= 4.0.3, PHP 5)","shortdesc":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u0438 \u043a\u0430\u0436\u0434\u043e\u043c \u0442\u0438\u043a\u0435","syntax":"\n   bool <b>register_tick_function<\/b>\n    ( callable $function\n   [, mixed $arg\n   [, mixed $...\n  ]] )","desc":""},"rename_function":{"version":"(PECL apd >= 0.2)","shortdesc":"Renames orig_name to new_name in the global function table","syntax":"\n   bool <b>rename_function<\/b>\n    ( string $original_name\n   , string $new_name\n   )","desc":"\n   Renames a orig_name to new_name in the global function table.  Useful\n   for temporarily overriding built-in functions.\n  "},"rename":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0444\u0430\u0439\u043b \u0438\u043b\u0438 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e","syntax":"\n   bool <b>rename<\/b>\n    ( string $oldname\n   , string $newname\n   [, resource $context\n  ] )","desc":"\n   \u041f\u044b\u0442\u0430\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u0442\u044c oldname \u0432\n   newname.\n  "},"reset":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043d\u0430 \u0435\u0433\u043e \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442","syntax":"\n   mixed <b>reset<\/b>\n    ( array &$array\n   )","desc":"\n    reset() \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u0435\u0442 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c\n   array \u043a \u0435\u0433\u043e \u043f\u0435\u0440\u0432\u043e\u043c\u0443 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0443 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\n   \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u0430.\n  "},"restore_error_handler":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\n   \u0412\u043e\u0441\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043e\u0448\u0438\u0431\u043e\u043a\n  ","syntax":"\n   bool <b>restore_error_handler<\/b>\n    ( void\n   )","desc":"\n   \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u0441\u043c\u0435\u043d\u044b \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439\n    set_error_handler(), \u0447\u0442\u043e\u0431\u044b \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\n   (\u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043a\u0430\u043a \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439, \u0442\u0430\u043a \u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0439\n   \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c).\n  "},"restore_exception_handler":{"version":"(PHP 5)","shortdesc":"\n   \u0412\u043e\u0441\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439\n  ","syntax":"\n   bool <b>restore_exception_handler<\/b>\n    ( void\n   )","desc":"\n   \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u0441\u043c\u0435\u043d\u044b \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439\n    set_exception_handler(), \u0447\u0442\u043e\u0431\u044b \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0439\n   \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (\u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043a\u0430\u043a \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439, \u0442\u0430\u043a \u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0439\n   \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c).\n  "},"restore_include_path":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\n   \u0412\u043e\u0441\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 include_path\n  ","syntax":"\n   void <b>restore_include_path<\/b>\n    ( void\n   )","desc":""},"rewind":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442 \u043a\u0443\u0440\u0441\u043e\u0440 \u0443 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0433\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f","syntax":"\n   bool <b>rewind<\/b>\n    ( resource $handle\n   )","desc":"\n   \u0421\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442 \u043a\u0443\u0440\u0441\u043e\u0440 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0433\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f handle\n   \u043d\u0430 \u043d\u0430\u0447\u0430\u043b\u043e \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u0442\u043e\u043a\u0430.\n  "},"rewinddir":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u0431\u0440\u043e\u0441\u0438\u0442\u044c \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430","syntax":"\n   void <b>rewinddir<\/b>\n    ([ resource $dir_handle\n  ] )","desc":"\n   \u0421\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u0442\u043e\u043a \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430, \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435\n   dir_handle \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c,\n   \u0447\u0442\u043e\u0431\u044b \u0442\u043e\u0442 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u043b \u043d\u0430 \u043d\u0430\u0447\u0430\u043b\u043e \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430.\n  "},"rmdir":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e","syntax":"\n   bool <b>rmdir<\/b>\n    ( string $dirname\n   [, resource $context\n  ] )","desc":"\n   \u041f\u044b\u0442\u0430\u0435\u0442\u0441\u044f \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e \u0441 \u0438\u043c\u0435\u043d\u0435\u043c dirname.\n   \u0414\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u043f\u0443\u0441\u0442\u043e\u0439 \u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0438\u043c\u0435\u0442\u044c\u0441\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043f\u0440\u0430\u0432\u0430.\n   \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u0431\u0443\u0434\u0435\u0442 \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u043e\u0448\u0438\u0431\u043a\u0430 \u0443\u0440\u043e\u0432\u043d\u044f E_WARNING.\n  "},"round":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u043a\u0440\u0443\u0433\u043b\u044f\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u0442\u0438\u043f\u0430 float","syntax":"\n    float <b>round<\/b>\n     ( float $val\n    [, int $precision = 0\n    [, int $mode = PHP_ROUND_HALF_UP\n   ]] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u043a\u0440\u0443\u0433\u043b\u0451\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 val \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c\u044e precision\n   (\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0446\u0438\u0444\u0440 \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u044f\u0442\u043e\u0439).\n   \u041f\u043e\u0441\u043b\u0435\u0434\u043d\u044f\u044f \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438\u043b\u0438 \u043d\u0443\u043b\u0451\u043c (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e).\n  "},"rpm_close":{"version":"(PECL rpmreader >= 0.1.0)","shortdesc":"Closes an RPM file","syntax":"\n   bool <b>rpm_close<\/b>\n    ( resource $rpmr\n   )","desc":"\n     rpm_close() will close an RPM file pointer.\n  "},"rpm_get_tag":{"version":"(PECL rpmreader >= 0.1.0)","shortdesc":"Retrieves a header tag from an RPM file","syntax":"\n   mixed <b>rpm_get_tag<\/b>\n    ( resource $rpmr\n   , int $tagnum\n   )","desc":"\n     rpm_get_tag() will retrieve a given tag from\n    the RPM file's header and return it.\n  "},"rpm_is_valid":{"version":"(PECL rpmreader >= 0.1.0)","shortdesc":"Tests a filename for validity as an RPM file","syntax":"\n   bool <b>rpm_is_valid<\/b>\n    ( string $filename\n   )","desc":"\n     rpm_is_valid() will test an RPM file for\n    validity as an RPM file.  This is not the same as\n     rpm_open() as it only checks the file for\n    validity but does not return a file pointer to be used by further\n    functions.\n  "},"rpm_open":{"version":"(PECL rpmreader >= 0.1.0)","shortdesc":"Opens an RPM file","syntax":"\n   resource <b>rpm_open<\/b>\n    ( string $filename\n   )","desc":"\n     rpm_open() will open an RPM file and will\n    determine if the file is a valid RPM file.\n  "},"rpm_version":{"version":"(PECL rpmreader >= 0.3.0)","shortdesc":"Returns a string representing the current version of the\n   rpmreader extension","syntax":"\n   string <b>rpm_version<\/b>\n    ( void\n   )","desc":"\n     rpm_version() will return the current version of the\n     rpmreader extension.\n  "},"rrd_create":{"version":"(PECL rrd >= 0.9.0)","shortdesc":"Creates rrd database file","syntax":"\n   bool <b>rrd_create<\/b>\n    ( string $filename\n   , array $options\n   )","desc":"\n   Creates the rdd database file.\n  "},"rrd_error":{"version":"(PECL rrd >= 0.9.0)","shortdesc":"Gets latest error message.","syntax":"\n   string <b>rrd_error<\/b>\n    ( void\n   )","desc":"\n   Returns latest global rrd error message.\n  "},"rrd_fetch":{"version":"(PECL rrd >= 0.9.0)","shortdesc":"Fetch the data for graph as array.","syntax":"\n   array <b>rrd_fetch<\/b>\n    ( string $filename\n   , array $options\n   )","desc":"\n   Gets data for graph output from RRD database file as array. This function\n   has same result as  rrd_graph(),  but fetched data are\n   returned as array, no image file is created.\n  "},"rrd_first":{"version":"(PECL rrd >= 0.9.0)","shortdesc":"Gets the timestamp of the first sample from rrd file.","syntax":"\n   int <b>rrd_first<\/b>\n    ( string $file\n   [, int $raaindex = 0\n  ] )","desc":"\n   Returns the first data sample from the specified RRA of the RRD file.\n  "},"rrd_graph":{"version":"(PECL rrd >= 0.9.0)","shortdesc":"Creates image from a data.","syntax":"\n   array <b>rrd_graph<\/b>\n    ( string $filename\n   , array $options\n   )","desc":"\n   Creates image for a particular data from RRD file.\n  "},"rrd_info":{"version":"(PECL rrd >= 0.9.0)","shortdesc":"Gets information about rrd file","syntax":"\n   array <b>rrd_info<\/b>\n    ( string $filename\n   )","desc":"\n   Returns information about particular RRD database file.\n  "},"rrd_last":{"version":"(PECL rrd >= 0.9.0)","shortdesc":"Gets unix timestamp of the last sample.","syntax":"\n   int <b>rrd_last<\/b>\n    ( string $filename\n   )","desc":"\n   Returns the UNIX timestamp of the most recent update of the RRD database.\n  "},"rrd_lastupdate":{"version":"(PECL rrd >= 0.9.0)","shortdesc":"Gets information about last updated data.","syntax":"\n   array <b>rrd_lastupdate<\/b>\n    ( string $filename\n   )","desc":"\n   Gets array of the UNIX timestamp and the values stored for each date in the\n   most recent update of the RRD database file.\n  "},"rrd_restore":{"version":"(PECL rrd >= 0.9.0)","shortdesc":"Restores the RRD file from XML dump.","syntax":"\n   bool <b>rrd_restore<\/b>\n    ( string $xml_file\n   , string $rrd_file\n   [, array $options\n  ] )","desc":"\n   Restores the RRD file from the XML dump.\n  "},"rrd_tune":{"version":"(PECL rrd >= 0.9.0)","shortdesc":"Tunes some RRD database file header options.","syntax":"\n   bool <b>rrd_tune<\/b>\n    ( string $filename\n   , array $options\n   )","desc":"\n   Change some options in the RRD dabase header file. E.g. renames the source for\n   the data etc.\n  "},"rrd_update":{"version":"(PECL rrd >= 0.9.0)","shortdesc":"Updates the RRD database.","syntax":"\n   bool <b>rrd_update<\/b>\n    ( string $filename\n   , array $options\n   )","desc":"\n   Updates the RRD database file. The input data is time interpolated according to the\n   properties of the RRD database file.\n  "},"rrd_version":{"version":"(PECL rrd >= 1.0.0)","shortdesc":"Gets information about underlying rrdtool library","syntax":"\n   string <b>rrd_version<\/b>\n    ( void\n   )","desc":"\n   Returns information about underlying rrdtool library.\n  "},"rrd_xport":{"version":"(PECL rrd >= 0.9.0)","shortdesc":"Exports the information about RRD database.","syntax":"\n   array <b>rrd_xport<\/b>\n    ( array $options\n   )","desc":"\n   Exports the information about RRD database file. This data can be converted\n   to XML file via user space PHP script and then restored back as RRD database\n   file.\n  "},"rsort":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0432 \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435","syntax":"\n   bool <b>rsort<\/b>\n    ( array &$array\n   [, int $sort_flags = SORT_REGULAR\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0432 \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435 (\u043e\u0442 \u0431\u043e\u043b\u044c\u0448\u0435\u0433\u043e \u043a \u043c\u0435\u043d\u044c\u0448\u0435\u043c\u0443).\n  "},"rtrim":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043f\u0440\u043e\u0431\u0435\u043b\u044b (\u0438\u043b\u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b) \u0438\u0437 \u043a\u043e\u043d\u0446\u0430 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   string <b>rtrim<\/b>\n    ( string $str\n   [, string $charlist\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 str \u0441 \u0443\u0434\u0430\u043b\u0435\u043d\u043d\u044b\u043c\u0438\n   \u0438\u0437 \u043a\u043e\u043d\u0446\u0430 \u0441\u0442\u0440\u043e\u043a\u0438 \u043f\u0440\u043e\u0431\u0435\u043b\u0430\u043c\u0438.\n  "},"runkit_class_adopt":{"version":"(PECL runkit >= 0.7.0)","shortdesc":"\n   \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 \u0432 \u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u043d\u044b\u0439 (\"\u0443\u0441\u044b\u043d\u043e\u0432\u043b\u044f\u0435\u0442\"). \n   \u0414\u043e\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043c\u0435\u0442\u043e\u0434\u044b \u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438.\n  ","syntax":"\n   bool <b>runkit_class_adopt<\/b>\n    ( string $classname\n   , string $parentname\n   )","desc":""},"runkit_class_emancipate":{"version":"(PECL runkit >= 0.7.0)","shortdesc":"\n   \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043b\u0430\u0441\u0441 \u0432 \u0431\u0430\u0437\u043e\u0432\u044b\u0439, \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0438\u0437 \u043d\u0435\u0433\u043e \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u043c\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b.\n  ","syntax":"\n   bool <b>runkit_class_emancipate<\/b>\n    ( string $classname\n   )","desc":""},"runkit_constant_add":{"version":"(PECL runkit >= 0.7.0)","shortdesc":"\n   \u041e\u0431\u044a\u044f\u0432\u043b\u044f\u0435\u0442 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0443. \u0421\u0445\u043e\u0436\u0430 \u0441 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 define(), \u043d\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u044b \u0432\u043d\u0443\u0442\u0440\u0438 \u043a\u043b\u0430\u0441\u0441\u043e\u0432.\n  ","syntax":"\n   bool <b>runkit_constant_add<\/b>\n    ( string $constname\n   , mixed $value\n   )","desc":""},"runkit_constant_redefine":{"version":"(PECL runkit >= 0.7.0)","shortdesc":"\n   \u041f\u0435\u0440\u0435\u043d\u0430\u0437\u043d\u0430\u0447\u0438\u0442\u044c \u0443\u0436\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u0443\u044e \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0443.\n  ","syntax":"\n   bool <b>runkit_constant_redefine<\/b>\n    ( string $constname\n   , mixed $newvalue\n   )","desc":""},"runkit_constant_remove":{"version":"(PECL runkit >= 0.7.0)","shortdesc":"\n   \u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0443\u0436\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u0443\u044e \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0443.\n  ","syntax":"\n   bool <b>runkit_constant_remove<\/b>\n    ( string $constname\n   )","desc":""},"runkit_function_add":{"version":"(PECL runkit >= 0.7.0)","shortdesc":"\n   \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u043e\u0432\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e  create_function()\n  ","syntax":"\n   bool <b>runkit_function_add<\/b>\n    ( string $funcname\n   , string $arglist\n   , string $code\n   )","desc":""},"runkit_function_copy":{"version":"(PECL runkit >= 0.7.0)","shortdesc":"\n   \u041a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0441 \u043d\u043e\u0432\u044b\u043c \u0438\u043c\u0435\u043d\u0435\u043c\n  ","syntax":"\n   bool <b>runkit_function_copy<\/b>\n    ( string $funcname\n   , string $targetname\n   )","desc":""},"runkit_function_redefine":{"version":"(PECL runkit >= 0.7.0)","shortdesc":"\n   \u0417\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043d\u043e\u0432\u043e\u0439 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0435\u0439. \n  ","syntax":"\n   bool <b>runkit_function_redefine<\/b>\n    ( string $funcname\n   , string $arglist\n   , string $code\n   )","desc":""},"runkit_function_remove":{"version":"(PECL runkit >= 0.7.0)","shortdesc":"\n   \u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e\n  ","syntax":"\n   bool <b>runkit_function_remove<\/b>\n    ( string $funcname\n   )","desc":""},"runkit_function_rename":{"version":"(PECL runkit >= 0.7.0)","shortdesc":"\n   \u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e\n  ","syntax":"\n   bool <b>runkit_function_rename<\/b>\n    ( string $funcname\n   , string $newname\n   )","desc":""},"runkit_import":{"version":"(PECL runkit >= 0.7.0)","shortdesc":"\n   \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 PHP \u0444\u0430\u0439\u043b, \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0438 \u043a\u043b\u0430\u0441\u0441\u044b, \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u044f \u043f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438.\n  ","syntax":"\n   bool <b>runkit_import<\/b>\n    ( string $filename\n   [, int $flags = RUNKIT_IMPORT_CLASS_METHODS\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u0445\u043e\u0436\u0430 \u043d\u0430  include, \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\n   \u0432\u0435\u0441\u044c \u043a\u043e\u0434 \u0432\u043d\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u0438 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439 \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f.\n   \u0412 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 flags \n   \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0438 \u043a\u043b\u0430\u0441\u0441\u044b \u0431\u0443\u0434\u0443\u0442 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0437\u0430\u043c\u0435\u043d\u0435\u043d\u044b\n   \u043d\u043e\u0432\u044b\u043c\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f\u043c\u0438.\n  "},"runkit_lint_file":{"version":"(PECL runkit >= 0.7.0)","shortdesc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 PHP-\u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430\n  ","syntax":"\n   bool <b>runkit_lint_file<\/b>\n    ( string $filename\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  runkit_lint_file() \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0430\n   \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0441\u0445\u043e\u0436\u0435 \u0441 \u0432\u044b\u0437\u043e\u0432\u043e\u043c \u043a\u043e\u043c\u0430\u043d\u0434\u044b php -l\n   \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438.\n  "},"runkit_lint":{"version":"(PECL runkit >= 0.7.0)","shortdesc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 PHP-\u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0430   \n  ","syntax":"\n   bool <b>runkit_lint<\/b>\n    ( string $code\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  runkit_lint() \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0430\n   \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0430 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u043e\u0448\u0438\u0431\u043e\u043a.\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u0445\u043e\u0436\u0430 \u043d\u0430 \u0432\u044b\u0437\u043e\u0432 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440\u0430 php -l \u0438\u0437\n   \u043a\u043e\u043c\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438, \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e  runkit_lint()\n   \u0432\u043c\u0435\u0441\u0442\u043e \u0444\u0430\u0439\u043b\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u043a\u043e\u0434.\n  "},"runkit_method_add":{"version":"(PECL runkit >= 0.7.0)","shortdesc":"\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043c\u0435\u0442\u043e\u0434 \u0432 \u043a\u043b\u0430\u0441\u0441","syntax":"\n   bool <b>runkit_method_add<\/b>\n    ( string $classname\n   , string $methodname\n   , string $args\n   , string $code\n   [, int $flags = RUNKIT_ACC_PUBLIC\n  ] )","desc":""},"runkit_method_copy":{"version":"(PECL runkit >= 0.7.0)","shortdesc":"\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u0430 \u0438\u0437 \u043e\u0434\u043d\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 \u0432 \u0434\u0440\u0443\u0433\u043e\u0439","syntax":"\n   bool <b>runkit_method_copy<\/b>\n    ( string $dClass\n   , string $dMethod\n   , string $sClass\n   [, string $sMethod\n  ] )","desc":""},"runkit_method_redefine":{"version":"(PECL runkit >= 0.7.0)","shortdesc":"\u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u043a\u043e\u0434 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430","syntax":"\n   bool <b>runkit_method_redefine<\/b>\n    ( string $classname\n   , string $methodname\n   , string $args\n   , string $code\n   [, int $flags = RUNKIT_ACC_PUBLIC\n  ] )","desc":""},"runkit_method_remove":{"version":"(PECL runkit >= 0.7.0)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434","syntax":"\n   bool <b>runkit_method_remove<\/b>\n    ( string $classname\n   , string $methodname\n   )","desc":""},"runkit_method_rename":{"version":"(PECL runkit >= 0.7.0)","shortdesc":"\u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434","syntax":"\n   bool <b>runkit_method_rename<\/b>\n    ( string $classname\n   , string $methodname\n   , string $newname\n   )","desc":""},"runkit_return_value_used":{"version":"(PECL runkit >= 0.8.0)","shortdesc":"\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043b\u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435","syntax":"\n   bool <b>runkit_return_value_used<\/b>\n    ( void\n   )","desc":""},"runkit_sandbox_output_handler":{"version":"(PECL runkit >= 0.7.0)","shortdesc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u0437\u0430\u0445\u0432\u0430\u0442\u0430 \u0438\/\u0438\u043b\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \"\u043f\u0435\u0441\u043e\u0447\u043d\u0438\u0446\u044b\".\n  ","syntax":"\n   mixed <b>runkit_sandbox_output_handler<\/b>\n    ( object $sandbox\n   [, mixed $callback\n  ] )","desc":"\n   \u041e\u0431\u044b\u0447\u043d\u043e \u0432\u0441\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0440\u0430\u0431\u043e\u0442\u044b \u0432 \u043f\u0435\u0441\u043e\u0447\u043d\u0438\u0447\u0435 (\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0439  echo\n   \u0438\u043b\u0438  print) \u0431\u0443\u0434\u0443\u0442 \u0432\u044b\u0432\u0435\u0434\u0435\u043d\u044b \u0432 \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u043c \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0438. \n   \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435  runkit_sandbox_output_handler() \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442\n   \u043f\u0435\u0440\u0435\u0445\u0432\u0430\u0442\u0438\u0442\u044c \u044d\u0442\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 \u0432\u043d\u0435 \u043f\u0435\u0441\u043e\u0447\u043d\u0438\u0446\u044b.\n  "},"runkit_superglobals":{"version":"(PECL runkit >= 0.7.0)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0434\u0435\u043a\u0441\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0441\u0443\u043f\u0435\u0440\u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445.\n  ","syntax":"\n   array <b>runkit_superglobals<\/b>\n    ( void\n   )","desc":""},"scandir":{"version":"(PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0444\u0430\u0439\u043b\u043e\u0432 \u0438 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u043e\u0432, \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0445 \u043f\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u0443\u0442\u0438","syntax":"\n   array <b>scandir<\/b>\n    ( string $directory\n   [, int $sorting_order = SCANDIR_SORT_ASCENDING\n   [, resource $context\n  ]] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 array, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0438\u043c\u0435\u043d\u0430 \u0444\u0430\u0439\u043b\u043e\u0432 \u0438 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u043e\u0432,\n   \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0445 \u043f\u043e \u043f\u0443\u0442\u0438, \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u043c \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 directory.\n  "},"sem_acquire":{"version":"(PHP 4, PHP 5)","shortdesc":"Acquire a semaphore","syntax":"\n   bool <b>sem_acquire<\/b>\n    ( resource $sem_identifier\n   )","desc":"\n    sem_acquire() blocks (if necessary) until the semaphore\n   can be acquired.  A process attempting to acquire a semaphore which it has\n   already acquired will block forever if acquiring the semaphore would cause\n   its maximum number of semaphore to be exceeded.\n  "},"sem_get":{"version":"(PHP 4, PHP 5)","shortdesc":"Get a semaphore id","syntax":"\n   resource <b>sem_get<\/b>\n    ( int $key\n   [, int $max_acquire = 1\n   [, int $perm = 0666\n   [, int $auto_release = 1\n  ]]] )","desc":"\n    sem_get() returns an id that can be used to\n   access the System V semaphore with the given key.\n  "},"sem_release":{"version":"(PHP 4, PHP 5)","shortdesc":"Release a semaphore","syntax":"\n   bool <b>sem_release<\/b>\n    ( resource $sem_identifier\n   )","desc":"\n    sem_release() releases the semaphore if it\n   is currently acquired by the calling process, otherwise\n   a warning is generated.\n  "},"sem_remove":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"Remove a semaphore","syntax":"\n   bool <b>sem_remove<\/b>\n    ( resource $sem_identifier\n   )","desc":"\n    sem_remove() removes the given semaphore.\n  "},"serialize":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u043f\u0440\u0438\u0433\u043e\u0434\u043d\u043e\u0435 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439","syntax":"\n    string <b>serialize<\/b>\n     ( mixed $value\n    )","desc":"\n   \u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u043f\u0440\u0438\u0433\u043e\u0434\u043d\u043e\u0435 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439\n  "},"session_cache_expire":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"Return current cache expire","syntax":"\n   int <b>session_cache_expire<\/b>\n    ([ string $new_cache_expire\n  ] )","desc":"\n    session_cache_expire() returns the current setting of\n   session.cache_expire. \n  "},"session_cache_limiter":{"version":"(PHP 4 >= 4.0.3, PHP 5)","shortdesc":"Get and\/or set the current cache limiter","syntax":"\n   string <b>session_cache_limiter<\/b>\n    ([ string $cache_limiter\n  ] )","desc":"\n    session_cache_limiter() returns the name of the\n   current cache limiter.\n  "},"session_commit":{"version":"(PHP 4 >= 4.4.0, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  session_write_close()","syntax":"","desc":""},"session_decode":{"version":"(PHP 4, PHP 5)","shortdesc":"Decodes session data from a session encoded string","syntax":"\n   bool <b>session_decode<\/b>\n    ( string $data\n   )","desc":"\n    session_decode() decodes the serialized session data provided in\n   $data, and populates the $_SESSION superglobal\n   with the result.\n  "},"session_destroy":{"version":"(PHP 4, PHP 5)","shortdesc":"Destroys all data registered to a session","syntax":"\n   bool <b>session_destroy<\/b>\n    ( void\n   )","desc":""},"session_encode":{"version":"(PHP 4, PHP 5)","shortdesc":"Encodes the current session data as a session encoded string","syntax":"\n   string <b>session_encode<\/b>\n    ( void\n   )","desc":"\n    session_encode() returns a serialized string of the\n   contents of the current session data stored in the $_SESSION superglobal.\n  "},"session_get_cookie_params":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b cookie \u0441\u0435\u0441\u0441\u0438\u0438","syntax":"\n   array <b>session_get_cookie_params<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b cookie \u0441\u0435\u0441\u0441\u0438\u0438.\n  "},"session_id":{"version":"(PHP 4, PHP 5)","shortdesc":"Get and\/or set the current session id","syntax":"\n   string <b>session_id<\/b>\n    ([ string $id\n  ] )","desc":"\n    session_id() is used to get or set the session id for\n   the current session.\n  "},"session_is_registered":{"version":"(PHP 4, PHP 5 < 5.4.0)","shortdesc":"\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u043b\u0438 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0432 \u0441\u0435\u0441\u0441\u0438\u0438","syntax":"\n   bool <b>session_is_registered<\/b>\n    ( string $name\n   )","desc":"\n   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u043b\u0438 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0432 \u0441\u0435\u0441\u0441\u0438\u0438.\n  "},"session_module_name":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\/\u0438\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043c\u043e\u0434\u0443\u043b\u044c \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0441\u0435\u0441\u0441\u0438\u0438","syntax":"\n   string <b>session_module_name<\/b>\n    ([ string $module\n  ] )","desc":"\n    session_module_name() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e\n   \u043c\u043e\u0434\u0443\u043b\u044f \u0441\u0435\u0441\u0441\u0438\u0438. \n  "},"session_name":{"version":"(PHP 4, PHP 5)","shortdesc":"Get and\/or set the current session name","syntax":"\n   string <b>session_name<\/b>\n    ([ string $name\n  ] )","desc":"\n    session_name() returns the name of the current\n   session. If name is given,\n    session_name() will update the session name and return\n   the old session name.\n  "},"session_pgsql_add_error":{"version":"(PECL session_pgsql SVN)","shortdesc":"Increments error counts and sets last error message","syntax":"\n   bool <b>session_pgsql_add_error<\/b>\n    ( int $error_level\n   [, string $error_message\n  ] )","desc":""},"session_pgsql_get_error":{"version":"(PECL session_pgsql SVN)","shortdesc":"Returns number of errors and last error message","syntax":"\n   array <b>session_pgsql_get_error<\/b>\n    ([ bool $with_error_message = false\n  ] )","desc":"\n   Get the number of errors and optional the error messages.\n  "},"session_pgsql_get_field":{"version":"(PECL session_pgsql SVN)","shortdesc":"Get custom field value","syntax":"\n   string <b>session_pgsql_get_field<\/b>\n    ( void\n   )","desc":""},"session_pgsql_reset":{"version":"(PECL session_pgsql SVN)","shortdesc":"Reset connection to session database servers","syntax":"\n   bool <b>session_pgsql_reset<\/b>\n    ( void\n   )","desc":"\n   Reset the connection to the session database servers.\n  "},"session_pgsql_set_field":{"version":"(PECL session_pgsql SVN)","shortdesc":"Set custom field value","syntax":"\n   bool <b>session_pgsql_set_field<\/b>\n    ( string $value\n   )","desc":""},"session_pgsql_status":{"version":"(PECL session_pgsql SVN)","shortdesc":"Get current save handler status","syntax":"\n   array <b>session_pgsql_status<\/b>\n    ( void\n   )","desc":""},"session_regenerate_id":{"version":"(PHP 4 >= 4.3.2, PHP 5)","shortdesc":"\n   Update the current session id with a newly generated one\n  ","syntax":"\n   bool <b>session_regenerate_id<\/b>\n    ([ bool $delete_old_session = false\n  ] )","desc":"\n    session_regenerate_id() will replace the current\n   session id with a new one, and keep the current session information.\n  "},"session_register_shutdown":{"version":"(PHP >=5.4.0)","shortdesc":"\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u0441\u0435\u0441\u0441\u0438\u0438","syntax":"\n   void <b>session_register_shutdown<\/b>\n    ( void\n   )","desc":"\n   \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e  session_write_close() \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u0441\u0435\u0441\u0441\u0438\u0438.\n  "},"session_register":{"version":"(PHP 4, PHP 5 < 5.4.0)","shortdesc":"Register one or more global variables with the current session","syntax":"\n   bool <b>session_register<\/b>\n    ( mixed $name\n   [, mixed $...\n  ] )","desc":"\n    session_register() accepts a variable number of\n   arguments, any of which can be either a string holding the name of a\n   variable or an array consisting of variable names or other arrays. For\n   each name,  session_register() registers the global\n   variable with that name in the current session.\n  "},"session_save_path":{"version":"(PHP 4, PHP 5)","shortdesc":"Get and\/or set the current session save path","syntax":"\n   string <b>session_save_path<\/b>\n    ([ string $path\n  ] )","desc":"\n    session_save_path() returns the path of the current\n   directory used to save session data. \n  "},"session_set_cookie_params":{"version":"(PHP 4, PHP 5)","shortdesc":"Set the session cookie parameters","syntax":"\n   void <b>session_set_cookie_params<\/b>\n    ( int $lifetime\n   [, string $path\n   [, string $domain\n   [, bool $secure = false\n   [, bool $httponly = false\n  ]]]] )","desc":"\n   Set cookie parameters defined in the php.ini file. The effect of this\n   function only lasts for the duration of the script. Thus, you need to\n   call  session_set_cookie_params() for every request and\n   before  session_start() is called.\n  "},"session_set_save_handler":{"version":"(PHP 4, PHP 5)","shortdesc":"Sets user-level session storage functions","syntax":"\n   bool <b>session_set_save_handler<\/b>\n    ( callable $open\n   , callable $close\n   , callable $read\n   , callable $write\n   , callable $destroy\n   , callable $gc\n   )\n\n   bool <b>session_set_save_handler<\/b>\n    ( SessionHandlerInterface $sessionhandler\n   [, bool $register_shutdown = true\n  ] )\n","desc":"\n   Since PHP 5.4 it is possible to register the following prototype:\n  \n\n    session_set_save_handler() sets the user-level\n   session storage functions which are used for storing and\n   retrieving data associated with a session.  This is most useful\n   when a storage method other than those supplied by PHP sessions\n   is preferred.  i.e. Storing the session data in a local database.\n  \n"},"session_start":{"version":"(PHP 4, PHP 5)","shortdesc":"Start new or resume existing session","syntax":"\n   bool <b>session_start<\/b>\n    ( void\n   )","desc":"\n    session_start() creates a session or resumes the\n   current one based on a session identifier passed via a GET or POST\n   request, or passed via a cookie.\n  "},"session_status":{"version":"(PHP >=5.4.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0441\u0435\u0441\u0441\u0438\u0438","syntax":"\n   int <b>session_status<\/b>\n    ( void\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  session_status() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0441\u0435\u0441\u0441\u0438\u0438.\n  "},"session_unregister":{"version":"(PHP 4, PHP 5 < 5.4.0)","shortdesc":"Unregister a global variable from the current session","syntax":"\n   bool <b>session_unregister<\/b>\n    ( string $name\n   )","desc":"\n    session_unregister() unregisters the global variable\n   named name from the current session.\n  "},"session_unset":{"version":"(PHP 4, PHP 5)","shortdesc":"Free all session variables","syntax":"\n   void <b>session_unset<\/b>\n    ( void\n   )","desc":"\n   The  session_unset() function frees all session variables\n   currently registered.\n  "},"session_write_close":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"Write session data and end session","syntax":"\n   void <b>session_write_close<\/b>\n    ( void\n   )","desc":"\n   End the current session and store session data.\n  "},"set_error_handler":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043e\u0448\u0438\u0431\u043e\u043a\n  ","syntax":"\n   mixed <b>set_error_handler<\/b>\n    ( callable $error_handler\n   [, int $error_types = E_ALL | E_STRICT\n  ] )\n\n         handler\n         ( int $errno\n        , string $errstr\n        [, string $errfile\n        [, int $errline\n        [, array $errcontext\n       ]]] )\n","desc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e (error_handler),\n   \u043a\u0430\u043a \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043e\u0448\u0438\u0431\u043e\u043a \u0432 \u0441\u043a\u0440\u0438\u043f\u0442\u0435.\n  "},"set_exception_handler":{"version":"(PHP 5)","shortdesc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439\n  ","syntax":"\n   callable <b>set_exception_handler<\/b>\n    ( callable $exception_handler\n   )","desc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0434\u043b\u044f \u0441\u043b\u0443\u0447\u0430\u0435\u0432, \u043a\u043e\u0433\u0434\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0432\u044b\u0431\u0440\u043e\u0448\u0435\u043d\u043e\n   \u0432\u043d\u0435 \u0431\u043b\u043e\u043a\u0430 try\/catch. \u041f\u043e\u0441\u043b\u0435 \u0432\u044b\u0437\u043e\u0432\u0430 exception_handler\n   \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e.\n  "},"set_file_buffer":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  stream_set_write_buffer()","syntax":"","desc":""},"set_include_path":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 include_path\n  ","syntax":"\n   string <b>set_include_path<\/b>\n    ( string $new_include_path\n   )","desc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438\n   include_path\n   \u043d\u0430 \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0441\u043a\u0440\u0438\u043f\u0442\u0430.  \n  "},"set_magic_quotes_runtime":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 magic_quotes_runtime\n  ","syntax":"\n   bool <b>set_magic_quotes_runtime<\/b>\n    ( bool $new_setting\n   )","desc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 magic_quotes_runtime.\n  "},"set_socket_blocking":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  stream_set_blocking()","syntax":"","desc":""},"set_time_limit":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0441\u043a\u0440\u0438\u043f\u0442\u0430","syntax":"\n   void <b>set_time_limit<\/b>\n    ( int $seconds\n   )","desc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u044f \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0430\u0445, \u0432 \u0442\u0435\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0441\u043a\u0440\u0438\u043f\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443.\n   \u0415\u0441\u043b\u0438 \u0441\u043a\u0440\u0438\u043f\u0442 \u043d\u0435 \u0443\u0441\u043f\u0435\u0432\u0430\u0435\u0442, \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0444\u0430\u0442\u0430\u043b\u044c\u043d\u0430\u044f \u043e\u0448\u0438\u0431\u043a\u0430. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0434\u0430\u0435\u0442\u0441\u044f\n   30 \u0441\u0435\u043a\u0443\u043d\u0434, \u043b\u0438\u0431\u043e \u0432\u0440\u0435\u043c\u044f, \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u0435 \u0432 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0435\n   max_execution_time \u0432 php.ini (\u0435\u0441\u043b\u0438 \u0442\u0430\u043a\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\n   \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430).\n  "},"setcookie":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 cookie","syntax":"\n   bool <b>setcookie<\/b>\n    ( string $name\n   [, string $value\n   [, int $expire = 0\n   [, string $path\n   [, string $domain\n   [, bool $secure = false\n   [, bool $httponly = false\n  ]]]]]] )","desc":"\n    setcookie() \u0437\u0430\u0434\u0430\u0435\u0442 cookie, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0431\u0443\u0434\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0443\n   \u0432\u043c\u0435\u0441\u0442\u0435 \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 HTTP \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u043c\u0438. \u041a\u0430\u043a \u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a, cookie \u0434\u043e\u043b\u0436\u043d\u044b\n   \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043e \u0442\u043e\u0433\u043e \u043a\u0430\u043a \u0431\u0443\u0434\u0443\u0442 \u0432\u044b\u0432\u0435\u0434\u0435\u043d\u044b \u043a\u0430\u043a\u0438\u0435-\u043b\u0438\u0431\u043e \u0434\u0440\u0443\u0433\u0438\u0435\n   \u0434\u0430\u043d\u043d\u044b\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u0430 (\u044d\u0442\u043e \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430). \u042d\u0442\u043e \u0437\u043d\u0430\u0447\u0438\u0442, \u0447\u0442\u043e \u0432 \u0441\u043a\u0440\u0438\u043f\u0442\u0435 \u0432\u044b\u0437\u043e\u0432\u044b\n   \u044d\u0442\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0440\u0430\u0441\u043f\u043e\u043b\u0430\u0433\u0430\u0442\u044c\u0441\u044f \u043f\u0440\u0435\u0436\u0434\u0435 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0432\u044b\u0432\u043e\u0434\u0430, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0432\u044b\u0432\u043e\u0434\n   \u0442\u044d\u0433\u043e\u0432 <html> \u0438 <head>, \u0430\n   \u0442\u0430\u043a\u0436\u0435 \u043f\u0443\u0441\u0442\u044b\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438 \u043f\u0440\u043e\u0431\u0435\u043b\u044b.\n  "},"setlocale":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043b\u043e\u043a\u0430\u043b\u0438","syntax":"\n   string <b>setlocale<\/b>\n    ( int $category\n   , string $locale\n   [, string $...\n  ] )\n\n   string <b>setlocale<\/b>\n    ( int $category\n   , array $locale\n   )\n","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043b\u043e\u043a\u0430\u043b\u0438.\n  "},"setproctitle":{"version":"(PECL proctitle >= 0.1.0)","shortdesc":"Set the process title","syntax":"\n   void <b>setproctitle<\/b>\n    ( string $title\n   )","desc":"\n   Sets the process title of the current process.\n  "},"setrawcookie":{"version":"(PHP 5)","shortdesc":"\u041f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 cookie \u043d\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u044b\u0432\u0430\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435","syntax":"\n   bool <b>setrawcookie<\/b>\n    ( string $name\n   [, string $value\n   [, int $expire = 0\n   [, string $path\n   [, string $domain\n   [, bool $secure = false\n   [, bool $httponly = false\n  ]]]]]] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  setrawcookie() \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u043e\u043b\u043d\u044b\u043c \u0430\u043d\u0430\u043b\u043e\u0433\u043e\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    setcookie(), \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u044f \u0442\u043e, \u0447\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 cookie \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\n\u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u043e \u043f\u0440\u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0435 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0443.\n  "},"setthreadtitle":{"version":"(PECL proctitle >= 0.1.2)","shortdesc":"Set the thread title","syntax":"\n   bool <b>setthreadtitle<\/b>\n    ( string $title\n   )","desc":"\n   Sets the thread title.\n  "},"settype":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u043d\u043e\u0432\u044b\u0439 \u0442\u0438\u043f","syntax":"\n   bool <b>settype<\/b>\n    ( mixed &$var\n   , string $type\n   )","desc":"\n   \u041f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 var \u0442\u0438\u043f\n   type.\n  "},"sha1_file":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 SHA1-\u0445\u044d\u0448 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   string <b>sha1_file<\/b>\n    ( string $filename\n   [, bool $raw_output = false\n  ] )","desc":""},"sha1":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 SHA1-\u0445\u044d\u0448 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   string <b>sha1<\/b>\n    ( string $str\n   [, bool $raw_output = false\n  ] )","desc":""},"shell_exec":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0447\u0435\u0440\u0435\u0437 \u0448\u0435\u043b\u043b \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u043b\u043d\u044b\u0439 \u0432\u044b\u0432\u043e\u0434 \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   string <b>shell_exec<\/b>\n    ( string $cmd\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u0430 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0443 \u043e\u0431\u0440\u0430\u0442\u043d\u044b\u0439 \u0430\u043f\u043e\u0441\u0442\u0440\u043e\u0444.\n  "},"shm_attach":{"version":"(PHP 4, PHP 5)","shortdesc":"Creates or open a shared memory segment","syntax":"\n   resource <b>shm_attach<\/b>\n    ( int $key\n   [, int $memsize\n   [, int $perm = 0666\n  ]] )","desc":"\n    shm_attach() returns an id that can be used to access\n   the System V shared memory with the given key, the\n   first call creates the shared memory segment with \n   memsize and the optional perm-bits \n   perm.\n  "},"shm_detach":{"version":"(PHP 4, PHP 5)","shortdesc":"Disconnects from shared memory segment","syntax":"\n   bool <b>shm_detach<\/b>\n    ( resource $shm_identifier\n   )","desc":"\n    shm_detach() disconnects from the shared memory given\n   by the shm_identifier created by\n    shm_attach(). Remember, that shared memory still exist\n   in the Unix system and the data is still present.\n  "},"shm_get_var":{"version":"(PHP 4, PHP 5)","shortdesc":"Returns a variable from shared memory","syntax":"\n   mixed <b>shm_get_var<\/b>\n    ( resource $shm_identifier\n   , int $variable_key\n   )","desc":"\n    shm_get_var() returns the variable with a given\n   variable_key, in the given shared memory segment.\n   The variable is still present in the shared memory.\n  "},"shm_has_var":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"Check whether a specific entry exists","syntax":"\n   bool <b>shm_has_var<\/b>\n    ( resource $shm_identifier\n   , int $variable_key\n   )","desc":"\n   Checks whether a specific key exists inside a shared memory segment.\n  "},"shm_put_var":{"version":"(PHP 4, PHP 5)","shortdesc":"Inserts or updates a variable in shared memory","syntax":"\n   bool <b>shm_put_var<\/b>\n    ( resource $shm_identifier\n   , int $variable_key\n   , mixed $variable\n   )","desc":"\n    shm_put_var() inserts or updates the\n   variable with the given\n   variable_key.\n  "},"shm_remove_var":{"version":"(PHP 4, PHP 5)","shortdesc":"Removes a variable from shared memory\n  ","syntax":"\n   bool <b>shm_remove_var<\/b>\n    ( resource $shm_identifier\n   , int $variable_key\n   )","desc":"\n   Removes a variable with a given variable_key\n   and frees the occupied memory.\n  "},"shm_remove":{"version":"(PHP 4, PHP 5)","shortdesc":"Removes shared memory from Unix systems","syntax":"\n   bool <b>shm_remove<\/b>\n    ( resource $shm_identifier\n   )","desc":"\n    shm_remove() removes the shared memory\n   shm_identifier. All data will be destroyed.\n  "},"shmop_close":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0442\u0438\u0435 \u0431\u043b\u043e\u043a\u0430 \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u043c\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u0438","syntax":"\n   void <b>shmop_close<\/b>\n    ( int $shmid\n   )","desc":"\n    shmop_close() \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a\n   \u0431\u043b\u043e\u043a\u0443 \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u043c\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u0438.\n  "},"shmop_delete":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0431\u043b\u043e\u043a\u0430 \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u043c\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u0438","syntax":"\n   bool <b>shmop_delete<\/b>\n    ( int $shmid\n   )","desc":"\n    shmop_delete() \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0431\u043b\u043e\u043a\u0430\n   \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u043c\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u0438.\n  "},"shmop_open":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0420\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u043b\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u043b\u043e\u043a\u0430 \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u043c\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u0438","syntax":"\n   int <b>shmop_open<\/b>\n    ( int $key\n   , string $flags\n   , int $mode\n   , int $size\n   )","desc":"\n    shmop_open() \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u0443\u0435\u0442 \u0438\u043b\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439\n   \u0431\u043b\u043e\u043a \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u043c\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u0438.\n  "},"shmop_read":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0427\u0442\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \u0443\u0447\u0430\u0441\u0442\u043a\u0430 \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u043c\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u0438","syntax":"\n   string <b>shmop_read<\/b>\n    ( int $shmid\n   , int $start\n   , int $count\n   )","desc":"\n    shmop_read() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435, \u0445\u0440\u0430\u043d\u0438\u043c\u044b\u0435\n   \u0432 \u0443\u0447\u0430\u0441\u0442\u043a\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u043c\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u0438.\n  "},"shmop_size":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0430\u0437\u043c\u0435\u0440 \u0431\u043b\u043e\u043a\u0430 \u0432 \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u043c\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u0438","syntax":"\n  int <b>shmop_size<\/b>\n   ( int $shmid\n  )","desc":"\n    shmop_size() \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0440\u0430\u0437\u043c\u0435\u0440\u0430\n   \u0431\u043b\u043e\u043a\u0430 \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u043c\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u0438 \u0432 \u0431\u0430\u0439\u0442\u0430\u0445.\n  "},"shmop_write":{"version":"(PHP 4 >= 4.0.4, PHP 5)","shortdesc":"\u0417\u0430\u043f\u0438\u0441\u044c \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u043c\u0443\u044e \u043f\u0430\u043c\u044f\u0442\u044c","syntax":"\n   int <b>shmop_write<\/b>\n    ( int $shmid\n   , string $data\n   , int $offset\n   )","desc":"\n    shmop_write() \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0443\u0447\u0430\u0441\u0442\u043e\u043a\n   \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u043c\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u0438.\n  "},"show_source":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  highlight_file()","syntax":"","desc":""},"shuffle":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0435\u0440\u0435\u043c\u0435\u0448\u0438\u0432\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432","syntax":"\n   bool <b>shuffle<\/b>\n    ( array &$array\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u0448\u0438\u0432\u0430\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0432 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435.\n  "},"signeurlpaiement":{"version":"(PECL spplus >= 1.0.0)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u044b\u0439 url (\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e 2 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430)","syntax":"\n   string nthmac\n    ( string $clent\n   , string $data\n   )","desc":""},"similar_text":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0441\u0442\u0435\u043f\u0435\u043d\u044c \u043f\u043e\u0445\u043e\u0436\u0435\u0441\u0442\u0438 \u0434\u0432\u0443\u0445 \u0441\u0442\u0440\u043e\u043a","syntax":"\n   int <b>similar_text<\/b>\n    ( string $first\n   , string $second\n   [, float &$percent\n  ] )","desc":"\n   \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0441\u0442\u0435\u043f\u0435\u043d\u044c \u043f\u043e\u0445\u043e\u0436\u0435\u0441\u0442\u0438 \u0434\u0432\u0443\u0445 \u0441\u0442\u0440\u043e\u043a \u043f\u043e \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0443, \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u043c\u0443\n   Oliver [1993]. \u042d\u0442\u0430 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0441\u0442\u0435\u043a\u0430,\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u0432 \u043e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u0435, \u0432\u043c\u0435\u0441\u0442\u043e \u044d\u0442\u043e\u0433\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u044e\u0442\u0441\u044f \u0440\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u044b\u0435\n   \u0432\u044b\u0437\u043e\u0432\u044b, \u0447\u0442\u043e \u0432 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0441\u043b\u0443\u0447\u0430\u044f\u0445 \u043c\u043e\u0436\u0435\u0442 \u0443\u0441\u043a\u043e\u0440\u0438\u0442\u044c \u043f\u0440\u043e\u0446\u0435\u0441\u0441.\n   \u0421\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 O(N**3), \u0433\u0434\u0435 N - \u0434\u043b\u0438\u043d\u0430 \u0431\u043e\u043b\u0435\u0435 \u0434\u043b\u0438\u043d\u043d\u043e\u0439\n   \u0438\u0437 \u0434\u0432\u0443\u0445 \u0441\u0442\u0440\u043e\u043a.\n  "},"simplexml_import_dom":{"version":"(PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 SimpleXMLElement \u0438\u0437 \u0443\u0437\u043b\u0430 DOM.\n  ","syntax":"\n   SimpleXMLElement <b>simplexml_import_dom<\/b>\n    ( DOMNode $node\n   [, string $class_name = \"SimpleXMLElement\"\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0431\u0435\u0440\u0435\u0442 \u0443\u0437\u0435\u043b \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 DOM\n   \u0438 \u043f\u0440\u0435\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0435\u0433\u043e \u0432 \u0443\u0437\u0435\u043b SimpleXML. \u0417\u0430\u0442\u0435\u043c \u044d\u0442\u043e\u0442 \u043d\u043e\u0432\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u043c\u043e\u0436\u0435\u0442 \n   \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d \u043a\u0430\u043a \u043f\u0435\u0440\u0432\u0438\u0447\u043d\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 SimpleXML.\n  "},"simplexml_load_file":{"version":"(PHP 5)","shortdesc":"\n   \u0418\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0438\u0440\u0443\u0435\u0442 XML-\u0444\u0430\u0439\u043b \u0432 \u043e\u0431\u044a\u0435\u043a\u0442\n  ","syntax":"\n   SimpleXMLElement <b>simplexml_load_file<\/b>\n    ( string $filename\n   [, string $class_name = \"SimpleXMLElement\"\n   [, int $options = 0\n   [, string $ns = \"\"\n   [, bool $is_prefix = false\n  ]]]] )","desc":"\n   \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u0441\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 XML-\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c \u0444\u0430\u0439\u043b\u0435 \u0432 \u043e\u0431\u044a\u0435\u043a\u0442.\n  "},"simplexml_load_string":{"version":"(PHP 5)","shortdesc":"\n   \u0418\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0438\u0440\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 XML \u0432 \u043e\u0431\u044a\u0435\u043a\u0442\n  ","syntax":"\n   SimpleXMLElement <b>simplexml_load_string<\/b>\n    ( string $data\n   [, string $class_name = \"SimpleXMLElement\"\n   [, int $options = 0\n   [, string $ns = \"\"\n   [, bool $is_prefix = false\n  ]]]] )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u0441\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e XML-\u0441\u0442\u0440\u043e\u043a\u0443 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0435\u0435 \u043a\u0430\u043a \u043e\u0431\u044a\u0435\u043a\u0442.\n  "},"sin":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u0438\u043d\u0443\u0441","syntax":"\n    float <b>sin<\/b>\n     ( float $arg\n    )","desc":"\n    sin() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0438\u043d\u0443\u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 arg\n   .  \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 arg \u0437\u0430\u0434\u0430\u0451\u0442\u0441\u044f \u0432 \u0440\u0430\u0434\u0438\u0430\u043d\u0430\u0445.\n  "},"sinh":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0413\u0438\u043f\u0435\u0440\u0431\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0441\u0438\u043d\u0443\u0441","syntax":"\n   float <b>sinh<\/b>\n    ( float $arg\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0433\u0438\u043f\u0435\u0440\u0431\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0441\u0438\u043d\u0443\u0441 arg,\n   \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c\u044b\u0439 \u043a\u0430\u043a (exp(arg) - exp(-arg))\/2.\n  "},"sizeof":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  count()","syntax":"","desc":""},"sleep":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0442\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435","syntax":"\n   int <b>sleep<\/b>\n    ( int $seconds\n   )","desc":""},"snmp_get_quick_print":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   Fetches the current value of the UCD library's quick_print setting\n  ","syntax":"\n   bool <b>snmp_get_quick_print<\/b>\n    ( void\n   )","desc":"\n   Returns the current value stored in the UCD Library for quick_print.  \n   quick_print is off by default.\n  "},"snmp_get_valueretrieval":{"version":"(PHP 4 >= 4.3.3, PHP 5)","shortdesc":"\n   Return the method how the SNMP values will be returned\n  ","syntax":"\n   int\n    <b>snmp_get_valueretrieval<\/b>\n    ( void\n   )","desc":""},"snmp_read_mib":{"version":"(PHP 5)","shortdesc":"\n   Reads and parses a MIB file into the active MIB tree\n  ","syntax":"\n   bool <b>snmp_read_mib<\/b>\n    ( string $filename\n   )","desc":"\n   This function is used to load additional, e.g. vendor specific, MIBs so that\n   human readable OIDs like VENDOR-MIB::foo.1 instead of error prone numeric OIDs\n   can be used.\n  "},"snmp_set_enum_print":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\n   Return all values that are enums with their enum value instead of the raw integer\n  ","syntax":"\n   bool <b>snmp_set_enum_print<\/b>\n    ( int $enum_print\n   )","desc":"\n   This function toggles if snmpwalk\/snmpget etc. should automatically lookup enum values\n   in the MIB and return them together with their human readable string. \n  "},"snmp_set_oid_numeric_print":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\n   Set the OID output format\n  ","syntax":"\n   void <b>snmp_set_oid_numeric_print<\/b>\n    ( int $oid_format\n   )","desc":"\n  \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c\u043e\u043c:   snmp_set_oid_output_format().\n  "},"snmp_set_oid_output_format":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\n   Set the OID output format\n  ","syntax":"\n   bool <b>snmp_set_oid_output_format<\/b>\n    ( int $oid_format = SNMP_OID_OUTPUT_MODULE\n   )","desc":"\n    snmp_set_oid_output_format() sets the output format\n   to be full or numeric.\n  "},"snmp_set_quick_print":{"version":"(PHP 4, PHP 5)","shortdesc":"Set the value of quick_print within the UCD SNMP library\n  ","syntax":"\n   bool <b>snmp_set_quick_print<\/b>\n    ( bool $quick_print\n   )","desc":"\n   Sets the value of quick_print within the UCD SNMP library.  When this\n   is set (1), the SNMP library will return 'quick printed' values.  This\n   means that just the value will be printed.  When quick_print is not\n   enabled (default) the UCD SNMP library prints extra information\n   including the type of the value (i.e. IpAddress or OID).  Additionally, \n   if quick_print is not enabled, the library prints additional hex values \n   for all strings of three characters or less.\n  "},"snmp_set_valueretrieval":{"version":"(PHP 4 >= 4.3.3, PHP 5)","shortdesc":"\n   Specify the method how the SNMP values will be returned\n  ","syntax":"\n   bool\n    <b>snmp_set_valueretrieval<\/b>\n    ( \n    int\n     $method\n     = SNMP_VALUE_LIBRARY\n   \n   )","desc":""},"snmp2_get":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"Fetch an SNMP object","syntax":"\n   string <b>snmp2_get<\/b>\n    ( string $host\n   , string $community\n   , string $object_id\n   [, string $timeout = 1000000\n   [, string $retries = 5\n  ]] )","desc":"\n   The  snmp2_get() function is used to read the\n   value of an SNMP object specified by the\n   object_id.\n  "},"snmp2_getnext":{"version":"(PHP >= 5.2.0)","shortdesc":"Fetch the SNMP object which follows the given object id","syntax":"\n   string <b>snmp2_getnext<\/b>\n    ( string $host\n   , string $community\n   , string $object_id\n   [, string $timeout = 1000000\n   [, string $retries = 5\n  ]] )","desc":"\n   The  snmp2_get_next() function is used to read the\n   value of the SNMP object that follows the specified\n   object_id.\n  "},"snmp2_real_walk":{"version":"(PHP >= 5.2.0)","shortdesc":"Return all objects including their respective object ID within the specified one","syntax":"\n   array <b>snmp2_real_walk<\/b>\n    ( string $host\n   , string $community\n   , string $object_id\n   [, string $timeout = 1000000\n   [, string $retries = 5\n  ]] )","desc":"\n   The  snmp2_real_walk() function is used to traverse over a number\n   of SNMP objects starting from object_id\n   and return not only their values but also their object ids.\n  "},"snmp2_set":{"version":"(PHP >= 5.2.0)","shortdesc":"Set the value of an SNMP object","syntax":"\n   bool <b>snmp2_set<\/b>\n    ( string $host\n   , string $community\n   , string $object_id\n   , string $type\n   , string $value\n   [, string $timeout = 1000000\n   [, string $retries = 5\n  ]] )","desc":"\n    snmp2_set() is used to set the value of an SNMP object\n   specified by the object_id.\n  "},"snmp2_walk":{"version":"(PHP >= 5.2.0)","shortdesc":"Fetch all the SNMP objects from an agent","syntax":"\n   array <b>snmp2_walk<\/b>\n    ( string $host\n   , string $community\n   , string $object_id\n   [, string $timeout = 1000000\n   [, string $retries = 5\n  ]] )","desc":"\n    snmp2_walk() function is used to read all the values from\n   an SNMP agent specified by the hostname.\n  "},"snmp3_get":{"version":"(PHP 4, PHP 5)","shortdesc":"Fetch an SNMP object","syntax":"\n   string <b>snmp3_get<\/b>\n    ( string $host\n   , string $sec_name\n   , string $sec_level\n   , string $auth_protocol\n   , string $auth_passphrase\n   , string $priv_protocol\n   , string $priv_passphrase\n   , string $object_id\n   [, string $timeout = 1000000\n   [, string $retries = 5\n  ]] )","desc":"\n   The  snmp3_get() function is used to read the\n   value of an SNMP object specified by the\n   object_id.\n  "},"snmp3_getnext":{"version":"(PHP 5)","shortdesc":"Fetch the SNMP object which follows the given object id","syntax":"\n   string <b>snmp3_getnext<\/b>\n    ( string $host\n   , string $sec_name\n   , string $sec_level\n   , string $auth_protocol\n   , string $auth_passphrase\n   , string $priv_protocol\n   , string $priv_passphrase\n   , string $object_id\n   [, string $timeout = 1000000\n   [, string $retries = 5\n  ]] )","desc":"\n   The  snmp3_getnext() function is used to read the\n   value of the SNMP object that follows the specified\n   object_id.\n  "},"snmp3_real_walk":{"version":"(PHP 4, PHP 5)","shortdesc":"Return all objects including their respective object ID within the specified one","syntax":"\n   array\n    <b>snmp3_real_walk<\/b>\n    ( \n    string\n     $host\n   \n   , \n    string\n     $sec_name\n   \n   , \n    string\n     $sec_level\n   \n   , \n    string\n     $auth_protocol\n   \n   , \n    string\n     $auth_passphrase\n   \n   , \n    string\n     $priv_protocol\n   \n   , \n    string\n     $priv_passphrase\n   \n   , \n    string\n     $object_id\n   \n   [, \n    string\n     $timeout\n     = 1000000\n   \n   [, \n    string\n     $retries\n     = 5\n   \n  ]] )","desc":"\n   The\n    snmp3_real_walk() function is used to traverse over a number\n   of\n   SNMP objects starting from\n   object_id\n   and return not only their values but also their object ids.\n  "},"snmp3_set":{"version":"(PHP 4, PHP 5)","shortdesc":"Set the value of an SNMP object","syntax":"\n   bool <b>snmp3_set<\/b>\n    ( string $host\n   , string $sec_name\n   , string $sec_level\n   , string $auth_protocol\n   , string $auth_passphrase\n   , string $priv_protocol\n   , string $priv_passphrase\n   , string $object_id\n   , string $type\n   , string $value\n   [, int $timeout = 1000000\n   [, int $retries = 5\n  ]] )","desc":"\n    snmp3_set() is used to set the value of an SNMP object\n   specified by the object_id.\n  "},"snmp3_walk":{"version":"(PHP 4, PHP 5)","shortdesc":"Fetch all the SNMP objects from an agent","syntax":"\n   array <b>snmp3_walk<\/b>\n    ( string $host\n   , string $sec_name\n   , string $sec_level\n   , string $auth_protocol\n   , string $auth_passphrase\n   , string $priv_protocol\n   , string $priv_passphrase\n   , string $object_id\n   [, string $timeout = 1000000\n   [, string $retries = 5\n  ]] )","desc":"\n    snmp3_walk() function is used to read all the values from\n   an SNMP agent specified by the hostname. \n  "},"snmpget":{"version":"(PHP 4, PHP 5)","shortdesc":"Fetch an SNMP object","syntax":"\n   string <b>snmpget<\/b>\n    ( string $hostname\n   , string $community\n   , string $object_id\n   [, int $timeout = 1000000\n   [, int $retries = 5\n  ]] )","desc":"\n   The  snmpget() function is used to read the\n   value of an SNMP object specified by the\n   object_id.\n  "},"snmpgetnext":{"version":"(PHP 5)","shortdesc":"\n   Fetch the SNMP object which follows the given object id\n  ","syntax":"\n   string <b>snmpgetnext<\/b>\n    ( string $host\n   , string $community\n   , string $object_id\n   [, int $timeout = 1000000\n   [, int $retries = 5\n  ]] )","desc":"\n   The  snmpgetnext() function is used to read the\n   value of the SNMP object that follows the specified \n   object_id.\n  "},"snmprealwalk":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   Return all objects including their respective object ID within the specified one\n  ","syntax":"\n   array <b>snmprealwalk<\/b>\n    ( string $host\n   , string $community\n   , string $object_id\n   [, int $timeout = 1000000\n   [, int $retries = 5\n  ]] )","desc":"\n   The  snmprealwalk() function is used to traverse over a number\n   of SNMP objects starting from object_id\n   and return not only their values but also their object ids.\n  "},"snmpset":{"version":"(PHP 4, PHP 5)","shortdesc":"Set the value of an SNMP object","syntax":"\n   bool <b>snmpset<\/b>\n    ( string $host\n   , string $community\n   , string $object_id\n   , string $type\n   , mixed $value\n   [, int $timeout = 1000000\n   [, int $retries = 5\n  ]] )","desc":"\n    snmpset() is used to set the value of an SNMP object\n   specified by the object_id.\n  "},"snmpwalk":{"version":"(PHP 4, PHP 5)","shortdesc":"Fetch all the SNMP objects from an agent","syntax":"\n   array <b>snmpwalk<\/b>\n    ( string $hostname\n   , string $community\n   , string $object_id\n   [, int $timeout = 1000000\n   [, int $retries = 5\n  ]] )","desc":"\n    snmpwalk() function is used to read all the values from\n   an SNMP agent specified by the hostname. \n  "},"snmpwalkoid":{"version":"(PHP 4, PHP 5)","shortdesc":"Query for a tree of information about a network entity\n  ","syntax":"\n   array <b>snmpwalkoid<\/b>\n    ( string $hostname\n   , string $community\n   , string $object_id\n   [, int $timeout = 1000000\n   [, int $retries = 5\n  ]] )","desc":"\n    snmpwalkoid() function is used to read all object ids\n   and their respective values from an SNMP agent specified by  \n   hostname.\n  "},"socket_accept":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u043d\u0430 \u0441\u043e\u043a\u0435\u0442\u0435","syntax":"\n   resource <b>socket_accept<\/b>\n    ( resource $socket\n   )","desc":"\n   \u041f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e, \u043a\u0430\u043a \u0441\u043e\u043a\u0435\u0442 socket \u0431\u044b\u043b \u0441\u043e\u0437\u0434\u0430\u043d\n   \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  socket_create(), \u043f\u0440\u0438\u0432\u044f\u0437\u0430\u043d \u043a \u0438\u043c\u0435\u043d\u0438 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \n   \u0444\u0443\u043d\u043a\u0446\u0438\u0438  socket_bind(), \u0438 \u0435\u043c\u0443 \u0431\u044b\u043b\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043e \u0441\u043b\u0443\u0448\u0430\u0442\u044c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f\n   \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  socket_listen(), \u044d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c\n   \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u043d\u0430 \u044d\u0442\u043e\u043c \u0441\u043e\u043a\u0435\u0442\u0435. \u041a\u0430\u043a \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u043e \u0443\u0434\u0430\u0447\u043d\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435,\n   \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043d\u043e\u0432\u044b\u0439 \u0440\u0435\u0441\u0443\u0440\u0441 \u0441\u043e\u043a\u0435\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d \n   \u0434\u043b\u044f \u0441\u0432\u044f\u0437\u0438. \u0415\u0441\u043b\u0438 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u0441\u043e\u043a\u0435\u0442\u0430 \u0435\u0441\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439,\n   \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u043e \u043f\u0435\u0440\u0432\u043e\u0435 \u0438\u0437 \u043d\u0438\u0445. \u0415\u0441\u043b\u0438 \u043d\u0435\u0442\u0443 \u043e\u0436\u0438\u0434\u0430\u044e\u0449\u0438\u0445 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439,\n   \u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f  socket_accept() \u0431\u0443\u0434\u0435\u0442 \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435\n   \u0441\u043a\u0440\u0438\u043f\u0442\u0430 \u0434\u043e \u0442\u0435\u0445 \u043f\u043e\u0440, \u043f\u043e\u043a\u0430 \u043d\u0435 \u043f\u043e\u044f\u0432\u0438\u0442\u0441\u044f \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435. \u0415\u0441\u043b\u0438 \u0441\u043e\u043a\u0435\u0442\n   socket \u0431\u044b\u043b \u0441\u0434\u0435\u043b\u0430\u043d \u043d\u0435\u0431\u043b\u043e\u043a\u0438\u0440\u0443\u044e\u0449\u0438\u043c \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    socket_set_blocking() \u0438\u043b\u0438\n    socket_set_nonblock(), \u0431\u0443\u0434\u0435\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u043e FALSE.\n  "},"socket_bind":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u0438\u043c\u044f \u043a \u0441\u043e\u043a\u0435\u0442\u0443","syntax":"\n   bool <b>socket_bind<\/b>\n    ( resource $socket\n   , string $address\n   [, int $port = 0\n  ] )","desc":"\n   \u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u0438\u043c\u044f, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0435 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 address, \u043a \u0441\u043e\u043a\u0435\u0442\u0443,\n   \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u043c\u0443 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 socket. \u042d\u0442\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0441\u0434\u0435\u043b\u0430\u043d\u043e \u0434\u043e \u0442\u043e\u0433\u043e,\n   \u043a\u0430\u043a \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  socket_connect()\n   \u0438\u043b\u0438  socket_listen().\n  "},"socket_clear_error":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u041e\u0447\u0438\u0449\u0430\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0443 \u043d\u0430 \u0441\u043e\u043a\u0435\u0442\u0435 \u0438\u043b\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u043a\u043e\u0434 \u043e\u0448\u0438\u0431\u043a\u0438","syntax":"\n   void <b>socket_clear_error<\/b>\n    ([ resource $socket\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0447\u0438\u0449\u0430\u0435\u0442 \u043a\u043e\u0434 \u043e\u0448\u0438\u0431\u043a\u0438 \u043d\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c \u0441\u043e\u043a\u0435\u0442\u0435 \u0438\u043b\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u0443\u044e \n    \u043e\u0448\u0438\u0431\u043a\u0443 \u0441\u043e\u043a\u0435\u0442\u0430, \u0435\u0441\u043b\u0438 \u0441\u043e\u043a\u0435\u0442 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d.\n  "},"socket_close":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0440\u0435\u0441\u0443\u0440\u0441 \u0441\u043e\u043a\u0435\u0442\u0430","syntax":"\n   void <b>socket_close<\/b>\n    ( resource $socket\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  socket_close() \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0440\u0435\u0441\u0443\u0440\u0441 \u0441\u043e\u043a\u0435\u0442\u0430,\n   \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c socket. \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0441 \u0441\u043e\u043a\u0435\u0442\u0430\u043c\u0438\n   \u0438 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0430 \u0441 \u043a\u0430\u043a\u0438\u043c-\u043d\u0438\u0431\u0443\u0434\u044c \u0434\u0440\u0443\u0433\u0438\u043c \u0442\u0438\u043f\u043e\u043c \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432.\n  "},"socket_cmsg_space":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Calculate message buffer size","syntax":"\n   int <b>socket_cmsg_space<\/b>\n    ( int $level\n   , int $type\n   )","desc":"\n   Calculates the size of the buffer that should be allocated for\n   receiving the ancillary data.\n  "},"socket_connect":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u041d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u043e\u043a\u0435\u0442\u043e\u043c","syntax":"\n   bool <b>socket_connect<\/b>\n    ( resource $socket\n   , string $address\n   [, int $port = 0\n  ] )","desc":"\n   \u041d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0430\u0434\u0440\u0435\u0441\u043e\u043c address, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0440\u0435\u0441\u0443\u0440\u0441 \u0441\u043e\u043a\u0435\u0442\u0430\n   socket, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0434\u0435\u0439\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u043c\n   \u0441\u043e\u043a\u0435\u0442\u0430, \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u043c \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  socket_create().\n  "},"socket_create_listen":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u043a\u0435\u0442 \u043d\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c \u043f\u043e\u0440\u0442\u0443 \u0434\u043b\u044f \u043f\u0440\u0438\u043d\u044f\u0442\u0438\u044f \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439","syntax":"\n   resource <b>socket_create_listen<\/b>\n    ( int $port\n   [, int $backlog = 128\n  ] )","desc":"\n    socket_create_listen() \u0441\u043e\u0437\u0434\u0430\u0451\u0442 \u043d\u043e\u0432\u044b\u0439 \u0440\u0435\u0441\u0443\u0440\u0441 \u0441\u043e\u043a\u0435\u0442\u0430\n   \u0442\u0438\u043f\u0430 AF_INET, \u0441\u043b\u0443\u0448\u0430\u044e\u0449\u0438\u0439 \u043d\u0430 \u0432\u0441\u0435\u0445\n   \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430\u0445 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u043e\u0440\u0442 \u0432 \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439.\n  "},"socket_create_pair":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u043f\u0430\u0440\u0443 \u043d\u0435\u0440\u0430\u0437\u043b\u0438\u0447\u0438\u043c\u044b\u0445 \u0441\u043e\u043a\u0435\u0442\u043e\u0432 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0438\u0445 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435","syntax":"\n   bool <b>socket_create_pair<\/b>\n    ( int $domain\n   , int $type\n   , int $protocol\n   , array &$fd\n   )","desc":"\n    socket_create_pair() \u0441\u043e\u0437\u0434\u0430\u0451\u0442 \u0434\u0432\u0430 \u0441\u043e\u0435\u0434\u0438\u043d\u0451\u043d\u043d\u044b\u0445 \u0438\n   \u043d\u0435\u0440\u0430\u0437\u043b\u0438\u0447\u0438\u043c\u044b\u0445 \u0441\u043e\u043a\u0435\u0442\u0430, \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0438\u0445 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435 fd.\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u044b\u0447\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f IPC (\u043c\u0435\u0436\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043d\u043e\u043c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0438).\n  "},"socket_create":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"Create a socket (endpoint for communication)","syntax":"\n   resource <b>socket_create<\/b>\n    ( int $domain\n   , int $type\n   , int $protocol\n   )","desc":"\n   Creates and returns a socket resource, also referred to as an endpoint\n   of communication. A typical network connection is made up of 2 sockets, one\n   performing the role of the client, and another performing the role of the server.\n  "},"socket_get_option":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Gets socket options for the socket ","syntax":"\n   mixed <b>socket_get_option<\/b>\n    ( resource $socket\n   , int $level\n   , int $optname\n   )","desc":"\n   The  socket_get_option() function retrieves the value for\n   the option specified by the optname parameter for the\n   specified socket.\n  "},"socket_get_status":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  stream_get_meta_data()","syntax":"","desc":""},"socket_getpeername":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"Queries the remote side of the given socket which may either result in host\/port or in a Unix filesystem path, dependent on its type","syntax":"\n   bool <b>socket_getpeername<\/b>\n    ( resource $socket\n   , string &$address\n   [, int &$port\n  ] )","desc":"\n   Queries the remote side of the given socket which may either result in\n   host\/port or in a Unix filesystem path, dependent on its type.\n  "},"socket_getsockname":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"Queries the local side of the given socket which may either result in host\/port or in a Unix filesystem path, dependent on its type","syntax":"\n   bool <b>socket_getsockname<\/b>\n    ( resource $socket\n   , string &$addr\n   [, int &$port\n  ] )","desc":""},"socket_import_stream":{"version":"(PHP 5 >= 5.4.0)","shortdesc":"Import a stream","syntax":"\n   resource <b>socket_import_stream<\/b>\n    ( resource $stream\n   )","desc":"\n   Imports a stream that encapsulates a socket into a socket extension resource.\n  "},"socket_last_error":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u043e\u0448\u0438\u0431\u043a\u0443 \u043d\u0430 \u0441\u043e\u043a\u0435\u0442\u0435","syntax":"\n   int <b>socket_last_error<\/b>\n    ([ resource $socket\n  ] )","desc":"\n   \u0415\u0441\u043b\u0438 \u0440\u0435\u0441\u0443\u0440\u0441 \u0441\u043e\u043a\u0435\u0442\u0430 \u043f\u0435\u0440\u0435\u0434\u0430\u043d \u044d\u0442\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044f\u044f \u043e\u0448\u0438\u0431\u043a\u0430, \n   \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043d\u0430 \u044d\u0442\u043e\u043c \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c \u0441\u043e\u043a\u0435\u0442\u0435. \u0415\u0441\u043b\u0438 \u0440\u0435\u0441\u0443\u0440\u0441 \u0441\u043e\u043a\u0435\u0442\u0430 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d,\n   \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a\u043e\u0434 \u043e\u0448\u0438\u0431\u043a\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043d\u0435\u0443\u0434\u0430\u0432\u0448\u0435\u0439\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0441\u043e\u043a\u0435\u0442\u043e\u0432.\n   \u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0435 \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u043f\u043e\u043b\u0435\u0437\u043d\u043e \u0434\u043b\u044f \u0442\u0430\u043a\u0438\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439, \u043a\u0430\u043a\n    socket_create(), \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043d\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043e\u043a\u0435\u0442 \u0432 \u0441\u043b\u0443\u0447\u0430\u0435\n   \u043d\u0435\u0443\u0434\u0430\u0447\u0438 \u0438   socket_select(), \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u0442\u044c\u0441\u044f \u043d\u0435\u0443\u0434\u0430\u0447\u043d\u043e \u043f\u043e \u043f\u0440\u0438\u0447\u0438\u043d\u0430\u043c,\n   \u043d\u0435 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u043c \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0441 \u043a\u0430\u043a\u0438\u043c-\u043b\u0438\u0431\u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u043c \u0441\u043e\u043a\u0435\u0442\u043e\u043c. \u041a\u043e\u0434 \u043e\u0448\u0438\u0431\u043a\u0438 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438\n   \u0444\u0443\u043d\u043a\u0446\u0438\u0438  socket_strerror(), \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443,\n   \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0449\u0443\u044e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043a\u043e\u0434 \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"socket_listen":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"Listens for a connection on a socket","syntax":"\n   bool <b>socket_listen<\/b>\n    ( resource $socket\n   [, int $backlog = 0\n  ] )","desc":"\n   After the socket socket has been created\n   using  socket_create() and bound to a name with\n    socket_bind(), it may be told to listen for incoming\n   connections on socket.\n  "},"socket_read":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0427\u0438\u0442\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0431\u0430\u0439\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u043b\u0438\u043d\u044b length \u0438\u0437 \u0441\u043e\u043a\u0435\u0442\u0430","syntax":"\n   string <b>socket_read<\/b>\n    ( resource $socket\n   , int $length\n   [, int $type = PHP_BINARY_READ\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  socket_read() \u0447\u0438\u0442\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0440\u0435\u0441\u0443\u0440\u0441\u0430\n   \u0441\u043e\u043a\u0435\u0442\u0430 socket, \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438\n   \u0444\u0443\u043d\u043a\u0446\u0438\u0439  socket_create() \u0438\u043b\u0438\n    socket_accept(). \n  "},"socket_recv":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u043f\u043e\u0434\u0441\u043e\u0435\u0434\u0438\u043d\u0451\u043d\u043d\u043e\u0433\u043e \u0441\u043e\u043a\u0435\u0442\u0430","syntax":"\n   int <b>socket_recv<\/b>\n    ( resource $socket\n   , string &$buf\n   , int $len\n   , int $flags\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  socket_recv() \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\n   len \u0431\u0430\u0439\u0442 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0431\u0443\u0444\u0435\u0440  buf \u0438\u0437\n   \u0441\u043e\u043a\u0435\u0442\u0430 socket. \u0444\u0443\u043d\u043a\u0446\u0438\u044f  socket_recv() \u043c\u043e\u0436\u0435\u0442\n   \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0430 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \u043f\u043e\u0434\u0441\u043e\u0435\u0434\u0438\u043d\u0451\u043d\u043d\u044b\u0445 \u0441\u043e\u043a\u0435\u0442\u043e\u0432. \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043a \u044d\u0442\u043e\u043c\u0443, \u043e\u0434\u0438\u043d \u0438\u043b\u0438\n   \u0431\u043e\u043b\u0435\u0435 \u0444\u043b\u0430\u0433\u043e\u0432 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0443\u043a\u0430\u0437\u0430\u043d\u044b \u0434\u043b\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f\n   \u0444\u0443\u043d\u043a\u0446\u0438\u0438.\n  "},"socket_recvfrom":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"Receives data from a socket whether or not it is connection-oriented","syntax":"\n   int <b>socket_recvfrom<\/b>\n    ( resource $socket\n   , string &$buf\n   , int $len\n   , int $flags\n   , string &$name\n   [, int &$port\n  ] )","desc":"\n   The  socket_recvfrom() function receives\n   len bytes of data in buf from\n   name on port port (if the\n   socket is not of type AF_UNIX) using\n   socket.  socket_recvfrom() can be\n   used to gather data from both connected and unconnected sockets.\n   Additionally, one or more flags can be specified to modify the behaviour of\n   the function.\n  "},"socket_recvmsg":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Read a message","syntax":"\n   int <b>socket_recvmsg<\/b>\n    ( resource $socket\n   , string $message\n   [, int $flags\n  ] )","desc":"\n  "},"socket_select":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"Runs the select() system call on the given arrays of sockets with a specified timeout","syntax":"\n   int <b>socket_select<\/b>\n    ( array &$read\n   , array &$write\n   , array &$except\n   , int $tv_sec\n   [, int $tv_usec = 0\n  ] )","desc":"\n    socket_select() accepts arrays of sockets and waits for\n   them to change status. Those coming with BSD sockets background will\n   recognize that those socket resource arrays are in fact the so-called file\n   descriptor sets. Three independent arrays of socket resources are watched.\n  "},"socket_send":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u043f\u043e\u0434\u0441\u043e\u0435\u0434\u0438\u043d\u0451\u043d\u043d\u044b\u0439 \u0441\u043e\u043a\u0435\u0442","syntax":"\n   int <b>socket_send<\/b>\n    ( resource $socket\n   , string $buf\n   , int $len\n   , int $flags\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  socket_send() \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\n   len \u0431\u0430\u0439\u0442 \u0432 \u0441\u043e\u043a\u0435\u0442\n   socket \u0438\u0437 \u0431\u0443\u0444\u0435\u0440\u0430 buf.\n  "},"socket_sendmsg":{"version":"(PHP 5 >= 5.5.0)","shortdesc":"Send a message","syntax":"\n   int <b>socket_sendmsg<\/b>\n    ( resource $socket\n   , array $message\n   , int $flags\n   )","desc":"\n  "},"socket_sendto":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0432 \u0441\u043e\u043a\u0435\u0442, \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e \u043e\u0442 \u0442\u043e\u0433\u043e, \u043f\u043e\u0434\u0441\u043e\u0435\u0434\u0438\u043d\u0451\u043d \u043e\u043d \u0438\u043b\u0438 \u043d\u0435\u0442","syntax":"\n   int <b>socket_sendto<\/b>\n    ( resource $socket\n   , string $buf\n   , int $len\n   , int $flags\n   , string $addr\n   [, int $port = 0\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  socket_sendto() \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\n   len \u0431\u0430\u0439\u0442 \u0438\u0437 \u0431\u0443\u0444\u0435\u0440\u0430 buf\n   \u0447\u0435\u0440\u0435\u0437 \u0441\u043e\u043a\u0435\u0442 socket \u043a \u043f\u043e\u0440\u0442\u0443\n   port \u043d\u0430 \u0430\u0434\u0440\u0435\u0441\u0435 addr.\n  "},"socket_set_block":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0431\u043b\u043e\u043a\u0438\u0440\u0443\u044e\u0449\u0438\u0439 \u0440\u0435\u0436\u0438\u043c \u043d\u0430 \u0440\u0435\u0441\u0443\u0440\u0441\u0435 \u0441\u043e\u043a\u0435\u0442\u0430","syntax":"\n   bool <b>socket_set_block<\/b>\n    ( resource $socket\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  socket_set_block() \u0443\u0431\u0438\u0440\u0430\u0435\u0442 \u0444\u043b\u0430\u0433\n   O_NONBLOCK \u0441 \u0441\u043e\u043a\u0435\u0442\u0430, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435\n   socket.\n  "},"socket_set_blocking":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  stream_set_blocking()","syntax":"","desc":""},"socket_set_nonblock":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043d\u0435\u0431\u043b\u043e\u043a\u0438\u0440\u0443\u044e\u0449\u0438\u0439 \u0440\u0435\u0436\u0438\u043c \u0434\u043b\u044f \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0433\u043e \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0430 fd ","syntax":"\n   bool <b>socket_set_nonblock<\/b>\n    ( resource $socket\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  socket_set_nonblock() \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0444\u043b\u0430\u0433 \n   O_NONBLOCK \u043d\u0430 \u0441\u043e\u043a\u0435\u0442\u0435, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435\n   socket.\n  "},"socket_set_option":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043e\u043f\u0446\u0438\u0438 \u0434\u043b\u044f \u0441\u043e\u043a\u0435\u0442\u0430","syntax":"\n   bool <b>socket_set_option<\/b>\n    ( resource $socket\n   , int $level\n   , int $optname\n   , mixed $optval\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  socket_set_option() \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043e\u043f\u0446\u0438\u044e\n   \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 optname, \u043d\u0430 \u0443\u0440\u043e\u0432\u043d\u0435 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 level, \u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c optval \u0434\u043b\u044f \u0441\u043e\u043a\u0435\u0442\u0430\n   socket.\n  "},"socket_set_timeout":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  stream_set_timeout()","syntax":"","desc":""},"socket_shutdown":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0417\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0443 \u0441\u043e\u043a\u0435\u0442\u0430 \u043d\u0430 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\/\u0438\u043b\u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0443 \u0434\u0430\u043d\u043d\u044b\u0445","syntax":"\n   bool <b>socket_shutdown<\/b>\n    ( resource $socket\n   [, int $how = 2\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f   socket_shutdown() \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u0430\u043c \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0443\n   \u043f\u043e\u0441\u0442\u0443\u043f\u0430\u044e\u0449\u0438\u0445, \u0438\u0441\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0438\u043b\u0438 \u0432\u0441\u0435\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e) \u0447\u0435\u0440\u0435\u0437 \u0441\u043e\u043a\u0435\u0442\n   socket\n  "},"socket_strerror":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0449\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443 \u0441\u043e\u043a\u0435\u0442\u0430","syntax":"\n   string <b>socket_strerror<\/b>\n    ( int $errno\n   )","desc":"\n    socket_strerror() \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\n   errno \u043a\u043e\u0434 \u043e\u0448\u0438\u0431\u043a\u0438 \u0441\u043e\u043a\u0435\u0442\u0430, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439\n    socket_last_error() \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \n   \u0442\u0435\u043a\u0441\u0442 \u0441 \u0440\u0430\u0437\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435\u043c.\n  "},"socket_write":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0417\u0430\u043f\u0438\u0441\u044c \u0432 \u0441\u043e\u043a\u0435\u0442","syntax":"\n   int <b>socket_write<\/b>\n    ( resource $socket\n   , string $buffer\n   [, int $length = 0\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  socket_write() \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0432 \u0441\u043e\u043a\u0435\u0442 \n   socket \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0431\u0443\u0444\u0435\u0440\u0430\n   buffer.\n  "},"solr_get_version":{"version":"(PECL solr >= 0.9.1)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0432\u0435\u0440\u0441\u0438\u044e \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f Apache Solr","syntax":"\n   string <b>solr_get_version<\/b>\n    ( void\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0432\u0435\u0440\u0441\u0438\u044e \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a\u0438.\n  "},"sort":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432","syntax":"\n   bool <b>sort<\/b>\n    ( array &$array\n   [, int $<b>sort<\/b>_flags = SORT_REGULAR\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432. \u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b\n   \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0431\u0443\u0434\u0443\u0442 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u044b \u0432 \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u043d\u0438\u044f.\n  "},"soundex":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043b\u044e\u0447 soundex \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   string <b>soundex<\/b>\n    ( string $str\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043b\u044e\u0447 soundex \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u043a\u0438 str.\n  "},"spl_autoload_call":{"version":"(PHP 5 >= 5.1.2)","shortdesc":"\n   \u041f\u043e\u043f\u044b\u0442\u043a\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430 \u0432\u0441\u0435\u043c\u0438 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c\u0438 \u043c\u0435\u0442\u043e\u0434\u0430\u043c\u0438\n   __autoload()\n  ","syntax":"\n   void <b>spl_autoload_call<\/b>\n    ( string $class_name\n   )","desc":"\n   \u042d\u0442\u0443 \u0444\u0443\u043d\u0446\u0438\u044e \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u0440\u0443\u0447\u043d\u043e\u0433\u043e \u043f\u043e\u0438\u0441\u043a\u0430 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043a\u043b\u0430\u0441\u0441\u0430 \u0438\u043b\u0438 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430,\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0432\u0441\u0435 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 __autoload.\n  "},"spl_autoload_extensions":{"version":"(PHP 5 >= 5.1.2)","shortdesc":"\n   \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0438 \u0432\u044b\u0432\u043e\u0434 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0439 \u0444\u0430\u0439\u043b\u043e\u0432 \u0434\u043b\u044f spl_autoload\n  ","syntax":"\n   string <b>spl_autoload_extensions<\/b>\n    ([ string $file_extensions\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u0434\u0430\u0432\u0430\u0442\u044c \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f \u0444\u0430\u0439\u043b\u043e\u0432, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 callback-\u0444\u0443\u043d\u0446\u0438\u044f \n    __autoload() \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043a\u0430\u0442\u044c \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u0438 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432.\n    spl_autoload() \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c \u043c\u0435\u0442\u043e\u0434 __autoload \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c\n   \u0435\u043c\u0443 \u044d\u0442\u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f. \u0422\u0430\u043a\u0436\u0435 \u044d\u0442\u0430 \u0444\u0443\u043d\u0446\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u0443\u0436\u0435 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435\n   \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f \u0444\u0430\u0439\u043b\u043e\u0432.\n  "},"spl_autoload_functions":{"version":"(PHP 5 >= 5.1.2)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0432\u0441\u0435\u0445 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0444\u0443\u043d\u0446\u0438\u0439 __autoload()\n  ","syntax":"\n   array <b>spl_autoload_functions<\/b>\n    ( void\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 __autoload().\n  "},"spl_autoload_register":{"version":"(PHP 5 >= 5.1.2)","shortdesc":"\n   \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u0437\u0430\u0434\u0430\u043d\u043d\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 __autoload()\n  ","syntax":"\n   bool <b>spl_autoload_register<\/b>\n    ([ callable $autoload_function\n   [, bool $throw = true\n   [, bool $prepend = false\n  ]]] )","desc":"\n   \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0432 spl \u0441\u0442\u044d\u043a\u0435 \u043c\u0435\u0442\u043e\u0434\u0430 __autoload. \u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0441\u0442\u044d\u043a \u0431\u0443\u0434\u0435\u0442\n   \u0430\u043a\u0442\u0438\u0432\u0438\u0440\u043e\u0432\u0430\u043d, \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u0440\u0430\u043d\u0435\u0435 \u043e\u043d \u0431\u044b\u043b \u0432\u044b\u043a\u043b\u044e\u0447\u0435\u043d.\n  "},"spl_autoload_unregister":{"version":"(PHP 5 >= 5.1.2)","shortdesc":"\n   \u041e\u0442\u043c\u0435\u043d\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 __autoload()\n  ","syntax":"\n   bool <b>spl_autoload_unregister<\/b>\n    ( mixed $autoload_function\n   )","desc":"\n   \u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0438\u0437 spl \u0441\u0442\u044d\u043a\u0430 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0439 \u043c\u0435\u0442\u043e\u0434\u0430 __autoload. \u0415\u0441\u043b\u0438 \u0441\u0442\u044d\u043a \u0431\u044b\u043b\n   \u0430\u043a\u0442\u0438\u0432\u0435\u043d \u0438 \u043f\u043e\u0441\u043b\u0435 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043e\u043a\u0430\u0436\u0435\u0442\u0441\u044f \u043f\u0443\u0441\u0442\u044b\u043c, \u043e\u043d \u0431\u0443\u0434\u0435\u0442 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\n   \u0434\u0435\u0430\u043a\u0442\u0438\u0432\u0438\u0440\u043e\u0432\u0430\u043d.\n  "},"spl_autoload":{"version":"(PHP 5 >= 5.1.2)","shortdesc":"\n   \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043c\u0435\u0442\u043e\u0434\u0430 __autoload()\n  ","syntax":"\n   void <b>spl_autoload<\/b>\n    ( string $class_name\n   [, string $file_extensions = <b>spl_autoload<\/b>_extensions()\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u0446\u0438\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u0437 \u0441\u0435\u0431\u044f \u0431\u0430\u0437\u043e\u0432\u0443\u044e \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u043c\u0435\u0442\u043e\u0434\u0430\n    __autoload(). \u0415\u0441\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043d\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043b \u0441\u0432\u043e\u044e \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e,\n   \u0438  spl_autoload_register() \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0431\u0435\u0437 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432, \u0442\u043e \u043f\u0440\u0438\n   \u043a\u0430\u0436\u0434\u043e\u043c \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u0432\u044b\u0437\u043e\u0432\u0435  __autoload() \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c\n   \u0438\u043c\u0435\u043d\u043d\u043e \u044d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f. \n  "},"spl_classes":{"version":"(PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u043a\u043b\u0430\u0441\u0441\u044b SPL","syntax":"\n   array <b>spl_classes<\/b>\n    ( void\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 c \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u043c\u0438 \u0432 \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f \u043a\u043b\u0430\u0441\u0441\u0430\u043c\u0438 SPL.\n  "},"spl_object_hash":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0445\u0435\u0448-\u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0434\u043b\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430\n  ","syntax":"\n   string <b>spl_object_hash<\/b>\n    ( object $obj\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430. \u042d\u0442\u043e\u0442\n   id \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0445\u044d\u0448-\u043a\u043b\u044e\u0447\u0430 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0438\u043b\u0438 \u0434\u043b\u044f\n   \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432.\n  "},"split":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0420\u0430\u0437\u0431\u0438\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u043d\u0430 \u043c\u0430\u0441\u0441\u0438\u0432 \u043f\u043e \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u043c\u0443 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044e","syntax":"\n   array <b>split<\/b>\n    ( string $pattern\n   , string $string\n   [, int $limit = -1\n  ] )","desc":"\n   \u0420\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 string \u043d\u0430 \u043c\u0430\u0441\u0441\u0438\u0432 \u043f\u043e \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u043c\u0443 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044e.\n  "},"spliti":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\u0420\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0431\u0435\u0437 \u0443\u0447\u0435\u0442\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430","syntax":"\n   array <b>spliti<\/b>\n    ( string $pattern\n   , string $string\n   [, int $limit = -1\n  ] )","desc":"\n   \u0420\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 string \u0432 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f.\n  "},"sprintf":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0442\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443","syntax":"\n   string <b>sprintf<\/b>\n    ( string $format\n   [, mixed $args\n   [, mixed $...\n  ]] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u0443\u044e \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0438 \u0444\u043e\u0440\u043c\u0430\u0442\u0430\n   format.\n  "},"sql_regcase":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u043e\u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0433\u043e \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f","syntax":"\n   string <b>sql_regcase<\/b>\n    ( string $string\n   )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u043e\u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0433\u043e \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f.\n  "},"sqlite_array_query\nSQLiteDatabase::arrayQuery\n":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u043a \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432 \u0432\u0438\u0434\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u0430","syntax":"\n   array sqlite_array_query\n    ( resource $dbhandle\n   , string $query\n   [, int $result_type = SQLITE_BOTH\n   [, bool $decode_binary = true\n  ]] )\n\n   array sqlite_array_query\n    ( string $query\n   , resource $dbhandle\n   [, int $result_type = SQLITE_BOTH\n   [, bool $decode_binary = true\n  ]] )\n\n   array SQLiteDatabase::arrayQuery\n    ( string $query\n   [, int $result_type = SQLITE_BOTH\n   [, bool $decode_binary = true\n  ]] )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):\n\n    sqlite_array_query() \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441\n   \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u043f\u043e\u043b\u043d\u044b\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0438\u0440\u0443\u044e\u0449\u0438\u043c \u043d\u0430\u0431\u043e\u0440\u043e\u043c. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\n    sqlite_array_query() \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u043e\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e  sqlite_query() \u0441 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u0432\u044b\u0437\u043e\u0432\u043e\u043c\n    sqlite_fetch_array() \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\n   \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435\u043c \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435, \u043a\u0430\u043a \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043e \u0432 \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u043d\u043e\u043c \u043d\u0438\u0436\u0435\n   \u043f\u0440\u0438\u043c\u0435\u0440\u0435.  sqlite_array_query() \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e\n   \u0431\u044b\u0441\u0442\u0440\u0435\u0435, \u0447\u0435\u043c \u0432\u044b\u0448\u0435\u0443\u043f\u043e\u043c\u044f\u043d\u0443\u0442\u0430\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c.\n  \n"},"sqlite_busy_timeout\nSQLiteDatabase::busyTimeout\n":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0438\u043b\u0438 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u043e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u044f \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f","syntax":"\n   void sqlite_busy_timeout\n    ( resource $dbhandle\n   , int $milliseconds\n   )\n\n   void SQLiteDatabase::busyTimeout\n    ( int $milliseconds\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):\n\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f, \u0432 \u043c\u0438\u043b\u043b\u0438\u0441\u0435\u043a\u0443\u043d\u0434\u0430\u0445, \u0432 \u0442\u0435\u0447\u0435\u043d\u0438\u0435\n   \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e SQLite \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u0433\u043e\u0442\u043e\u0432\u043d\u043e\u0441\u0442\u0438 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445, \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c\n   dbhandle.\n  \n"},"sqlite_changes\nSQLiteDatabase::changes\n":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0438\u0441\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u044b\u043b\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u044b \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u043c  SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c\n  ","syntax":"\n   int sqlite_changes\n    ( resource $dbhandle\n   )\n\n   int SQLiteDatabase::changes\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):\n\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0438\u0441\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u044b\u043b\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u044b \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u043c\n   SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c \u043a \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 dbhandle.\n  \n"},"sqlite_close":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u043e\u0442\u043a\u0440\u044b\u0442\u0443\u044e \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 SQLite","syntax":"\n   void <b>sqlite_close<\/b>\n    ( resource $dbhandle\n   )","desc":"\n   \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445, \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0441 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043f\u0435\u0440\u0435\u0434\u0430\u043d \u0447\u0435\u0440\u0435\u0437\n   \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 dbhandle. \u0415\u0441\u043b\u0438 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0431\u0430\u0437\u043e\u0439\n   \u0434\u0430\u043d\u043d\u044b\u0445 \u0431\u044b\u043b\u043e \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u044b\u043c, \u0442\u0430\u043a\u0436\u0435 \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u044d\u0442\u043e \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430\n   \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u044b\u0445.\n  "},"sqlite_column\nSQLiteResult::column\nSQLiteUnbuffered::column\n":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0441\u0442\u043e\u043b\u0431\u0435\u0446 \u0438\u0437 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430","syntax":"\n   mixed sqlite_column\n    ( resource $result\n   , mixed $index_or_name\n   [, bool $decode_binary = true\n  ] )\n\n   mixed SQLiteResult::column\n    ( mixed $index_or_name\n   [, bool $decode_binary = true\n  ] )\n\n   mixed SQLiteUnbuffered::column\n    ( mixed $index_or_name\n   [, bool $decode_binary = true\n  ] )\n","desc":"\n   \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u0442\u043e\u043b\u0431\u0446\u0430 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c index_or_name\n   (\u0435\u0441\u043b\u0438 \u044d\u0442\u043e \u0441\u0442\u0440\u043e\u043a\u0430) \u0438\u043b\u0438 \u0435\u0433\u043e \u043f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u044b\u0439 \u043d\u043e\u043c\u0435\u0440 index_or_name\n   (\u0435\u0441\u043b\u0438 \u044d\u0442\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e) \u0438\u0437 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430\n   result.\n  "},"sqlite_create_aggregate\nSQLiteDatabase::createAggregate\n":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u0430\u0433\u0440\u0435\u0433\u0438\u0440\u0443\u044e\u0449\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0432 SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u0430\u0445","syntax":"\n   void sqlite_create_aggregate\n    ( resource $dbhandle\n   , string $function_name\n   , callable $step_func\n   , callable $finalize_func\n   [, int $num_args = -1\n  ] )\n\n   void SQLiteDatabase::createAggregate\n    ( string $function_name\n   , callable $step_func\n   , callable $finalize_func\n   [, int $num_args = -1\n  ] )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):\n\n    sqlite_create_aggregate() \u043f\u043e\u0445\u043e\u0436\u0430 \u043d\u0430\n    sqlite_create_function(), \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\n   \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0430 \u0434\u043b\u044f \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f\n   \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0432\u0441\u0435\u0445 \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n  \n"},"sqlite_create_function\nSQLiteDatabase::createFunction\n":{"version":"(PHP 5 < 5.4.0, sqlite >= 1.0.0)","shortdesc":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \"\u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0443\u044e\" \u0444\u0443\u043d\u043a\u0446\u0438\u044e (UDF) \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0432 SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u0430\u0445","syntax":"\n   void sqlite_create_function\n    ( resource $dbhandle\n   , string $function_name\n   , callable $callback\n   [, int $num_args = -1\n  ] )\n\n   void SQLiteDatabase::createFunction\n    ( string $function_name\n   , callable $callback\n   [, int $num_args = -1\n  ] )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):\n\n    sqlite_create_function() \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c PHP\n   \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0432 SQLite \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 UDF (User\n   Defined Function - \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u0430\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c), \u0447\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u0443 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0432 SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u0430\u0445.\n  \n"},"sqlite_current\nSQLiteResult::current\nSQLiteUnbuffered::current\n":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0437\u0430\u043f\u0438\u0441\u044c \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0438\u0440\u0443\u044e\u0449\u0435\u0433\u043e \u043d\u0430\u0431\u043e\u0440\u0430 \u0432 \u0432\u0438\u0434\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u0430","syntax":"\n   array sqlite_current\n    ( resource $result\n   [, int $result_type = SQLITE_BOTH\n   [, bool $decode_binary = true\n  ]] )\n\n   array SQLiteResult::current\n    ([ int $result_type = SQLITE_BOTH\n   [, bool $decode_binary = true\n  ]] )\n\n   array SQLiteUnbuffered::current\n    ([ int $result_type = SQLITE_BOTH\n   [, bool $decode_binary = true\n  ]] )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):\n\n    sqlite_current() \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u0430\n    sqlite_fetch_array() \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\n   \u043e\u043d\u0430 \u043d\u0435 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u0442 \u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u0434\u043e \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u0434\u0430\u043d\u043d\u044b\u0445, \u0430 \u043f\u0440\u043e\u0441\u0442\u043e\n   \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438.\n  \n"},"sqlite_error_string":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c \u043e\u0448\u0438\u0431\u043a\u0438","syntax":"\n   string <b>sqlite_error_string<\/b>\n    ( int $error_code\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0438\u0442\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u0441 \u043a\u043e\u0434\u043e\u043c\n   error_code, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0433\u043e \u0438\u0437 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    sqlite_last_error().\n  "},"sqlite_escape_string":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u042d\u043a\u0440\u0430\u043d\u0438\u0440\u0443\u0435\u0442 \u0441\u043f\u0435\u0446\u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0432 \u0437\u0430\u043f\u0440\u043e\u0441\u0435","syntax":"\n   string <b>sqlite_escape_string<\/b>\n    ( string $item\n   )","desc":"\n    sqlite_escape_string() \u044d\u043a\u0440\u0430\u043d\u0438\u0440\u0443\u0435\u0442 \u0441\u043f\u0435\u0446\u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u0441\u0442\u0440\u043e\u043a\u0435\n   item \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0432 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 SQLite. \u041e\u0434\u0438\u043d\u043e\u0447\u043d\u044b\u0435\n   \u043a\u0430\u0432\u044b\u0447\u043a\u0438 (') \u0431\u0443\u0434\u0443\u0442 \u0443\u0434\u0432\u043e\u0435\u043d\u044b, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0430\n   \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u043d\u0435\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0445 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435.\n  "},"sqlite_exec\nSQLiteDatabase::exec\n":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.3)","shortdesc":"\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441, \u043d\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0449\u0438\u0439 \u0437\u0430\u043f\u0438\u0441\u0435\u0439","syntax":"\n   bool sqlite_exec\n    ( resource $dbhandle\n   , string $query\n   [, string &$error_msg\n  ] )\n\n   bool sqlite_exec\n    ( string $query\n   , resource $dbhandle\n   )\n\n   bool SQLiteDatabase::queryExec\n    ( string $query\n   [, string &$error_msg\n  ] )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):\n\n   \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 query \u043a \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445, \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\n   \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0437\u0430\u0434\u0430\u043d \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c dbhandle.\n  \n"},"sqlite_factory":{"version":"(PHP 5 < 5.4.0)","shortdesc":"\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 SQLite \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442","syntax":"\n   SQLiteDatabase <b>sqlite_factory<\/b>\n    ( string $filename\n   [, int $mode = 0666\n   [, string &$error_message\n  ]] )","desc":"\n    sqlite_factory() \u043f\u043e\u0445\u043e\u0436\u0430 \u043d\u0430\n    sqlite_open() \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u043e\u043d\u0430 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\n   \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 SQLite database \u0438\u043b\u0438 \u043f\u044b\u0442\u0430\u0435\u0442\u0441\u044f \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0435\u0435, \u0435\u0441\u043b\u0438 \u043e\u043d\u0430 \u043d\u0435\n   \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442. \u041e\u0434\u043d\u0430\u043a\u043e,\n   \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043e\u0431\u044a\u0435\u043a\u0442 \n   SQLiteDatabase,\n   \u0430 \u043d\u0435 \u0440\u0435\u0441\u0443\u0440\u0441. \u0414\u043b\u044f \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0437\u0430\u043c\u0435\u0447\u0430\u043d\u0438\u0439 \u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435\n   \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443  sqlite_open().\n  "},"sqlite_fetch_all\nSQLiteResult::fetchAll\nSQLiteUnbuffered::fetchAll\n":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0432\u0441\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u043d\u043e\u0433\u043e\u043c\u0435\u0440\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432","syntax":"\n   array sqlite_fetch_all\n    ( resource $result\n   [, int $result_type = SQLITE_BOTH\n   [, bool $decode_binary = true\n  ]] )\n\n   array SQLiteResult::fetchAll\n    ([ int $result_type = SQLITE_BOTH\n   [, bool $decode_binary = true\n  ]] )\n\n   array SQLiteUnbuffered::fetchAll\n    ([ int $result_type = SQLITE_BOTH\n   [, bool $decode_binary = true\n  ]] )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):\n\n    sqlite_fetch_all() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u043f\u043e\u043b\u043d\u044b\u043c\n   \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0438\u0440\u0443\u044e\u0449\u0438\u043c \u043d\u0430\u0431\u043e\u0440\u043e\u043c \u0438\u0437 \u0440\u0435\u0441\u0443\u0440\u0441\u0430 result.\n   \u041e\u043d\u0430 \u043f\u043e\u0445\u043e\u0436\u0430 \u043d\u0430 \u0432\u044b\u0437\u043e\u0432 \u0444\u0443\u043d\u043a\u0446\u0438\n    sqlite_query() (\u0438\u043b\u0438\n    sqlite_unbuffered_query()), \u0430 \u0437\u0430\u0442\u0435\u043c\n    sqlite_fetch_array() \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0440\u044f\u0434\u0430\n   \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0438\u0440\u0443\u044e\u0449\u0435\u0433\u043e \u043d\u0430\u0431\u043e\u0440\u0430.\n  \n"},"sqlite_fetch_array\nSQLiteResult::fetch\nSQLiteUnbuffered::fetch\n":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0437\u0430\u043f\u0438\u0441\u044c \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432","syntax":"\n   array sqlite_fetch_array\n    ( resource $result\n   [, int $result_type = SQLITE_BOTH\n   [, bool $decode_binary = true\n  ]] )\n\n   array SQLiteResult::fetch\n    ([ int $result_type = SQLITE_BOTH\n   [, bool $decode_binary = true\n  ]] )\n\n   array SQLiteUnbuffered::fetch\n    ([ int $result_type = SQLITE_BOTH\n   [, bool $decode_binary = true\n  ]] )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):\n\n   \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0437\u0430\u043f\u0438\u0441\u044c \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c\n   result. \u0415\u0441\u043b\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \n   \u0434\u0430\u043d\u043d\u044b\u0445, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 FALSE, \u0438\u043d\u0430\u0447\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0434\u0430\u043d\u043d\u044b\u0435.\n  \n"},"sqlite_fetch_column_types\nSQLiteDatabase::fetchColumnTypes\n":{"version":"(PHP 5 < 5.4.0)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0442\u0438\u043f\u0430\u0445 \u043f\u043e\u043b\u0435\u0439 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435\n  ","syntax":"\n   array sqlite_fetch_column_types\n    ( string $table_name\n   , resource $dbhandle\n   [, int $result_type = SQLITE_ASSOC\n  ] )\n\n   array SQLiteDatabase::fetchColumnTypes\n    ( string $table_name\n   [, int $result_type = SQLITE_ASSOC\n  ] )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):\n\n    sqlite_fetch_column_types() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432,\n   \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0442\u0438\u043f\u0430\u0445 \u043f\u043e\u043b\u0435\u0439 \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u0435\n   table_name.\n  \n"},"sqlite_fetch_object\nSQLiteResult::fetchObject\nSQLiteUnbuffered::fetchObject\n":{"version":"(PHP 5 < 5.4.0)","shortdesc":"\u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0437\u0430\u043f\u0438\u0441\u044c \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442","syntax":"\n   object sqlite_fetch_object\n    ( resource $result\n   [, string $class_name\n   [, array $ctor_params\n   [, bool $decode_binary = true\n  ]]] )\n\n   object SQLiteResult::fetchObject\n    ([ string $class_name\n   [, array $ctor_params\n   [, bool $decode_binary = true\n  ]]] )\n\n   object SQLiteUnbuffered::fetchObject\n    ([ string $class_name\n   [, array $ctor_params\n   [, bool $decode_binary = true\n  ]]] )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):"},"sqlite_fetch_single\nSQLiteResult::fetchSingle\nSQLiteUnbuffered::fetchSingle\n":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.1)","shortdesc":"\u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044f \u0438\u0437 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   string sqlite_fetch_single\n    ( resource $result\n   [, bool $decode_binary = true\n  ] )\n\n   string SQLiteResult::fetchSingle\n    ([ bool $decode_binary = true\n  ] )\n\n   string SQLiteUnbuffered::fetchSingle\n    ([ bool $decode_binary = true\n  ] )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):\n\n    sqlite_fetch_single() \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u0430\n    sqlite_fetch_array() \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\n   \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044f.\n  \n"},"sqlite_fetch_string":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  sqlite_fetch_single()","syntax":"","desc":""},"sqlite_field_name\nSQLiteResult::fieldName\nSQLiteUnbuffered::fieldName\n":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044f","syntax":"\n   string sqlite_field_name\n    ( resource $result\n   , int $field_index\n   )\n\n   string SQLiteResult::fieldName\n    ( int $field_index\n   )\n\n   string SQLiteUnbuffered::fieldName\n    ( int $field_index\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):\n\n   \u041f\u0440\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0435 \u043d\u043e\u043c\u0435\u0440\u0430 \u043f\u043e\u043b\u044f field_index \u0444\u0443\u043d\u043a\u0446\u0438\u044f\n    sqlite_field_name() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u044d\u0442\u043e \u043f\u043e\u043b\u044f \u0438\u0437\n   \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 result.\n  \n"},"sqlite_has_more":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u0435\u0441\u0442\u044c \u043b\u0438 \u0435\u0449\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430","syntax":"\n   bool <b>sqlite_has_more<\/b>\n    ( resource $result\n   )","desc":"\n   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u0435\u0441\u0442\u044c \u043b\u0438 \u0435\u0449\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n  "},"sqlite_has_prev\nSQLiteResult::hasPrev\n":{"version":"(PHP 5 < 5.4.0)","shortdesc":"\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u043b\u0438 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0430\u044f \u0437\u0430\u043f\u0438\u0441\u044c","syntax":"\n   bool sqlite_has_prev\n    ( resource $result\n   )\n\n   bool SQLiteResult::hasPrev\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):\n\n   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b \u043b\u0438 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435.\n  \n"},"sqlite_key\nSQLiteResult::key\n":{"version":"(PHP 5 >= 5.1.0 and < 5.4.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f","syntax":"\n   int sqlite_key\n    ( resource $result\n   )\n\n   int SQLiteResult::key\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):\n\n    sqlite_key() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f \u0432\n   \u0431\u0443\u0444\u0435\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0438\u0440\u0443\u044e\u0449\u0435\u043c \u043d\u0430\u0431\u043e\u0440\u0435 result.\n  \n"},"sqlite_last_error\nSQLiteDatabase::lastError\n":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u0434 \u043e\u0448\u0438\u0431\u043a\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441 SQLite","syntax":"\n   int sqlite_last_error\n    ( resource $dbhandle\n   )\n\n   int SQLiteDatabase::lastError\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):\n\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u0434 \u043e\u0448\u0438\u0431\u043a\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u043e\u043c\n   dbhandle, \u0438\u043b\u0438 0 \u0432 \u0441\u043b\u0443\u0447\u0430\u0435\n   \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u044f \u043e\u0448\u0438\u0431\u043e\u043a. \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e\n   \u0444\u0443\u043d\u043a\u0446\u0438\u0438  sqlite_error_string().\n  \n"},"sqlite_last_insert_rowid\nSQLiteDatabase::lastInsertRowid\n":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u0432\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438","syntax":"\n   int sqlite_last_insert_rowid\n    ( resource $dbhandle\n   )\n\n   int SQLiteDatabase::lastInsertRowid\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):\n\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u0437\u0430\u043f\u0438\u0441\u0438, \u0432\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0439 \u0432 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445\n   dbhandle, \u0435\u0441\u043b\u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u0432 \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0431\u044b\u043b\u0430 \u0432\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0430\n   \u0437\u0430\u043f\u0438\u0441\u044c, \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043f\u043e\u043b\u0435 \u0441 \u0430\u0432\u0442\u043e\u0438\u043d\u043a\u0440\u0435\u043c\u0435\u043d\u0442\u043e\u043c.\n  \n"},"sqlite_libencoding":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u0443\u044e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u043e\u0439 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u043e\u0439 SQLite","syntax":"\n   string <b>sqlite_libencoding<\/b>\n    ( void\n   )","desc":"\n   SQLite \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0441\u043a\u043e\u043c\u043f\u0438\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u043b\u0438\u0431\u043e \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u0438\n   ISO-8859-1, \u043b\u0438\u0431\u043e UTF-8.\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c, \u043a\u0430\u043a\u0443\u044e \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u0430\u044f\n   \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430.\n  "},"sqlite_libversion":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0435\u0440\u0441\u0438\u044e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u043e\u0439 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 SQLite","syntax":"\n   string <b>sqlite_libversion<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0435\u0440\u0441\u0438\u044e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u043e\u0439 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 SQLite.\n  "},"sqlite_next\nSQLiteResult::next\nSQLiteUnbuffered::next\n":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u041f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u0442 \u043d\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0437\u0430\u043f\u0438\u0441\u044c","syntax":"\n   bool sqlite_next\n    ( resource $result\n   )\n\n   bool SQLiteResult::next\n    ( void\n   )\n\n   bool SQLiteUnbuffered::next\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):\n\n    sqlite_next() \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u0435\u0442 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\n   \u0437\u0430\u043f\u0440\u043e\u0441\u0430 result \u043d\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0437\u0430\u043f\u0438\u0441\u044c.\n  \n"},"sqlite_num_fields\nSQLiteResult::numFields\nSQLiteUnbuffered::numFields\n":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u0435\u0439 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430","syntax":"\n   int sqlite_num_fields\n    ( resource $result\n   )\n\n   int SQLiteResult::numFields\n    ( void\n   )\n\n   int SQLiteUnbuffered::numFields\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):\n\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u0435\u0439 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430\n   result.\n  \n"},"sqlite_num_rows\nSQLiteResult::numRows\n":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430","syntax":"\n   int sqlite_num_rows\n    ( resource $result\n   )\n\n   int SQLiteResult::numRows\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):\n\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0432 \u0431\u0443\u0444\u0435\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0438\u0440\u0443\u044e\u0449\u0435\u043c\n   \u043d\u0430\u0431\u043e\u0440\u0435 result.\n  \n"},"sqlite_open":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 SQLite \u0438\u043b\u0438 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0435\u0435, \u0435\u0441\u043b\u0438 \u043e\u043d\u0430 \u043d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442","syntax":"\n   resource <b>sqlite_open<\/b>\n    ( string $filename\n   [, int $mode = 0666\n   [, string &$error_message\n  ]] )","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440):\n\n   \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 SQLite \u0438\u043b\u0438 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0435\u0435, \u0435\u0441\u043b\u0438 \u043e\u043d\u0430 \u043d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442.\n  \n"},"sqlite_popen":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\n   \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u043e\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043a \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 SQLite \u0438\u043b\u0438 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0435\u0435, \u0435\u0441\u043b\u0438 \u043e\u043d\u0430 \u043d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442\n  ","syntax":"\n   resource <b>sqlite_popen<\/b>\n    ( string $filename\n   [, int $mode = 0666\n   [, string &$error_message\n  ]] )","desc":""},"sqlite_prev\nSQLiteResult::prev\n":{"version":"(PHP 5 < 5.4.0)","shortdesc":"\u041f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u0442 \u043d\u0430 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0443\u044e \u0437\u0430\u043f\u0438\u0441\u044c","syntax":"\n   bool sqlite_prev\n    ( resource $result\n   )\n\n   bool SQLiteResult::prev\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):\n\n    sqlite_prev() \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u0435\u0442 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c\n   \u0432 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0438\u0440\u0443\u044e\u0449\u0435\u0433\u043e \u043d\u0430\u0431\u043e\u0440\u0430 result\n   \u043d\u0430 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0443\u044e \u0437\u0430\u043f\u0438\u0441\u044c.\n  \n"},"sqlite_query\nSQLiteDatabase::query\n":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u043a \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430","syntax":"\n   resource sqlite_query\n    ( resource $dbhandle\n   , string $query\n   [, int $result_type = SQLITE_BOTH\n   [, string &$error_msg\n  ]] )\n\n   resource sqlite_query\n    ( string $query\n   , resource $dbhandle\n   [, int $result_type = SQLITE_BOTH\n   [, string &$error_msg\n  ]] )\n\n   SQLiteResult SQLiteDatabase::query\n    ( string $query\n   [, int $result_type = SQLITE_BOTH\n   [, string &$error_msg\n  ]] )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):\n\n   \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 SQL-\u0437\u0430\u043f\u0440\u043e\u0441 query \u043a \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443\n   \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0443 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445.\n  \n"},"sqlite_rewind\nSQLiteResult::rewind\n":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u041f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u0442 \u043a \u043f\u0435\u0440\u0432\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438","syntax":"\n   bool sqlite_rewind\n    ( resource $result\n   )\n\n   bool SQLiteResult::rewind\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):\n\n    sqlite_rewind() \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u0435\u0442 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c\n   \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0438\u0440\u0443\u044e\u0449\u0435\u043c \u043d\u0430\u0431\u043e\u0440\u0435 \u043d\u0430 \u043f\u0435\u0440\u0432\u0443\u044e \u0437\u0430\u043f\u0438\u0441\u044c.\n  \n"},"sqlite_seek\nSQLiteResult::seek\n":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u041f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u0442 \u043a \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u043c\u0443 \u043d\u043e\u043c\u0435\u0440\u0443 \u0437\u0430\u043f\u0438\u0441\u0438 \u0432 \u0431\u0443\u0444\u0435\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0438\u0440\u0443\u044e\u0449\u0435\u043c \u043d\u0430\u0431\u043e\u0440\u0435","syntax":"\n   bool sqlite_seek\n    ( resource $result\n   , int $rownum\n   )\n\n   bool SQLiteResult::seek\n    ( int $rownum\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):\n\n    sqlite_seek() \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u0435\u0442 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c\n   \u043a \u0437\u0430\u043f\u0438\u0441\u0438 \u0441 \u043f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u044b\u043c \u043d\u043e\u043c\u0435\u0440\u043e\u043c, \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c\n   rownum.\n  \n"},"sqlite_single_query\nSQLiteDatabase::singleQuery\n":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.1)","shortdesc":"\n   \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 \u043e\u0434\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044f \u0438\u043b\u0438 \n   \u043f\u0435\u0440\u0432\u0443\u044e \u0437\u0430\u043f\u0438\u0441\u044c\n  ","syntax":"\n   array sqlite_single_query\n    ( resource $db\n   , string $query\n   [, bool $first_row_only\n   [, bool $decode_binary\n  ]] )\n\n   array SQLiteDatabase::singleQuery\n    ( string $query\n   [, bool $first_row_only\n   [, bool $decode_binary\n  ]] )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):"},"sqlite_udf_decode_binary":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u0414\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435, \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0432 UDF","syntax":"\n   string <b>sqlite_udf_decode_binary<\/b>\n    ( string $data\n   )","desc":"\n   \u0414\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435, \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0432 UDF.\n  "},"sqlite_udf_encode_binary":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u041a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u0434 \u0442\u0435\u043c \u043a\u0430\u043a \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u0438\u0445 \u0438\u0437 UDF","syntax":"\n   string <b>sqlite_udf_encode_binary<\/b>\n    ( string $data\n   )","desc":"\n    sqlite_udf_encode_binary() \u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n   data \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0447\u0442\u043e \u043e\u043d\u0438 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u044b \u0432\n   \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 (\u0442\u0430\u043a \u043a\u0430\u043a \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430\n   libsqlite \u043d\u0435\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u0430 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0445\n   \u0434\u0430\u043d\u043d\u044b\u0445).\n  "},"sqlite_unbuffered_query\nSQLiteDatabase::unbufferedQuery\n":{"version":"(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)","shortdesc":"\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u0431\u0435\u0437 \u0431\u0443\u0444\u0435\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432","syntax":"\n   resource sqlite_unbuffered_query\n    ( resource $dbhandle\n   , string $query\n   [, int $result_type = SQLITE_BOTH\n   [, string &$error_msg\n  ]] )\n\n   resource sqlite_unbuffered_query\n    ( string $query\n   , resource $dbhandle\n   [, int $result_type = SQLITE_BOTH\n   [, string &$error_msg\n  ]] )\n\n   SQLiteUnbuffered SQLiteDatabase::unbufferedQuery\n    ( string $query\n   [, int $result_type = SQLITE_BOTH\n   [, string &$error_msg\n  ]] )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):\n\n    sqlite_unbuffered_query() \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    sqlite_query() \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u0437\n   \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0433\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e, \u043e\u0434\u043d\u0443 \u0437\u0430\n   \u0434\u0440\u0443\u0433\u043e\u0439.\n  \n"},"sqlite_valid\nSQLiteResult::valid\nSQLiteUnbuffered::valid\n":{"version":"(PHP 5 < 5.4.0)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0435\u0441\u0442\u044c \u043b\u0438 \u0435\u0449\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0440\u044f\u0434\u044b","syntax":"\n   bool sqlite_valid\n    ( resource $result\n   )\n\n   bool SQLiteResult::valid\n    ( void\n   )\n\n   bool SQLiteUnbuffered::valid\n    ( void\n   )\n","desc":"\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u043c\u0435\u0442\u043e\u0434):\n\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0435\u0441\u0442\u044c \u043b\u0438 \u0435\u0449\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0440\u044f\u0434\u044b \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0438\u0440\u0443\u044e\u0449\u0435\u043c \u043d\u0430\u0431\u043e\u0440\u0435.\n  \n"},"sqlsrv_begin_transaction":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Begins a database transaction","syntax":"\n   bool <b>sqlsrv_begin_transaction<\/b>\n    ( resource $conn\n   )","desc":"\n   The transaction begun by  sqlsrv_begin_transaction() includes \n   all statements that were executed after the call to \n    sqlsrv_begin_transaction() and before calls to \n    sqlsrv_rollback() or  sqlsrv_commit(). \n   Explicit transactions should be started and committed or rolled back using \n   these functions instead of executing SQL statements that begin and committ\/roll \n   back transactions. For more information, see \n   \u00bb\u00a0SQLSRV Transactions.\n  "},"sqlsrv_cancel":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Cancels a statement","syntax":"\n   bool <b>sqlsrv_cancel<\/b>\n    ( resource $stmt\n   )","desc":"\n   Cancels a statement. Any results associated with the statement that have not \n   been consumed are deleted. After  sqlsrv_cancel() has been \n   called, the specified statement can be re-executed if it was created with \n    sqlsrv_prepare(). Calling  sqlsrv_cancel() \n   is not necessary if all the results associated with the statement have been \n   consumed.\n  "},"sqlsrv_client_info":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Returns information about the client and specified connection","syntax":"\n   array <b>sqlsrv_client_info<\/b>\n    ( resource $conn\n   )","desc":"\n   Returns information about the client and specified connection\n  "},"sqlsrv_close":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Closes an open connection and releases resourses associated with the connection","syntax":"\n   bool <b>sqlsrv_close<\/b>\n    ( resource $conn\n   )","desc":"\n   Closes an open connection and releases resourses associated with the connection.\n  "},"sqlsrv_commit":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Commits a transaction that was begun with  sqlsrv_begin_transaction()","syntax":"\n   bool <b>sqlsrv_commit<\/b>\n    ( resource $conn\n   )","desc":"\n   Commits a transaction that was begun with  sqlsrv_begin_transaction(). \n   The connection is returned to auto-commit mode after  sqlsrv_commit() \n   is called. The transaction that is committed includes all statements that were \n   executed after the call to  sqlsrv_begin_transaction(). \n   Explicit transactions should be started and committed or rolled back using these \n   functions instead of executing SQL statements that begin and committ\/roll back \n   transactions. For more information, see \n   \u00bb\u00a0SQLSRV Transactions.\n  "},"sqlsrv_configure":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Changes the driver error handling and logging configurations","syntax":"\n   bool <b>sqlsrv_configure<\/b>\n    ( string $setting\n   , mixed $value\n   )","desc":"\n   Changes the driver error handling and logging configurations.\n  "},"sqlsrv_connect":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Opens a connection to a Microsoft SQL Server database","syntax":"\n   resource <b>sqlsrv_connect<\/b>\n    ( string $serverName\n   [, array $connectionInfo\n  ] )","desc":"\n   Opens a connection to a Microsoft SQL Server database. By default, the connection \n   is attempted using Windows Authentication. To connect using SQL Server \n   Authentication, include \"UID\" and \"PWD\" in the connection options array.\n  "},"sqlsrv_errors":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Returns error and warning information about the last SQLSRV operation performed","syntax":"\n   \n   mixed <b>sqlsrv_errors<\/b>\n    ([ int $errorsOrWarnings\n  ] )","desc":"\n   Returns error and warning information about the last SQLSRV operation performed.\n  "},"sqlsrv_execute":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Executes a statement prepared with  sqlsrv_prepare()","syntax":"\n   bool <b>sqlsrv_execute<\/b>\n    ( resource $stmt\n   )","desc":"\n   Executes a statement prepared with  sqlsrv_prepare(). This \n   function is ideal for executing a prepared statement multiple times with \n   different parameter values.\n  "},"sqlsrv_fetch_array":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Returns a row as an array","syntax":"\n   array <b>sqlsrv_fetch_array<\/b>\n    ( resource $stmt\n   [, int $fetchType\n   [, int $row\n   [, int $offset\n  ]]] )","desc":"\n   Returns the next available row of data as an associative array, a numeric \n   array, or both (the default).\n  "},"sqlsrv_fetch_object":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Retrieves the next row of data in a result set as an object","syntax":"\n   mixed <b>sqlsrv_fetch_object<\/b>\n    ( resource $stmt\n   [, string $className\n   [, array $ctorParams\n   [, int $row\n   [, int $offset\n  ]]]] )","desc":"\n   Retrieves the next row of data in a result set as an instance of the specified \n   class with properties that match the row field names and values that correspond \n   to the row field values.\n  "},"sqlsrv_fetch":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Makes the next row in a result set available for reading","syntax":"\n   \n   mixed <b>sqlsrv_fetch<\/b>\n    ( resource $stmt\n   [, int $row\n   [, int $offset\n  ]] )","desc":"\n   Makes the next row in a result set available for reading. Use \n    sqlsrv_get_field() to read the fields of the row.\n  "},"sqlsrv_field_metadata":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Retrieves metadata for the fields of a statement prepared by \n   sqlsrv_prepare() or  sqlsrv_query()\n  ","syntax":"\n   mixed <b>sqlsrv_field_metadata<\/b>\n    ( resource $stmt\n   )","desc":"\n   Retrieves metadata for the fields of a statement prepared by \n    sqlsrv_prepare() or  sqlsrv_query(). \n    sqlsrv_field_metadata() can be called on a statement before \n   or after statement execution.\n  "},"sqlsrv_free_stmt":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Frees all resources for the specified statement","syntax":"\n   bool <b>sqlsrv_free_stmt<\/b>\n    ( resource $stmt\n   )","desc":"\n   Frees all resources for the specified statement. The statement cannot be used \n   after  sqlsrv_free_stmt() has been called on it. If \n    sqlsrv_free_stmt() is called on an in-progress statement \n   that alters server state, statement execution is terminated and the statement \n   is rolled back.\n  "},"sqlsrv_get_config":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Returns the value of the specified configuration setting","syntax":"\n   mixed <b>sqlsrv_get_config<\/b>\n    ( string $setting\n   )","desc":"\n   Returns the value of the specified configuration setting.\n  "},"sqlsrv_get_field":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Gets field data from the currently selected row","syntax":"\n   mixed <b>sqlsrv_get_field<\/b>\n    ( resource $stmt\n   , int $fieldIndex\n   [, int $getAsType\n  ] )","desc":"\n   Gets field data from the currently selected row. Fields must be accessed in \n   order. Field indices start at 0.\n  "},"sqlsrv_has_rows":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Indicates whether the specified statement has rows","syntax":"\n   bool <b>sqlsrv_has_rows<\/b>\n    ( resource $stmt\n   )","desc":"\n   Indicates whether the specified statement has rows.\n  "},"sqlsrv_next_result":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Makes the next result of the specified statement active","syntax":"\n   mixed <b>sqlsrv_next_result<\/b>\n   \n    ( resource $stmt\n   )","desc":"\n   Makes the next result of the specified statement active. Results include result \n   sets, row counts, and output parameters.\n  "},"sqlsrv_num_fields":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Retrieves the number of fields (columns) on a statement","syntax":"\n   mixed <b>sqlsrv_num_fields<\/b>\n    ( resource $stmt\n   )","desc":"\n   Retrieves the number of fields (columns) on a statement.\n  "},"sqlsrv_num_rows":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Retrieves the number of rows in a result set","syntax":"\n   mixed <b>sqlsrv_num_rows<\/b>\n    ( resource $stmt\n   )","desc":"\n   Retrieves the number of rows in a result set. This function requires that the \n   statment resource be created with a static or keyset cursor. For more information, \n   see  sqlsrv_query(),  sqlsrv_prepare(), \n   or \u00bb\u00a0Specifying a Cursor Type and Selecting Rows \n   in the Microsoft SQLSRV documentation.\n  "},"sqlsrv_prepare":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Prepares a query for execution","syntax":"\n   mixed <b>sqlsrv_prepare<\/b>\n    ( resource $conn\n   , string $sql\n   [, array $params\n   [, array $options\n  ]] )","desc":"\n   Prepares a query for execution. This function is ideal for preparing a query \n   that will be executed multiple times with different parameter values.\n  "},"sqlsrv_query":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Prepares and executes a query.","syntax":"\n   mixed <b>sqlsrv_query<\/b>\n    ( resource $conn\n   , string $sql\n   [, array $params\n   [, array $options\n  ]] )","desc":"\n   Prepares and executes a query.\n  "},"sqlsrv_rollback":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Rolls back a transaction that was begun with \n   sqlsrv_begin_transaction()","syntax":"\n   bool <b>sqlsrv_rollback<\/b>\n    ( resource $conn\n   )","desc":"\n   Rolls back a transaction that was begun with  sqlsrv_begin_transaction() \n   and returns the connection to auto-commit mode.\n  "},"sqlsrv_rows_affected":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Returns the number of rows modified by the last INSERT, UPDATE, or \n  DELETE query executed","syntax":"\n   int <b>sqlsrv_rows_affected<\/b>\n    ( resource $stmt\n   )","desc":"\n   Returns the number of rows modified by the last INSERT, UPDATE, or DELETE \n   query executed. For information about the number of rows returned by a SELECT \n   query, see  sqlsrv_num_rows().\n  "},"sqlsrv_send_stream_data":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Sends data from parameter streams to the server","syntax":"\n   bool <b>sqlsrv_send_stream_data<\/b>\n    ( resource $stmt\n   )","desc":"\n   Send data from parameter streams to the server. Up to 8 KB of data is sent \n   with each call.\n  "},"sqlsrv_server_info":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"Returns information about the server","syntax":"\n   array <b>sqlsrv_server_info<\/b>\n    ( resource $conn\n   )","desc":"\n   Returns information about the server.\n  "},"sqrt":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u043a\u043e\u0440\u0435\u043d\u044c","syntax":"\n   float <b>sqrt<\/b>\n    ( float $arg\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u043a\u043e\u0440\u0435\u043d\u044c \u0438\u0437 arg.\n  "},"srand":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440\u0430 \u043f\u0441\u0435\u0432\u0434\u043e\u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b","syntax":"\n    void <b>srand<\/b>\n     ([ int $seed\n   ] )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440\u0430 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b \u0432 seed\n   \u0438\u043b\u0438 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e, \u0435\u0441\u043b\u0438 seed \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d.     \n  "},"sscanf":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\u0420\u0430\u0437\u0431\u0438\u0440\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u043e\u043c","syntax":"\n   mixed <b>sscanf<\/b>\n    ( string $str\n   , string $format\n   [, mixed &$...\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  sscanf() \u043f\u043e\u0445\u043e\u0436\u0430 \u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044e\n    printf(), \u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043d\u0435 \u0434\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430, \u0430 \u0434\u043b\u044f \n   \u0432\u0432\u043e\u0434\u0430 \u0434\u0430\u043d\u043d\u044b\u0445.  sscanf() \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0438\u0440\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \n   str \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0444\u043e\u0440\u043c\u0430\u0442\u043e\u043c \n   format, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u043a \n   \u0444\u0443\u043d\u043a\u0446\u0438\u0438 sprintf(). \n  "},"ssdeep_fuzzy_compare":{"version":"(PECL ssdeep >= 1.0.0)","shortdesc":"Calculates the match score between two fuzzy hash signatures","syntax":"\n   int <b>ssdeep_fuzzy_compare<\/b>\n    ( string $signature1\n   , string $signature2\n   )","desc":"\n   Calculates the match score between signature1\n   and signature2 using \u00bb\u00a0\n   context-triggered piecewise hashing, and returns the match\n   score.\n  "},"ssdeep_fuzzy_hash_filename":{"version":"(PECL ssdeep >= 1.0.0)","shortdesc":"Create a fuzzy hash from a file","syntax":"\n   string <b>ssdeep_fuzzy_hash_filename<\/b>\n    ( string $file_name\n   )","desc":"\n    ssdeep_fuzzy_hash_filename() calculates the hash \n   of the file specified by file_name using \n   \u00bb\u00a0context-triggered piecewise \n   hashing, and returns that hash.\n  "},"ssdeep_fuzzy_hash":{"version":"(PECL ssdeep >= 1.0.0)","shortdesc":"Create a fuzzy hash from a string","syntax":"\n   string <b>ssdeep_fuzzy_hash<\/b>\n    ( string $to_hash\n   )","desc":"\n    ssdeep_fuzzy_hash() calculates the hash of \n   to_hash using \u00bb\u00a0\n   context-triggered piecewise hashing, and returns that hash.\n  "},"ssh2_auth_agent":{"version":"(PECL ssh2 >= 0.12)","shortdesc":"Authenticate over SSH using the ssh agent","syntax":"\n   bool <b>ssh2_auth_agent<\/b>\n    ( resource $session\n   , string $username\n   )","desc":"\n   Authenticate over SSH using the ssh agent\n  "},"ssh2_auth_hostbased_file":{"version":"(PECL ssh2 >= 0.9.0)","shortdesc":"Authenticate using a public hostkey","syntax":"\n   bool <b>ssh2_auth_hostbased_file<\/b>\n    ( resource $session\n   , string $username\n   , string $hostname\n   , string $pubkeyfile\n   , string $privkeyfile\n   [, string $passphrase\n   [, string $local_username\n  ]] )","desc":"\n   Authenticate using a public hostkey read from a file.  \n  "},"ssh2_auth_none":{"version":"(PECL ssh2 >= 0.9.0)","shortdesc":"Authenticate as \"none\"","syntax":"\n   mixed <b>ssh2_auth_none<\/b>\n    ( resource $session\n   , string $username\n   )","desc":"\n   Attempt \"none\" authentication which usually will (and should) fail.\n   As part of the failure, this function will return an array of accepted\n   authentication methods. \n  "},"ssh2_auth_password":{"version":"(PECL ssh2 >= 0.9.0)","shortdesc":"Authenticate over SSH using a plain password","syntax":"\n   bool <b>ssh2_auth_password<\/b>\n    ( resource $session\n   , string $username\n   , string $password\n   )","desc":"\n   Authenticate over SSH using a plain password. Since version 0.12 this function\n   also supports keyboard_interactive method.\n  "},"ssh2_auth_pubkey_file":{"version":"(PECL ssh2 >= 0.9.0)","shortdesc":"Authenticate using a public key","syntax":"\n   bool <b>ssh2_auth_pubkey_file<\/b>\n    ( resource $session\n   , string $username\n   , string $pubkeyfile\n   , string $privkeyfile\n   [, string $passphrase\n  ] )","desc":"\n   Authenticate using a public key read from a file.  \n  "},"ssh2_connect":{"version":"(PECL ssh2 >= 0.9.0)","shortdesc":"Connect to an SSH server","syntax":"\n   resource <b>ssh2_connect<\/b>\n    ( string $host\n   [, int $port = 22\n   [, array $methods\n   [, array $callbacks\n  ]]] )","desc":"\n   Establish a connection to a remote SSH server.\n  "},"ssh2_exec":{"version":"(PECL ssh2 >= 0.9.0)","shortdesc":"Execute a command on a remote server","syntax":"\n   resource <b>ssh2_exec<\/b>\n    ( resource $session\n   , string $command\n   [, string $pty\n   [, array $env\n   [, int $width = 80\n   [, int $height = 25\n   [, int $width_height_type = SSH2_TERM_UNIT_CHARS\n  ]]]]] )","desc":"\n   Execute a command at the remote end and allocate a channel for it.\n  "},"ssh2_fetch_stream":{"version":"(PECL ssh2 >= 0.9.0)","shortdesc":"Fetch an extended data stream","syntax":"\n   resource <b>ssh2_fetch_stream<\/b>\n    ( resource $channel\n   , int $streamid\n   )","desc":"\n   Fetches an alternate substream associated with an SSH2 channel stream.\n   The SSH2 protocol currently defines only one substream, STDERR, which has\n   a substream ID of SSH2_STREAM_STDERR (defined as 1).\n  "},"ssh2_fingerprint":{"version":"(PECL ssh2 >= 0.9.0)","shortdesc":"Retrieve fingerprint of remote server","syntax":"\n   string <b>ssh2_fingerprint<\/b>\n    ( resource $session\n   [, int $flags = SSH2_FINGERPRINT_MD5 | SSH2_FINGERPRINT_HEX\n  ] )","desc":"\n   Returns a server hostkey hash from an active session.\n  "},"ssh2_methods_negotiated":{"version":"(PECL ssh2 >= 0.9.0)","shortdesc":"Return list of negotiated methods","syntax":"\n   array <b>ssh2_methods_negotiated<\/b>\n    ( resource $session\n   )","desc":"\n   Returns list of negotiated methods.\n  "},"ssh2_publickey_add":{"version":"(PECL ssh2 >= 0.10)","shortdesc":"\n   Add an authorized publickey\n  ","syntax":"\n   bool <b>ssh2_publickey_add<\/b>\n    ( resource $pkey\n   , string $algoname\n   , string $blob\n   [, bool $overwrite = false\n   [, array $attributes\n  ]] )","desc":""},"ssh2_publickey_init":{"version":"(PECL ssh2 >= 0.10)","shortdesc":"\n   Initialize Publickey subsystem\n  ","syntax":"\n   resource <b>ssh2_publickey_init<\/b>\n    ( resource $session\n   )","desc":"\n   Request the Publickey subsystem from an already connected SSH2 server.\n  "},"ssh2_publickey_list":{"version":"(PECL ssh2 >= 0.10)","shortdesc":"\n   List currently authorized publickeys\n  ","syntax":"\n   array <b>ssh2_publickey_list<\/b>\n    ( resource $pkey\n   )","desc":"\n   List currently authorized publickeys.\n  "},"ssh2_publickey_remove":{"version":"(PECL ssh2 >= 0.10)","shortdesc":"\n   Remove an authorized publickey\n  ","syntax":"\n   bool <b>ssh2_publickey_remove<\/b>\n    ( resource $pkey\n   , string $algoname\n   , string $blob\n   )","desc":"\n   Removes an authorized publickey.\n  "},"ssh2_scp_recv":{"version":"(PECL ssh2 >= 0.9.0)","shortdesc":"Request a file via SCP","syntax":"\n   bool <b>ssh2_scp_recv<\/b>\n    ( resource $session\n   , string $remote_file\n   , string $local_file\n   )","desc":"\n   Copy a file from the remote server to the local filesystem using the SCP protocol.\n  "},"ssh2_scp_send":{"version":"(PECL ssh2 >= 0.9.0)","shortdesc":"Send a file via SCP","syntax":"\n   bool <b>ssh2_scp_send<\/b>\n    ( resource $session\n   , string $local_file\n   , string $remote_file\n   [, int $create_mode = 0644\n  ] )","desc":"\n   Copy a file from the local filesystem to the remote server using the SCP protocol.\n  "},"ssh2_sftp_chmod":{"version":"(PECL ssh2 >= 0.12)","shortdesc":"Changes file mode","syntax":"\n   bool <b>ssh2_sftp_chmod<\/b>\n    ( resource $sftp\n   , string $filename\n   , int $mode\n   )","desc":"\n   Attempts to change the mode of the specified file to that given in\n   mode.\n  "},"ssh2_sftp_lstat":{"version":"(PECL ssh2 >= 0.9.0)","shortdesc":"Stat a symbolic link","syntax":"\n   array <b>ssh2_sftp_lstat<\/b>\n    ( resource $sftp\n   , string $path\n   )","desc":"\n   Stats a symbolic link on the remote filesystem without\n   following the link.\n  "},"ssh2_sftp_mkdir":{"version":"(PECL ssh2 >= 0.9.0)","shortdesc":"Create a directory","syntax":"\n   bool <b>ssh2_sftp_mkdir<\/b>\n    ( resource $sftp\n   , string $dirname\n   [, int $mode = 0777\n   [, bool $recursive = false\n  ]] )","desc":"\n   Creates a directory on the remote file server with permissions set to\n   mode.  \n  "},"ssh2_sftp_readlink":{"version":"(PECL ssh2 >= 0.9.0)","shortdesc":"Return the target of a symbolic link","syntax":"\n   string <b>ssh2_sftp_readlink<\/b>\n    ( resource $sftp\n   , string $link\n   )","desc":"\n   Returns the target of a symbolic link.\n  "},"ssh2_sftp_realpath":{"version":"(PECL ssh2 >= 0.9.0)","shortdesc":"Resolve the realpath of a provided path string","syntax":"\n   string <b>ssh2_sftp_realpath<\/b>\n    ( resource $sftp\n   , string $filename\n   )","desc":"\n   Translates filename into the effective real path\n   on the remote filesystem.\n  "},"ssh2_sftp_rename":{"version":"(PECL ssh2 >= 0.9.0)","shortdesc":"Rename a remote file","syntax":"\n   bool <b>ssh2_sftp_rename<\/b>\n    ( resource $sftp\n   , string $from\n   , string $to\n   )","desc":"\n   Renames a file on the remote filesystem.\n  "},"ssh2_sftp_rmdir":{"version":"(PECL ssh2 >= 0.9.0)","shortdesc":"Remove a directory","syntax":"\n   bool <b>ssh2_sftp_rmdir<\/b>\n    ( resource $sftp\n   , string $dirname\n   )","desc":"\n   Removes a directory from the remote file server.\n  "},"ssh2_sftp_stat":{"version":"(PECL ssh2 >= 0.9.0)","shortdesc":"Stat a file on a remote filesystem","syntax":"\n   array <b>ssh2_sftp_stat<\/b>\n    ( resource $sftp\n   , string $path\n   )","desc":"\n   Stats a file on the remote filesystem following any symbolic links.\n  "},"ssh2_sftp_symlink":{"version":"(PECL ssh2 >= 0.9.0)","shortdesc":"Create a symlink","syntax":"\n   bool <b>ssh2_sftp_symlink<\/b>\n    ( resource $sftp\n   , string $target\n   , string $link\n   )","desc":"\n   Creates a symbolic link named link on the remote\n   filesystem pointing to target.\n  "},"ssh2_sftp_unlink":{"version":"(PECL ssh2 >= 0.9.0)","shortdesc":"Delete a file","syntax":"\n   bool <b>ssh2_sftp_unlink<\/b>\n    ( resource $sftp\n   , string $filename\n   )","desc":"\n   Deletes a file on the remote filesystem.\n  "},"ssh2_sftp":{"version":"(PECL ssh2 >= 0.9.0)","shortdesc":"Initialize SFTP subsystem","syntax":"\n   resource <b>ssh2_sftp<\/b>\n    ( resource $session\n   )","desc":"\n   Request the SFTP subsystem from an already connected SSH2 server.\n  "},"ssh2_shell":{"version":"(PECL ssh2 >= 0.9.0)","shortdesc":"Request an interactive shell","syntax":"\n   resource <b>ssh2_shell<\/b>\n    ( resource $session\n   [, string $term_type = \"vanilla\"\n   [, array $env\n   [, int $width = 80\n   [, int $height = 25\n   [, int $width_height_type = SSH2_TERM_UNIT_CHARS\n  ]]]]] )","desc":"\n   Open a shell at the remote end and allocate a stream for it.\n  "},"ssh2_tunnel":{"version":"(PECL ssh2 >= 0.9.0)","shortdesc":"Open a tunnel through a remote server","syntax":"\n   resource <b>ssh2_tunnel<\/b>\n    ( resource $session\n   , string $host\n   , int $port\n   )","desc":"\n   Open a socket stream to an arbitrary host\/port by way of the currently\n   connected SSH server.\n  "},"stat":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0444\u0430\u0439\u043b\u0435","syntax":"\n   array <b>stat<\/b>\n    ( string $filename\n   )","desc":"\n   \u0421\u043e\u0431\u0438\u0440\u0430\u0435\u0442 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0444\u0430\u0439\u043b\u0435\n   filename. \u0415\u0441\u043b\u0438 filename\n   \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u0438\u043c\u0432\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0441\u0441\u044b\u043b\u043a\u043e\u0439, \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u0441\u043e\u0431\u0438\u0440\u0430\u0435\u0442\u0441\u044f \u043e \u0441\u0430\u043c\u043e\u043c \u0444\u0430\u0439\u043b\u0435,\n   \u0430 \u043d\u0435 \u0441\u0441\u044b\u043b\u043a\u0435.\n  "},"stats_absolute_deviation":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439","syntax":"\n   float <b>stats_absolute_deviation<\/b>\n    ( array $a\n   )","desc":""},"stats_cdf_beta":{"version":"(PECL stats >= 1.0.0)","shortdesc":"CDF function for BETA Distribution. Calculates any one parameter of the beta distribution given values for the others.","syntax":"\n   float <b>stats_cdf_beta<\/b>\n    ( float $par1\n   , float $par2\n   , float $par3\n   , int $which\n   )","desc":"\n\n                              Method\n\n     Cumulative distribution function  (P)  is calculated directly by\n     code associated with the following reference.\n\n     DiDinato, A. R. and Morris,  A.   H.  Algorithm 708: Significant\n     Digit Computation of the Incomplete  Beta  Function Ratios.  ACM\n     Trans. Math.  Softw. 18 (1993), 360-373.\n\n     Computation of other parameters involve a search for a value that\n     produces  the desired  value  of P.   The search relies  on  the\n     monotonicity of P with the other parameter.\n\n                              Note\n\n     The beta density is proportional to\n               t^(A-1) * (1-t)^(B-1)\n\n                              Arguments\n\n\n     P -- The integral from 0 to X of the chi-square\n            distribution.\n            Input range: [0, 1].\n\n     Q -- 1-P.\n            Input range: [0, 1].\n            P + Q = 1.0.\n\n     X -- Upper limit of integration of beta density.\n            Input range: [0,1].\n            Search range: [0,1]\n\n     Y -- 1-X.\n            Input range: [0,1].\n            Search range: [0,1]\n            X + Y = 1.0.\n\n     A -- The first parameter of the beta density.\n            Input range: (0, +infinity).\n            Search range: [1D-100,1D100]\n\n     B -- The second parameter of the beta density.\n            Input range: (0, +infinity).\n            Search range: [1D-100,1D100]\n\n     STATUS  -- 0 if calculation completed correctly\n               -I if input parameter number I is out of range\n                1 if answer appears to be lower than lowest\n                  search bound\n                2 if answer appears to be higher than greatest\n                  search bound\n                3 if P + Q .ne. 1\n                4 if X + Y .ne. 1\n\n     BOUND  -- Undefined if STATUS is 0\n\n               Bound exceeded by parameter number I if STATUS\n               is negative.\n\n               Lower search bound if STATUS is 1.\n\n               Upper search bound if STATUS is 2.\n\n  "},"stats_cdf_binomial":{"version":"(PECL stats >= 1.0.0)","shortdesc":"Calculates any one parameter of the binomial distribution given values for the others.","syntax":"\n   float <b>stats_cdf_binomial<\/b>\n    ( float $par1\n   , float $par2\n   , float $par3\n   , int $which\n   )","desc":""},"stats_cdf_cauchy":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_cdf_cauchy<\/b>\n    ( float $par1\n   , float $par2\n   , float $par3\n   , int $which\n   )","desc":""},"stats_cdf_chisquare":{"version":"(PECL stats >= 1.0.0)","shortdesc":"Calculates any one parameter of the chi-square distribution given values for the others.","syntax":"\n   float <b>stats_cdf_chisquare<\/b>\n    ( float $par1\n   , float $par2\n   , int $which\n   )","desc":""},"stats_cdf_exponential":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_cdf_exponential<\/b>\n    ( float $par1\n   , float $par2\n   , int $which\n   )","desc":""},"stats_cdf_f":{"version":"(PECL stats >= 1.0.0)","shortdesc":"Calculates any one parameter of the F distribution given values for the others.","syntax":"\n   float <b>stats_cdf_f<\/b>\n    ( float $par1\n   , float $par2\n   , float $par3\n   , int $which\n   )","desc":""},"stats_cdf_gamma":{"version":"(PECL stats >= 1.0.0)","shortdesc":"Calculates any one parameter of the gamma distribution given values for the others.","syntax":"\n   float <b>stats_cdf_gamma<\/b>\n    ( float $par1\n   , float $par2\n   , float $par3\n   , int $which\n   )","desc":""},"stats_cdf_laplace":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_cdf_laplace<\/b>\n    ( float $par1\n   , float $par2\n   , float $par3\n   , int $which\n   )","desc":""},"stats_cdf_logistic":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_cdf_logistic<\/b>\n    ( float $par1\n   , float $par2\n   , float $par3\n   , int $which\n   )","desc":""},"stats_cdf_negative_binomial":{"version":"(PECL stats >= 1.0.0)","shortdesc":"Calculates any one parameter of the negative binomial distribution given values for the others.","syntax":"\n   float <b>stats_cdf_negative_binomial<\/b>\n    ( float $par1\n   , float $par2\n   , float $par3\n   , int $which\n   )","desc":""},"stats_cdf_noncentral_chisquare":{"version":"(PECL stats >= 1.0.0)","shortdesc":"Calculates any one parameter of the non-central chi-square distribution given values for the others.","syntax":"\n   float <b>stats_cdf_noncentral_chisquare<\/b>\n    ( float $par1\n   , float $par2\n   , float $par3\n   , int $which\n   )","desc":""},"stats_cdf_noncentral_f":{"version":"(PECL stats >= 1.0.0)","shortdesc":"Calculates any one parameter of the Non-central F distribution given values for the others.","syntax":"\n   float <b>stats_cdf_noncentral_f<\/b>\n    ( float $par1\n   , float $par2\n   , float $par3\n   , float $par4\n   , int $which\n   )","desc":""},"stats_cdf_poisson":{"version":"(PECL stats >= 1.0.0)","shortdesc":"Calculates any one parameter of the Poisson distribution given values for the others.","syntax":"\n   float <b>stats_cdf_poisson<\/b>\n    ( float $par1\n   , float $par2\n   , int $which\n   )","desc":""},"stats_cdf_t":{"version":"(PECL stats >= 1.0.0)","shortdesc":"Calculates any one parameter of the T distribution given values for the others.","syntax":"\n   float <b>stats_cdf_t<\/b>\n    ( float $par1\n   , float $par2\n   , int $which\n   )","desc":""},"stats_cdf_uniform":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_cdf_uniform<\/b>\n    ( float $par1\n   , float $par2\n   , float $par3\n   , int $which\n   )","desc":""},"stats_cdf_weibull":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_cdf_weibull<\/b>\n    ( float $par1\n   , float $par2\n   , float $par3\n   , int $which\n   )","desc":""},"stats_covariance":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043a\u043e\u0432\u0430\u0440\u0438\u0430\u0446\u0438\u044e \u0434\u0432\u0443\u0445 \u043d\u0430\u0431\u043e\u0440\u043e\u0432 \u0434\u0430\u043d\u043d\u044b\u0445","syntax":"\n   float <b>stats_covariance<\/b>\n    ( array $a\n   , array $b\n   )","desc":""},"stats_den_uniform":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_den_uniform<\/b>\n    ( float $x\n   , float $a\n   , float $b\n   )","desc":""},"stats_dens_beta":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_dens_beta<\/b>\n    ( float $x\n   , float $a\n   , float $b\n   )","desc":""},"stats_dens_cauchy":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_dens_cauchy<\/b>\n    ( float $x\n   , float $ave\n   , float $stdev\n   )","desc":""},"stats_dens_chisquare":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_dens_chisquare<\/b>\n    ( float $x\n   , float $dfr\n   )","desc":""},"stats_dens_exponential":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_dens_exponential<\/b>\n    ( float $x\n   , float $scale\n   )","desc":""},"stats_dens_f":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\n ","syntax":"\n   float <b>stats_dens_f<\/b>\n    ( float $x\n   , float $dfr1\n   , float $dfr2\n   )","desc":""},"stats_dens_gamma":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_dens_gamma<\/b>\n    ( float $x\n   , float $shape\n   , float $scale\n   )","desc":""},"stats_dens_laplace":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_dens_laplace<\/b>\n    ( float $x\n   , float $ave\n   , float $stdev\n   )","desc":""},"stats_dens_logistic":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_dens_logistic<\/b>\n    ( float $x\n   , float $ave\n   , float $stdev\n   )","desc":""},"stats_dens_negative_binomial":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_dens_negative_binomial<\/b>\n    ( float $x\n   , float $n\n   , float $pi\n   )","desc":""},"stats_dens_normal":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_dens_normal<\/b>\n    ( float $x\n   , float $ave\n   , float $stdev\n   )","desc":""},"stats_dens_pmf_binomial":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_dens_pmf_binomial<\/b>\n    ( float $x\n   , float $n\n   , float $pi\n   )","desc":""},"stats_dens_pmf_hypergeometric":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\n ","syntax":"\n   float <b>stats_dens_pmf_hypergeometric<\/b>\n    ( float $n1\n   , float $n2\n   , float $N1\n   , float $N2\n   )","desc":""},"stats_dens_pmf_poisson":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_dens_pmf_poisson<\/b>\n    ( float $x\n   , float $lb\n   )","desc":""},"stats_dens_t":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_dens_t<\/b>\n    ( float $x\n   , float $dfr\n   )","desc":""},"stats_dens_weibull":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_dens_weibull<\/b>\n    ( float $x\n   , float $a\n   , float $b\n   )","desc":""},"stats_harmonic_mean":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u0433\u0430\u0440\u043c\u043e\u043d\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439","syntax":"\n   number <b>stats_harmonic_mean<\/b>\n    ( array $a\n   )","desc":""},"stats_kurtosis":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u044d\u043a\u0441\u0446\u0435\u0441\u0441 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435","syntax":"\n   float <b>stats_kurtosis<\/b>\n    ( array $a\n   )","desc":""},"stats_rand_gen_beta":{"version":"(PECL stats >= 1.0.0)","shortdesc":"Generates beta random deviate","syntax":"\n   float <b>stats_rand_gen_beta<\/b>\n    ( float $a\n   , float $b\n   )","desc":"\n   Returns a random deviate from the beta distribution with parameters A and\n   B. The density of the beta is x^(a-1) * (1-x)^(b-1) \/ B(a,b) for 0 < x\n   <. Method R. C. H. Cheng.\n  "},"stats_rand_gen_chisquare":{"version":"(PECL stats >= 1.0.0)","shortdesc":"Generates random deviate from the distribution of a chisquare with \"df\" degrees of freedom random variable.","syntax":"\n   float <b>stats_rand_gen_chisquare<\/b>\n    ( float $df\n   )","desc":""},"stats_rand_gen_exponential":{"version":"(PECL stats >= 1.0.0)","shortdesc":"Generates a single random deviate from an exponential distribution with mean \"av\"","syntax":"\n   float <b>stats_rand_gen_exponential<\/b>\n    ( float $av\n   )","desc":""},"stats_rand_gen_f":{"version":"(PECL stats >= 1.0.0)","shortdesc":"Generates a random deviate","syntax":"\n   float <b>stats_rand_gen_f<\/b>\n    ( float $dfn\n   , float $dfd\n   )","desc":"\n   Generates a random deviate from the F (variance ratio) distribution with \n   \"dfn\" degrees of freedom in the numerator and \"dfd\" degrees of freedom in \n   the denominator. Method : directly generates ratio of chisquare variates.\n  "},"stats_rand_gen_funiform":{"version":"(PECL stats >= 1.0.0)","shortdesc":"Generates uniform float between low (exclusive) and high (exclusive)","syntax":"\n   float <b>stats_rand_gen_funiform<\/b>\n    ( float $low\n   , float $high\n   )","desc":""},"stats_rand_gen_gamma":{"version":"(PECL stats >= 1.0.0)","shortdesc":"Generates random deviates from a gamma distribution","syntax":"\n   float <b>stats_rand_gen_gamma<\/b>\n    ( float $a\n   , float $r\n   )","desc":"\n   Generates random deviates from the gamma distribution whose density is\n   (A**R)\/Gamma(R) * X**(R-1) * Exp(-A*X).\n  "},"stats_rand_gen_ibinomial_negative":{"version":"(PECL stats >= 1.0.0)","shortdesc":"Generates a single random deviate from a negative binomial distribution. Arguments : n - the number of trials in the negative binomial distribution from which a random deviate is to be generated (n > 0), p - the probability of an event (0 < p < 1)).","syntax":"\n   int <b>stats_rand_gen_ibinomial_negative<\/b>\n    ( int $n\n   , float $p\n   )","desc":""},"stats_rand_gen_ibinomial":{"version":"(PECL stats >= 1.0.0)","shortdesc":"Generates a single random deviate from a binomial distribution whose number of trials is \"n\" (n >= 0) and whose probability of an event in each trial is \"pp\" ([0;1]). Method : algorithm BTPE","syntax":"\n   int <b>stats_rand_gen_ibinomial<\/b>\n    ( int $n\n   , float $pp\n   )","desc":""},"stats_rand_gen_int":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0432 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0435 \u043e\u0442 1 \u0434\u043e 2147483562","syntax":"\n   int <b>stats_rand_gen_int<\/b>\n    ( void\n   )","desc":""},"stats_rand_gen_ipoisson":{"version":"(PECL stats >= 1.0.0)","shortdesc":"Generates a single random deviate from a Poisson distribution with mean \"mu\" (mu >= 0.0).","syntax":"\n   int <b>stats_rand_gen_ipoisson<\/b>\n    ( float $mu\n   )","desc":""},"stats_rand_gen_iuniform":{"version":"(PECL stats >= 1.0.0)","shortdesc":"Generates integer uniformly distributed between LOW (inclusive) and HIGH (inclusive)","syntax":"\n   int <b>stats_rand_gen_iuniform<\/b>\n    ( int $low\n   , int $high\n   )","desc":""},"stats_rand_gen_noncenral_chisquare":{"version":"(PECL stats >= 1.0.0)","shortdesc":"Generates random deviate from the distribution of a noncentral chisquare with \"df\" degrees of freedom and noncentrality parameter \"xnonc\". d must be >= 1.0, xnonc must >= 0.0","syntax":"\n   float <b>stats_rand_gen_noncenral_chisquare<\/b>\n    ( float $df\n   , float $xnonc\n   )","desc":""},"stats_rand_gen_noncentral_f":{"version":"(PECL stats >= 1.0.0)","shortdesc":"Generates a random deviate from the noncentral F (variance ratio) distribution with \"dfn\" degrees of freedom in the numerator, and \"dfd\" degrees of freedom in the denominator, and noncentrality parameter \"xnonc\". Method : directly generates ratio of noncentral numerator chisquare variate to central denominator chisquare variate.","syntax":"\n   float <b>stats_rand_gen_noncentral_f<\/b>\n    ( float $dfn\n   , float $dfd\n   , float $xnonc\n   )","desc":""},"stats_rand_gen_noncentral_t":{"version":"(PECL stats >= 1.0.0)","shortdesc":"Generates a single random deviate from a noncentral T distribution","syntax":"\n   float <b>stats_rand_gen_noncentral_t<\/b>\n    ( float $df\n   , float $xnonc\n   )","desc":""},"stats_rand_gen_normal":{"version":"(PECL stats >= 1.0.0)","shortdesc":"Generates a single random deviate from a normal distribution with mean, av, and standard deviation, sd (sd >= 0). Method : Renames SNORM from TOMS as slightly modified by BWB to use RANF instead of SUNIF.","syntax":"\n   float <b>stats_rand_gen_normal<\/b>\n    ( float $av\n   , float $sd\n   )","desc":""},"stats_rand_gen_t":{"version":"(PECL stats >= 1.0.0)","shortdesc":"Generates a single random deviate from a T distribution","syntax":"\n   float <b>stats_rand_gen_t<\/b>\n    ( float $df\n   )","desc":""},"stats_rand_get_seeds":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   array <b>stats_rand_get_seeds<\/b>\n    ( void\n   )","desc":""},"stats_rand_phrase_to_seeds":{"version":"(PECL stats >= 1.0.0)","shortdesc":"generate two seeds for the RGN random number generator","syntax":"\n   array <b>stats_rand_phrase_to_seeds<\/b>\n    ( string $phrase\n   )","desc":""},"stats_rand_ranf":{"version":"(PECL stats >= 1.0.0)","shortdesc":"Returns a random floating point number from a uniform distribution over 0 - 1 (endpoints of this interval are not returned) using the current generator","syntax":"\n   float <b>stats_rand_ranf<\/b>\n    ( void\n   )","desc":""},"stats_rand_setall":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   void <b>stats_rand_setall<\/b>\n    ( int $iseed1\n   , int $iseed2\n   )","desc":""},"stats_skew":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0430\u0441\u0438\u043c\u043c\u0435\u0442\u0440\u0438\u044e \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435","syntax":"\n   float <b>stats_skew<\/b>\n    ( array $a\n   )","desc":""},"stats_standard_deviation":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435","syntax":"\n   float <b>stats_standard_deviation<\/b>\n    ( array $a\n   [, bool $sample = false\n  ] )","desc":""},"stats_stat_binomial_coef":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_stat_binomial_coef<\/b>\n    ( int $x\n   , int $n\n   )","desc":""},"stats_stat_correlation":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_stat_correlation<\/b>\n    ( array $arr1\n   , array $arr2\n   )","desc":""},"stats_stat_gennch":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_stat_gennch<\/b>\n    ( int $n\n   )","desc":""},"stats_stat_independent_t":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_stat_independent_t<\/b>\n    ( array $arr1\n   , array $arr2\n   )","desc":""},"stats_stat_innerproduct":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\n ","syntax":"\n   float <b>stats_stat_innerproduct<\/b>\n    ( array $arr1\n   , array $arr2\n   )","desc":""},"stats_stat_noncentral_t":{"version":"(PECL stats >= 1.0.0)","shortdesc":"Calculates any one parameter of the noncentral t distribution give values for the others.","syntax":"\n   float <b>stats_stat_noncentral_t<\/b>\n    ( float $par1\n   , float $par2\n   , float $par3\n   , int $which\n   )","desc":""},"stats_stat_paired_t":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_stat_paired_t<\/b>\n    ( array $arr1\n   , array $arr2\n   )","desc":""},"stats_stat_percentile":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_stat_percentile<\/b>\n    ( float $df\n   , float $xnonc\n   )","desc":""},"stats_stat_powersum":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u041d\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430","syntax":"\n   float <b>stats_stat_powersum<\/b>\n    ( array $arr\n   , float $power\n   )","desc":""},"stats_variance":{"version":"(PECL stats >= 1.0.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0438\u0441\u043f\u0435\u0440\u0441\u0438\u044e \u0433\u0435\u043d\u0435\u0440\u0430\u043b\u044c\u043d\u043e\u0439 \u0441\u043e\u0432\u043e\u043a\u0443\u043f\u043d\u043e\u0441\u0442\u0438","syntax":"\n   float <b>stats_variance<\/b>\n    ( array $a\n   [, bool $sample = false\n  ] )","desc":""},"stomp_connect_error":{"version":"(PECL stomp >= 0.3.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043e\u0448\u0438\u0431\u043a\u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f","syntax":"\n   string <b>stomp_connect_error<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043e\u0448\u0438\u0431\u043a\u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f.\n  "},"stomp_version":{"version":"(PECL stomp >= 0.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0432\u0435\u0440\u0441\u0438\u044e \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f Stomp","syntax":"\n   string <b>stomp_version<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0443\u044e \u0432\u0435\u0440\u0441\u0438\u044e \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f Stomp.\n  "},"str_getcsv":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\n   \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0440\u0430\u0437\u0431\u043e\u0440 CSV-\u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\n  ","syntax":"\n   array <b>str_getcsv<\/b>\n    ( string $input\n   [, string $delimiter = ','\n   [, string $enclosure = '\"'\n   [, string $escape = '\\\\'\n  ]]] )","desc":"\n   \u0414\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0440\u0430\u0437\u0431\u043e\u0440 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 CSV\n   \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u043c\u0438 \u0438\u0437 \u0441\u0442\u0440\u043e\u043a\u0438 \u043f\u043e\u043b\u044f\u043c\u0438.\n  "},"str_ireplace":{"version":"(PHP 5)","shortdesc":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u043e-\u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  str_replace()","syntax":"\n   mixed <b>str_ireplace<\/b>\n    ( mixed $search\n   , mixed $replace\n   , mixed $subject\n   [, int &$count\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u043b\u0438 \u043c\u0430\u0441\u0441\u0438\u0432, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0432\u0441\u0435\n   \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f search \u0432 subject\n   \u0437\u0430\u043c\u0435\u043d\u0435\u043d\u044b \u043d\u0430 replace (\u0431\u0435\u0437 \u0443\u0447\u0435\u0442\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432).\n   \u0415\u0441\u043b\u0438 \u043d\u0435 \u043d\u0443\u0436\u043d\u044b \u0441\u043b\u043e\u0436\u043d\u044b\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u043f\u043e\u0438\u0441\u043a\u0430\/\u0437\u0430\u043c\u0435\u043d\u044b, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u044d\u0442\u043e\u0439\n   \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u0435\u0435  preg_replace() \u0441 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u043e\u043c\n   i.\n  "},"str_pad":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\u0414\u043e\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0434\u0440\u0443\u0433\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u043e\u0439 \u0434\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0434\u043b\u0438\u043d\u044b","syntax":"\n   string <b>str_pad<\/b>\n    ( string $input\n   , int $pad_length\n   [, string $pad_string = \" \"\n   [, int $pad_type = STR_PAD_RIGHT\n  ]] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 input,\n   \u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u0443\u044e \u0441\u043b\u0435\u0432\u0430, \u0441\u043f\u0440\u0430\u0432\u0430 \u0438\u043b\u0438 \u0441 \u043e\u0431\u043e\u0438\u0445 \u0441\u0442\u043e\u0440\u043e\u043d \u0434\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0434\u043b\u0438\u043d\u044b.\n   \u0415\u0441\u043b\u0438 \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\n   pad_string \u043d\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u043d, \u0442\u043e\n   input \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d \u043f\u0440\u043e\u0431\u0435\u043b\u0430\u043c\u0438, \u0438\u043d\u0430\u0447\u0435\n   \u043e\u043d \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c\u0438 \u0438\u0437 pad_string\n   \u0434\u043e \u043d\u0443\u0436\u043d\u043e\u0439 \u0434\u043b\u0438\u043d\u044b\n  "},"str_repeat":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0443\u044e\u0441\u044f \u0441\u0442\u0440\u043e\u043a\u0443","syntax":"\n   string <b>str_repeat<\/b>\n    ( string $input\n   , int $multiplier\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 input, \u043f\u043e\u0432\u0442\u043e\u0440\u0435\u043d\u043d\u0443\u044e\n   multiplier \u0440\u0430\u0437.\n  "},"str_replace":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0417\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u0432\u0441\u0435 \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u043a\u0438 \u043f\u043e\u0438\u0441\u043a\u0430 \u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0443 \u0437\u0430\u043c\u0435\u043d\u044b","syntax":"\n   mixed <b>str_replace<\/b>\n    ( mixed $search\n   , mixed $replace\n   , mixed $subject\n   [, int &$count\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u043b\u0438 \u043c\u0430\u0441\u0441\u0438\u0432, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0432\u0441\u0435\n   \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f search \u0432 subject\n   \u0437\u0430\u043c\u0435\u043d\u0435\u043d\u044b \u043d\u0430 replace.\n  "},"str_rot13":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 ROT13 \u043d\u0430\u0434 \u0441\u0442\u0440\u043e\u043a\u043e\u0439","syntax":"\n   string <b>str_rot13<\/b>\n    ( string $str\n   )","desc":"\n   \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043d\u0430\u0434 \u0441\u0442\u0440\u043e\u043a\u043e\u0439 str \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 ROT13\n   \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443.\n  "},"str_shuffle":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u041f\u0435\u0440\u0435\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c","syntax":"\n   string <b>str_shuffle<\/b>\n    ( string $str\n   )","desc":""},"str_split":{"version":"(PHP 5)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432","syntax":"\n   array <b>str_split<\/b>\n    ( string $string\n   [, int $split_length = 1\n  ] )","desc":"\n   \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432.\n  "},"str_word_count":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u043b\u043e\u0432\u0430\u0445, \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0432 \u0441\u0442\u0440\u043e\u043a\u0443\n  ","syntax":"\n   mixed <b>str_word_count<\/b>\n    ( string $string\n   [, int $format = 0\n   [, string $charlist\n  ]] )","desc":"\n   \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043b\u043e\u0432, \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0432 \u0441\u0442\u0440\u043e\u043a\u0443\n   string. \u0415\u0441\u043b\u0438 \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\n   format \u043d\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u043d, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e,\n   \u0440\u0430\u0432\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u0441\u043b\u043e\u0432. \u0412 \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u0443\u043a\u0430\u0437\u0430\u043d \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\n   format, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043c\u0430\u0441\u0441\u0438\u0432,\n   \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f format.\n   \u041d\u0438\u0436\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u044b \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430\n   format \u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0438\u043c \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u0435\n   \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.\n  "},"strcasecmp":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0411\u0438\u043d\u0430\u0440\u043d\u043e-\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0435 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a \u0431\u0435\u0437 \u0443\u0447\u0435\u0442\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430","syntax":"\n   int <b>strcasecmp<\/b>\n    ( string $str1\n   , string $str2\n   )","desc":"\n   \u0411\u0438\u043d\u0430\u0440\u043d\u043e-\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0435 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a \u0431\u0435\u0437 \u0443\u0447\u0435\u0442\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430.\n  "},"strchr":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  strstr()","syntax":"","desc":""},"strcmp":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0411\u0438\u043d\u0430\u0440\u043d\u043e-\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0435 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a","syntax":"\n   int <b>strcmp<\/b>\n    ( string $str1\n   , string $str2\n   )","desc":""},"strcoll":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\u0421\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u043b\u043e\u043a\u0430\u043b\u0438","syntax":"\n   int <b>strcoll<\/b>\n    ( string $str1\n   , string $str2\n   )","desc":"\n   \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u044d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u0440\u0435\u0433\u0438\u0441\u0442\u0440 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u0438, \u0432\n   \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u043e\u0442  strcmp() \u043d\u0435 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u0430 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438\n   \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0434\u0432\u043e\u0438\u0447\u043d\u043e\u0439 \u0444\u043e\u0440\u043c\u0435.\n  "},"strcspn":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u043b\u0438\u043d\u0443 \u0443\u0447\u0430\u0441\u0442\u043a\u0430 \u0432 \u043d\u0430\u0447\u0430\u043b\u0435 \u0441\u0442\u0440\u043e\u043a\u0438, \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u043c\u0430\u0441\u043a\u0435","syntax":"\n   int <b>strcspn<\/b>\n    ( string $str1\n   , string $str2\n   [, int $start\n   [, int $length\n  ]] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u043b\u0438\u043d\u0443 \u0443\u0447\u0430\u0441\u0442\u043a\u0430 \u0432 \u043d\u0430\u0447\u0430\u043b\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 str1,\n   \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043d\u0438 \u043e\u0434\u043d\u043e\u0433\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u0438\u0437 \u0441\u0442\u0440\u043e\u043a\u0438\n   str2.\n  "},"stream_bucket_append":{"version":"(PHP 5)","shortdesc":"\n   \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0431\u0430\u043a\u0435\u0442\u0430 \u0432 \u0446\u0435\u043f\u043e\u0447\u043a\u0443\n  ","syntax":"\n   void <b>stream_bucket_append<\/b>\n    ( resource $brigade\n   , resource $bucket\n   )","desc":""},"stream_bucket_make_writeable":{"version":"(PHP 5)","shortdesc":"\n   \u0412\u0435\u0440\u043d\u0443\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u0431\u0430\u043a\u0435\u0442 \u0432 \u0446\u0435\u043f\u043e\u0447\u043a\u0435 \u0434\u043b\u044f \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043d\u0438\u043c\n  ","syntax":"\n   object <b>stream_bucket_make_writeable<\/b>\n    ( resource $brigade\n   )","desc":""},"stream_bucket_new":{"version":"(PHP 5)","shortdesc":"\n   \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0431\u0430\u043a\u0435\u0442 \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u043f\u043e\u0442\u043e\u043a\u043e\u043c\n  ","syntax":"\n   object <b>stream_bucket_new<\/b>\n    ( resource $stream\n   , string $buffer\n   )","desc":""},"stream_bucket_prepend":{"version":"(PHP 5)","shortdesc":"\n   \u041f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0438\u0442\u044c \u0431\u0430\u043a\u0435\u0442 \u0432 \u043d\u0430\u0447\u0430\u043b\u043e \u0446\u0435\u043f\u043e\u0447\u043a\u0438\n  ","syntax":"\n   void <b>stream_bucket_prepend<\/b>\n    ( resource $brigade\n   , resource $bucket\n   )","desc":"\n    \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0431\u0430\u043a\u0435\u0442\u0430 \u0432 \u0446\u0435\u043f\u043e\u0447\u043a\u0443 \u0431\u0430\u043a\u0435\u0442\u043e\u0432.\n    \u041e\u0431\u044b\u0447\u043d\u043e \u043e\u043d\u0430 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0438\u0437  php_user_filter::filter().\n  "},"stream_context_create":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u043f\u043e\u0442\u043e\u043a\u0430","syntax":"\n   resource <b>stream_context_create<\/b>\n    ([ array $options\n   [, array $params\n  ]] )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u043f\u043e\u0442\u043e\u043a\u0430 \u0441 \u043e\u043f\u0446\u0438\u044f\u043c\u0438, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c\u0438 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435\n   options.\n  "},"stream_context_get_default":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u043f\u043e\u0442\u043e\u043a\u0430 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e","syntax":"\n   resource <b>stream_context_get_default<\/b>\n    ([ array $options\n  ] )","desc":""},"stream_context_get_options":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0434\u043b\u044f \u043f\u043e\u0442\u043e\u043a\u0430\/\u043e\u0431\u0451\u0440\u0442\u043a\u0438\/\u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430","syntax":"\n   array <b>stream_context_get_options<\/b>\n    ( resource $stream_or_context\n   )","desc":""},"stream_context_get_params":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u0418\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0438\u0437 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430","syntax":"\n   array <b>stream_context_get_params<\/b>\n    ( resource $stream_or_context\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445 \u0438 \u043e\u043f\u0446\u0438\u044f\u0445 \u0438\u0437 \u043f\u043e\u0442\u043e\u043a\u0430 \u0438\u043b\u0438 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430.\n  "},"stream_context_set_default":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u043f\u043e\u0442\u043e\u043a\u043e\u0432 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e","syntax":"\n   resource <b>stream_context_set_default<\/b>\n    ( array $options\n   )","desc":""},"stream_context_set_option":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043e\u043f\u0446\u0438\u044e \u0434\u043b\u044f \u043f\u043e\u0442\u043e\u043a\u0430\/\u043e\u0431\u0451\u0440\u0442\u043a\u0438\/\u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430","syntax":"\n   bool <b>stream_context_set_option<\/b>\n    ( resource $stream_or_context\n   , string $wrapper\n   , string $option\n   , mixed $value\n   )\n\n    bool <b>stream_context_set_option<\/b>\n     ( resource $stream_or_context\n    , array $options\n    )\n","desc":""},"stream_context_set_params":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0434\u043b\u044f \u043f\u043e\u0442\u043e\u043a\u0430\/\u043e\u0431\u0435\u0440\u0442\u043a\u0438\/\u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430","syntax":"\n   bool <b>stream_context_set_params<\/b>\n    ( resource $stream_or_context\n   , array $params\n   )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430.\n  "},"stream_copy_to_stream":{"version":"(PHP 5)","shortdesc":"\u041a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u043e\u0434\u043d\u043e\u0433\u043e \u043f\u043e\u0442\u043e\u043a\u0430 \u0432 \u0434\u0440\u0443\u0433\u043e\u0439","syntax":"\n   int <b>stream_copy_to_stream<\/b>\n    ( resource $source\n   , resource $dest\n   [, int $maxlength = -1\n   [, int $offset = 0\n  ]] )","desc":"\n   \u0414\u0435\u043b\u0430\u0435\u0442 \u043a\u043e\u043f\u0438\u044e \u0434\u043e maxlength \u0431\u0430\u0439\u0442\n   \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 (\u0438\u043b\u0438 \u043e\u0442 \u043f\u043e\u0437\u0438\u0446\u0438\u0438\n   offset, \u0435\u0441\u043b\u0438 \u0443\u043a\u0430\u0437\u0430\u043d\u0430) \u043f\u043e\u0442\u043e\u043a\u0430 \n   source \u0432 \u043f\u043e\u0442\u043e\u043a dest. \u0415\u0441\u043b\u0438\n   maxlength \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d, \u0431\u0443\u0434\u0435\u0442 \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u043e \u0432\u0441\u0451 \n   \u043e\u0441\u0442\u0430\u0432\u0448\u0435\u0435\u0441\u044f \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0438\u0437 source.\n  "},"stream_encoding":{"version":"(\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0442\u043e\u043b\u044c\u043a\u043e \u0432 SVN)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443 \u0434\u043b\u044f \u043f\u043e\u0442\u043e\u043a\u0430","syntax":"\n   bool <b>stream_encoding<\/b>\n    ( resource $stream\n   [, string $encoding\n  ] )","desc":""},"stream_filter_append":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u041f\u0440\u0438\u043a\u0440\u0435\u043f\u043b\u044f\u0435\u0442 \u0444\u0438\u043b\u044c\u0442\u0440 \u043a \u043f\u043e\u0442\u043e\u043a\u0443","syntax":"\n   resource <b>stream_filter_append<\/b>\n    ( resource $stream\n   , string $filtername\n   [, int $read_write\n   [, mixed $params\n  ]] )","desc":"\n   \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 filtername \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432,\n   \u043f\u0440\u0438\u043a\u0440\u0435\u043f\u043b\u0451\u043d\u043d\u044b\u0445 \u043a stream.  \n  "},"stream_filter_prepend":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u041f\u0440\u0438\u043a\u0440\u0435\u043f\u043b\u044f\u0435\u0442 \u0444\u0438\u043b\u044c\u0442\u0440 \u043a \u043f\u043e\u0442\u043e\u043a\u0443","syntax":"\n   resource <b>stream_filter_prepend<\/b>\n    ( resource $stream\n   , string $filtername\n   [, int $read_write\n   [, mixed $params\n  ]] )","desc":"\n   \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0444\u0438\u043b\u044c\u0442\u0440 filtername \u043a \u0441\u043f\u0438\u0441\u043a\u0443 \u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432,\n   \u043f\u0440\u0438\u043a\u0440\u0435\u043f\u043b\u0451\u043d\u043d\u044b\u0445 \u043a \u043f\u043e\u0442\u043e\u043a\u0443 stream.\n  "},"stream_filter_register":{"version":"(PHP 5)","shortdesc":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u043f\u043e\u0442\u043e\u043a\u043e\u0432\u044b\u0439 \u0444\u0438\u043b\u044c\u0442\u0440, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u044b\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c","syntax":"\n   bool <b>stream_filter_register<\/b>\n    ( string $filtername\n   , string $classname\n   )","desc":"\n    stream_filter_register() \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u0430\u043c \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c\n   \u0432\u0430\u0448 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 \u0444\u0438\u043b\u044c\u0442\u0440 \u043d\u0430 \u043b\u044e\u0431\u043e\u043c \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u043c \u043f\u043e\u0442\u043e\u043a\u0435, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u043e\u043c \u0441\u043e \u0432\u0441\u0435\u043c\u0438 \u0434\u0440\u0443\u0433\u0438\u043c\u0438\n   \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b (\u0442\u0430\u043a\u0438\u043c\u0438 \u043a\u0430\u043a  fopen(),\n    fread() \u0438 \u0442. \u0434.).\n  "},"stream_filter_remove":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0444\u0438\u043b\u044c\u0442\u0440 \u0438\u0437 \u043f\u043e\u0442\u043e\u043a\u0430","syntax":"\n   bool <b>stream_filter_remove<\/b>\n    ( resource $stream_filter\n   )","desc":"\n   \u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043f\u043e\u0442\u043e\u043a\u043e\u0432\u044b\u0439 \u0444\u0438\u043b\u044c\u0442\u0440, \u0440\u0430\u043d\u0435\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u043a \u043f\u043e\u0442\u043e\u043a\u0443 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    stream_filter_prepend() \u0438\u043b\u0438\n    stream_filter_append(). \u041b\u044e\u0431\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435, \u043e\u0441\u0442\u0430\u0432\u0448\u0438\u0435\u0441\u044f \u0432\u043e \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u043c\n   \u0431\u0443\u0444\u0435\u0440\u0435 \u0444\u0438\u043b\u044c\u0442\u0440\u0430, \u0431\u0443\u0434\u0443\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u044b \u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0438\u043b\u044c\u0442\u0440 \u0434\u043e \u0435\u0433\u043e \n   \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f.\n  "},"stream_get_contents":{"version":"(PHP 5)","shortdesc":"\u0427\u0438\u0442\u0430\u0435\u0442 \u043e\u0441\u0442\u0430\u0432\u0448\u0443\u044e\u0441\u044f \u0447\u0430\u0441\u0442\u044c \u043f\u043e\u0442\u043e\u043a\u0430 \u0432 \u0441\u0442\u0440\u043e\u043a\u0443","syntax":"\n   string <b>stream_get_contents<\/b>\n    ( resource $handle\n   [, int $maxlength = -1\n   [, int $offset = -1\n  ]] )","desc":" \n   \u041f\u043e\u0445\u043e\u0436\u0430 \u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044e   file_get_contents(), \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\n    stream_get_contents() \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0441 \u0443\u0436\u0435 \u043e\u0442\u043a\u0440\u044b\u0442\u044b\u043c \n   \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u043c \u043f\u043e\u0442\u043e\u043a\u0430 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0441\u0442\u0430\u0432\u0448\u0443\u044e\u0441\u044f \u0447\u0430\u0441\u0442\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0433\u043e \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u043c \u0434\u043e\n   maxlength \u0431\u0430\u0439\u0442 \u0438 \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u044f\n   offset.\n  "},"stream_get_filters":{"version":"(PHP 5)","shortdesc":"\u0418\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432","syntax":"\n   array <b>stream_get_filters<\/b>\n    ( void\n   )","desc":""},"stream_get_line":{"version":"(PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u043f\u043e\u0442\u043e\u043a\u043e\u0432\u043e\u0433\u043e \u0440\u0435\u0441\u0443\u0440\u0441\u0430 \u0434\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044f","syntax":"\n   string <b>stream_get_line<\/b>\n    ( resource $handle\n   , int $length\n   [, string $ending\n  ] )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0430.\n  "},"stream_get_meta_data":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0418\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u0442 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a\/\u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u043f\u043e\u0442\u043e\u043a\u043e\u0432\/\u0444\u0430\u0439\u043b\u043e\u0432\u044b\u0445 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u0439","syntax":"\n   array <b>stream_get_meta_data<\/b>\n    ( resource $stream\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u043c \u043f\u043e\u0442\u043e\u043a\u0435 stream.\n  "},"stream_get_transports":{"version":"(PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043e\u0432 \u0441\u043e\u043a\u0435\u0442\u0430","syntax":"\n   array <b>stream_get_transports<\/b>\n    ( void\n   )","desc":""},"stream_get_wrappers":{"version":"(PHP 5)","shortdesc":"\u0418\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u0442\u043e\u043a\u043e\u0432","syntax":"\n   array <b>stream_get_wrappers<\/b>\n    ( void\n   )","desc":"\n   \u0418\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u0442\u043e\u043a\u043e\u0432, \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043d\u0430 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u0435.\n  "},"stream_is_local":{"version":"(PHP 5 >= 5.2.4)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043f\u043e\u0442\u043e\u043a \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u043c \u043f\u043e\u0442\u043e\u043a\u043e\u043c","syntax":"\n   bool <b>stream_is_local<\/b>\n    ( mixed $stream_or_url\n   )","desc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043f\u043e\u0442\u043e\u043a \u0438\u043b\u0438 URL \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u043c \u0438\u043b\u0438 \u043d\u0435\u0442.\n  "},"stream_notification_callback":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"Callback-\u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 notification","syntax":"\n   void <b>stream_notification_callback<\/b>\n    ( int $notification_code\n   , int $severity\n   , string $message\n   , int $message_code\n   , int $bytes_transferred\n   , int $bytes_max\n   )","desc":"\n   Callback-\u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0442\u0438\u043f\u0430 callable, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u0430\u044f\n   \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 notification,\n   \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c\u0430\u044f \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0441\u043e\u0431\u044b\u0442\u0438\u044f.\n  "},"stream_register_wrapper":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  stream_wrapper_register()","syntax":"","desc":""},"stream_resolve_include_path":{"version":"(PHP 5 >= 5.3.2)","shortdesc":"\n   \u0421\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u043d\u043e\u0435 \u0438\u043c\u044f \u0444\u0430\u0439\u043b\u0430, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043f\u0443\u0442\u0438 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f\n  ","syntax":"\n   string <b>stream_resolve_include_path<\/b>\n    ( string $filename\n   \n   )","desc":"\n   \u0421\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u043d\u043e\u0435 \u0438\u043c\u044f \u0444\u0430\u0439\u043b\u0430 \u0438\u0437 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 filename, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043f\u0443\u0442\u0438 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f\n   \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0442\u0435\u043c\u0438 \u0436\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u0430\u043c\u0438, \u0447\u0442\u043e \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \n    fopen()\/ include.\n  "},"stream_select":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u044d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u0433\u043e \u0432\u044b\u0437\u043e\u0432\u0430 select() \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u0430\u0441\u0441\u0438\u0432\u0430\u0445\n   \u043f\u043e\u0442\u043e\u043a\u043e\u0432 \u0441 \u0442\u0430\u0439\u043c\u0430\u0443\u0442\u043e\u043c, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 tv_sec \u0438 tv_usec ","syntax":"\n   int <b>stream_select<\/b>\n    ( array &$read\n   , array &$write\n   , array &$except\n   , int $tv_sec\n   [, int $tv_usec = 0\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f   stream_select() \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432\u044b \u043f\u043e\u0442\u043e\u043a\u043e\u0432 \u0438 \u0436\u0434\u0451\u0442\n   \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0438\u0445 \u0441\u0442\u0430\u0442\u0443\u0441\u0430. \u0415\u0451 \u0440\u0430\u0431\u043e\u0442\u0430 \u044d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442\u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    socket_select(), \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u043e\u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0441 \u043f\u043e\u0442\u043e\u043a\u0430\u043c\u0438.\n  "},"stream_set_blocking":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0431\u043b\u043e\u043a\u0438\u0440\u0443\u044e\u0449\u0438\u0439\/\u043d\u0435\u0431\u043b\u043e\u043a\u0438\u0440\u0443\u044e\u0449\u0438\u0439 \u0440\u0435\u0436\u0438\u043c \u043d\u0430 \u043f\u043e\u0442\u043e\u043a\u0435","syntax":"\n   bool <b>stream_set_blocking<\/b>\n    ( resource $stream\n   , int $mode\n   )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0431\u043b\u043e\u043a\u0438\u0440\u0443\u044e\u0449\u0438\u0439 \u0438\u043b\u0438 \u043d\u0435\u0431\u043b\u043e\u043a\u0438\u0440\u0443\u044e\u0449\u0438\u0439 \u0440\u0435\u0436\u0438\u043c \u043d\u0430 \u043f\u043e\u0442\u043e\u043a\u0435 stream.\n  "},"stream_set_chunk_size":{"version":"(PHP 5 >= 5.4.0)","shortdesc":"\n   \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u0442\u043e\u043a\u0430\n  ","syntax":"\n   int <b>stream_set_chunk_size<\/b>\n    ( resource $fp\n   , int $chunk_size\n   )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0440\u0430\u0437\u043c\u0435\u0440 \u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442\u0430 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u043c\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u0442\u043e\u043a\u0430.\n  "},"stream_set_read_buffer":{"version":"(PHP 5 >= 5.3.3)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0431\u0443\u0444\u0435\u0440\u0438\u0437\u0430\u0446\u0438\u044e \u0447\u0442\u0435\u043d\u0438\u044f \u0444\u0430\u0439\u043b\u0430 \u043d\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c \u043f\u043e\u0442\u043e\u043a\u0435","syntax":"\n   int <b>stream_set_read_buffer<\/b>\n    ( resource $stream\n   , int $buffer\n   )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0431\u0443\u0444\u0435\u0440 \u0447\u0442\u0435\u043d\u0438\u044f. \u042d\u0442\u043e \u044d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  stream_set_write_buffer(),\n   \u043d\u043e \u0434\u043b\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 \u0447\u0442\u0435\u043d\u0438\u044f.\n  "},"stream_set_timeout":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0442\u0430\u0439\u043c-\u0430\u0443\u0442\u0430 \u043d\u0430 \u043f\u043e\u0442\u043e\u043a\u0435","syntax":"\n   bool <b>stream_set_timeout<\/b>\n    ( resource $stream\n   , int $seconds\n   [, int $microseconds = 0\n  ] )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0442\u0430\u0439\u043c-\u0430\u0443\u0442\u0430 \u043d\u0430 \u043f\u043e\u0442\u043e\u043a\u0435 stream,\n   \u0440\u0430\u0432\u043d\u043e\u0435 \u0441\u0443\u043c\u043c\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 seconds \u0438\n   microseconds. \n  "},"stream_set_write_buffer":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0431\u0443\u0444\u0435\u0440\u0438\u0437\u0430\u0446\u0438\u044e \u0444\u0430\u0439\u043b\u0430 \u043f\u0440\u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u043e\u0442\u043e\u043a","syntax":"\n   int <b>stream_set_write_buffer<\/b>\n    ( resource $stream\n   , int $buffer\n   )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0431\u0443\u0444\u0435\u0440\u0438\u0437\u0430\u0446\u0438\u044e \u0434\u043b\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u043f\u043e\u0442\u043e\u043a\u0435 stream\n   \u0432 \u0447\u0438\u0441\u043b\u043e buffer \u0431\u0430\u0439\u0442.\n  "},"stream_socket_accept":{"version":"(PHP 5)","shortdesc":"\u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u043d\u0430 \u0441\u043e\u043a\u0435\u0442\u0435, \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u043c c \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0438  stream_socket_server()","syntax":"\n   resource <b>stream_socket_accept<\/b>\n    ( resource $server_socket\n   [, float $timeout = ini_get(\"default_socket_timeout\")\n   [, string &$peername\n  ]] )","desc":"\n   \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u043d\u0430 \u0441\u043e\u043a\u0435\u0442\u0435, \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u043c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    stream_socket_server().\n  "},"stream_socket_client":{"version":"(PHP 5)","shortdesc":"\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442-\u0441\u043e\u043a\u0435\u0442\u043e\u043c \u0438\u043b\u0438 \u0441 \u0434\u043e\u043c\u0435\u043d\u043d\u044b\u043c \u0441\u043e\u043a\u0435\u0442\u043e\u043c Unix","syntax":"\n   resource <b>stream_socket_client<\/b>\n    ( string $remote_socket\n   [, int &$errno\n   [, string &$errstr\n   [, float $timeout = ini_get(\"default_socket_timeout\")\n   [, int $flags = STREAM_CLIENT_CONNECT\n   [, resource $context\n  ]]]]] )","desc":"\n   \u041d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u043f\u043e\u0442\u043e\u043a\u043e\u0432\u043e\u0435 \u0438\u043b\u0438 \u0434\u0430\u0442\u0430\u0433\u0440\u0430\u043c\u043c\u043d\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0443\u0434\u0430\u043b\u0451\u043d\u043d\u044b\u043c \u0441\u043e\u043a\u0435\u0442\u043e\u043c, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c \n   \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c remote_socket. \u0422\u0438\u043f \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043c\u043e\u0433\u043e \u0441\u043e\u043a\u0435\u0442\u0430\n   \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u043e \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u0443, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0433\u043e \u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f URL:\n   transport:\/\/target. \u0414\u043b\u044f \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442-\u0441\u043e\u043a\u0435\u0442\u043e\u0432,\n   (AF_INET) \u0442\u0430\u043a\u0438\u0445, \u043a\u0430\u043a TCP \u0438 UDP, \u0447\u0430\u0441\u0442\u044c target \n   \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 remote_socket \u0434\u043e\u043b\u0436\u043d\u0430 \u0441\u043e\u0441\u0442\u043e\u044f\u0442\u044c \u0438\u0437\n   \u0438\u043c\u0435\u043d\u0438 \u0445\u043e\u0441\u0442\u0430 \u0438\u043b\u0438  IP-\u0430\u0434\u0440\u0435\u0441\u0430, \u0437\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0434\u0432\u043e\u0435\u0442\u043e\u0447\u0438\u0435 \u0438 \u043d\u043e\u043c\u0435\u0440 \u043f\u043e\u0440\u0442\u0430. \u0414\u043b\u044f \u0434\u043e\u043c\u0435\u043d\u043d\u044b\u0445\n   \u0441\u043e\u043a\u0435\u0442\u043e\u0432 Unix, \u0447\u0430\u0441\u0442\u044c target \u0434\u043e\u043b\u0436\u043d\u0430 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043d\u0430\n   \u0444\u0430\u0439\u043b \u0441\u043e\u043a\u0435\u0442\u0430 \u0432 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u0435.\n  "},"stream_socket_enable_crypto":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0438\u043b\u0438 \u043e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0430 \u0443\u0436\u0435 \u043f\u043e\u0434\u0441\u043e\u0435\u0434\u0438\u043d\u0451\u043d\u043d\u043e\u043c \u0441\u043e\u043a\u0435\u0442\u0435","syntax":"\n   mixed <b>stream_socket_enable_crypto<\/b>\n    ( resource $stream\n   , bool $enable\n   [, int $crypto_type\n   [, resource $session_stream\n  ]] )","desc":""},"stream_socket_get_name":{"version":"(PHP 5)","shortdesc":"\u0418\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0438\u043b\u0438 \u0443\u0434\u0430\u043b\u0451\u043d\u043d\u043e\u0433\u043e \u0441\u043e\u043a\u0435\u0442\u0430","syntax":"\n   string <b>stream_socket_get_name<\/b>\n    ( resource $handle\n   , bool $want_peer\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0435 \u0438\u043b\u0438 \u0443\u0434\u0430\u043b\u0451\u043d\u043d\u043e\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0441\u043e\u043a\u0435\u0442\u043d\u043e\u0433\u043e \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f.\n  "},"stream_socket_pair":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\n   \u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u043f\u0430\u0440\u0443 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0445 \u043d\u0435\u0440\u0430\u0437\u043b\u0438\u0447\u0438\u043c\u044b\u0445 \u043f\u043e\u0442\u043e\u043a\u043e\u0432\u044b\u0445 \u0441\u043e\u043a\u0435\u0442\u043e\u0432\n  ","syntax":"\n   array <b>stream_socket_pair<\/b>\n    ( int $domain\n   , int $type\n   , int $protocol\n   )","desc":"\n    stream_socket_pair() \u0441\u043e\u0437\u0434\u0430\u0451\u0442 \u043f\u0430\u0440\u0443 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0445\n   \u043d\u0435\u0440\u0430\u0437\u043b\u0438\u0447\u0438\u043c\u044b\u0445 \u043f\u043e\u0442\u043e\u043a\u043e\u0432\u044b\u0445 \u0441\u043e\u043a\u0435\u0442\u043e\u0432. \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u044b\u0447\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0432 IPC\n   (\u043c\u0435\u0436\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043d\u043e\u043c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0438).     \n  "},"stream_socket_recvfrom":{"version":"(PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0441\u043e\u043a\u0435\u0442\u0430, \u043f\u043e\u0434\u0441\u043e\u0435\u0434\u0438\u043d\u0451\u043d\u043d\u043e\u0433\u043e \u0438\u043b\u0438 \u043d\u0435\u0442 ","syntax":"\n   string <b>stream_socket_recvfrom<\/b>\n    ( resource $socket\n   , int $length\n   [, int $flags = 0\n   [, string &$address\n  ]] )","desc":"\n    stream_socket_recvfrom() \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442\n   \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0443\u0434\u0430\u043b\u0451\u043d\u043d\u043e\u0433\u043e \u0441\u043e\u043a\u0435\u0442\u0430 \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u043c \u0434\u043e length \u0431\u0430\u0439\u0442.\n  "},"stream_socket_sendto":{"version":"(PHP 5)","shortdesc":"\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0432 \u0441\u043e\u043a\u0435\u0442, \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e \u043e\u0442 \u0442\u043e\u0433\u043e, \u043f\u043e\u0434\u0441\u043e\u0435\u0434\u0438\u043d\u0451\u043d \u043e\u043d \u0438\u043b\u0438 \u043d\u0435\u0442 ","syntax":"\n   int <b>stream_socket_sendto<\/b>\n    ( resource $socket\n   , string $data\n   [, int $flags = 0\n   [, string $address\n  ]] )","desc":"\n   \u041e\u0442\u043f\u0440\u0430\u043b\u0432\u044f\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 data \u0447\u0435\u0440\u0435\u0437 \u0441\u043e\u043a\u0435\u0442\n   socket.  \n  "},"stream_socket_server":{"version":"(PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442-\u0441\u043e\u043a\u0435\u0442 \u0438\u043b\u0438 \u0434\u043e\u043c\u0435\u043d\u043d\u044b\u0439 \u0441\u043e\u043a\u0435\u0442 Unix","syntax":"\n   resource <b>stream_socket_server<\/b>\n    ( string $local_socket\n   [, int &$errno\n   [, string &$errstr\n   [, int $flags = STREAM_SERVER_BIND | STREAM_SERVER_LISTEN\n   [, resource $context\n  ]]]] )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u043f\u043e\u0442\u043e\u043a\u043e\u0432\u044b\u0439 \u0438\u043b\u0438 \u0434\u0430\u0442\u0430\u0433\u0440\u0430\u043c\u043c\u043d\u044b\u0439 \u0441\u043e\u043a\u0435\u0442 \u043d\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\n   local_socket.    \n  "},"stream_socket_shutdown":{"version":"(PHP 5 >= 5.2.1)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u043d\u043e\u0434\u0443\u043f\u043b\u0435\u043a\u0441\u043d\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435","syntax":"\n   bool <b>stream_socket_shutdown<\/b>\n    ( resource $stream\n   , int $how\n   )","desc":"\n   \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 (\u0447\u0430\u0441\u0442\u0438\u0447\u043d\u043e \u0438\u043b\u0438 \u043d\u0435\u0442) \u043f\u043e\u043b\u043d\u043e\u0434\u0443\u043f\u043b\u0435\u043a\u0441\u043d\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435.\n  "},"stream_supports_lock":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u043b\u0438 \u043f\u043e\u0442\u043e\u043a \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0443","syntax":"\n   bool <b>stream_supports_lock<\/b>\n    ( resource $stream\n   )","desc":"\n   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u043b\u0438 \u043f\u043e\u0442\u043e\u043a \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0443 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c\n    flock().\n  "},"stream_wrapper_register":{"version":"(PHP 4 >= 4.3.2, PHP 5)","shortdesc":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u043e\u0431\u0451\u0440\u0442\u043a\u0443  URL, \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0432 \u0432\u0438\u0434\u0435 PHP-\u043a\u043b\u0430\u0441\u0441\u0430","syntax":"\n   bool <b>stream_wrapper_register<\/b>\n    ( string $protocol\n   , string $classname\n   [, int $flags  = 0\n  ] )","desc":"\n   \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u0430\u043c \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u0430\u0448\u0438 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u043e\u0432 \u0438 \u043f\u043e\u0442\u043e\u043a\u043e\u0432 \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f\n   \u0441\u043e \u0432\u0441\u0435\u043c\u0438 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b (\u0442\u0430\u043a\u0438\u043c\u0438, \u043a\u0430\u043a   fopen(),\n    fread() \u0438 \u0442. \u0434.).\n  "},"stream_wrapper_restore":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\u0412\u043e\u0441\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0440\u0430\u043d\u0435\u0435 \u0440\u0430\u0437\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0443\u044e \u043e\u0431\u0451\u0440\u0442\u043a\u0443","syntax":"\n   bool <b>stream_wrapper_restore<\/b>\n    ( string $protocol\n   )","desc":"\n   \u0412\u043e\u0441\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0443\u044e \u043e\u0431\u0451\u0440\u0442\u043a\u0443, \u0440\u0430\u043d\u0435\u0435 \u0440\u0430\u0437\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438\n    stream_wrapper_unregister().\n  "},"stream_wrapper_unregister":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\u041e\u0442\u043c\u0435\u043d\u044f\u0435\u0442 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e \u043e\u0431\u0435\u0440\u0442\u043a\u0438 URL","syntax":"\n   bool <b>stream_wrapper_unregister<\/b>\n    ( string $protocol\n   )","desc":"\n   \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u0430\u043c \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0443\u0436\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u0443\u044e \u043e\u0431\u0451\u0440\u0442\u043a\u0443 \u043f\u043e\u0442\u043e\u043a\u0430. \u041a\u0430\u043a \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0431\u0451\u0440\u0442\u043a\u0430 \n   \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0430, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0435\u0451 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0439 \u043e\u0431\u0451\u0440\u0442\u043a\u043e\u0439, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f\n    stream_wrapper_register() \u0438\u043b\u0438 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0435\u0451 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f\n    stream_wrapper_restore().\n  "},"strftime":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0424\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u0443\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0430\u0442\u0443\/\u0432\u0440\u0435\u043c\u044f \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u0442\u0435\u043a\u0443\u0449\u0438\u0445 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u043b\u043e\u043a\u0430\u043b\u0438","syntax":"\n   string <b>strftime<\/b>\n    ( string $format\n   [, int $timestamp = time()\n  ] )","desc":"\n   \u0424\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u0443\u0435\u0442 \u0434\u0430\u0442\u0443\/\u0432\u0440\u0435\u043c\u044f \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u0442\u0435\u043a\u0443\u0449\u0438\u0445 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u043b\u043e\u043a\u0430\u043b\u0438. \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u044f\n   \u043c\u0435\u0441\u044f\u0446\u0435\u0432, \u0434\u043d\u0435\u0439 \u043d\u0435\u0434\u0435\u043b\u0438 \u0438 \u0434\u0440\u0443\u0433\u0438\u0445 \u044f\u0437\u044b\u043a\u043e-\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u0445 \u0441\u0442\u0440\u043e\u043a \u0431\u0443\u0434\u0443\u0442 \u0432\u0437\u044f\u0442\u044b\n   \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c\u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u043c\u0438 \u043b\u043e\u043a\u0430\u043b\u0438, \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u043e\u0439 \u0441\n   \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0438  setlocale().\n  "},"strip_tags":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 HTML \u0438 PHP-\u0442\u0435\u0433\u0438 \u0438\u0437 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   string <b>strip_tags<\/b>\n    ( string $str\n   [, string $allowable_tags\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u044b\u0442\u0430\u0435\u0442\u0441\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0438\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443 str, \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u043e\u0439\n   \u0443\u0434\u0430\u043b\u0435\u043d\u044b \u0432\u0441\u0435 NUL-\u0431\u0430\u0439\u0442\u044b, HTML \u0438 PHP \u0442\u0435\u0433\u0438. \u0414\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0442\u0435\u0433\u043e\u0432 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0442\u043e\u0442 \u0436\u0435 \u0430\u0432\u0442\u043e\u043c\u0430\u0442,\n   \u0447\u0442\u043e \u0438 \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  fgetss().\n  "},"stripcslashes":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u044d\u043a\u0440\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u043d\u043e\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439  addcslashes()","syntax":"\n   string <b>stripcslashes<\/b>\n    ( string $str\n   )","desc":"\n   \u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u044d\u043a\u0440\u0430\u043d\u0438\u0440\u0443\u044e\u0449\u0438\u0435 \u043e\u0431\u0440\u0430\u0442\u043d\u044b\u0435 \u0441\u043b\u044d\u0448\u0438. \u0420\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u0435\u0442 \u044d\u043a\u0440\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0432 \u0441\u0442\u0438\u043b\u0435\n   C (\\n, \\r ..., \u0432\u043e\u0441\u044c\u043c\u0435\u0440\u0438\u0447\u043d\u043e\u0435\n   \u0438 \u0448\u0435\u0441\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u0438\u0440\u0438\u0447\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435).\n  "},"stripos":{"version":"(PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438 \u0431\u0435\u0437 \u0443\u0447\u0435\u0442\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430","syntax":"\n   int <b>stripos<\/b>\n    ( string $haystack\n   , string $needle\n   [, int $offset = 0\n  ] )","desc":"\n   \u0418\u0449\u0435\u0442 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438\n   needle \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 haystack.\n  "},"stripslashes":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u044d\u043a\u0440\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432","syntax":"\n   string <b>stripslashes<\/b>\n    ( string $str\n   )","desc":"\n   \u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u044d\u043a\u0440\u0430\u043d\u0438\u0440\u0443\u044e\u0449\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b.\n  "},"stristr":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u043e-\u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  strstr()","syntax":"\n   string <b>stristr<\/b>\n    ( string $haystack\n   , mixed $needle\n   [, bool $before_needle = false\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0441\u044e \u0441\u0442\u0440\u043e\u043a\u0443 haystack \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441\n   \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f needle \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e.\n  "},"strlen":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u043b\u0438\u043d\u0443 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   int <b>strlen<\/b>\n    ( string $string\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u043b\u0438\u043d\u0443 \u0441\u0442\u0440\u043e\u043a\u0438 string.\n  "},"strnatcasecmp":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a \u0431\u0435\u0437 \u0443\u0447\u0435\u0442\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \"natural order\"","syntax":"\n   int <b>strnatcasecmp<\/b>\n    ( string $str1\n   , string $str2\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f, \u0443\u043f\u043e\u0440\u044f\u0434\u043e\u0447\u0438\u0432\u0430\u044e\u0449\u0438\u0439\n   \u0430\u043b\u0444\u0430\u0432\u0438\u0442\u043d\u043e-\u0446\u0438\u0444\u0440\u043e\u0432\u044b\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u043f\u043e\u0434\u043e\u0431\u043d\u043e \u0442\u043e\u043c\u0443, \u043a\u0430\u043a \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u043b \u0431\u044b\n   \u0447\u0435\u043b\u043e\u0432\u0435\u043a. \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u0434\u043e\u0431\u043d\u0430  strnatcmp(), \u0437\u0430\n   \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0431\u0435\u0437 \u0443\u0447\u0435\u0442\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\n   \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432. \u0414\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0441\u043c. \u00bb\u00a0Natural Order String Comparison\n  "},"strnatcmp":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \"natural order\"","syntax":"\n   int <b>strnatcmp<\/b>\n    ( string $str1\n   , string $str2\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f, \u0443\u043f\u043e\u0440\u044f\u0434\u043e\u0447\u0438\u0432\u0430\u044e\u0449\u0438\u0439\n   \u0430\u043b\u0444\u0430\u0432\u0438\u0442\u043d\u043e-\u0446\u0438\u0444\u0440\u043e\u0432\u044b\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u043f\u043e\u0434\u043e\u0431\u043d\u043e \u0442\u043e\u043c\u0443, \u043a\u0430\u043a \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u043b \u0431\u044b\n   \u0447\u0435\u043b\u043e\u0432\u0435\u043a, \u0442\u0430\u043a\u043e\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \"natural ordering\".\n   \u0421\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430.\n  "},"strncasecmp":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u0411\u0438\u043d\u0430\u0440\u043d\u043e-\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0435 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0432\u044b\u0445 n \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0441\u0442\u0440\u043e\u043a \u0431\u0435\u0437 \u0443\u0447\u0435\u0442\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430","syntax":"\n   int <b>strncasecmp<\/b>\n    ( string $str1\n   , string $str2\n   , int $len\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u0434\u043e\u0431\u043d\u0430   strcasecmp(), \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c\n   \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 \u043e\u0431\u043e\u0438\u0445\n   \u0441\u0442\u0440\u043e\u043a\u0430\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u0443\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0432 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0438.\n  "},"strncmp":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0411\u0438\u043d\u0430\u0440\u043d\u043e-\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0435 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0432\u044b\u0445 n \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0441\u0442\u0440\u043e\u043a","syntax":"\n   int <b>strncmp<\/b>\n    ( string $str1\n   , string $str2\n   , int $len\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u0434\u043e\u0431\u043d\u0430   strcmp(), \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c\n   \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 \u043e\u0431\u043e\u0438\u0445\n   \u0441\u0442\u0440\u043e\u043a\u0430\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u0443\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0432 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0438.\n  "},"strpbrk":{"version":"(PHP 5)","shortdesc":"\u0418\u0449\u0435\u0442 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u043b\u044e\u0431\u043e\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u0438\u0437 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043d\u0430\u0431\u043e\u0440\u0430","syntax":"\n   string <b>strpbrk<\/b>\n    ( string $haystack\n   , string $char_list\n   )","desc":"\n    strpbrk() \u0438\u0449\u0435\u0442 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 haystack\n   \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0438\u0437 \u043d\u0430\u0431\u043e\u0440\u0430 char_list.\n  "},"strpos":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   int <b>strpos<\/b>\n    ( string $haystack\n   , mixed $needle\n   [, int $offset = 0\n  ] )","desc":"\n   \u0418\u0449\u0435\u0442 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438\n   needle \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 haystack.\n  "},"strptime":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\n     \u0420\u0430\u0437\u0431\u0438\u0440\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0434\u0430\u0442\u044b\/\u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 \n      strftime()\n    ","syntax":"\n     array <b>strptime<\/b>\n      ( string $date\n     , string $format\n     )","desc":"\n      strptime() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0440\u0430\u0437\u0431\u043e\u0440\u0430 \n     \u0441\u0442\u0440\u043e\u043a\u0438 date, \u043b\u0438\u0431\u043e FALSE \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u0448\u0438\u0431\u043a\u0438.\n    "},"strrchr":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041d\u0430\u0445\u043e\u0434\u0438\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0435 \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435","syntax":"\n   string <b>strrchr<\/b>\n    ( string $haystack\n   , mixed $needle\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0443 \u0441\u0442\u0440\u043e\u043a\u0438 haystack \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441\n   \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f needle \u0434\u043e \u043a\u043e\u043d\u0446\u0430 \u0441\u0442\u0440\u043e\u043a\u0438.\n  "},"strrev":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0435\u0440\u0435\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0437\u0430\u0434\u043e\u043c \u043d\u0430\u043f\u0435\u0440\u0435\u0434","syntax":"\n   string <b>strrev<\/b>\n    ( string $string\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 string, \u043f\u0435\u0440\u0435\u0432\u0435\u0440\u043d\u0443\u0442\u0443\u044e\n   \u0437\u0430\u0434\u043e\u043c \u043d\u0430\u043f\u0435\u0440\u0435\u0434.\n  "},"strripos":{"version":"(PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438 \u0431\u0435\u0437 \u0443\u0447\u0435\u0442\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430","syntax":"\n   int <b>strripos<\/b>\n    ( string $haystack\n   , string $needle\n   [, int $offset = 0\n  ] )","desc":"\n   \u0418\u0449\u0435\u0442 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438 needle \n   \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 haystack.\n  "},"strrpos":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435","syntax":"\n   int <b>strrpos<\/b>\n    ( string $haystack\n   , string $needle\n   [, int $offset = 0\n  ] )","desc":"\n   \u0418\u0449\u0435\u0442 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438 needle \n   \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 haystack.\n  "},"strspn":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u043b\u0438\u043d\u0443 \u0443\u0447\u0430\u0441\u0442\u043a\u0430 \u0432 \u043d\u0430\u0447\u0430\u043b\u0435 \u0441\u0442\u0440\u043e\u043a\u0438, \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u043c\u0430\u0441\u043a\u0435\n  ","syntax":"\n   int <b>strspn<\/b>\n    ( string $subject\n   , string $mask\n   [, int $start\n   [, int $length\n  ]] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u043b\u0438\u043d\u0443 \u0443\u0447\u0430\u0441\u0442\u043a\u0430 \u043e\u0442 \u043d\u0430\u0447\u0430\u043b\u0430 \u0441\u0442\u0440\u043e\u043a\u0438 subject,\n   \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0438\u0437 mask.\n  "},"strstr":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041d\u0430\u0445\u043e\u0434\u0438\u0442 \u043f\u0435\u0440\u0432\u043e\u0435 \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   string <b>strstr<\/b>\n    ( string $haystack\n   , mixed $needle\n   [, bool $before_needle = false\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0443 \u0441\u0442\u0440\u043e\u043a\u0438 haystack \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441\n   \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f needle (\u0438 \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0435\u0433\u043e) \u0438 \u0434\u043e \u043a\u043e\u043d\u0446\u0430 \u0441\u0442\u0440\u043e\u043a\u0438\n   haystack.\n  "},"strtok":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0420\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u043d\u0430 \u0442\u043e\u043a\u0435\u043d\u044b","syntax":"\n   string <b>strtok<\/b>\n    ( string $str\n   , string $token\n   )\n\n   string <b>strtok<\/b>\n    ( string $token\n   )\n","desc":"\n    strtok() \u0440\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443\n   str \u043d\u0430 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438 (\u0442\u043e\u043a\u0435\u043d\u044b), \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f\n   \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u0435\u0439 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0438\u0437 token.\n   \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0441\u0442\u0440\u043e\u043a\u0443 \"This is an example string\" \u043c\u043e\u0436\u043d\u043e \u0440\u0430\u0437\u0431\u0438\u0442\u044c \u043d\u0430\n   \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0435 \u0441\u043b\u043e\u0432\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043f\u0440\u043e\u0431\u0435\u043b \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044f.\n  "},"strtolower":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u043d\u0438\u0436\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440","syntax":"\n   string <b>strtolower<\/b>\n    ( string $str\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 string, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0432\u0441\u0435\n   \u0431\u0443\u043a\u0432\u0435\u043d\u043d\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u043f\u0435\u0440\u0435\u0432\u0435\u0434\u0435\u043d\u044b \u0432 \u043d\u0438\u0436\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440.\n  "},"strtotime":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u0442\u044b \u043d\u0430 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u043c \u044f\u0437\u044b\u043a\u0435 \u0432 \u043c\u0435\u0442\u043a\u0443 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 Unix","syntax":"\n   int <b>strtotime<\/b>\n    ( string $time\n   [, int $now = time()\n  ] )","desc":""},"strtoupper":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u0432\u0435\u0440\u0445\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440","syntax":"\n   string <b>strtoupper<\/b>\n    ( string $string\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 string, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0432\u0441\u0435\n   \u0431\u0443\u043a\u0432\u0435\u043d\u043d\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u043f\u0435\u0440\u0435\u0432\u0435\u0434\u0435\u043d\u044b \u0432 \u0432\u0435\u0440\u0445\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440.\n  "},"strtr":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0438\u043b\u0438 \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   string <b>strtr<\/b>\n    ( string $str\n   , string $from\n   , string $to\n   )\n\n   string <b>strtr<\/b>\n    ( string $str\n   , array $replace_pairs\n   )\n","desc":"\n   \u0415\u0441\u043b\u0438 \u0443\u043a\u0430\u0437\u0430\u043d\u044b \u0442\u0440\u0438 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430, \u044d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043f\u0438\u044e\n   str, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0432\u0441\u0435 \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e\n   \u0441\u0438\u043c\u0432\u043e\u043b\u0430 (\u043e\u0434\u043d\u043e\u0431\u0430\u0439\u0442\u043d\u043e\u0433\u043e) \u0438\u0437 from \u0431\u044b\u043b\u0438 \u0437\u0430\u043c\u0435\u043d\u0435\u043d\u044b\n   \u043d\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 to,\n   \u0442.\u0435. \u043a\u0430\u0436\u0434\u043e\u0435 \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0438\u0437 $from[$n] \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f\n   \u043d\u0430 $to[$n], \u0433\u0434\u0435 $n \u044d\u0442\u043e\n   \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0435 \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u043e\u0431\u043e\u0438\u0445 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430\u0445.\n  "},"strval":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439","syntax":"\n   string <b>strval<\/b>\n    ( mixed $var\n   )","desc":""},"substr_compare":{"version":"(PHP 5)","shortdesc":"\u0411\u0438\u043d\u0430\u0440\u043d\u043e-\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0435 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 2 \u0441\u0442\u0440\u043e\u043a \u0441\u043e \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u0435\u043c, \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u0438\u043b\u0438 \u0431\u0435\u0437 \u0443\u0447\u0435\u0442\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430","syntax":"\n   int <b>substr_compare<\/b>\n    ( string $main_str\n   , string $str\n   , int $offset\n   [, int $length\n   [, bool $case_insensitivity = false\n  ]] )","desc":"\n    substr_compare() \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443\n   main_str (\u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u043f\u043e\u0437\u0438\u0446\u0438\u0438\n   offset) \u0441\u043e \u0441\u0442\u0440\u043e\u043a\u043e\u0439\n   str. \u0412 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0438 \u0443\u0447\u0430\u0441\u0442\u0432\u0443\u044e\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c\n   length \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.\n  "},"substr_count":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0439 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   int <b>substr_count<\/b>\n    ( string $haystack\n   , string $needle\n   [, int $offset = 0\n   [, int $length\n  ]] )","desc":"\n    substr_count() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0439\n   \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438 needle \u0432 \u0441\u0442\u0440\u043e\u043a\u0443\n   haystack. \u0417\u0430\u043c\u0435\u0442\u044c\u0442\u0435, \u0447\u0442\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n   needle \u0447\u0443\u0432\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u0435\u043d \u043a \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0443.\n  "},"substr_replace":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0417\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u0447\u0430\u0441\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   mixed <b>substr_replace<\/b>\n    ( mixed $string\n   , mixed $replacement\n   , mixed $start\n   [, mixed $length\n  ] )","desc":"\n    substr_replace() \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u0447\u0430\u0441\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0438\n   string, \u043d\u0430\u0447\u0438\u043d\u0430\u044e\u0449\u0443\u044e\u0441\u044f \u0441 \u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u0441 \u043f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u044b\u043c\n   \u043d\u043e\u043c\u0435\u0440\u043e\u043c start \u0438 (\u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0439) \u0434\u043b\u0438\u043d\u043e\u0439\n   length, \u0441\u0442\u0440\u043e\u043a\u043e\u0439\n   replacement \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.\n  "},"substr":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0443","syntax":"\n   string <b>substr<\/b>\n    ( string $string\n   , int $start\n   [, int $length\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0443 \u0441\u0442\u0440\u043e\u043a\u0438 string, \u043d\u0430\u0447\u0438\u043d\u0430\u044e\u0449\u0435\u0439\u0441\u044f\n   \u0441 start \u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u043f\u043e \u0441\u0447\u0435\u0442\u0443 \u0438 \u0434\u043b\u0438\u043d\u043e\u0439\n   length \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.\n  "},"svn_add":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u043f\u043b\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0432 \u0440\u0430\u0431\u043e\u0447\u0443\u044e \u043a\u043e\u043f\u0438\u044e","syntax":"\n   bool <b>svn_add<\/b>\n    ( string $path\n   [, bool $recursive = true\n   [, bool $force = false\n  ]] )","desc":"\n   \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0444\u0430\u0439\u043b, \u043f\u0430\u043f\u043a\u0443 \u0438\u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0441\u0441\u044b\u043b\u043a\u0443 path\n   \u0432 \u0440\u0430\u0431\u043e\u0447\u0443\u044e \u043a\u043e\u043f\u0438\u044e. \u0414\u0430\u043d\u043d\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \n   \u043f\u0440\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435\u043c \u0432\u044b\u0437\u043e\u0432\u0435 \u043c\u0435\u0442\u043e\u0434\u0430  svn_commit() \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0447\u0435\u0439 \u043a\u043e\u043f\u0438\u0438.\n  "},"svn_auth_get_parameter":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438","syntax":"\n   string <b>svn_auth_get_parameter<\/b>\n    ( string $key\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043f\u043e \u043a\u043b\u044e\u0447\u0443 key. \n   \u0421\u043f\u0438\u0441\u043e\u043a \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0445 \u043a\u043b\u044e\u0447\u0435\u0439 \u0438 \u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0432 \n   \u0441\u043f\u0438\u0441\u043a\u0435 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438. \n  "},"svn_auth_set_parameter":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438","syntax":"\n   void <b>svn_auth_set_parameter<\/b>\n    ( string $key\n   , string $value\n   )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \n   value \u043f\u043e \u043a\u043b\u044e\u0447\u0443 key.\n   \u0421\u043f\u0438\u0441\u043e\u043a \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0445 \u043a\u043b\u044e\u0447\u0435\u0439 \u0438 \u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0432 \n   \u0441\u043f\u0438\u0441\u043a\u0435 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438.\n  "},"svn_blame":{"version":"(PECL svn >= 0.3.0)","shortdesc":"\u041f\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u043e \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0430\u0432\u0442\u043e\u0440\u0430 \u0438 \u0440\u0435\u0434\u0430\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u0444\u0430\u0439\u043b\u0430","syntax":"\n   array <b>svn_blame<\/b>\n    ( string $repository_url\n   [, int $revision_no = SVN_REVISION_HEAD\n  ] )","desc":"\n   \u041f\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u043e \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0430\u0432\u0442\u043e\u0440\u0430 \u0438 \u0440\u0435\u0434\u0430\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u0444\u0430\u0439\u043b\u0430 \u0438\u0437 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u0430\u0440\u0438\u044f.\n  "},"svn_cat":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0444\u0430\u0439\u043b\u0430 \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u0430\u0440\u0438\u0438","syntax":"\n   string <b>svn_cat<\/b>\n    ( string $repos_url\n   [, int $revision_no\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u043f\u043e URL repos_url \u0444\u0430\u0439\u043b\u0430\n   \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u0430\u0440\u0438\u0438 \u043f\u043e \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044e \u043d\u0430 \u0440\u0435\u0432\u0438\u0437\u0438\u044e \u043d\u043e\u043c\u0435\u0440 revision_no \n   (\u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440).\n  "},"svn_checkout":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0440\u0430\u0431\u043e\u0447\u0443\u044e \u043a\u043e\u043f\u0438\u044e \u0438\u0437 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f","syntax":"\n   bool <b>svn_checkout<\/b>\n    ( string $repos\n   , string $targetpath\n   [, int $revision\n   [, int $flags = 0\n  ]] )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0440\u0430\u0431\u043e\u0447\u0443\u044e \u043a\u043e\u043f\u0438\u044e \u0441 \u0440\u0435\u0432\u0438\u0437\u0438\u0435\u0439 revision \n   \u0438\u0437 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f repos \u0438 \u0440\u0430\u0437\u043c\u0435\u0449\u0430\u0435\u0442 \u0432 targetpath.\n  "},"svn_cleanup":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u0420\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u043e \u043e\u0447\u0438\u0449\u0430\u0435\u0442 \u0440\u0430\u0431\u043e\u0447\u0443\u044e \u043a\u043e\u043f\u0438\u044e \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438, \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u043d\u0435\u0437\u0430\u043a\u043e\u043d\u0447\u0435\u043d\u043d\u044b\u0435 \n   \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0438 \u0441\u043d\u0438\u043c\u0430\u0435\u0442 \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0438","syntax":"\n   bool <b>svn_cleanup<\/b>\n    ( string $workingdir\n   )","desc":"\n   \u0420\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u043e \u043e\u0447\u0438\u0449\u0430\u0435\u0442 \u0440\u0430\u0431\u043e\u0447\u0443\u044e \u043a\u043e\u043f\u0438\u044e \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 workingdir, \n   \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u043b\u044e\u0431\u044b\u0435 \u043d\u0435\u0437\u0430\u043a\u043e\u043d\u0447\u0435\u043d\u043d\u044b\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0438 \u0441\u043d\u0438\u043c\u0430\u0435\u0442 \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0438 \u0438\u0437 \u0440\u0430\u0431\u043e\u0447\u0435\u0439 \u043a\u043e\u043f\u0438\u0438. \n   \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435, \u043a\u043e\u0433\u0434\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u043e\u0437\u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0447\u0435\u0439 \u043a\u043e\u043f\u0438\u0438.   \n  "},"svn_client_version":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0435\u0440\u0441\u0438\u044e \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a SVN","syntax":"\n   string <b>svn_client_version<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0435\u0440\u0441\u0438\u044e \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a SVN\n  "},"svn_commit":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0438\u0437 \u0440\u0430\u0431\u043e\u0447\u0435\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439","syntax":"\n   array <b>svn_commit<\/b>\n    ( string $log\n   , array $targets\n   [, bool $recursive = true\n  ] )","desc":"\n   \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432 \u0444\u0430\u0439\u043b\u0430\u0445 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0447\u0435\u0439 \u043a\u043e\u043f\u0438\u0438, \u043f\u0435\u0440\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0435 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435\n   targets \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439, \u0441 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435\u043c \n   log. \u0414\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 targets\n   \u0431\u0443\u0434\u0443\u0442 \u0440\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b, \u0435\u0441\u043b\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 recursive\n   \u043d\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u0432 FALSE.\n  "},"svn_delete":{"version":"(PECL svn >= 0.4.0)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0438\u0437 \u0440\u0430\u0431\u043e\u0447\u0435\u0439 \u043a\u043e\u043f\u0438\u0438 \u0438\u043b\u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f","syntax":"\n   bool <b>svn_delete<\/b>\n    ( string $path\n   [, bool $force = false\n  ] )","desc":"\n   \u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0444\u0430\u0439\u043b, \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e \u0438\u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0441\u0441\u044b\u043b\u043a\u0443 path\n   \u0438\u0437 \u0440\u0430\u0431\u043e\u0447\u0435\u0439 \u043a\u043e\u043f\u0438\u0438. \u042d\u043b\u0435\u043c\u0435\u043d\u0442 \u0431\u0443\u0434\u0435\u0442 \u0443\u0434\u0430\u043b\u0435\u043d \u0438\u0437 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f\n   \u043f\u0440\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u0432\u044b\u0437\u043e\u0432\u0435  svn_commit() \u0438\u0437 \u0440\u0430\u0431\u043e\u0447\u0435\u0439 \u043a\u043e\u043f\u0438\u0438.\n  "},"svn_diff":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u0420\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u043e \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0440\u0430\u0437\u043b\u0438\u0447\u0438\u044f \u0434\u0432\u0443\u0445 \u0444\u0430\u0439\u043b\u043e\u0432","syntax":"\n   array <b>svn_diff<\/b>\n    ( string $path1\n   , int $rev1\n   , string $path2\n   , int $rev2\n   )","desc":"\n   \u0420\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u043e \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0440\u0430\u0437\u043b\u0438\u0447\u0438\u044f \u0434\u0432\u0443\u0445 \u0444\u0430\u0439\u043b\u043e\u0432 path1 \u0438\n   path2.\n  "},"svn_export":{"version":"(PECL svn >= 0.3.0)","shortdesc":"\u042d\u043a\u0441\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 SVN","syntax":"\n   bool <b>svn_export<\/b>\n    ( string $frompath\n   , string $topath\n   [, bool $working_copy = true\n   [, int $revision_no = -1\n  ]] )","desc":"\n   \u042d\u043a\u0441\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043a\u0430\u043a \u0438\u0437 \u0440\u0430\u0431\u043e\u0447\u0435\u0439 \u043a\u043e\u043f\u0438\u0438, \u0442\u0430\u043a \u0438 \u0438\u0437 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f \u0432\n   '\u0447\u0438\u0441\u0442\u0443\u044e' \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e. \n  "},"svn_fs_abort_txn":{"version":"(PECL svn >= 0.2.0)","shortdesc":"\u041e\u0442\u043c\u0435\u043d\u044f\u0435\u0442 \u0442\u0440\u0430\u0437\u043d\u0430\u043a\u0446\u0438\u044e, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \n    \u0435\u0441\u043b\u0438 \u043e\u0442\u043c\u0435\u043d\u0430 \u043f\u0440\u043e\u0448\u043b\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0438\u043b\u0438 FALSE \u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435","syntax":"\n   bool <b>svn_fs_abort_txn<\/b>\n    ( resource $txn\n   )","desc":""},"svn_fs_apply_text":{"version":"(PECL svn >= 0.2.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0442\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d \u0434\u043b\u044f \u0437\u0430\u043c\u0435\u043d\u044b","syntax":"\n   resource <b>svn_fs_apply_text<\/b>\n    ( resource $root\n   , string $path\n   )","desc":""},"svn_fs_begin_txn2":{"version":"(PECL svn >= 0.2.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u0443\u044e \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044e","syntax":"\n   resource <b>svn_fs_begin_txn2<\/b>\n    ( resource $repos\n   , int $rev\n   )","desc":""},"svn_fs_change_node_prop":{"version":"(PECL svn >= 0.2.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0435\u0441\u043b\u0438 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0448\u043b\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0438\u043b\u0438 FALSE \u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435","syntax":"\n   bool <b>svn_fs_change_node_prop<\/b>\n    ( resource $root\n   , string $path\n   , string $name\n   , string $value\n   )","desc":""},"svn_fs_check_path":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u043a\u0430\u043a\u0430\u044f \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u044c \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043f\u0443\u0442\u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u0430\u0440\u0438\u044f fsroot","syntax":"\n   int <b>svn_fs_check_path<\/b>\n    ( resource $fsroot\n   , string $path\n   )","desc":""},"svn_fs_contents_changed":{"version":"(PECL svn >= 0.2.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0435\u0441\u043b\u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f \u0438\u043b\u0438 FALSE \u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435","syntax":"\n   bool <b>svn_fs_contents_changed<\/b>\n    ( resource $root1\n   , string $path1\n   , resource $root2\n   , string $path2\n   )","desc":""},"svn_fs_copy":{"version":"(PECL svn >= 0.2.0)","shortdesc":"\u041a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u0444\u0430\u0439\u043b \u0438\u043b\u0438 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0435\u0441\u043b\u0438 \n    \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0448\u043b\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0438\u043b\u0438 FALSE \u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435","syntax":"\n   bool <b>svn_fs_copy<\/b>\n    ( resource $from_root\n   , string $from_path\n   , resource $to_root\n   , string $to_path\n   )","desc":""},"svn_fs_delete":{"version":"(PECL svn >= 0.2.0)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0444\u0430\u0439\u043b \u0438\u043b\u0438 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0435\u0441\u043b\u0438 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \n    \u043f\u0440\u043e\u0448\u043b\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0438\u043b\u0438 FALSE \u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435","syntax":"\n   bool <b>svn_fs_delete<\/b>\n    ( resource $root\n   , string $path\n   )","desc":""},"svn_fs_dir_entries":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u041f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u043f\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u0443\u0442\u0438; \n    \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0445\u044d\u0448 \u0438\u043c\u0435\u043d \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0439 \u0438 \u0442\u0438\u043f\u043e\u0432 \u0444\u0430\u0439\u043b\u043e\u0432","syntax":"\n   array <b>svn_fs_dir_entries<\/b>\n    ( resource $fsroot\n   , string $path\n   )","desc":""},"svn_fs_file_contents":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0442\u043e\u043a \u0434\u043b\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u043c\u0443 \u0444\u0430\u0439\u043b\u0430 \u0438\u0437 \u0434\u0430\u043d\u043d\u043e\u0439 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b","syntax":"\n   resource <b>svn_fs_file_contents<\/b>\n    ( resource $fsroot\n   , string $path\n   )","desc":""},"svn_fs_file_length":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u043b\u0438\u043d\u0443 \u0444\u0430\u0439\u043b\u0430 \u0438\u0437 \u0434\u0430\u043d\u043d\u043e\u0439 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b","syntax":"\n   int <b>svn_fs_file_length<\/b>\n    ( resource $fsroot\n   , string $path\n   )","desc":""},"svn_fs_is_dir":{"version":"(PECL svn >= 0.2.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0435\u0441\u043b\u0438 \u043f\u043e \u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u0443\u0442\u0438 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f \u0438\u043b\u0438 FALSE \u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435","syntax":"\n   bool <b>svn_fs_is_dir<\/b>\n    ( resource $root\n   , string $path\n   )","desc":""},"svn_fs_is_file":{"version":"(PECL svn >= 0.2.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0435\u0441\u043b\u0438 \u043f\u043e \u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u0443\u0442\u0438 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0444\u0430\u0439\u043b \u0438\u043b\u0438 FALSE \u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435","syntax":"\n   bool <b>svn_fs_is_file<\/b>\n    ( resource $root\n   , string $path\n   )","desc":""},"svn_fs_make_dir":{"version":"(PECL svn >= 0.2.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u0443\u044e \u043f\u0443\u0441\u0442\u0443\u044e \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0435\u0441\u043b\u0438 \n   \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0448\u043b\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0438\u043b\u0438 FALSE \u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435","syntax":"\n   bool <b>svn_fs_make_dir<\/b>\n    ( resource $root\n   , string $path\n   )","desc":""},"svn_fs_make_file":{"version":"(PECL svn >= 0.2.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u043f\u0443\u0441\u0442\u043e\u0439 \u0444\u0430\u0439\u043b, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0435\u0441\u043b\u0438 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0448\u043b\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0438\u043b\u0438 FALSE \u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435","syntax":"\n   bool <b>svn_fs_make_file<\/b>\n    ( resource $root\n   , string $path\n   )","desc":""},"svn_fs_node_created_rev":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u043e\u043c\u0435\u0440 \u0440\u0435\u0432\u0438\u0437\u0438\u0438, \u043a\u043e\u0433\u0434\u0430 \u0431\u044b\u043b \u0441\u043e\u0437\u0434\u0430\u043d \u043f\u0443\u0442\u044c \u0432 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u0435","syntax":"\n   int <b>svn_fs_node_created_rev<\/b>\n    ( resource $fsroot\n   , string $path\n   )","desc":""},"svn_fs_node_prop":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u0434\u043b\u044f \u0443\u0437\u043b\u0430","syntax":"\n   string <b>svn_fs_node_prop<\/b>\n    ( resource $fsroot\n   , string $path\n   , string $propname\n   )","desc":""},"svn_fs_props_changed":{"version":"(PECL svn >= 0.2.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 TRUE \u0435\u0441\u043b\u0438 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u0440\u0430\u0437\u043d\u044b\u0435 \u0438\u043b\u0438 FALSE \u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435","syntax":"\n   bool <b>svn_fs_props_changed<\/b>\n    ( resource $root1\n   , string $path1\n   , resource $root2\n   , string $path2\n   )","desc":""},"svn_fs_revision_prop":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430","syntax":"\n   string <b>svn_fs_revision_prop<\/b>\n    ( resource $fs\n   , int $revnum\n   , string $propname\n   )","desc":""},"svn_fs_revision_root":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438 \u043a\u043e\u0440\u043d\u0435\u0432\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u0430\u0440\u0438\u044f","syntax":"\n   resource <b>svn_fs_revision_root<\/b>\n    ( resource $fs\n   , int $revnum\n   )","desc":""},"svn_fs_txn_root":{"version":"(PECL svn >= 0.2.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u0440\u0435\u043d\u044c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438","syntax":"\n   resource <b>svn_fs_txn_root<\/b>\n    ( resource $txn\n   )","desc":""},"svn_fs_youngest_rev":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u043e\u043c\u0435\u0440 \u0441\u0430\u043c\u043e\u0439 \u0440\u0430\u043d\u043d\u0435\u0439 \u0440\u0435\u0432\u0438\u0437\u0438\u0438 \u0432 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u0435","syntax":"\n   int <b>svn_fs_youngest_rev<\/b>\n    ( resource $fs\n   )","desc":""},"svn_import":{"version":"(PECL svn >= 0.2.0)","shortdesc":"\u0418\u043c\u043f\u043e\u0440\u0442 \u043f\u0443\u0442\u0438 \u0431\u0435\u0437 \u0432\u0435\u0440\u0441\u0438\u0438 \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0438","syntax":"\n   bool <b>svn_import<\/b>\n    ( string $path\n   , string $url\n   , bool $nonrecursive\n   )","desc":"\n   \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u0435\u0432\u0435\u0440\u0441\u0438\u043e\u043d\u043d\u043e\u0433\u043e \u043f\u0443\u0442\u0438 path \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443\n   url. \u0415\u0441\u043b\u0438 path \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f\n    \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0435\u0439 \u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 nonrecursive \u0438\u043c\u0435\u0435\u0442\n    \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 FALSE, \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0430 \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u0440\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u043e.\n  "},"svn_log":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \u043a \u043f\u0440\u0430\u0432\u043a\u0430\u043c \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0438","syntax":"\n   array <b>svn_log<\/b>\n    ( string $repos_url\n   [, int $start_revision\n   [, int $end_revision\n   [, int $limit = 0\n   [, int $flags = SVN_DISCOVER_CHANGED_PATHS | SVN_STOP_ON_COPY\n  ]]]] )","desc":"\n    svn_log() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u043b\u043d\u0443\u044e \u0438\u0441\u0442\u043e\u0440\u0438\u044e \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e\n    \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f, \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u043d\u043e\u0433\u043e \u043f\u043e URL repos_url, \n    \u0438\u043b\u0438 \u0438\u0441\u0442\u043e\u0440\u0438\u044e \u043f\u0440\u0430\u0432\u043e\u043a \u0432 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0435, \u0435\u0441\u043b\u0438 \u0443\u043a\u0430\u0437\u0430\u043d \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n   start_revision. \u0414\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u044d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442\u043d\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u0435 SVN\n    svn log --verbose -r $start_revision $repos_url.\n  "},"svn_ls":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0433\u043e \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f URL, \u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u0440\u0435\u0432\u0438\u0437\u0438\u0438","syntax":"\n   array <b>svn_ls<\/b>\n    ( string $repos_url\n   [, int $revision_no = SVN_REVISION_HEAD\n   [, bool $recurse = false\n   [, bool $peg = false\n  ]]] )","desc":"\n   \u0414\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u0442\u0440\u043e\u0438\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u043f\u043e URL \u0430\u0434\u0440\u0435\u0441\u0443 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f \u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a\n   \u0444\u0430\u0439\u043b\u043e\u0432 \u0438 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0439, \u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u0440\u0435\u0432\u0438\u0437\u0438\u0438. \u042d\u0442\u043e \u044d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442\u043d\u043e\n   \u043a\u043e\u043c\u0430\u043d\u0434\u0435 SVN svn list $repos_url[@$revision_no]\n  "},"svn_mkdir":{"version":"(PECL svn >= 0.4.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e \u0432 \u0440\u0430\u0431\u043e\u0447\u0435\u0439 \u043a\u043e\u043f\u0438\u0438 \u0438\u043b\u0438 \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u0430\u0440\u0438\u0438","syntax":"\n   bool <b>svn_mkdir<\/b>\n    ( string $path\n   [, string $log_message\n  ] )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e \u0432 \u0440\u0430\u0431\u043e\u0447\u0435\u0439 \u043a\u043e\u043f\u0438\u0438 \u0438\u043b\u0438 \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u0430\u0440\u0438\u0438.\n  "},"svn_repos_create":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f Subversion","syntax":"\n   resource <b>svn_repos_create<\/b>\n    ( string $path\n   [, array $config\n   [, array $fsconfig\n  ]] )","desc":""},"svn_repos_fs_begin_txn_for_commit":{"version":"(PECL svn >= 0.2.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0439 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438","syntax":"\n   resource <b>svn_repos_fs_begin_txn_for_commit<\/b>\n    ( resource $repos\n   , int $rev\n   , string $author\n   , string $log_msg\n   )","desc":""},"svn_repos_fs_commit_txn":{"version":"(PECL svn >= 0.2.0)","shortdesc":"\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u0435 \u043d\u043e\u043c\u0435\u0440\u0430 \u0440\u0435\u0432\u0438\u0437\u0438\u0438","syntax":"\n   int <b>svn_repos_fs_commit_txn<\/b>\n    ( resource $txn\n   )","desc":""},"svn_repos_fs":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0434\u043b\u044f \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f","syntax":"\n   resource <b>svn_repos_fs<\/b>\n    ( resource $repos\n   )","desc":""},"svn_repos_hotcopy":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0441\u0432\u0435\u0436\u0443\u044e \u043a\u043e\u043f\u0438\u044e \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 repospath \u0438 \u043a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u0432 destpath","syntax":"\n   bool <b>svn_repos_hotcopy<\/b>\n    ( string $repospath\n   , string $destpath\n   , bool $cleanlogs\n   )","desc":""},"svn_repos_open":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u0441 \u043e\u0431\u0449\u0435\u0439 \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u043e\u0439","syntax":"\n   resource <b>svn_repos_open<\/b>\n    ( string $path\n   )","desc":""},"svn_repos_recover":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u043f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u044b \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f","syntax":"\n   bool <b>svn_repos_recover<\/b>\n    ( string $path\n   )","desc":""},"svn_revert":{"version":"(PECL svn >= 0.3.0)","shortdesc":"\u041e\u0442\u043c\u0435\u043d\u044f\u0435\u0442 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0440\u0430\u0431\u043e\u0447\u0435\u0439 \u043a\u043e\u043f\u0438\u0438","syntax":"\n   bool <b>svn_revert<\/b>\n    ( string $path\n   [, bool $recursive = false\n  ] )","desc":"\n   \u041e\u0442\u043c\u0435\u043d\u044f\u0435\u0442 \u0432\u0441\u0435 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0444\u0430\u0439\u043b\u043e\u0432, \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0445 \u0432 \u0440\u0430\u0431\u043e\u0447\u0435\u0439 \u043a\u043e\u043f\u0438\u0438.\n  "},"svn_status":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 SVN \u0441\u0442\u0430\u0442\u0443\u0441 \u0444\u0430\u0439\u043b\u043e\u0432 \u0438 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0439 \u0440\u0430\u0431\u043e\u0447\u0435\u0439 \u043a\u043e\u043f\u0438\u0438","syntax":"\n   array <b>svn_status<\/b>\n    ( string $path\n   [, int $flags = 0\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 SVN \u0441\u0442\u0430\u0442\u0443\u0441 \u0444\u0430\u0439\u043b\u043e\u0432 \u0438 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0439 \u0440\u0430\u0431\u043e\u0447\u0435\u0439 \u043a\u043e\u043f\u0438\u0438, \u043f\u043e\u0434\u0432\u0435\u0440\u0433\u043d\u0443\u0432\u0448\u0438\u0445\u0441\u044f \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438,\n   \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044e, \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044e \u0438 \u043f\u0440\u043e\u0447\u0438\u043c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043c.\n  "},"svn_update":{"version":"(PECL svn >= 0.1.0)","shortdesc":"\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0440\u0430\u0431\u043e\u0447\u0443\u044e \u043a\u043e\u043f\u0438\u044e","syntax":"\n   int <b>svn_update<\/b>\n    ( string $path\n   [, int $revno = SVN_REVISION_HEAD\n   [, bool $recurse = true\n  ]] )","desc":"\n   \u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0440\u0430\u0431\u043e\u0447\u0443\u044e \u043a\u043e\u043f\u0438\u044e, \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u043d\u0443\u044e \u0432 path \u0434\u043e \u0440\u0435\u0432\u0438\u0437\u0438\u0438\n   revno. \u0415\u0441\u043b\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 recurse \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u0432 TRUE,\n   \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0431\u0443\u0434\u0443\u0442 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u044b \u0440\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u043e.\n  "},"swf_actiongeturl":{"version":"(PHP 4)","shortdesc":"Get a URL from a Shockwave Flash movie","syntax":"\n   void <b>swf_actiongeturl<\/b>\n    ( string $url\n   , string $target\n   )","desc":"\n   Gets the URL specified by the parameter url with\n   the given  target.\n  "},"swf_actiongotoframe":{"version":"(PHP 4)","shortdesc":"Play a frame and then stop","syntax":"\n   void <b>swf_actiongotoframe<\/b>\n    ( int $framenumber\n   )","desc":"\n   The  swf_actiongotoframe() function will go to\n   the frame specified by framenumber, play\n   it, and then stop.\n  "},"swf_actiongotolabel":{"version":"(PHP 4)","shortdesc":"Display a frame with the specified label","syntax":"\n   void <b>swf_actiongotolabel<\/b>\n    ( string $label\n   )","desc":"\n   The  swf_actiongotolabel() function displays\n   the frame with the label given by the\n   label parameter and then stops.\n  "},"swf_actionnextframe":{"version":"(PHP 4)","shortdesc":"Go forward one frame","syntax":"\n   void <b>swf_actionnextframe<\/b>\n    ( void\n   )","desc":"\n   Go forward one frame.\n  "},"swf_actionplay":{"version":"(PHP 4)","shortdesc":"Start playing the flash movie from the current frame","syntax":"\n   void <b>swf_actionplay<\/b>\n    ( void\n   )","desc":"\n   Start playing the flash movie from the current frame.\n  "},"swf_actionprevframe":{"version":"(PHP 4)","shortdesc":"Go backwards one frame","syntax":"\n   void <b>swf_actionprevframe<\/b>\n    ( void\n   )","desc":"\n   Go backwards one frame.\n  "},"swf_actionsettarget":{"version":"(PHP 4)","shortdesc":"Set the context for actions","syntax":"\n   void <b>swf_actionsettarget<\/b>\n    ( string $target\n   )","desc":"\n   Sets the context for all actions. You can use this to control other flash\n   movies that are currently playing.\n  "},"swf_actionstop":{"version":"(PHP 4)","shortdesc":"Stop playing the flash movie at the current frame","syntax":"\n   void <b>swf_actionstop<\/b>\n    ( void\n   )","desc":"\n   Stop playing the flash movie at the current frame.\n  "},"swf_actiontogglequality":{"version":"(PHP 4)","shortdesc":"Toggle between low and high quality","syntax":"\n   void <b>swf_actiontogglequality<\/b>\n    ( void\n   )","desc":"\n   Toggle the flash movie between high and low quality.\n  "},"swf_actionwaitforframe":{"version":"(PHP 4)","shortdesc":"Skip actions if a frame has not been loaded","syntax":"\n   void <b>swf_actionwaitforframe<\/b>\n    ( int $framenumber\n   , int $skipcount\n   )","desc":"\n   The  swf_actionwaitforframe() function will\n   check to see if the frame, specified by the\n   framenumber parameter has been loaded, if\n   not it will skip the number of actions specified by the\n   skipcount parameter.  This can be useful\n   for \"Loading...\" type animations.\n  "},"swf_addbuttonrecord":{"version":"(PHP 4)","shortdesc":"Controls location, appearance and active area of the current button","syntax":"\n   void <b>swf_addbuttonrecord<\/b>\n    ( int $states\n   , int $shapeid\n   , int $depth\n   )","desc":"\n   Allow you to define the specifics of using a button.  \n  "},"swf_addcolor":{"version":"(PHP 4)","shortdesc":"Set the global add color to the rgba value specified","syntax":"\n   void <b>swf_addcolor<\/b>\n    ( float $r\n   , float $g\n   , float $b\n   , float $a\n   )","desc":"\n   Sets the global add color to the specified color. This color is then\n   implicitly used by the  swf_placeobject(),\n    swf_modifyobject() and \n    swf_addbuttonrecord() functions.\n  "},"swf_closefile":{"version":"(PHP 4)","shortdesc":"Close the current Shockwave Flash file","syntax":"\n   void <b>swf_closefile<\/b>\n    ([ int $return_file\n  ] )","desc":"\n   Close a file that was opened by the\n    swf_openfile() function.\n  "},"swf_definebitmap":{"version":"(PHP 4)","shortdesc":"Define a bitmap","syntax":"\n   void <b>swf_definebitmap<\/b>\n    ( int $objid\n   , string $image_name\n   )","desc":"\n   The  swf_definebitmap() function defines a\n   bitmap given an image.  \n  "},"swf_definefont":{"version":"(PHP 4)","shortdesc":"Defines a font","syntax":"\n   void <b>swf_definefont<\/b>\n    ( int $fontid\n   , string $fontname\n   )","desc":"\n   The  swf_definefont() function defines a font parameter\n   and gives it the specified id.  It then sets the font given by \n   fontname to the current font.\n  "},"swf_defineline":{"version":"(PHP 4)","shortdesc":"Define a line","syntax":"\n   void <b>swf_defineline<\/b>\n    ( int $objid\n   , float $x1\n   , float $y1\n   , float $x2\n   , float $y2\n   , float $width\n   )","desc":"\n   Defines a line.\n  "},"swf_definepoly":{"version":"(PHP 4)","shortdesc":"Define a polygon","syntax":"\n   void <b>swf_definepoly<\/b>\n    ( int $objid\n   , array $coords\n   , int $npoints\n   , float $width\n   )","desc":"\n   Defines a polygon given an array of x, y coordinates.\n  "},"swf_definerect":{"version":"(PHP 4)","shortdesc":"Define a rectangle","syntax":"\n   void <b>swf_definerect<\/b>\n    ( int $objid\n   , float $x1\n   , float $y1\n   , float $x2\n   , float $y2\n   , float $width\n   )","desc":"\n   Defines a rectangle with an upper left hand coordinate and a lower right\n   hand coordinate.\n  "},"swf_definetext":{"version":"(PHP 4)","shortdesc":"Define a text string","syntax":"\n   void <b>swf_definetext<\/b>\n    ( int $objid\n   , string $str\n   , int $docenter\n   )","desc":"\n   Defines a text string using the current font and font size.\n  "},"swf_endbutton":{"version":"(PHP 4)","shortdesc":"End the definition of the current button","syntax":"\n   void <b>swf_endbutton<\/b>\n    ( void\n   )","desc":"\n   The  swf_endbutton() function ends the\n   definition of the current button.\n  "},"swf_enddoaction":{"version":"(PHP 4)","shortdesc":"End the current action","syntax":"\n   void <b>swf_enddoaction<\/b>\n    ( void\n   )","desc":"\n   Ends the current action started by the\n    swf_startdoaction() function.\n  "},"swf_endshape":{"version":"(PHP 4)","shortdesc":"Completes the definition of the current shape","syntax":"\n   void <b>swf_endshape<\/b>\n    ( void\n   )","desc":"\n   The  swf_endshape() completes the definition of\n   the current shape.\n  "},"swf_endsymbol":{"version":"(PHP 4)","shortdesc":"End the definition of a symbol","syntax":"\n   void <b>swf_endsymbol<\/b>\n    ( void\n   )","desc":"\n   Ends the definition of a symbol that was started by the\n    swf_startsymbol() function.\n  "},"swf_fontsize":{"version":"(PHP 4)","shortdesc":"Change the font size","syntax":"\n   void <b>swf_fontsize<\/b>\n    ( float $size\n   )","desc":"\n   Changes the font size to the value given by the \n   size parameter.\n  "},"swf_fontslant":{"version":"(PHP 4)","shortdesc":"Set the font slant","syntax":"\n   void <b>swf_fontslant<\/b>\n    ( float $slant\n   )","desc":"\n   Set the current font slant to the angle indicated by the\n   slant parameter.  \n  "},"swf_fonttracking":{"version":"(PHP 4)","shortdesc":"Set the current font tracking","syntax":"\n   void <b>swf_fonttracking<\/b>\n    ( float $tracking\n   )","desc":"\n   Set the font tracking to the value specified by the\n   tracking parameter.  This function is used\n   to increase the spacing between letters and text, positive values\n   increase the space and negative values decrease the space between\n   letters.\n  "},"swf_getbitmapinfo":{"version":"(PHP 4)","shortdesc":"Get information about a bitmap","syntax":"\n   array <b>swf_getbitmapinfo<\/b>\n    ( int $bitmapid\n   )","desc":"\n   Returns information about a bitmap.  \n  "},"swf_getfontinfo":{"version":"(PHP 4)","shortdesc":"Gets font information","syntax":"\n   array <b>swf_getfontinfo<\/b>\n    ( void\n   )","desc":"\n   Gets information about the font by giving the height in pixels of a\n   capital A and a lowercase x.\n  "},"swf_getframe":{"version":"(PHP 4)","shortdesc":"Get the frame number of the current frame","syntax":"\n   int <b>swf_getframe<\/b>\n    ( void\n   )","desc":"\n   The  swf_getframe() function gets the number of\n   the current frame.\n  "},"swf_labelframe":{"version":"(PHP 4)","shortdesc":"Label the current frame","syntax":"\n   void <b>swf_labelframe<\/b>\n    ( string $name\n   )","desc":"\n   Labels the current frame with the given name.\n  "},"swf_lookat":{"version":"(PHP 4)","shortdesc":"Define a viewing transformation","syntax":"\n   void <b>swf_lookat<\/b>\n    ( float $view_x\n   , float $view_y\n   , float $view_z\n   , float $reference_x\n   , float $reference_y\n   , float $reference_z\n   , float $twist\n   )","desc":"\n   Defines a viewing transformation by giving the viewing position and the\n   coordinates of a reference point in the scene.\n  "},"swf_modifyobject":{"version":"(PHP 4)","shortdesc":"Modify an object","syntax":"\n   void <b>swf_modifyobject<\/b>\n    ( int $depth\n   , int $how\n   )","desc":"\n   Updates the position and\/or color of the object at the specified\n   depth.  \n  "},"swf_mulcolor":{"version":"(PHP 4)","shortdesc":"Sets the global multiply color to the rgba value specified","syntax":"\n   void <b>swf_mulcolor<\/b>\n    ( float $r\n   , float $g\n   , float $b\n   , float $a\n   )","desc":"\n   Sets the global multiply color to the given one. This color is then\n   implicitly used by the  swf_placeobject(),\n    swf_modifyobject() and \n    swf_addbuttonrecord() functions.\n  "},"swf_nextid":{"version":"(PHP 4)","shortdesc":"Returns the next free object id","syntax":"\n   int <b>swf_nextid<\/b>\n    ( void\n   )","desc":"\n   The  swf_nextid() function returns the next\n   available object id.\n  "},"swf_oncondition":{"version":"(PHP 4)","shortdesc":"Describe a transition used to trigger an action list","syntax":"\n   void <b>swf_oncondition<\/b>\n    ( int $transition\n   )","desc":"\n   The  swf_oncondition() function describes a\n   transition that will trigger an action list.  \n  "},"swf_openfile":{"version":"(PHP 4)","shortdesc":"Open a new Shockwave Flash file","syntax":"\n   void <b>swf_openfile<\/b>\n    ( string $filename\n   , float $width\n   , float $height\n   , float $framerate\n   , float $r\n   , float $g\n   , float $b\n   )","desc":"\n   Opens a new file. This must be the first function you call, otherwise your\n   script will not work.\n  "},"swf_ortho":{"version":"(PHP 4 >= 4.0.1)","shortdesc":"Defines an orthographic mapping of user coordinates onto the current viewport","syntax":"\n   void <b>swf_ortho<\/b>\n    ( float $xmin\n   , float $xmax\n   , float $ymin\n   , float $ymax\n   , float $zmin\n   , float $zmax\n   )","desc":"\n   Defines an 3D orthographic mapping of user coordinates onto the current\n   viewport.\n  "},"swf_ortho2":{"version":"(PHP 4)","shortdesc":"Defines 2D orthographic mapping of user coordinates onto the current viewport","syntax":"\n   void <b>swf_ortho2<\/b>\n    ( float $xmin\n   , float $xmax\n   , float $ymin\n   , float $ymax\n   )","desc":"\n   Defines a two dimensional orthographic mapping of user coordinates onto\n   the current viewport, this defaults to one to one mapping of the area of\n   the Flash movie.\n  "},"swf_perspective":{"version":"(PHP 4)","shortdesc":"Define a perspective projection transformation","syntax":"\n   void <b>swf_perspective<\/b>\n    ( float $fovy\n   , float $aspect\n   , float $near\n   , float $far\n   )","desc":"\n   Defines a perspective projection transformation. \n  "},"swf_placeobject":{"version":"(PHP 4)","shortdesc":"Place an object onto the screen","syntax":"\n   void <b>swf_placeobject<\/b>\n    ( int $objid\n   , int $depth\n   )","desc":"\n   Places the object in the current frame at a specified\n   depth.\n  "},"swf_polarview":{"version":"(PHP 4)","shortdesc":"Define the viewer's position with polar coordinates","syntax":"\n   void <b>swf_polarview<\/b>\n    ( float $dist\n   , float $azimuth\n   , float $incidence\n   , float $twist\n   )","desc":"\n   The  swf_polarview() function defines the\n   viewer's position in polar coordinates.  \n  "},"swf_popmatrix":{"version":"(PHP 4)","shortdesc":"Restore a previous transformation matrix","syntax":"\n   void <b>swf_popmatrix<\/b>\n    ( void\n   )","desc":"\n   Restores a previous transformation matrix.\n  "},"swf_posround":{"version":"(PHP 4)","shortdesc":"Enables or Disables the rounding of the translation when objects are placed or moved","syntax":"\n   void <b>swf_posround<\/b>\n    ( int $round\n   )","desc":"\n   Enables or disables the rounding of the translation when objects are\n   placed or moved, there are times when text becomes more readable because\n   rounding has been enabled.  \n  "},"swf_pushmatrix":{"version":"(PHP 4)","shortdesc":"Push the current transformation matrix back onto the stack","syntax":"\n   void <b>swf_pushmatrix<\/b>\n    ( void\n   )","desc":"\n   Pushes the current transformation matrix back onto the stack.\n  "},"swf_removeobject":{"version":"(PHP 4)","shortdesc":"Remove an object","syntax":"\n   void <b>swf_removeobject<\/b>\n    ( int $depth\n   )","desc":"\n   Removes the last object drawn at the depth specified by\n   depth.\n  "},"swf_rotate":{"version":"(PHP 4)","shortdesc":"Rotate the current transformation","syntax":"\n   void <b>swf_rotate<\/b>\n    ( float $angle\n   , string $axis\n   )","desc":"\n   Rotates the current transformation by a given angle\n   around the given axis.  \n  "},"swf_scale":{"version":"(PHP 4)","shortdesc":"Scale the current transformation","syntax":"\n   void <b>swf_scale<\/b>\n    ( float $x\n   , float $y\n   , float $z\n   )","desc":"\n   The  swf_scale() scales curve coordinates by the given\n   value.\n  "},"swf_setfont":{"version":"(PHP 4)","shortdesc":"Change the current font","syntax":"\n   void <b>swf_setfont<\/b>\n    ( int $fontid\n   )","desc":"\n   The  swf_setfont() sets the current font to the\n   value given by the fontid parameter.\n  "},"swf_setframe":{"version":"(PHP 4)","shortdesc":"Switch to a specified frame","syntax":"\n   void <b>swf_setframe<\/b>\n    ( int $framenumber\n   )","desc":"\n   Changes the active frame to the specified on.\n  "},"swf_shapearc":{"version":"(PHP 4)","shortdesc":"Draw a circular arc","syntax":"\n   void <b>swf_shapearc<\/b>\n    ( float $x\n   , float $y\n   , float $r\n   , float $ang1\n   , float $ang2\n   )","desc":"\n   Draws a circular arc. \n  "},"swf_shapecurveto":{"version":"(PHP 4)","shortdesc":"Draw a quadratic bezier curve between two points","syntax":"\n   void <b>swf_shapecurveto<\/b>\n    ( float $x1\n   , float $y1\n   , float $x2\n   , float $y2\n   )","desc":"\n   Draws a quadratic bezier curve from the current location, though the\n   two given points.\n  "},"swf_shapecurveto3":{"version":"(PHP 4)","shortdesc":"Draw a cubic bezier curve","syntax":"\n   void <b>swf_shapecurveto3<\/b>\n    ( float $x1\n   , float $y1\n   , float $x2\n   , float $y2\n   , float $x3\n   , float $y3\n   )","desc":"\n   Draw a cubic bezier curve using the given coordinates.\n  "},"swf_shapefillbitmapclip":{"version":"(PHP 4)","shortdesc":"Set current fill mode to clipped bitmap","syntax":"\n   void <b>swf_shapefillbitmapclip<\/b>\n    ( int $bitmapid\n   )","desc":"\n   Sets the fill to bitmap clipped, empty spaces will be filled by the\n   bitmap.\n  "},"swf_shapefillbitmaptile":{"version":"(PHP 4)","shortdesc":"Set current fill mode to tiled bitmap","syntax":"\n   void <b>swf_shapefillbitmaptile<\/b>\n    ( int $bitmapid\n   )","desc":"\n   Sets the fill to bitmap tile, empty spaces will be filled by the\n   bitmap.\n  "},"swf_shapefilloff":{"version":"(PHP 4)","shortdesc":"Turns off filling","syntax":"\n   void <b>swf_shapefilloff<\/b>\n    ( void\n   )","desc":"\n   Turns off filling for the current shape.\n  "},"swf_shapefillsolid":{"version":"(PHP 4)","shortdesc":"Set the current fill style to the specified color","syntax":"\n   void <b>swf_shapefillsolid<\/b>\n    ( float $r\n   , float $g\n   , float $b\n   , float $a\n   )","desc":"\n   Sets the current fill style to solid, and then sets the fill color to the\n   given color.\n  "},"swf_shapelinesolid":{"version":"(PHP 4)","shortdesc":"Set the current line style","syntax":"\n   void <b>swf_shapelinesolid<\/b>\n    ( float $r\n   , float $g\n   , float $b\n   , float $a\n   , float $width\n   )","desc":"\n   Sets the current line style to the given color and width.\n  "},"swf_shapelineto":{"version":"(PHP 4)","shortdesc":"Draw a line","syntax":"\n   void <b>swf_shapelineto<\/b>\n    ( float $x\n   , float $y\n   )","desc":"\n   Draws a line to the x and y\n   coordinates. The current position is then set to that point.\n  "},"swf_shapemoveto":{"version":"(PHP 4)","shortdesc":"Move the current position","syntax":"\n   void <b>swf_shapemoveto<\/b>\n    ( float $x\n   , float $y\n   )","desc":"\n   Moves the current position to the given point.\n  "},"swf_showframe":{"version":"(PHP 4)","shortdesc":"Display the current frame","syntax":"\n   void <b>swf_showframe<\/b>\n    ( void\n   )","desc":"\n   Outputs the current frame.\n  "},"swf_startbutton":{"version":"(PHP 4)","shortdesc":"Start the definition of a button","syntax":"\n   void <b>swf_startbutton<\/b>\n    ( int $objid\n   , int $type\n   )","desc":"\n   Starts the definition of a button.\n  "},"swf_startdoaction":{"version":"(PHP 4)","shortdesc":"Start a description of an action list for the current frame","syntax":"\n   void <b>swf_startdoaction<\/b>\n    ( void\n   )","desc":"\n   Starts the description of an action list for the current frame.  This\n   must be called before actions are defined for the current frame.\n  "},"swf_startshape":{"version":"(PHP 4)","shortdesc":"Start a complex shape","syntax":"\n   void <b>swf_startshape<\/b>\n    ( int $objid\n   )","desc":"\n   Starts a complex shape.\n  "},"swf_startsymbol":{"version":"(PHP 4)","shortdesc":"Define a symbol","syntax":"\n   void <b>swf_startsymbol<\/b>\n    ( int $objid\n   )","desc":"\n   Defines an object id as a symbol.  Symbols are tiny flash movies that can\n   be played simultaneously.\n  "},"swf_textwidth":{"version":"(PHP 4)","shortdesc":"Get the width of a string","syntax":"\n   float <b>swf_textwidth<\/b>\n    ( string $str\n   )","desc":"\n   Gives the width of the string in pixels, using the current font and font\n   size.\n  "},"swf_translate":{"version":"(PHP 4)","shortdesc":"Translate the current transformations","syntax":"\n   void <b>swf_translate<\/b>\n    ( float $x\n   , float $y\n   , float $z\n   )","desc":"\n   Translates the current transformation by the given values.\n  "},"swf_viewport":{"version":"(PHP 4)","shortdesc":"Select an area for future drawing","syntax":"\n   void <b>swf_viewport<\/b>\n    ( float $xmin\n   , float $xmax\n   , float $ymin\n   , float $ymax\n   )","desc":"\n   Selects an area for future drawing for xmin to\n   xmax and ymin to\n   ymax, if this function is not called the\n   area defaults to the size of the screen.\n  "},"sybase_affected_rows":{"version":"(PHP 4, PHP 5)","shortdesc":"Gets number of affected rows in last query","syntax":"\n   int <b>sybase_affected_rows<\/b>\n    ([ resource $link_identifier\n  ] )","desc":"\n    sybase_affected_rows() returns the number of\n   rows affected by the last INSERT, UPDATE or DELETE query on the\n   server associated with the specified link identifier.  \n  "},"sybase_close":{"version":"(PHP 4, PHP 5)","shortdesc":"Closes a Sybase connection","syntax":"\n   bool <b>sybase_close<\/b>\n    ([ resource $link_identifier\n  ] )","desc":"\n    sybase_close() closes the link to a Sybase\n   database that's associated with the specified link\n   link_identifier.\n  "},"sybase_connect":{"version":"(PHP 4, PHP 5)","shortdesc":"Opens a Sybase server connection","syntax":"\n   resource <b>sybase_connect<\/b>\n    ([ string $servername\n   [, string $username\n   [, string $password\n   [, string $charset\n   [, string $appname\n   [, bool $new = false\n  ]]]]]] )","desc":"\n    sybase_connect() establishes a connection to a\n   Sybase server. \n  "},"sybase_data_seek":{"version":"(PHP 4, PHP 5)","shortdesc":"Moves internal row pointer","syntax":"\n   bool <b>sybase_data_seek<\/b>\n    ( resource $result_identifier\n   , int $row_number\n   )","desc":"\n    sybase_data_seek() moves the internal row\n   pointer of the Sybase result associated with the specified result\n   identifier to pointer to the specified row number.  The next call\n   to  sybase_fetch_row() would return that row.\n  "},"sybase_deadlock_retry_count":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Sets the deadlock retry count","syntax":"\n   void <b>sybase_deadlock_retry_count<\/b>\n    ( int $retry_count\n   )","desc":"\n   Using  sybase_deadlock_retry_count(), the number of retries\n   can be defined in cases of deadlocks. By default, every deadlock is retried\n   an infinite number of times or until the process is killed by Sybase, the\n   executing script is killed (for instance, by  set_time_limit())\n   or the query succeeds.\n  "},"sybase_fetch_array":{"version":"(PHP 4, PHP 5)","shortdesc":"Fetch row as array","syntax":"\n   array <b>sybase_fetch_array<\/b>\n    ( resource $result\n   )","desc":"\n    sybase_fetch_array() is an extended version of\n    sybase_fetch_row().  In addition to storing the\n   data in the numeric indices of the result array, it also stores\n   the data in associative indices, using the field names as keys.\n  "},"sybase_fetch_assoc":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Fetch a result row as an associative array","syntax":"\n   array <b>sybase_fetch_assoc<\/b>\n    ( resource $result\n   )","desc":"\n    sybase_fetch_assoc() is a version of\n    sybase_fetch_row() that uses column names\n   instead of integers for indices in the result array. Columns from\n   different tables with the same names are returned as\n   name, name1, name2, ..., nameN.\n  "},"sybase_fetch_field":{"version":"(PHP 4, PHP 5)","shortdesc":"Get field information from a result","syntax":"\n   object <b>sybase_fetch_field<\/b>\n    ( resource $result\n   [, int $field_offset = -1\n  ] )","desc":"\n    sybase_fetch_field() can be used in order to\n   obtain information about fields in a certain query result. \n  "},"sybase_fetch_object":{"version":"(PHP 4, PHP 5)","shortdesc":"Fetch a row as an object","syntax":"\n   object <b>sybase_fetch_object<\/b>\n    ( resource $result\n   [, mixed $object\n  ] )","desc":"\n    sybase_fetch_object() is similar to\n    sybase_fetch_assoc(), with one difference - an object\n   is returned, instead of an array.\n  "},"sybase_fetch_row":{"version":"(PHP 4, PHP 5)","shortdesc":"Get a result row as an enumerated array","syntax":"\n   array <b>sybase_fetch_row<\/b>\n    ( resource $result\n   )","desc":"\n    sybase_fetch_row() fetches one row of data\n   from the result associated with the specified result identifier.\n  "},"sybase_field_seek":{"version":"(PHP 4, PHP 5)","shortdesc":"Sets field offset","syntax":"\n   bool <b>sybase_field_seek<\/b>\n    ( resource $result\n   , int $field_offset\n   )","desc":"\n   Seeks to the specified field offset.  If the next call to\n    sybase_fetch_field() won't include a field\n   offset, this field would be returned.\n  "},"sybase_free_result":{"version":"(PHP 4, PHP 5)","shortdesc":"Frees result memory","syntax":"\n   bool <b>sybase_free_result<\/b>\n    ( resource $result\n   )","desc":"\n    sybase_free_result() only needs to be called\n   if you are worried about using too much memory while your script\n   is running. All result memory will automatically be freed when\n   the script ends. You may call  sybase_free_result()\n   with the result identifier as an argument and the associated\n   result memory will be freed.\n  "},"sybase_get_last_message":{"version":"(PHP 4, PHP 5)","shortdesc":"Returns the last message from the server","syntax":"\n   string <b>sybase_get_last_message<\/b>\n    ( void\n   )","desc":"\n    sybase_get_last_message() returns the last\n   message reported by the server.\n  "},"sybase_min_client_severity":{"version":"(PHP 4, PHP 5)","shortdesc":"Sets minimum client severity","syntax":"\n   void <b>sybase_min_client_severity<\/b>\n    ( int $severity\n   )","desc":"\n    sybase_min_client_severity() sets the minimum\n   client severity level.\n  "},"sybase_min_error_severity":{"version":"(PHP 4, PHP 5)","shortdesc":"Sets minimum error severity","syntax":"\n   void <b>sybase_min_error_severity<\/b>\n    ( int $severity\n   )","desc":"\n    sybase_min_error_severity() sets the minimum\n   error severity level.\n  "},"sybase_min_message_severity":{"version":"(PHP 4, PHP 5)","shortdesc":"Sets minimum message severity","syntax":"\n   void <b>sybase_min_message_severity<\/b>\n    ( int $severity\n   )","desc":"\n    sybase_min_message_severity() sets the minimum\n   message severity level.\n  "},"sybase_min_server_severity":{"version":"(PHP 4, PHP 5)","shortdesc":"Sets minimum server severity","syntax":"\n   void <b>sybase_min_server_severity<\/b>\n    ( int $severity\n   )","desc":"\n    sybase_min_server_severity() sets the minimum\n   server severity level.\n  "},"sybase_num_fields":{"version":"(PHP 4, PHP 5)","shortdesc":"Gets the number of fields in a result set","syntax":"\n   int <b>sybase_num_fields<\/b>\n    ( resource $result\n   )","desc":"\n    sybase_num_fields() returns the number of fields in a\n   result set.\n  "},"sybase_num_rows":{"version":"(PHP 4, PHP 5)","shortdesc":"Get number of rows in a result set","syntax":"\n   int <b>sybase_num_rows<\/b>\n    ( resource $result\n   )","desc":"\n    sybase_num_rows() returns the number of rows in a\n   result set.\n  "},"sybase_pconnect":{"version":"(PHP 4, PHP 5)","shortdesc":"Open persistent Sybase connection","syntax":"\n   resource <b>sybase_pconnect<\/b>\n    ([ string $servername\n   [, string $username\n   [, string $password\n   [, string $charset\n   [, string $appname\n  ]]]]] )","desc":"\n    sybase_pconnect() acts very much like\n    sybase_connect() with two major differences.\n  "},"sybase_query":{"version":"(PHP 4, PHP 5)","shortdesc":"Sends a Sybase query","syntax":"\n   mixed <b>sybase_query<\/b>\n    ( string $query\n   [, resource $link_identifier\n  ] )","desc":"\n    sybase_query() sends a query to the currently\n   active database on the server that's associated with the specified\n   link identifier.\n  "},"sybase_result":{"version":"(PHP 4, PHP 5)","shortdesc":"Get result data","syntax":"\n   string <b>sybase_result<\/b>\n    ( resource $result\n   , int $row\n   , mixed $field\n   )","desc":"\n   Returns the contents of the cell at the row and offset in\n   the specified Sybase result set.\n  "},"sybase_select_db":{"version":"(PHP 4, PHP 5)","shortdesc":"Selects a Sybase database","syntax":"\n   bool <b>sybase_select_db<\/b>\n    ( string $database_name\n   [, resource $link_identifier\n  ] )","desc":"\n    sybase_select_db() sets the current active\n   database on the server that's associated with the specified link\n   identifier.  \n  "},"sybase_set_message_handler":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Sets the handler called when a server message is raised","syntax":"\n   bool <b>sybase_set_message_handler<\/b>\n    ( callable $handler\n   [, resource $link_identifier\n  ] )","desc":"\n    sybase_set_message_handler() sets a user function to\n   handle messages generated by the server. You may specify the name of a\n   global function, or use an array to specify an object reference and a\n   method name.\n  "},"sybase_unbuffered_query":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"Send a Sybase query and do not block","syntax":"\n   resource <b>sybase_unbuffered_query<\/b>\n    ( string $query\n   , resource $link_identifier\n   [, bool $store_result\n  ] )","desc":"\n    sybase_unbuffered_query() sends a query to the\n   currently active database on the server that's associated with the specified\n   link identifier.  If the link identifier isn't specified, the last\n   opened link is assumed.  If no link is open, the function tries to\n   establish a link as if  sybase_connect() was\n   called, and use it.\n  "},"symlink":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0441\u0441\u044b\u043b\u043a\u0443","syntax":"\n   bool <b>symlink<\/b>\n    ( string $target\n   , string $link\n   )","desc":"\n    symlink() \u0441\u043e\u0437\u0434\u0430\u0451\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0441\u0441\u044b\u043b\u043a\u0443\n   \u043d\u0430 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0444\u0430\u0439\u043b target\n   \u0441 \u0438\u043c\u0435\u043d\u0435\u043c link.\n  "},"sys_get_temp_dir":{"version":"(PHP 5 >= 5.2.1)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0443\u0442\u044c \u043a \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432\n  ","syntax":"\n   string <b>sys_get_temp_dir<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0443\u0442\u044c \u043a \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438, \u0433\u0434\u0435 PHP \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0445\u0440\u0430\u043d\u0438\u0442 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0444\u0430\u0439\u043b\u044b.\n  "},"sys_getloadavg":{"version":"(PHP 5 >= 5.1.3)","shortdesc":"\u041f\u043e\u0443\u043b\u0447\u0430\u0435\u0442 \u0441\u0440\u0435\u0434\u043d\u044e\u044e \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0443 \u0441\u0438\u0441\u0442\u0435\u043c\u044b","syntax":"\n   array <b>sys_getloadavg<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0440\u0435\u0434\u043d\u0435\u0439 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u044b (\u0447\u0438\u0441\u043b\u043e \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0432 \u0432\n   \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0445 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0432) \u0447\u0435\u0440\u0435\u0437 1, 5 \u0438 15 \u043c\u0438\u043d\u0443\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e.\n  "},"syslog":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u0433\u043e \u0436\u0443\u0440\u043d\u0430\u043b\u0430","syntax":"\n   bool <b>syslog<\/b>\n    ( int $priority\n   , string $message\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  syslog() \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0439 \u0436\u0443\u0440\u043d\u0430\u043b.\n  "},"system":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0432\u043d\u0435\u0448\u043d\u044e\u044e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0435\u0451 \u0432\u044b\u0432\u043e\u0434","syntax":"\n   string <b>system<\/b>\n    ( string $command\n   [, int &$return_var\n  ] )","desc":"\n    system() \u043f\u043e\u0445\u043e\u0436\u0430 \u043d\u0430 C-\u0432\u0435\u0440\u0441\u0438\u044e \u044d\u0442\u043e\u0439\n   \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u043e\u043d\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u043a\u043e\u043c\u0430\u043d\u0434\u0443\n   command \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0435\u0451 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.\n  "},"taint":{"version":"(PECL taint >=0.1.0)","shortdesc":"Taint a string","syntax":"\n   bool <b>taint<\/b>\n    ( string &$string\n   [, string $...\n  ] )","desc":"\n   Make a string tainted. This is used for testing purpose only.\n  "},"tan":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0422\u0430\u043d\u0433\u0435\u043d\u0441","syntax":"\n    float <b>tan<\/b>\n     ( float $arg\n    )","desc":"\n    tan() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0430\u043d\u0433\u0435\u043d\u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 arg.\n  \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 arg \u0437\u0430\u0434\u0430\u0451\u0442\u0441\u044f \u0432 \u0440\u0430\u0434\u0438\u0430\u043d\u0430\u0445.\n  "},"tanh":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0413\u0438\u043f\u0435\u0440\u0431\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0442\u0430\u043d\u0433\u0435\u043d\u0441","syntax":"\n    float <b>tanh<\/b>\n     ( float $arg\n    )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0433\u0438\u043f\u0435\u0440\u0431\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0442\u0430\u043d\u0433\u0435\u043d\u0441 arg,\n   \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c\u044b\u0439 \u043a\u0430\u043a sinh(arg)\/cosh(arg).\n  "},"tcpwrap_check":{"version":"(PECL tcpwrap >= 0.1.0)","shortdesc":"Performs a tcpwrap check","syntax":"\n   bool <b>tcpwrap_check<\/b>\n    ( string $daemon\n   , string $address\n   [, string $user\n   [, bool $nodns = false\n  ]] )","desc":"\n   This function consults the \/etc\/hosts.allow and \n   \/etc\/hosts.deny files to check if access to service \n   daemon should be granted or denied for a client.\n  "},"tempnam":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u0444\u0430\u0439\u043b \u0441 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u043c \u0438\u043c\u0435\u043d\u0435\u043c","syntax":"\n   string <b>tempnam<\/b>\n    ( string $dir\n   , string $prefix\n   )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u0444\u0430\u0439\u043b \u0441 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0441 \u043f\u0440\u0430\u0432\u0430\u043c\u0438\n   0600. \u0415\u0441\u043b\u0438 \u044d\u0442\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f \u043d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442,  tempnam()\n   \u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0444\u0430\u0439\u043b \u0432\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0438 \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u0435\u0433\u043e \u0438\u043c\u044f.\n  "},"textdomain":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0434\u043e\u043c\u0435\u043d \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e","syntax":"\n      string <b>textdomain<\/b>\n       ( string $text_domain\n      )","desc":"\n     \u0414\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0434\u043e\u043c\u0435\u043d, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u044c\u0441\u044f\n     \u043f\u043e\u0438\u0441\u043a \u043f\u0440\u0438 \u0432\u044b\u0437\u043e\u0432\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438  gettext(), \u043e\u0431\u044b\u0447\u043d\u043e \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0438\u043c\u0435\u043d\u0435\u043c\n     \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\n    "},"tidy_access_count":{"version":"(PHP 5, PECL tidy >= 0.5.2)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0439 Tidy, \u0432\u0441\u0442\u0440\u0435\u0442\u0438\u0432\u0448\u0438\u0445\u0441\u044f \u0432 \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u043d\u043e\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0435","syntax":"\n   int <b>tidy_access_count<\/b>\n    ( tidy $object\n   )","desc":"\n    tidy_access_count() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0439, \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0445 \u0432 \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u043d\u043e\u043c\n   \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0435.\n  "},"tidy_config_count":{"version":"(PHP 5, PECL tidy >= 0.5.2)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u043e\u0448\u0438\u0431\u043e\u043a \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 Tidy, \u0432\u0441\u0442\u0440\u0435\u0442\u0438\u0432\u0448\u0438\u0445\u0441\u044f \u043f\u0440\u0438 \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430","syntax":"\n   int <b>tidy_config_count<\/b>\n    ( tidy $object\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u043e\u0448\u0438\u0431\u043e\u043a \u0432 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 tidy.\n  "},"tidy_error_count":{"version":"(PHP 5, PECL tidy >= 0.5.2)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u043e\u0448\u0438\u0431\u043e\u043a Tidy, \u0432\u0441\u0442\u0440\u0435\u0442\u0438\u0432\u0448\u0438\u0445\u0441\u044f \u043f\u0440\u0438 \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430","syntax":"\n   int <b>tidy_error_count<\/b>\n    ( tidy $object\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u043e\u0448\u0438\u0431\u043e\u043a Tidy, \u0432\u0441\u0442\u0440\u0435\u0442\u0438\u0432\u0448\u0438\u0445\u0441\u044f \u043f\u0440\u0438 \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430.\n  "},"tidy_get_output":{"version":"(PHP 5, PECL tidy >= 0.5.2)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0443\u044e \u0440\u0430\u0437\u043e\u0431\u0440\u0430\u043d\u043d\u0443\u044e tidy-\u0440\u0430\u0437\u043c\u0435\u0442\u043a\u0443","syntax":"\n   string <b>tidy_get_output<\/b>\n    ( tidy $object\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u043c html.\n  "},"tidy_load_config":{"version":"(PECL tidy >= 0.5.2)","shortdesc":"\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b ASCII Tidy \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u043e\u0439","syntax":"\n   void <b>tidy_load_config<\/b>\n    ( string $filename\n   , string $encoding\n   )","desc":"\n   \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b Tidy \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u043e\u0439\n   encoding.\n  "},"tidy_reset_config":{"version":"(PECL tidy >= 0.7.0)","shortdesc":"\u0421\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044e Tidy \u0432 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f","syntax":"\n   bool <b>tidy_reset_config<\/b>\n    ( void\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044e Tidy \u0432 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.\n  "},"tidy_save_config":{"version":"(PECL tidy >= 0.5.2)","shortdesc":"\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0432 \u0444\u0430\u0439\u043b","syntax":"\n   bool <b>tidy_save_config<\/b>\n    ( string $filename\n   )","desc":"\n   \u0421\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b. \u0417\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f,\n   \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0442\u0441\u044f \u043e\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e.\n  "},"tidy_set_encoding":{"version":"(PECL tidy >= 0.5.2)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0432\u0445\u043e\u0434\u043d\u0443\u044e\/\u0432\u044b\u0445\u043e\u0434\u043d\u0443\u044e \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u0440\u0430\u0437\u043c\u0435\u0442\u043a\u0438","syntax":"\n   bool <b>tidy_set_encoding<\/b>\n    ( string $encoding\n   )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443 \u0434\u043b\u044f \u0432\u0445\u043e\u0434\u043d\u044b\u0445\/\u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432.\n  "},"tidy_setopt":{"version":"(PECL tidy >= 0.5.2)","shortdesc":"\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 tidy","syntax":"\n   bool <b>tidy_setopt<\/b>\n    ( string $option\n   , mixed $value\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  tidy_setopt() \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u043e\u043f\u0446\u0438\u044e\n   option \u043d\u043e\u0432\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c value.\n  "},"tidy_warning_count":{"version":"(PHP 5, PECL tidy >= 0.5.2)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e Tidy-\u043f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0439, \u0432\u0441\u0442\u0440\u0435\u0447\u0435\u043d\u043d\u044b\u0445 \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0435","syntax":"\n   int <b>tidy_warning_count<\/b>\n    ( tidy $object\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e Tidy-\u043f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0439, \u0432\u0441\u0442\u0440\u0435\u0447\u0435\u043d\u043d\u044b\u0445 \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0435.\n  "},"time_nanosleep":{"version":"(PHP 5)","shortdesc":"\u041e\u0442\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0441\u0435\u043a\u0443\u043d\u0434 \u0438 \u043d\u0430\u043d\u043e\u0441\u0435\u043a\u0443\u043d\u0434","syntax":"\n   mixed <b>time_nanosleep<\/b>\n    ( int $seconds\n   , int $nanoseconds\n   )","desc":"\n   \u041e\u0442\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445\n   seconds \u0438 nanoseconds\n   \u0447\u0438\u0441\u043b\u043e \u0441\u0435\u043a\u0443\u043d\u0434 \u0438 \u043d\u0430\u043d\u043e\u0441\u0435\u043a\u0443\u043d\u0434 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e.\n  "},"time_sleep_until":{"version":"(PHP 5 >= 5.1.0)","shortdesc":"\n   \u041e\u0442\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u0430 \u0434\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438\n  ","syntax":"\n   bool <b>time_sleep_until<\/b>\n    ( float $timestamp\n   )","desc":"\n   \u041e\u0442\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u0430 \u0434\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043e\u0442\u043c\u0435\u0442\u043a\u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u0432\n   \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 timestamp.\n  "},"time":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u043c\u0435\u0442\u043a\u0443 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 Unix","syntax":"\n   int <b>time<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0435\u043a\u0443\u043d\u0434, \u043f\u0440\u043e\u0448\u0435\u0434\u0448\u0438\u0445 \u0441 \u043d\u0430\u0447\u0430\u043b\u0430 \u042d\u043f\u043e\u0445\u0438 Unix (The Unix\n   Epoch, 1 \u044f\u043d\u0432\u0430\u0440\u044f 1970 00:00:00 GMT) \u0434\u043e \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438.\n  "},"timezone_abbreviations_list":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateTimeZone::listAbbreviations()","syntax":"","desc":""},"timezone_identifiers_list":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateTimeZone::listIdentifiers()","syntax":"","desc":""},"timezone_location_get":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateTimeZone::getLocation()","syntax":"","desc":""},"timezone_name_from_abbr":{"version":"(PHP 5 >= 5.1.3)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0437\u043e\u043d\u0443 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0430\u0431\u0431\u0440\u0435\u0432\u0438\u0430\u0442\u0443\u0440\u043e\u0439\n  ","syntax":"\n   string <b>timezone_name_from_abbr<\/b>\n    ( string $abbr\n   [, int $gmtOffset = -1\n   [, int $isdst = -1\n  ]] )","desc":""},"timezone_name_get":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateTimeZone::getName()","syntax":"","desc":""},"timezone_offset_get":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateTimeZone::getOffset()","syntax":"","desc":""},"timezone_open":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateTimeZone::__construct()","syntax":"","desc":""},"timezone_transitions_get":{"version":"(PHP 5 >= 5.2.0)","shortdesc":"\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c  DateTimeZone::getTransitions()","syntax":"","desc":""},"timezone_version_get":{"version":"(PHP 5 >= 5.3.0)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u043e\u043c\u0435\u0440\u0430 \u0432\u0435\u0440\u0441\u0438\u0438 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0437\u043e\u043d\n  ","syntax":"\n   string <b>timezone_version_get<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u043e\u043c\u0435\u0440 \u0432\u0435\u0440\u0441\u0438\u0438 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0437\u043e\u043d.\n  "},"tmpfile":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b","syntax":"\n   resource <b>tmpfile<\/b>\n    ( void\n   )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u0441 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u043c \u0438\u043c\u0435\u043d\u0435\u043c, \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u044f \u0435\u0433\u043e \u0432 \u0440\u0435\u0436\u0438\u043c\u0435\n   \u0447\u0442\u0435\u043d\u0438\u044f \u0438 \u0437\u0430\u043f\u0438\u0441\u0438 (w+), \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0444\u0430\u0439\u043b\u043e\u0432\u044b\u0439 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c.\n  "},"token_get_all":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0420\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u043a\u043e\u0434 \u043d\u0430 PHP-\u043b\u0435\u043a\u0441\u0435\u043c\u044b","syntax":"\n   array <b>token_get_all<\/b>\n    ( string $source\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  token_get_all() \u0440\u0430\u0437\u0431\u0438\u0440\u0430\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 source \n   \u0432 \u044f\u0437\u044b\u043a\u043e\u0432\u044b\u0435 \u043b\u0435\u043a\u0441\u0435\u043c\u044b PHP \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043b\u0435\u043a\u0441\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0441\u043a\u0430\u043d\u0435\u0440 Zend Engine.\n  "},"token_name":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\u044c\u043d\u043e\u0435 \u0438\u043c\u044f \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0439 PHP-\u043b\u0435\u043a\u0441\u0435\u043c\u044b","syntax":"\n   string <b>token_name<\/b>\n    ( int $token\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  token_name() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\u044c\u043d\u043e\u0435 \u0438\u043c\u044f \u0434\u043b\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f PHP-\u043b\u0435\u043a\u0441\u0435\u043c\u044b \n   token. \n  "},"touch":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u0438 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0444\u0430\u0439\u043b\u0430","syntax":"\n   bool <b>touch<\/b>\n    ( string $filename\n   [, int $time = time()\n   [, int $atime\n  ]] )","desc":"\n   \u041f\u044b\u0442\u0430\u0435\u0442\u0441\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432\u0440\u0435\u043c\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u0438 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0444\u0430\u0439\u043b\u0430 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c\n   filename \u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 time.\n   \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0432\u0440\u0435\u043c\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u0432\u0441\u0435\u0433\u0434\u0430, \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e \u043e\u0442\n   \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432.\n  "},"trader_acos":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Vector Trigonometric ACos","syntax":"\n   array <b>trader_acos<\/b>\n    ( array $real\n   )","desc":"\n   Calculates the arc cosine for each value in\n   real and returns the resulting array.\n  "},"trader_ad":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Chaikin A\/D Line","syntax":"\n   array <b>trader_ad<\/b>\n    ( array $high\n   , array $low\n   , array $close\n   , array $volume\n   )","desc":"\n\n  "},"trader_add":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Vector Arithmetic Add","syntax":"\n   array <b>trader_add<\/b>\n    ( array $real0\n   , array $real1\n   )","desc":"\n   Calculates the vector addition of real0 to\n   real1 and returns the resulting vector.\n  "},"trader_adosc":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Chaikin A\/D Oscillator","syntax":"\n   array <b>trader_adosc<\/b>\n    ( array $high\n   , array $low\n   , array $close\n   , array $volume\n   [, integer $fastPeriod\n   [, integer $slowPeriod\n  ]] )","desc":"\n\n  "},"trader_adx":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Average Directional Movement Index","syntax":"\n   array <b>trader_adx<\/b>\n    ( array $high\n   , array $low\n   , array $close\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_adxr":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Average Directional Movement Index Rating","syntax":"\n   array <b>trader_adxr<\/b>\n    ( array $high\n   , array $low\n   , array $close\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_apo":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Absolute Price Oscillator","syntax":"\n   array <b>trader_apo<\/b>\n    ( array $real\n   [, integer $fastPeriod\n   [, integer $slowPeriod\n   [, integer $mAType\n  ]]] )","desc":"\n\n  "},"trader_aroon":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Aroon","syntax":"\n   array <b>trader_aroon<\/b>\n    ( array $high\n   , array $low\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_aroonosc":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Aroon Oscillator","syntax":"\n   array <b>trader_aroonosc<\/b>\n    ( array $high\n   , array $low\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_asin":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Vector Trigonometric ASin","syntax":"\n   array <b>trader_asin<\/b>\n    ( array $real\n   )","desc":"\n   Calculates the arc sine for each value in\n   real and returns the resulting array.\n  "},"trader_atan":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Vector Trigonometric ATan","syntax":"\n   array <b>trader_atan<\/b>\n    ( array $real\n   )","desc":"\n   Calculates the arc tangent for each value in\n   real and returns the resulting array.\n  "},"trader_atr":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Average True Range","syntax":"\n   array <b>trader_atr<\/b>\n    ( array $high\n   , array $low\n   , array $close\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_avgprice":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Average Price","syntax":"\n   array <b>trader_avgprice<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_bbands":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Bollinger Bands","syntax":"\n   array <b>trader_bbands<\/b>\n    ( array $real\n   [, integer $timePeriod\n   [, float $nbDevUp\n   [, float $nbDevDn\n   [, integer $mAType\n  ]]]] )","desc":"\n\n  "},"trader_beta":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Beta","syntax":"\n   array <b>trader_beta<\/b>\n    ( array $real0\n   , array $real1\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_bop":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Balance Of Power","syntax":"\n   array <b>trader_bop<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cci":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Commodity Channel Index","syntax":"\n   array <b>trader_cci<\/b>\n    ( array $high\n   , array $low\n   , array $close\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_cdl2crows":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Two Crows","syntax":"\n   array <b>trader_cdl2crows<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdl3blackcrows":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Three Black Crows","syntax":"\n   array <b>trader_cdl3blackcrows<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdl3inside":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Three Inside Up\/Down","syntax":"\n   array <b>trader_cdl3inside<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdl3linestrike":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Three-Line Strike","syntax":"\n   array <b>trader_cdl3linestrike<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdl3outside":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Three Outside Up\/Down","syntax":"\n   array <b>trader_cdl3outside<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdl3starsinsouth":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Three Stars In The South","syntax":"\n   array <b>trader_cdl3starsinsouth<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdl3whitesoldiers":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Three Advancing White Soldiers","syntax":"\n   array <b>trader_cdl3whitesoldiers<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlabandonedbaby":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Abandoned Baby","syntax":"\n   array <b>trader_cdlabandonedbaby<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   [, float $penetration\n  ] )","desc":"\n\n  "},"trader_cdladvanceblock":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Advance Block","syntax":"\n   array <b>trader_cdladvanceblock<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlbelthold":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Belt-hold","syntax":"\n   array <b>trader_cdlbelthold<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlbreakaway":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Breakaway","syntax":"\n   array <b>trader_cdlbreakaway<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlclosingmarubozu":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Closing Marubozu","syntax":"\n   array <b>trader_cdlclosingmarubozu<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlconcealbabyswall":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Concealing Baby Swallow","syntax":"\n   array <b>trader_cdlconcealbabyswall<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlcounterattack":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Counterattack","syntax":"\n   array <b>trader_cdlcounterattack<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdldarkcloudcover":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Dark Cloud Cover","syntax":"\n   array <b>trader_cdldarkcloudcover<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   [, float $penetration\n  ] )","desc":"\n\n  "},"trader_cdldoji":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Doji","syntax":"\n   array <b>trader_cdldoji<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdldojistar":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Doji Star","syntax":"\n   array <b>trader_cdldojistar<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdldragonflydoji":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Dragonfly Doji","syntax":"\n   array <b>trader_cdldragonflydoji<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlengulfing":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Engulfing Pattern","syntax":"\n   array <b>trader_cdlengulfing<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdleveningdojistar":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Evening Doji Star","syntax":"\n   array <b>trader_cdleveningdojistar<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   [, float $penetration\n  ] )","desc":"\n\n  "},"trader_cdleveningstar":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Evening Star","syntax":"\n   array <b>trader_cdleveningstar<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   [, float $penetration\n  ] )","desc":"\n\n  "},"trader_cdlgapsidesidewhite":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Up\/Down-gap side-by-side white lines","syntax":"\n   array <b>trader_cdlgapsidesidewhite<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlgravestonedoji":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Gravestone Doji","syntax":"\n   array <b>trader_cdlgravestonedoji<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlhammer":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Hammer","syntax":"\n   array <b>trader_cdlhammer<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlhangingman":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Hanging Man","syntax":"\n   array <b>trader_cdlhangingman<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlharami":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Harami Pattern","syntax":"\n   array <b>trader_cdlharami<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlharamicross":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Harami Cross Pattern","syntax":"\n   array <b>trader_cdlharamicross<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlhighwave":{"version":"(PECL trader >= 0.2.0)","shortdesc":"High-Wave Candle","syntax":"\n   array <b>trader_cdlhighwave<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlhikkake":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Hikkake Pattern","syntax":"\n   array <b>trader_cdlhikkake<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlhikkakemod":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Modified Hikkake Pattern","syntax":"\n   array <b>trader_cdlhikkakemod<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlhomingpigeon":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Homing Pigeon","syntax":"\n   array <b>trader_cdlhomingpigeon<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlidentical3crows":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Identical Three Crows","syntax":"\n   array <b>trader_cdlidentical3crows<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlinneck":{"version":"(PECL trader >= 0.2.0)","shortdesc":"In-Neck Pattern","syntax":"\n   array <b>trader_cdlinneck<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlinvertedhammer":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Inverted Hammer","syntax":"\n   array <b>trader_cdlinvertedhammer<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlkicking":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Kicking","syntax":"\n   array <b>trader_cdlkicking<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlkickingbylength":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Kicking - bull\/bear determined by the longer marubozu","syntax":"\n   array <b>trader_cdlkickingbylength<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlladderbottom":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Ladder Bottom","syntax":"\n   array <b>trader_cdlladderbottom<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdllongleggeddoji":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Long Legged Doji","syntax":"\n   array <b>trader_cdllongleggeddoji<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdllongline":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Long Line Candle","syntax":"\n   array <b>trader_cdllongline<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlmarubozu":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Marubozu","syntax":"\n   array <b>trader_cdlmarubozu<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlmatchinglow":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Matching Low","syntax":"\n   array <b>trader_cdlmatchinglow<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlmathold":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Mat Hold","syntax":"\n   array <b>trader_cdlmathold<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   [, float $penetration\n  ] )","desc":"\n\n  "},"trader_cdlmorningdojistar":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Morning Doji Star","syntax":"\n   array <b>trader_cdlmorningdojistar<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   [, float $penetration\n  ] )","desc":"\n\n  "},"trader_cdlmorningstar":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Morning Star","syntax":"\n   array <b>trader_cdlmorningstar<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   [, float $penetration\n  ] )","desc":"\n\n  "},"trader_cdlonneck":{"version":"(PECL trader >= 0.2.0)","shortdesc":"On-Neck Pattern","syntax":"\n   array <b>trader_cdlonneck<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlpiercing":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Piercing Pattern","syntax":"\n   array <b>trader_cdlpiercing<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlrickshawman":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Rickshaw Man","syntax":"\n   array <b>trader_cdlrickshawman<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlrisefall3methods":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Rising\/Falling Three Methods","syntax":"\n   array <b>trader_cdlrisefall3methods<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlseparatinglines":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Separating Lines","syntax":"\n   array <b>trader_cdlseparatinglines<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlshootingstar":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Shooting Star","syntax":"\n   array <b>trader_cdlshootingstar<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlshortline":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Short Line Candle","syntax":"\n   array <b>trader_cdlshortline<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlspinningtop":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Spinning Top","syntax":"\n   array <b>trader_cdlspinningtop<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlstalledpattern":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Stalled Pattern","syntax":"\n   array <b>trader_cdlstalledpattern<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlsticksandwich":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Stick Sandwich","syntax":"\n   array <b>trader_cdlsticksandwich<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdltakuri":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Takuri (Dragonfly Doji with very long lower shadow)","syntax":"\n   array <b>trader_cdltakuri<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdltasukigap":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Tasuki Gap","syntax":"\n   array <b>trader_cdltasukigap<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlthrusting":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Thrusting Pattern","syntax":"\n   array <b>trader_cdlthrusting<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdltristar":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Tristar Pattern","syntax":"\n   array <b>trader_cdltristar<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlunique3river":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Unique 3 River","syntax":"\n   array <b>trader_cdlunique3river<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlupsidegap2crows":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Upside Gap Two Crows","syntax":"\n   array <b>trader_cdlupsidegap2crows<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_cdlxsidegap3methods":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Upside\/Downside Gap Three Methods","syntax":"\n   array <b>trader_cdlxsidegap3methods<\/b>\n    ( array $open\n   , array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_ceil":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Vector Ceil","syntax":"\n   array <b>trader_ceil<\/b>\n    ( array $real\n   )","desc":"\n   Calculates the next higest integer for each value in\n   real and returns the resulting array.\n  "},"trader_cmo":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Chande Momentum Oscillator","syntax":"\n   array <b>trader_cmo<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_correl":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Pearson's Correlation Coefficient (r)","syntax":"\n   array <b>trader_correl<\/b>\n    ( array $real0\n   , array $real1\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_cos":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Vector Trigonometric Cos","syntax":"\n   array <b>trader_cos<\/b>\n    ( array $real\n   )","desc":"\n   Calculates the cosine for each value in\n   real and returns the resulting array.\n  "},"trader_cosh":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Vector Trigonometric Cosh","syntax":"\n   array <b>trader_cosh<\/b>\n    ( array $real\n   )","desc":"\n   Calculates the hyperbolic cosine for each value in\n   real and returns the resulting array.\n  "},"trader_dema":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Double Exponential Moving Average","syntax":"\n   array <b>trader_dema<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_div":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Vector Arithmetic Div","syntax":"\n   array <b>trader_div<\/b>\n    ( array $real0\n   , array $real1\n   )","desc":"\n   Divides each value from real0 by the corresponding\n   value from real1 and returns the resulting array.\n  "},"trader_dx":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Directional Movement Index","syntax":"\n   array <b>trader_dx<\/b>\n    ( array $high\n   , array $low\n   , array $close\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_ema":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Exponential Moving Average","syntax":"\n   array <b>trader_ema<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_errno":{"version":"(PECL trader >= 0.3.0)","shortdesc":"Get error code","syntax":"\n   integer <b>trader_errno<\/b>\n    ( void\n   )","desc":"\n   Get error code of the last operation. \n  "},"trader_exp":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Vector Arithmetic Exp","syntax":"\n   array <b>trader_exp<\/b>\n    ( array $real\n   )","desc":"\n   Calculates e raised to the power of each value in real. Returns an array with the calculated data.\n  "},"trader_floor":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Vector Floor","syntax":"\n   array <b>trader_floor<\/b>\n    ( array $real\n   )","desc":"\n   Calculates the next lowest integer for each value in\n   real and returns the resulting array.\n  "},"trader_get_compat":{"version":"(PECL trader >= 0.2.2)","shortdesc":"Get compatibility mode","syntax":"\n   integer <b>trader_get_compat<\/b>\n    ( void\n   )","desc":"\n   Get compatibility mode which affects the way calculations are done by all the extension functions.\n  "},"trader_get_unstable_period":{"version":"(PECL trader >= 0.2.2)","shortdesc":"Get unstable period","syntax":"\n   integer <b>trader_get_unstable_period<\/b>\n    ( integer $functionId\n   )","desc":"\n   Get unstable period factor for a particular function.\n  "},"trader_ht_dcperiod":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Hilbert Transform - Dominant Cycle Period","syntax":"\n   array <b>trader_ht_dcperiod<\/b>\n    ( array $real\n   )","desc":"\n\n  "},"trader_ht_dcphase":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Hilbert Transform - Dominant Cycle Phase","syntax":"\n   array <b>trader_ht_dcphase<\/b>\n    ( array $real\n   )","desc":"\n\n  "},"trader_ht_phasor":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Hilbert Transform - Phasor Components","syntax":"\n   array <b>trader_ht_phasor<\/b>\n    ( array $real\n   )","desc":"\n\n  "},"trader_ht_sine":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Hilbert Transform - SineWave","syntax":"\n   array <b>trader_ht_sine<\/b>\n    ( array $real\n   )","desc":"\n\n  "},"trader_ht_trendline":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Hilbert Transform - Instantaneous Trendline","syntax":"\n   array <b>trader_ht_trendline<\/b>\n    ( array $real\n   )","desc":"\n\n  "},"trader_ht_trendmode":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Hilbert Transform - Trend vs Cycle Mode","syntax":"\n   array <b>trader_ht_trendmode<\/b>\n    ( array $real\n   )","desc":"\n\n  "},"trader_kama":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Kaufman Adaptive Moving Average","syntax":"\n   array <b>trader_kama<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_linearreg_angle":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Linear Regression Angle","syntax":"\n   array <b>trader_linearreg_angle<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_linearreg_intercept":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Linear Regression Intercept","syntax":"\n   array <b>trader_linearreg_intercept<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_linearreg_slope":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Linear Regression Slope","syntax":"\n   array <b>trader_linearreg_slope<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_linearreg":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Linear Regression","syntax":"\n   array <b>trader_linearreg<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_ln":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Vector Log Natural","syntax":"\n   array <b>trader_ln<\/b>\n    ( array $real\n   )","desc":"\n   Calculates the natural logarithm for each value in\n   real and returns the resulting array.\n  "},"trader_log10":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Vector Log10","syntax":"\n   array <b>trader_log10<\/b>\n    ( array $real\n   )","desc":"\n   Calculates the base-10 logarithm for each value in\n   real and returns the resulting array.\n  "},"trader_ma":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Moving average","syntax":"\n   array <b>trader_ma<\/b>\n    ( array $real\n   [, integer $timePeriod\n   [, integer $mAType\n  ]] )","desc":"\n\n  "},"trader_macd":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Moving Average Convergence\/Divergence","syntax":"\n   array <b>trader_macd<\/b>\n    ( array $real\n   [, integer $fastPeriod\n   [, integer $slowPeriod\n   [, integer $signalPeriod\n  ]]] )","desc":"\n\n  "},"trader_macdext":{"version":"(PECL trader >= 0.2.0)","shortdesc":"MACD with controllable MA type","syntax":"\n   array <b>trader_macdext<\/b>\n    ( array $real\n   [, integer $fastPeriod\n   [, integer $fastMAType\n   [, integer $slowPeriod\n   [, integer $slowMAType\n   [, integer $signalPeriod\n   [, integer $signalMAType\n  ]]]]]] )","desc":"\n\n  "},"trader_macdfix":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Moving Average Convergence\/Divergence Fix 12\/26","syntax":"\n   array <b>trader_macdfix<\/b>\n    ( array $real\n   [, integer $signalPeriod\n  ] )","desc":"\n\n  "},"trader_mama":{"version":"(PECL trader >= 0.2.0)","shortdesc":"MESA Adaptive Moving Average","syntax":"\n   array <b>trader_mama<\/b>\n    ( array $real\n   [, float $fastLimit\n   [, float $slowLimit\n  ]] )","desc":"\n\n  "},"trader_mavp":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Moving average with variable period","syntax":"\n   array <b>trader_mavp<\/b>\n    ( array $real\n   , array $periods\n   [, integer $minPeriod\n   [, integer $maxPeriod\n   [, integer $mAType\n  ]]] )","desc":"\n\n  "},"trader_max":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Highest value over a specified period","syntax":"\n   array <b>trader_max<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_maxindex":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Index of highest value over a specified period","syntax":"\n   array <b>trader_maxindex<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_medprice":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Median Price","syntax":"\n   array <b>trader_medprice<\/b>\n    ( array $high\n   , array $low\n   )","desc":"\n\n  "},"trader_mfi":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Money Flow Index","syntax":"\n   array <b>trader_mfi<\/b>\n    ( array $high\n   , array $low\n   , array $close\n   , array $volume\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_midpoint":{"version":"(PECL trader >= 0.2.0)","shortdesc":"MidPoint over period","syntax":"\n   array <b>trader_midpoint<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_midprice":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Midpoint Price over period","syntax":"\n   array <b>trader_midprice<\/b>\n    ( array $high\n   , array $low\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_min":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Lowest value over a specified period","syntax":"\n   array <b>trader_min<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_minindex":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Index of lowest value over a specified period","syntax":"\n   array <b>trader_minindex<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_minmax":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Lowest and highest values over a specified period","syntax":"\n   array <b>trader_minmax<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_minmaxindex":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Indexes of lowest and highest values over a specified period","syntax":"\n   array <b>trader_minmaxindex<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_minus_di":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Minus Directional Indicator","syntax":"\n   array <b>trader_minus_di<\/b>\n    ( array $high\n   , array $low\n   , array $close\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_minus_dm":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Minus Directional Movement","syntax":"\n   array <b>trader_minus_dm<\/b>\n    ( array $high\n   , array $low\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_mom":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Momentum","syntax":"\n   array <b>trader_mom<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_mult":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Vector Arithmetic Mult","syntax":"\n   array <b>trader_mult<\/b>\n    ( array $real0\n   , array $real1\n   )","desc":"\n   Calculates the vector dot product of real0 with\n   real1 and returns the resulting vector.\n  "},"trader_natr":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Normalized Average True Range","syntax":"\n   array <b>trader_natr<\/b>\n    ( array $high\n   , array $low\n   , array $close\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_obv":{"version":"(PECL trader >= 0.2.0)","shortdesc":"On Balance Volume","syntax":"\n   array <b>trader_obv<\/b>\n    ( array $real\n   , array $volume\n   )","desc":"\n\n  "},"trader_plus_di":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Plus Directional Indicator","syntax":"\n   array <b>trader_plus_di<\/b>\n    ( array $high\n   , array $low\n   , array $close\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_plus_dm":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Plus Directional Movement","syntax":"\n   array <b>trader_plus_dm<\/b>\n    ( array $high\n   , array $low\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_ppo":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Percentage Price Oscillator","syntax":"\n   array <b>trader_ppo<\/b>\n    ( array $real\n   [, integer $fastPeriod\n   [, integer $slowPeriod\n   [, integer $mAType\n  ]]] )","desc":"\n\n  "},"trader_roc":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Rate of change : ((price\/prevPrice)-1)*100","syntax":"\n   array <b>trader_roc<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_rocp":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Rate of change Percentage: (price-prevPrice)\/prevPrice","syntax":"\n   array <b>trader_rocp<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_rocr":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Rate of change ratio: (price\/prevPrice)","syntax":"\n   array <b>trader_rocr<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_rocr100":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Rate of change ratio 100 scale: (price\/prevPrice)*100","syntax":"\n   array <b>trader_rocr100<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_rsi":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Relative Strength Index","syntax":"\n   array <b>trader_rsi<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_sar":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Parabolic SAR","syntax":"\n   array <b>trader_sar<\/b>\n    ( array $high\n   , array $low\n   [, float $acceleration\n   [, float $maximum\n  ]] )","desc":"\n\n  "},"trader_sarext":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Parabolic SAR - Extended","syntax":"\n   array <b>trader_sarext<\/b>\n    ( array $high\n   , array $low\n   [, float $startValue\n   [, float $offsetOnReverse\n   [, float $accelerationInitLong\n   [, float $accelerationLong\n   [, float $accelerationMaxLong\n   [, float $accelerationInitShort\n   [, float $accelerationShort\n   [, float $accelerationMaxShort\n  ]]]]]]]] )","desc":"\n\n  "},"trader_set_compat":{"version":"(PECL trader >= 0.2.2)","shortdesc":"Set compatibility mode","syntax":"\n   void <b>trader_set_compat<\/b>\n    ( integer $compatId\n   )","desc":"\n   Set compatibility mode which will affect the way calculations are done by all the extension functions.\n  "},"trader_set_unstable_period":{"version":"(PECL trader >= 0.2.2)","shortdesc":"Set unstable period","syntax":"\n   void <b>trader_set_unstable_period<\/b>\n    ( integer $functionId\n   , integer $timePeriod\n   )","desc":"\n   Influences unstable period factor for functions, which are sensible to it. More information about unstable periods can be found on the \u00bb\u00a0TA-Lib API documentation page. \n  "},"trader_sin":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Vector Trigonometric Sin","syntax":"\n   array <b>trader_sin<\/b>\n    ( array $real\n   )","desc":"\n   Calculates the sine for each value in\n   real and returns the resulting array.\n  "},"trader_sinh":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Vector Trigonometric Sinh","syntax":"\n   array <b>trader_sinh<\/b>\n    ( array $real\n   )","desc":"\n   Calculates the hyperbolic sine for each value in\n   real and returns the resulting array.\n  "},"trader_sma":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Simple Moving Average","syntax":"\n   array <b>trader_sma<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_sqrt":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Vector Square Root","syntax":"\n   array <b>trader_sqrt<\/b>\n    ( array $real\n   )","desc":"\n   Calculates the square root of each value in\n   real and returns the resulting array.\n  "},"trader_stddev":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Standard Deviation","syntax":"\n   array <b>trader_stddev<\/b>\n    ( array $real\n   [, integer $timePeriod\n   [, float $nbDev\n  ]] )","desc":"\n\n  "},"trader_stoch":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Stochastic","syntax":"\n   array <b>trader_stoch<\/b>\n    ( array $high\n   , array $low\n   , array $close\n   [, integer $fastK_Period\n   [, integer $slowK_Period\n   [, integer $slowK_MAType\n   [, integer $slowD_Period\n   [, integer $slowD_MAType\n  ]]]]] )","desc":"\n\n  "},"trader_stochf":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Stochastic Fast","syntax":"\n   array <b>trader_stochf<\/b>\n    ( array $high\n   , array $low\n   , array $close\n   [, integer $fastK_Period\n   [, integer $fastD_Period\n   [, integer $fastD_MAType\n  ]]] )","desc":"\n\n  "},"trader_stochrsi":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Stochastic Relative Strength Index","syntax":"\n   array <b>trader_stochrsi<\/b>\n    ( array $real\n   [, integer $timePeriod\n   [, integer $fastK_Period\n   [, integer $fastD_Period\n   [, integer $fastD_MAType\n  ]]]] )","desc":"\n\n  "},"trader_sub":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Vector Arithmetic Subtraction","syntax":"\n   array <b>trader_sub<\/b>\n    ( array $real0\n   , array $real1\n   )","desc":"\n   Calculates the vector subtraction of real1 from\n   real0 and returns the resulting vector.\n  "},"trader_sum":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Summation","syntax":"\n   array <b>trader_sum<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_t3":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Triple Exponential Moving Average (T3)","syntax":"\n   array <b>trader_t3<\/b>\n    ( array $real\n   [, integer $timePeriod\n   [, float $vFactor\n  ]] )","desc":"\n\n  "},"trader_tan":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Vector Trigonometric Tan","syntax":"\n   array <b>trader_tan<\/b>\n    ( array $real\n   )","desc":"\n   Calculates the tangent for each value in\n   real and returns the resulting array.\n  "},"trader_tanh":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Vector Trigonometric Tanh","syntax":"\n   array <b>trader_tanh<\/b>\n    ( array $real\n   )","desc":"\n   Calculates the hyperbolic tangent for each value in\n   real and returns the resulting array.\n  "},"trader_tema":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Triple Exponential Moving Average","syntax":"\n   array <b>trader_tema<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_trange":{"version":"(PECL trader >= 0.2.0)","shortdesc":"True Range","syntax":"\n   array <b>trader_trange<\/b>\n    ( array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_trima":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Triangular Moving Average","syntax":"\n   array <b>trader_trima<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_trix":{"version":"(PECL trader >= 0.2.0)","shortdesc":"1-day Rate-Of-Change (ROC) of a Triple Smooth EMA","syntax":"\n   array <b>trader_trix<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_tsf":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Time Series Forecast","syntax":"\n   array <b>trader_tsf<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_typprice":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Typical Price","syntax":"\n   array <b>trader_typprice<\/b>\n    ( array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_ultosc":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Ultimate Oscillator","syntax":"\n   array <b>trader_ultosc<\/b>\n    ( array $high\n   , array $low\n   , array $close\n   [, integer $timePeriod1\n   [, integer $timePeriod2\n   [, integer $timePeriod3\n  ]]] )","desc":"\n\n  "},"trader_var":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Variance","syntax":"\n   array <b>trader_var<\/b>\n    ( array $real\n   [, integer $timePeriod\n   [, float $nbDev\n  ]] )","desc":"\n\n  "},"trader_wclprice":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Weighted Close Price","syntax":"\n   array <b>trader_wclprice<\/b>\n    ( array $high\n   , array $low\n   , array $close\n   )","desc":"\n\n  "},"trader_willr":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Williams' %R","syntax":"\n   array <b>trader_willr<\/b>\n    ( array $high\n   , array $low\n   , array $close\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trader_wma":{"version":"(PECL trader >= 0.2.0)","shortdesc":"Weighted Moving Average","syntax":"\n   array <b>trader_wma<\/b>\n    ( array $real\n   [, integer $timePeriod\n  ] )","desc":"\n\n  "},"trait_exists":{"version":"(PHP 5 >= 5.4.0)","shortdesc":"Checks if the trait exists","syntax":"\n   bool <b>trait_exists<\/b>\n    ( string $traitname\n   [, bool $autoload\n  ] )","desc":"\n\n  "},"trigger_error":{"version":"(PHP 4 >= 4.0.1, PHP 5)","shortdesc":"\n   \u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443\/\u043f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435\/\u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435\n  ","syntax":"\n   bool <b>trigger_error<\/b>\n    ( string $error_msg\n   [, int $error_type = E_USER_NOTICE\n  ] )","desc":"\n   \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0432\u044b\u0437\u043e\u0432\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u043e\u0448\u0438\u0431\u043e\u043a, \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432\n   \u0441\u0432\u044f\u0437\u043a\u0435 \u0441 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u043c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u043c \u043e\u0448\u0438\u0431\u043e\u043a, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u043c\n   \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u043c, \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439  set_error_handler(). \n  "},"trim":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043f\u0440\u043e\u0431\u0435\u043b\u044b (\u0438\u043b\u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b) \u0438\u0437 \u043d\u0430\u0447\u0430\u043b\u0430 \u0438 \u043a\u043e\u043d\u0446\u0430 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   string <b>trim<\/b>\n    ( string $str\n   [, string $charlist\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 str \u0441 \u0443\u0434\u0430\u043b\u0435\u043d\u043d\u044b\u043c\u0438\n   \u0438\u0437 \u043d\u0430\u0447\u0430\u043b\u0430 \u0438 \u043a\u043e\u043d\u0446\u0430 \u0441\u0442\u0440\u043e\u043a\u0438 \u043f\u0440\u043e\u0431\u0435\u043b\u0430\u043c\u0438.\n   \u0415\u0441\u043b\u0438 \u0432\u0442\u043e\u0440\u043e\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043d\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u043d,\n    trim() \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b:\n   \n   "},"uasort":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0441 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435\u043c \u043a\u043b\u044e\u0447\u0435\u0439","syntax":"\n   bool <b>uasort<\/b>\n    ( array &$array\n   , callable $cmp_function\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0447\u0442\u043e \u0435\u0433\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u044b\n   \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044e\u0442 \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u044f \u0441 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u0440\u0430\u043d\u0435\u0435 \u0431\u044b\u043b\u0438 \u0430\u0441\u0441\u043e\u0446\u0438\u0438\u0440\u043e\u0432\u0430\u043d\u044b,\n   \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e callback-\u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c.\n  "},"ucfirst":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u043f\u0435\u0440\u0432\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0432\u0435\u0440\u0445\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440","syntax":"\n   string <b>ucfirst<\/b>\n    ( string $str\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 str, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043f\u0435\u0440\u0432\u044b\u0439\n   \u0441\u0438\u043c\u0432\u043e\u043b \u043f\u0435\u0440\u0435\u0432\u0435\u0434\u0435\u043d \u0432 \u0432\u0435\u0440\u0445\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440, \u0435\u0441\u043b\u0438 \u044d\u0442\u043e\u0442 \u0441\u0438\u043c\u0432\u043e\u043b \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0431\u0443\u043a\u0432\u043e\u0439.\n  "},"ucwords":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0432 \u0432\u0435\u0440\u0445\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440 \u043f\u0435\u0440\u0432\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435","syntax":"\n   string <b>ucwords<\/b>\n    ( string $str\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 str, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043f\u0435\u0440\u0432\u044b\u0439\n   \u0441\u0438\u043c\u0432\u043e\u043b \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430 \u043f\u0435\u0440\u0435\u0432\u0435\u0434\u0435\u043d \u0432 \u0432\u0435\u0440\u0445\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440, \u0435\u0441\u043b\u0438 \u044d\u0442\u043e\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\n   \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0431\u0443\u043a\u0432\u043e\u0439.\n  "},"udm_add_search_limit":{"version":"(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)","shortdesc":"Add various search limits","syntax":"\n   bool <b>udm_add_search_limit<\/b>\n    ( resource $agent\n   , int $var\n   , string $val\n   )","desc":"\n    udm_add_search_limit() adds search restrictions.\n  "},"udm_alloc_agent_array":{"version":"(PHP 4 >= 4.3.3, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)","shortdesc":"Allocate mnoGoSearch session","syntax":"\n   resource <b>udm_alloc_agent_array<\/b>\n    ( array $databases\n   )","desc":"\n    udm_alloc_agent_array() will create an agent\n   with multiple database connections. \n  "},"udm_alloc_agent":{"version":"(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)","shortdesc":"Allocate mnoGoSearch session","syntax":"\n   resource <b>udm_alloc_agent<\/b>\n    ( string $dbaddr\n   [, string $dbmode\n  ] )","desc":"\n   Allocate a mnoGoSearch session.\n  "},"udm_api_version":{"version":"(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0432\u0435\u0440\u0441\u0438\u044e mnoGoSearch API","syntax":"\n   int <b>udm_api_version<\/b>\n    ( void\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0432\u0435\u0440\u0441\u0438\u044e mnoGoSearch API.\n  "},"udm_cat_list":{"version":"(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)","shortdesc":"Get all the categories on the same level with the current one","syntax":"\n   array <b>udm_cat_list<\/b>\n    ( resource $agent\n   , string $category\n   )","desc":"\n   Gets all the categories on the same level with the current one.\n  "},"udm_cat_path":{"version":"(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)","shortdesc":"Get the path to the current category","syntax":"\n   array <b>udm_cat_path<\/b>\n    ( resource $agent\n   , string $category\n   )","desc":"\n   Returns an array describing the path in the categories tree from the tree\n   root to the current one, specified by category.\n  "},"udm_check_charset":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)","shortdesc":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0438\u0437\u0432\u0435\u0441\u0442\u0435\u043d \u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0439 \u043d\u0430\u0431\u043e\u0440 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 mnogosearch","syntax":"\n   bool <b>udm_check_charset<\/b>\n    ( resource $agent\n   , string $charset\n   )","desc":"\n   "},"udm_check_stored":{"version":"(PHP 4 >= 4.2.0)","shortdesc":"Check connection to stored","syntax":"\n   int <b>udm_check_stored<\/b>\n    ( resource $agent\n   , int $link\n   , string $doc_id\n   )","desc":"\n   "},"udm_clear_search_limits":{"version":"(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)","shortdesc":"\u041e\u0447\u0438\u0449\u0430\u0435\u0442 \u0432\u0441\u0435 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u0438\u0441\u043a\u0430 mnoGoSearch","syntax":"\n   bool <b>udm_clear_search_limits<\/b>\n    ( resource $agent\n   )","desc":"\n    udm_clear_search_limits() \u0441\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0435 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f\n   \u043f\u043e\u0438\u0441\u043a\u0430.\n  "},"udm_close_stored":{"version":"(PHP 4 >= 4.2.0)","shortdesc":"Close connection to stored","syntax":"\n   int <b>udm_close_stored<\/b>\n    ( resource $agent\n   , int $link\n   )","desc":"\n   "},"udm_crc32":{"version":"(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u0443\u044e \u0441\u0443\u043c\u043c\u0443 CRC32 \u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   int <b>udm_crc32<\/b>\n    ( resource $agent\n   , string $str\n   )","desc":"\n   "},"udm_errno":{"version":"(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043d\u043e\u043c\u0435\u0440 \u043e\u0448\u0438\u0431\u043a\u0438 mnoGoSearch","syntax":"\n   int <b>udm_errno<\/b>\n    ( resource $agent\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u0439 \u043a\u043e\u0434 \u043e\u0448\u0438\u0431\u043a\u0438 \u0430\u0433\u0435\u043d\u0442\u0430.\n  "},"udm_error":{"version":"(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435 mnoGoSearch","syntax":"\n   string <b>udm_error<\/b>\n    ( resource $agent\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0430\u0433\u0435\u043d\u0442\u0430 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435.\n  "},"udm_find":{"version":"(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)","shortdesc":"Perform search","syntax":"\n   resource <b>udm_find<\/b>\n    ( resource $agent\n   , string $query\n   )","desc":"\n   Performs a search.\n  "},"udm_free_agent":{"version":"(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)","shortdesc":"\u041e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u0435\u0442 \u0441\u0435\u0441\u0441\u0438\u044e mnoGoSearch","syntax":"\n   int <b>udm_free_agent<\/b>\n    ( resource $agent\n   )","desc":"\n   \u041e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u043f\u0430\u043c\u044f\u0442\u0438, \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0439 \u0434\u043b\u044f \u0441\u0435\u0441\u0441\u0438\u0438 \u0430\u0433\u0435\u043d\u0442\u0430.\n  "},"udm_free_ispell_data":{"version":"(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)","shortdesc":"\u041e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u0435\u0442 \u043f\u0430\u043c\u044f\u0442\u044c, \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u043d\u0443\u044e \u0434\u043b\u044f ispell-\u0434\u0430\u043d\u043d\u044b\u0445","syntax":"\n   bool <b>udm_free_ispell_data<\/b>\n    ( int $agent\n   )","desc":"\n   \u041e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u0435\u0442 \u043f\u0430\u043c\u044f\u0442\u044c, \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u043d\u0443\u044e \u0434\u043b\u044f ispell-\u0434\u0430\u043d\u043d\u044b\u0445.\n  "},"udm_free_res":{"version":"(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)","shortdesc":"\u041e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u0435\u0442 \u043f\u0430\u043c\u044f\u0442\u044c, \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u043d\u0443\u044e \u0434\u043b\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 mnoGoSearch","syntax":"\n   bool <b>udm_free_res<\/b>\n    ( resource $res\n   )","desc":"\n   \u041e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u0435\u0442 \u043f\u0430\u043c\u044f\u0442\u044c, \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u043d\u0443\u044e \u0434\u043b\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432.\n  "},"udm_get_doc_count":{"version":"(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043e\u0431\u0449\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445","syntax":"\n   int <b>udm_get_doc_count<\/b>\n    ( resource $agent\n   )","desc":"\n    udm_get_doc_count() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0432\n   \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445.\n  "},"udm_get_res_field":{"version":"(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)","shortdesc":"Fetch a result field","syntax":"\n   string <b>udm_get_res_field<\/b>\n    ( resource $res\n   , int $row\n   , int $field\n   )","desc":"\n   Fetch a mnoGoSearch result field.\n  "},"udm_get_res_param":{"version":"(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)","shortdesc":"Get mnoGoSearch result parameters","syntax":"\n   string <b>udm_get_res_param<\/b>\n    ( resource $res\n   , int $param\n   )","desc":"\n   Gets the mnoGoSearch result parameters.\n  "},"udm_hash32":{"version":"(PHP 4 >= 4.3.3, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u0443\u044e \u0441\u0443\u043c\u043c\u0443 Hash32 \u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   int <b>udm_hash32<\/b>\n    ( resource $agent\n   , string $str\n   )","desc":"\n    udm_hash32() \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443\n   str \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u0443\u044e 32-\u0431\u0438\u0442\u043d\u0443\u044e \u0445\u044d\u0448-\u0441\u0443\u043c\u043c\u0443\n   \u044d\u0442\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438. \n  "},"udm_load_ispell_data":{"version":"(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)","shortdesc":"\u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 ispell-\u0434\u0430\u043d\u043d\u044b\u0435","syntax":"\n   bool <b>udm_load_ispell_data<\/b>\n    ( resource $agent\n   , int $var\n   , string $val1\n   , string $val2\n   , int $flag\n   )","desc":"\n    udm_load_ispell_data() \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 ispell-\u0434\u0430\u043d\u043d\u044b\u0435.\n  "},"udm_open_stored":{"version":"(PHP 4 >= 4.2.0)","shortdesc":"Open connection to stored","syntax":"\n   int <b>udm_open_stored<\/b>\n    ( resource $agent\n   , string $storedaddr\n   )","desc":"\n   "},"udm_set_agent_param":{"version":"(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)","shortdesc":"Set mnoGoSearch agent session parameters","syntax":"\n   bool <b>udm_set_agent_param<\/b>\n    ( resource $agent\n   , int $var\n   , string $val\n   )","desc":"\n   Defines mnoGoSearch session parameters.\n  "},"uksort":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u043f\u043e \u043a\u043b\u044e\u0447\u0430\u043c, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u043a\u043b\u044e\u0447\u0435\u0439","syntax":"\n   bool <b>uksort<\/b>\n    ( array &$array\n   , callable $cmp_function\n   )\nint callback ( mixed $a, mixed $b )\n","desc":"\n    uksort() \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f\n   \u0435\u0433\u043e \u043a\u043b\u044e\u0447\u0435\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u0443\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u044d\u0442\u0443\n   \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u0435\u0441\u043b\u0438 \u043c\u0430\u0441\u0441\u0438\u0432 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d \u043f\u043e \u043a\u0430\u043a\u043e\u043c\u0443-\u043d\u0438\u0431\u0443\u0434\u044c\n   \u043d\u0435\u043e\u0431\u044b\u0447\u043d\u043e\u043c\u0443 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0443.\n  "},"umask":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e umask","syntax":"\n   int <b>umask<\/b>\n    ([ int $mask\n  ] )","desc":"\n    umask() \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 PHP umask\n   \u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 mask & 0777 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\n   \u0441\u0442\u0430\u0440\u0443\u044e umask. \u0415\u0441\u043b\u0438 PHP \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u043c\u043e\u0434\u0443\u043b\u044f,\n   umask \u0431\u0443\u0434\u0435\u0442 \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n  "},"uniqid":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 ID","syntax":"\n   string <b>uniqid<\/b>\n    ([ string $prefix = \"\"\n   [, bool $more_entropy = false\n  ]] )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0441 \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u043e\u043c, \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0435\u043c\n   \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432 \u043c\u0438\u043a\u0440\u043e\u0441\u0435\u043a\u0443\u043d\u0434\u0430\u0445.\n  "},"unixtojd":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u043c\u0435\u0442\u043a\u0443 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 Unix \u0432 \u042e\u043b\u0438\u0430\u043d\u0441\u043a\u0438\u0439 \u0434\u0435\u043d\u044c\n  ","syntax":"\n   int <b>unixtojd<\/b>\n    ([ int $timestamp = time()\n  ] )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u042e\u043b\u0438\u0430\u043d\u0441\u043a\u0438\u0439 \u0434\u0435\u043d\u044c \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043c\u0435\u0442\u043a\u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 Unix\n   timestamp (\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0435\u043a\u0443\u043d\u0434 \u0441 1.1.1970) \u043b\u0438\u0431\u043e\n   \u0434\u043b\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u0435\u0441\u043b\u0438 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 timestamp\n   \u043d\u0435 \u0437\u0430\u0434\u0430\u043d.\n  "},"unlink":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0444\u0430\u0439\u043b","syntax":"\n   bool <b>unlink<\/b>\n    ( string $filename\n   [, resource $context\n  ] )","desc":"\n   \u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0444\u0430\u0439\u043b filename. \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u0445\u043e\u0436\u0430 \u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044e\n   unlink() Unix C. \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u0431\u0443\u0434\u0435\u0442 \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u043e\u0448\u0438\u0431\u043a\u0430 \u0443\u0440\u043e\u0432\u043d\u044f\n   E_WARNING.\n  "},"unpack":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0420\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   array <b>unpack<\/b>\n    ( string $format\n   , string $data\n   )","desc":"\n   \u0420\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u043e\u0433\u043b\u0430\u0441\u043d\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0432\n   format \u0444\u043e\u0440\u043c\u0430\u0442\u0443. \n  "},"unregister_tick_function":{"version":"(PHP 4 >= 4.0.3, PHP 5)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u0438 \u043a\u0430\u0436\u0434\u043e\u043c \u0442\u0438\u043a\u0435","syntax":"\n   void <b>unregister_tick_function<\/b>\n    ( string $function_name\n   )","desc":""},"unserialize":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 PHP-\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0438\u0437 \u0445\u0440\u0430\u043d\u0438\u043c\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f\n  ","syntax":"\n   mixed <b>unserialize<\/b>\n    ( string $str\n   )","desc":""},"unset":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e","syntax":"\n   void <b>unset<\/b>\n    ( mixed $var\n   [, mixed $...\n  ] )","desc":"\n    unset() \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435. \n  "},"untaint":{"version":"(PECL taint >=0.1.0)","shortdesc":"Untaint strings","syntax":"\n   bool <b>untaint<\/b>\n    ( string &$string\n   [, string $...\n  ] )","desc":"\n    Untaint strings\n  "},"urldecode":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0414\u0435\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 URL-\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   string <b>urldecode<\/b>\n    ( string $str\n   )","desc":"\n   \u0414\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 \u043b\u044e\u0431\u044b\u0435 %##\n   \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0432 \u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435. \u0421\u0438\u043c\u0432\u043e\u043b \"\u043f\u043b\u044e\u0441\" ('+') \n   \u0434\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0432 \u0441\u0438\u043c\u0432\u043e\u043b \u043f\u0440\u043e\u0431\u0435\u043b\u0430.\n  "},"urlencode":{"version":"(PHP 4, PHP 5)","shortdesc":"URL-\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   string <b>urlencode<\/b>\n    ( string $str\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0443\u0434\u043e\u0431\u043d\u0430, \u043a\u043e\u0433\u0434\u0430 \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u0437\u0430\u043f\u0440\u043e\u0441\u0435, \u043a\u0430\u043a \u0447\u0430\u0441\u0442\u044c URL, \n   \u0442\u0430\u043a\u0436\u0435 \u044d\u0442\u043e \u0443\u0434\u043e\u0431\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0434\u0440\u0443\u0433\u0438\u043c \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430\u043c.\n  "},"use_soap_error_handler":{"version":"(Unknown)","shortdesc":"\u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u043d\u0443\u0436\u043d\u043e \u043b\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043e\u0448\u0438\u0431\u043e\u043a SOAP","syntax":"\n   bool <b>use_soap_error_handler<\/b>\n    ([ bool $handler = true\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u043c\u043e\u0433\u0443\u0442 \u043b\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u043e\u0448\u0438\u0431\u043e\u043a SOAP \u0432 SOAP-\u0441\u0435\u0440\u0432\u0435\u0440\u0435.\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435. \u0415\u0441\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u0432 TRUE, \u0442\u043e \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0441\u0442\u0438 \u043e\u0448\u0438\u0431\u043e\u043a\n   \u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u0441 \u043a\u043b\u0430\u0441\u0441\u043e\u043c SoapServer \u0431\u0443\u0434\u0443\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u044b \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c.\n   \u0415\u0441\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u0432 FALSE, \u0442\u043e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043d\u0435 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442\u0441\u044f.\n  "},"user_error":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u0438\u043d\u043e\u043d\u0438\u043c \u0434\u043b\u044f  trigger_error()","syntax":"","desc":""},"usleep":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0442\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043d\u0430 \u043c\u0438\u043a\u0440\u043e\u0441\u0435\u043a\u0443\u043d\u0434\u044b","syntax":"\n   void <b>usleep<\/b>\n    ( int $micro_seconds\n   )","desc":"\n   \u041e\u0442\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043d\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043c\u0438\u043a\u0440\u043e\u0441\u0435\u043a\u0443\u043d\u0434.\n  "},"usort":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u043f\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432","syntax":"\n   bool <b>usort<\/b>\n    ( array &$array\n   , callable $cmp_function\n   )\nint callback ( mixed $a, mixed $b )\n","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043c\u0430\u0441\u0441\u0438\u0432\u0430, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f\n   \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 callback-\u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u0443\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c.\n   \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u044d\u0442\u0443 \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u0435\u0441\u043b\u0438 \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043c\u0430\u0441\u0441\u0438\u0432 \u043f\u043e\n   \u043a\u0430\u043a\u043e\u043c\u0443-\u043d\u0438\u0431\u0443\u0434\u044c \u043d\u0435\u043e\u0431\u044b\u0447\u043d\u043e\u043c\u0443 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0443.\n  "},"utf8_decode":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 ISO-8859-1 \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c\u0438 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0432 UTF-8\n   \u0432 \u043e\u0434\u043d\u043e\u0431\u0430\u0439\u0442\u043d\u0443\u044e ISO-8859-1\n  ","syntax":"\n   string <b>utf8_decode<\/b>\n    ( string $data\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 data, \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e\n   \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0432 UTF-8, \u0432 ISO-8859-1.\n  "},"utf8_encode":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 ISO-8859-1 \u0432 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0435 UTF-8","syntax":"\n   string <b>utf8_encode<\/b>\n    ( string $data\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 data \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u043e\u0439\n   UTF-8, \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442.\n   UTF-8 - \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u043c\u0435\u0445\u0430\u043d\u0438\u0437\u043c, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0439 \u0432\n   Unicode \u0434\u043b\u044f \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f wide\n   character \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0432 \u043f\u043e\u0442\u043e\u043a \u0431\u0430\u0439\u0442\u043e\u0432.\n   UTF-8 \u043d\u0435 \u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0432\u043b\u0438\u044f\u043d\u0438\u044f \u043d\u0430 \u043d\u0435\u0437\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \n   ASCII \u0441\u0438\u043c\u0432\u043e\u043b\u044b, \u043e\u043d \u0441\u0430\u043c\u043e\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u0443\u044e\u0449\u0438\u0439\u0441\u044f \n   (\u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0438\u0442, \u0447\u0442\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u043e \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u044c, \u0433\u0434\u0435 \u0432 \u043f\u043e\u0442\u043e\u043a\u0435 \u0431\u0430\u0439\u0442 \n   \u043d\u0430\u0447\u0438\u043d\u0430\u044e\u0442\u0441\u044f \u0441\u0438\u043c\u0432\u043e\u043b\u044b) \u0438 \u043c\u043e\u0436\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u043a\n   \u0434\u043b\u044f \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438 \u0438 \u043f\u043e\u0434\u043e\u0431\u043d\u044b\u0445 \u0437\u0430\u0434\u0430\u0447. PHP \u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 UTF-8\n   \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 4 \u0431\u0430\u0439\u0442\u0430, \u043a\u0430\u043a \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043e \u043d\u0438\u0436\u0435:\n   "},"var_dump":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439","syntax":"\n   void <b>var_dump<\/b>\n    ( mixed $expression\n   [, mixed $...\n  ] )","desc":""},"var_export":{"version":"(PHP 4 >= 4.2.0, PHP 5)","shortdesc":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440 \u0438\u043b\u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0438\u0440\u0443\u0435\u043c\u043e\u0435 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439","syntax":"\n   mixed <b>var_export<\/b>\n    ( mixed $expression\n   [, bool $return = false\n  ] )","desc":""},"variant_abs":{"version":"(PHP 5)","shortdesc":"Returns the absolute value of a variant","syntax":"\n   mixed <b>variant_abs<\/b>\n    ( mixed $val\n   )","desc":"\n   Returns the absolute value of a variant.\n  "},"variant_add":{"version":"(PHP 5)","shortdesc":"\"Adds\" two variant values together and returns the result","syntax":"\n   mixed <b>variant_add<\/b>\n    ( mixed $left\n   , mixed $right\n   )","desc":"\n   Adds left to right using\n   the following rules (taken from the MSDN library), which correspond to\n   those of Visual Basic:\n   "},"variant_and":{"version":"(PHP 5)","shortdesc":"Performs a bitwise AND operation between two variants","syntax":"\n   mixed <b>variant_and<\/b>\n    ( mixed $left\n   , mixed $right\n   )","desc":"\n   Performs a bitwise AND operation.\n   Note that this is slightly different from a regular AND operation.\n  "},"variant_cast":{"version":"(PHP 5)","shortdesc":"Convert a variant into a new variant object of another type","syntax":"\n   variant <b>variant_cast<\/b>\n    ( variant $variant\n   , int $type\n   )","desc":"\n   This function makes a copy of variant and then\n   performs a variant cast operation to force the copy to have the type\n   given by type.\n  "},"variant_cat":{"version":"(PHP 5)","shortdesc":"concatenates two variant values together and returns the result","syntax":"\n   mixed <b>variant_cat<\/b>\n    ( mixed $left\n   , mixed $right\n   )","desc":"\n   Concatenates left with\n   right and returns the result.\n  "},"variant_cmp":{"version":"(PHP 5)","shortdesc":"Compares two variants","syntax":"\n   int <b>variant_cmp<\/b>\n    ( mixed $left\n   , mixed $right\n   [, int $lcid\n   [, int $flags\n  ]] )","desc":"\n   Compares left with right.\n  "},"variant_date_from_timestamp":{"version":"(PHP 5)","shortdesc":"Returns a variant date representation of a Unix timestamp","syntax":"\n   variant <b>variant_date_from_timestamp<\/b>\n    ( int $timestamp\n   )","desc":"\n   Converts timestamp from a unix timestamp value\n   into a variant of type VT_DATE.  This allows easier\n   interopability between the unix-ish parts of PHP and COM.\n  "},"variant_date_to_timestamp":{"version":"(PHP 5)","shortdesc":"Converts a variant date\/time value to Unix timestamp","syntax":"\n   int <b>variant_date_to_timestamp<\/b>\n    ( variant $variant\n   )","desc":"\n   Converts variant from a VT_DATE\n   (or similar) value into a Unix timestamp.  This allows easier\n   interopability between the Unix-ish parts of PHP and COM.\n  "},"variant_div":{"version":"(PHP 5)","shortdesc":"Returns the result from dividing two variants","syntax":"\n   mixed <b>variant_div<\/b>\n    ( mixed $left\n   , mixed $right\n   )","desc":"\n   Divides left by right and\n   returns the result.\n  "},"variant_eqv":{"version":"(PHP 5)","shortdesc":"Performs a bitwise equivalence on two variants","syntax":"\n   mixed <b>variant_eqv<\/b>\n    ( mixed $left\n   , mixed $right\n   )","desc":"\n   Performs a bitwise equivalence on two variants.\n  "},"variant_fix":{"version":"(PHP 5)","shortdesc":"Returns the integer portion of a variant","syntax":"\n   mixed <b>variant_fix<\/b>\n    ( mixed $variant\n   )","desc":"\n   Gets the integer portion of a variant.\n  "},"variant_get_type":{"version":"(PHP 5)","shortdesc":"Returns the type of a variant object","syntax":"\n   int <b>variant_get_type<\/b>\n    ( variant $variant\n   )","desc":"\n   Returns the type of a variant object.\n  "},"variant_idiv":{"version":"(PHP 5)","shortdesc":"Converts variants to integers and then returns the result from dividing them","syntax":"\n   mixed <b>variant_idiv<\/b>\n    ( mixed $left\n   , mixed $right\n   )","desc":"\n   Converts left and right to\n   integer values, and then performs integer division.\n  "},"variant_imp":{"version":"(PHP 5)","shortdesc":"Performs a bitwise implication on two variants","syntax":"\n   mixed <b>variant_imp<\/b>\n    ( mixed $left\n   , mixed $right\n   )","desc":"\n   Performs a bitwise implication operation.\n  "},"variant_int":{"version":"(PHP 5)","shortdesc":"Returns the integer portion of a variant","syntax":"\n   mixed <b>variant_int<\/b>\n    ( mixed $variant\n   )","desc":"\n   Gets the integer portion of a variant.\n  "},"variant_mod":{"version":"(PHP 5)","shortdesc":"Divides two variants and returns only the remainder","syntax":"\n   mixed <b>variant_mod<\/b>\n    ( mixed $left\n   , mixed $right\n   )","desc":"\n   Divides left by right and\n   returns the remainder.\n  "},"variant_mul":{"version":"(PHP 5)","shortdesc":"Multiplies the values of the two variants","syntax":"\n   mixed <b>variant_mul<\/b>\n    ( mixed $left\n   , mixed $right\n   )","desc":"\n   Multiplies left by right.\n  "},"variant_neg":{"version":"(PHP 5)","shortdesc":"Performs logical negation on a variant","syntax":"\n   mixed <b>variant_neg<\/b>\n    ( mixed $variant\n   )","desc":"\n   Performs logical negation of variant.\n  "},"variant_not":{"version":"(PHP 5)","shortdesc":"Performs bitwise not negation on a variant","syntax":"\n   mixed <b>variant_not<\/b>\n    ( mixed $variant\n   )","desc":"\n   Performs bitwise not negation on variant and\n   returns the result.\n  "},"variant_or":{"version":"(PHP 5)","shortdesc":"Performs a logical disjunction on two variants","syntax":"\n   mixed <b>variant_or<\/b>\n    ( mixed $left\n   , mixed $right\n   )","desc":"\n   Performs a bitwise OR operation.\n   Note that this is slightly different from a regular OR operation.\n  "},"variant_pow":{"version":"(PHP 5)","shortdesc":"Returns the result of performing the power function with two variants","syntax":"\n   mixed <b>variant_pow<\/b>\n    ( mixed $left\n   , mixed $right\n   )","desc":"\n   Returns the result of left to the power of\n   right.\n  "},"variant_round":{"version":"(PHP 5)","shortdesc":"Rounds a variant to the specified number of decimal places","syntax":"\n   mixed <b>variant_round<\/b>\n    ( mixed $variant\n   , int $decimals\n   )","desc":"\n   Returns the value of variant rounded to\n   decimals decimal places.\n  "},"variant_set_type":{"version":"(PHP 5)","shortdesc":"Convert a variant into another type \"in-place\"","syntax":"\n   void <b>variant_set_type<\/b>\n    ( variant $variant\n   , int $type\n   )","desc":"\n   This function is similar to  variant_cast() except that\n   the variant is modified \"in-place\"; no new variant is created. The\n   parameters for this function have identical meaning to those of\n    variant_cast().\n  "},"variant_set":{"version":"(PHP 5)","shortdesc":"Assigns a new value for a variant object","syntax":"\n   void <b>variant_set<\/b>\n    ( variant $variant\n   , mixed $value\n   )","desc":"\n   Converts value to a variant and assigns it to the\n   variant object; no new variant object is created,\n   and the old value of variant is freed\/released.\n  "},"variant_sub":{"version":"(PHP 5)","shortdesc":"Subtracts the value of the right variant from the left variant value","syntax":"\n   mixed <b>variant_sub<\/b>\n    ( mixed $left\n   , mixed $right\n   )","desc":"\n   Subtracts right from left.\n  "},"variant_xor":{"version":"(PHP 5)","shortdesc":"Performs a logical exclusion on two variants","syntax":"\n   mixed <b>variant_xor<\/b>\n    ( mixed $left\n   , mixed $right\n   )","desc":"\n   Performs a logical exclusion.\n  "},"version_compare":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\n   \u0421\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u0442 \u0434\u0432\u0435 \"\u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0435\" \u0441\u0442\u0440\u043e\u043a\u0438 \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c \u0432\u0435\u0440\u0441\u0438\u0438\n  ","syntax":"\n   mixed <b>version_compare<\/b>\n    ( string $version1\n   , string $version2\n   [, string $operator\n  ] )","desc":"\n    version_compare() \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u0442 \u0434\u0432\u0435 \"PHP-\u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0435\"\n   \u0441\u0442\u0440\u043e\u043a\u0438 \u0441 \u043d\u043e\u043c\u0435\u0440\u0430\u043c\u0438 \u0432\u0435\u0440\u0441\u0438\u0439. \u042d\u0442\u043e \u043f\u043e\u043b\u0435\u0437\u043d\u043e, \u043a\u043e\u0433\u0434\u0430 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443\n   \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0449\u0443\u044e \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0432\u0435\u0440\u0441\u0438\u044f\u0445 PHP.\n  "},"vfprintf":{"version":"(PHP 5)","shortdesc":"\u0417\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043e\u0442\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u043f\u043e\u0442\u043e\u043a","syntax":"\n   int <b>vfprintf<\/b>\n    ( resource $handle\n   , string $format\n   , array $args\n   )","desc":"\n   \u0417\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u043e\u0442\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441\n   \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c format \u0432 \u043f\u043e\u0442\u043e\u043a\n   handle.\n  "},"virtual":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043f\u043e\u0434\u0437\u0430\u043f\u0440\u043e\u0441 Apache","syntax":"\n   bool <b>virtual<\/b>\n    ( string $filename\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f  virtual() \u0441\u043f\u0435\u0446\u0438\u0444\u0438\u0447\u043d\u0430 \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430 Apache\n   \u0438 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u044d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442\u043e\u043c \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 <!--#include virtual...-->,\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u043e\u0439 \u0432 mod_include.\n   \u0414\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043f\u043e\u0434\u0437\u0430\u043f\u0440\u043e\u0441 Apache. \u042d\u0442\u043e \u0431\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u0435\u0437\u043d\u044b\u043c\n   \u0432 \u0442\u0435\u0445 \u0441\u043b\u0443\u0447\u0430\u044f\u0445, \u043a\u043e\u0433\u0434\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0432 \u0441\u0432\u043e\u0439 \u0441\u043a\u0440\u0438\u043f\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\n   \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0434\u0440\u0443\u0433\u0438\u0445 CGI-\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u0438\u043b\u0438 \u0444\u0430\u0439\u043b\u043e\u0432 .shtml, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u0433\u043e,\n   \u0447\u0442\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043e Apache.\n   \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e CGI-\u0441\u043a\u0440\u0438\u043f\u0442\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u043e\u0442\u0434\u0430\u0432\u0430\u0442\u044c \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0435 CGI-\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438.\n   \u041a\u0430\u043a \u043c\u0438\u043d\u0438\u043c\u0443\u043c, CGI-\u0441\u043a\u0440\u0438\u043f\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a Content-Type.\n  "},"vpopmail_add_alias_domain_ex":{"version":"(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)","shortdesc":"Add alias to an existing virtual domain","syntax":"\n   bool <b>vpopmail_add_alias_domain_ex<\/b>\n    ( string $olddomain\n   , string $newdomain\n   )","desc":""},"vpopmail_add_alias_domain":{"version":"(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)","shortdesc":"Add an alias for a virtual domain","syntax":"\n   bool <b>vpopmail_add_alias_domain<\/b>\n    ( string $domain\n   , string $aliasdomain\n   )","desc":""},"vpopmail_add_domain_ex":{"version":"(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)","shortdesc":"Add a new virtual domain","syntax":"\n   bool <b>vpopmail_add_domain_ex<\/b>\n    ( string $domain\n   , string $passwd\n   [, string $quota\n   [, string $bounce\n   [, bool $apop\n  ]]] )","desc":""},"vpopmail_add_domain":{"version":"(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)","shortdesc":"Add a new virtual domain","syntax":"\n   bool <b>vpopmail_add_domain<\/b>\n    ( string $domain\n   , string $dir\n   , int $uid\n   , int $gid\n   )","desc":""},"vpopmail_add_user":{"version":"(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)","shortdesc":"Add a new user to the specified virtual domain","syntax":"\n   bool <b>vpopmail_add_user<\/b>\n    ( string $user\n   , string $domain\n   , string $password\n   [, string $gecos\n   [, bool $apop\n  ]] )","desc":""},"vpopmail_alias_add":{"version":"(PHP 4 >= 4.0.7, PECL vpopmail >= 0.2)","shortdesc":"Insert a virtual alias","syntax":"\n   bool <b>vpopmail_alias_add<\/b>\n    ( string $user\n   , string $domain\n   , string $alias\n   )","desc":""},"vpopmail_alias_del_domain":{"version":"(PHP 4 >= 4.0.7, PECL vpopmail >= 0.2)","shortdesc":"Deletes all virtual aliases of a domain","syntax":"\n   bool <b>vpopmail_alias_del_domain<\/b>\n    ( string $domain\n   )","desc":""},"vpopmail_alias_del":{"version":"(PHP 4 >= 4.0.7, PECL vpopmail >= 0.2)","shortdesc":"Deletes all virtual aliases of a user","syntax":"\n   bool <b>vpopmail_alias_del<\/b>\n    ( string $user\n   , string $domain\n   )","desc":""},"vpopmail_alias_get_all":{"version":"(PHP 4 >= 4.0.7, PECL vpopmail >= 0.2)","shortdesc":"Get all lines of an alias for a domain","syntax":"\n   array <b>vpopmail_alias_get_all<\/b>\n    ( string $domain\n   )","desc":""},"vpopmail_alias_get":{"version":"(PHP 4 >= 4.0.7, PECL vpopmail >= 0.2)","shortdesc":"Get all lines of an alias for a domain","syntax":"\n   array <b>vpopmail_alias_get<\/b>\n    ( string $alias\n   , string $domain\n   )","desc":""},"vpopmail_auth_user":{"version":"(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)","shortdesc":"Attempt to validate a username\/domain\/password","syntax":"\n   bool <b>vpopmail_auth_user<\/b>\n    ( string $user\n   , string $domain\n   , string $password\n   [, string $apop\n  ] )","desc":""},"vpopmail_del_domain_ex":{"version":"(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)","shortdesc":"Delete a virtual domain","syntax":"\n   bool <b>vpopmail_del_domain_ex<\/b>\n    ( string $domain\n   )","desc":""},"vpopmail_del_domain":{"version":"(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)","shortdesc":"Delete a virtual domain","syntax":"\n   bool <b>vpopmail_del_domain<\/b>\n    ( string $domain\n   )","desc":""},"vpopmail_del_user":{"version":"(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)","shortdesc":"Delete a user from a virtual domain","syntax":"\n   bool <b>vpopmail_del_user<\/b>\n    ( string $user\n   , string $domain\n   )","desc":""},"vpopmail_error":{"version":"(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)","shortdesc":"Get text message for last vpopmail error","syntax":"\n   string <b>vpopmail_error<\/b>\n    ( void\n   )","desc":""},"vpopmail_passwd":{"version":"(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)","shortdesc":"Change a virtual user's password","syntax":"\n   bool <b>vpopmail_passwd<\/b>\n    ( string $user\n   , string $domain\n   , string $password\n   [, bool $apop\n  ] )","desc":""},"vpopmail_set_user_quota":{"version":"(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)","shortdesc":"Sets a virtual user's quota","syntax":"\n   bool <b>vpopmail_set_user_quota<\/b>\n    ( string $user\n   , string $domain\n   , string $quota\n   )","desc":""},"vprintf":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043e\u0442\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443","syntax":"\n   int <b>vprintf<\/b>\n    ( string $format\n   , array $args\n   )","desc":"\n   \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u0430, \u043e\u0442\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441\n   \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c format, \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u043c \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    sprintf().\n  "},"vsprintf":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0442\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443","syntax":"\n   string <b>vsprintf<\/b>\n    ( string $format\n   , array $args\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u0434\u043e\u0431\u043d\u0430  sprintf(), \u043d\u043e \u043e\u043d\u0430 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043d\u0435\n   \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432, \u0430 \u043c\u0430\u0441\u0441\u0438\u0432.\n  "},"w32api_deftype":{"version":"(PHP 4 >= 4.2.0)","shortdesc":"Defines a type for use with other w32api_functions","syntax":"\n   bool <b>w32api_deftype<\/b>\n    ( string $typename\n   , string $member1_type\n   , string $member1_name\n   [, string $...\n   [, string $...\n  ]] )","desc":"\n   You need to call this function if you would like to define a type for a\n   w32api call.\n  "},"w32api_init_dtype":{"version":"(PHP 4 >= 4.2.0)","shortdesc":"Creates an instance of the data type typename and fills it with the values passed","syntax":"\n   resource <b>w32api_init_dtype<\/b>\n    ( string $typename\n   , mixed $value\n   [, mixed $...\n  ] )","desc":"\n   This function creates an instance of the data type named\n   typename, filling in the values of the data type. \n  "},"w32api_invoke_function":{"version":"(PHP 4 >= 4.2.0)","shortdesc":"Invokes function funcname with the arguments passed after the function name","syntax":"\n   mixed <b>w32api_invoke_function<\/b>\n    ( string $funcname\n   , mixed $argument\n   [, mixed $...\n  ] )","desc":"\n    w32api_invoke_function() tries to find the previously\n   registered function, passing the parameters you provided. \n  "},"w32api_register_function":{"version":"(PHP 4 >= 4.2.0)","shortdesc":"Registers function function_name from library with PHP","syntax":"\n   bool <b>w32api_register_function<\/b>\n    ( string $library\n   , string $function_name\n   , string $return_type\n   )","desc":"\n   This function tries to find the function_name function\n   in library, and tries to import it into PHP. \n  "},"w32api_set_call_method":{"version":"(PHP 4 >= 4.2.0)","shortdesc":"Sets the calling method used","syntax":"\n   void <b>w32api_set_call_method<\/b>\n    ( int $method\n   )","desc":"\n   This function sets the method call type. \n  "},"wddx_add_vars":{"version":"(PHP 4, PHP 5)","shortdesc":"Add variables to a WDDX packet with the specified ID","syntax":"\n   bool <b>wddx_add_vars<\/b>\n    ( resource $packet_id\n   , mixed $var_name\n   [, mixed $...\n  ] )","desc":"\n   Serializes the passed variables and add the result to the given packet.\n  "},"wddx_deserialize":{"version":"(PHP 4, PHP 5)","shortdesc":"Unserializes a WDDX packet","syntax":"\n   mixed <b>wddx_deserialize<\/b>\n    ( string $packet\n   )","desc":"\n   Unserializes a WDDX packet.\n  "},"wddx_packet_end":{"version":"(PHP 4, PHP 5)","shortdesc":"Ends a WDDX packet with the specified ID","syntax":"\n   string <b>wddx_packet_end<\/b>\n    ( resource $packet_id\n   )","desc":"\n   Ends and returns the given WDDX packet.\n  "},"wddx_packet_start":{"version":"(PHP 4, PHP 5)","shortdesc":"Starts a new WDDX packet with structure inside it","syntax":"\n   resource <b>wddx_packet_start<\/b>\n    ([ string $comment\n  ] )","desc":"\n   Start a new WDDX packet for incremental addition of variables.\n   It automatically creates a structure definition inside the packet to\n   contain the variables.\n  "},"wddx_serialize_value":{"version":"(PHP 4, PHP 5)","shortdesc":"Serialize a single value into a WDDX packet","syntax":"\n   string <b>wddx_serialize_value<\/b>\n    ( mixed $var\n   [, string $comment\n  ] )","desc":"\n   Creates a WDDX packet from a single given value.\n  "},"wddx_serialize_vars":{"version":"(PHP 4, PHP 5)","shortdesc":"Serialize variables into a WDDX packet","syntax":"\n   string <b>wddx_serialize_vars<\/b>\n    ( mixed $var_name\n   [, mixed $...\n  ] )","desc":"\n   Creates a WDDX packet with a structure that contains the serialized\n   representation of the passed variables.\n  "},"win32_continue_service":{"version":"(PECL win32service SVN)","shortdesc":"\u0412\u043e\u0437\u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0443 \u043f\u0440\u0438\u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u043e\u0439 \u0441\u043b\u0443\u0436\u0431\u044b","syntax":"\n   int <b>win32_continue_service<\/b>\n    ( string $servicename\n   [, string $machine\n  ] )","desc":"\n   \u0412\u043e\u0437\u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0443 \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u043e\u0439 \u043f\u0440\u0438\u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u043e\u0439 \u0441\u043b\u0443\u0436\u0431\u044b.  \u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u0438\u0432\u043d\u044b\u0445 \u043f\u0440\u0438\u0432\u0438\u043b\u0435\u0433\u0438\u0439.\n  "},"win32_create_service":{"version":"(PECL win32service SVN)","shortdesc":"Creates a new service entry in the SCM database","syntax":"\n   mixed <b>win32_create_service<\/b>\n    ( array $details\n   [, string $machine\n  ] )","desc":""},"win32_delete_service":{"version":"(PECL win32service SVN)","shortdesc":"Deletes a service entry from the SCM database","syntax":"\n   mixed <b>win32_delete_service<\/b>\n    ( string $servicename\n   [, string $machine\n  ] )","desc":"\n   Attempts to delete a service from the SCM database.  Administrative\n   privileges are required for this to succeed.\n  "},"win32_get_last_control_message":{"version":"(PECL win32service SVN)","shortdesc":"Returns the last control message that was sent to this service","syntax":"\n   int <b>win32_get_last_control_message<\/b>\n    ( void\n   )","desc":"\n   Returns the control code that was last sent to this service process.\n   When running as a service you should periodically check this to determine if\n   your service needs to stop running.\n  "},"win32_pause_service":{"version":"(PECL win32service SVN)","shortdesc":"Pauses a service","syntax":"\n   int <b>win32_pause_service<\/b>\n    ( string $servicename\n   [, string $machine\n  ] )","desc":"\n   Pauses a named service.  Requires administrative privileges.\n  "},"win32_ps_list_procs":{"version":"(PECL win32ps >= 1.0.1)","shortdesc":"List running processes","syntax":"\n   array <b>win32_ps_list_procs<\/b>\n    ( void\n   )","desc":"\n   Retrieves statistics about all running processes.\n  "},"win32_ps_stat_mem":{"version":"(PECL win32ps >= 1.0.1)","shortdesc":"Stat memory utilization","syntax":"\n   array <b>win32_ps_stat_mem<\/b>\n    ( void\n   )","desc":"\n   Retrieves statistics about the global memory utilization.\n  "},"win32_ps_stat_proc":{"version":"(PECL win32ps >= 1.0.1)","shortdesc":"Stat process","syntax":"\n   array <b>win32_ps_stat_proc<\/b>\n    ([ int $pid = 0\n  ] )","desc":"\n   Retrieves statistics about the process with the process id pid.\n  "},"win32_query_service_status":{"version":"(PECL win32service SVN)","shortdesc":"Queries the status of a service","syntax":"\n   mixed <b>win32_query_service_status<\/b>\n    ( string $servicename\n   [, string $machine\n  ] )","desc":"\n   Queries the current status for a service, returning an array of\n   information.\n  "},"win32_set_service_status":{"version":"(PECL win32service SVN)","shortdesc":"Update the service status","syntax":"\n   bool <b>win32_set_service_status<\/b>\n    ( int $status\n   [, int $checkpoint = 0\n  ] )","desc":"\n   Informs the SCM of the current status of a running service.\n   This call is only valid for a running service process.\n  "},"win32_start_service_ctrl_dispatcher":{"version":"(PECL win32service SVN)","shortdesc":"\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0432 \u0414\u0438\u0441\u043f\u0435\u0442\u0447\u0435\u0440 \u0421\u043b\u0443\u0436\u0431 \u0441\u043a\u0440\u0438\u043f\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d \u043a\u0430\u043a \u0441\u043b\u0443\u0436\u0431\u0430 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u0438\u043c\u0435\u043d\u0435\u043c","syntax":"\n   mixed <b>win32_start_service_ctrl_dispatcher<\/b>\n    ( string $name\n   )","desc":"\n   \u041f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0434\u0438\u0441\u043f\u0435\u0442\u0447\u0435\u0440\u0430 \u0441\u043b\u0443\u0436\u0431, \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0443 \u0441\u043b\u0443\u0436\u0431\u044b \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\n   \u0441\u0432\u0435\u0440\u044f\u0442\u044c\u0441\u044f \u0441 \u043d\u0438\u043c \u0434\u043b\u044f \u043c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433\u0430 \u0441\u043b\u0443\u0436\u0431\u044b \u0438 \u0441\u0432\u044f\u0437\u0438 \u0441 \u043d\u0435\u0439.\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0441\u0432\u0435\u0440\u043a\u0443 \u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u043e\u043c \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043f\u043e\u0442\u043e\u043a\u0430 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438\n   \u043d\u0438\u0437\u043a\u043e\u0443\u0440\u043e\u0432\u043d\u0435\u0432\u043e\u0439 \u0441\u0432\u044f\u0437\u0438 \u0441 \u0434\u0438\u0441\u043f\u0435\u0442\u0447\u0435\u0440\u043e\u043c \u0441\u043b\u0443\u0436\u0431.\n  "},"win32_start_service":{"version":"(PECL win32service SVN)","shortdesc":"\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u0441\u043b\u0443\u0436\u0431\u0443","syntax":"\n   int <b>win32_start_service<\/b>\n    ( string $servicename\n   [, string $machine\n  ] )","desc":"\n   \u041f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043f\u044b\u0442\u043a\u0443 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u043e\u0439 \u0441\u043b\u0443\u0436\u0431\u044b.  \u041e\u0431\u044b\u0447\u043d\u043e \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u0438\u0432\u043d\u044b\u0445 \u043f\u0440\u0438\u0432\u0438\u043b\u0435\u0433\u0438\u0439.\n  "},"win32_stop_service":{"version":"(PECL win32service SVN)","shortdesc":"\u041e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0441\u043b\u0443\u0436\u0431\u0443","syntax":"\n   int <b>win32_stop_service<\/b>\n    ( string $servicename\n   [, string $machine\n  ] )","desc":"\n   \u041e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u0443\u044e \u0441\u043b\u0443\u0436\u0431\u0443. \u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u0438\u0432\u043d\u044b\u0445 \u043f\u0440\u0438\u0432\u0438\u043b\u0435\u0433\u0438\u0439.\n  "},"wincache_fcache_fileinfo":{"version":"(PECL wincache >= 1.0.0)","shortdesc":"\n   Retrieves information about files cached in the file cache\n  ","syntax":"\n   array <b>wincache_fcache_fileinfo<\/b>\n    ([ bool $summaryonly = false\n  ] )","desc":"\n   Retrieves information about file cache content and its usage.\n  "},"wincache_fcache_meminfo":{"version":"(PECL wincache >= 1.0.0)","shortdesc":"\n   Retrieves information about file cache memory usage\n  ","syntax":"\n   array <b>wincache_fcache_meminfo<\/b>\n    ( void\n   )","desc":"\n   Retrieves information about memory usage by file cache.\n  "},"wincache_lock":{"version":"(PECL wincache >= 1.1.0)","shortdesc":"\n   Acquires an exclusive lock on a given key\n  ","syntax":"\n   bool <b>wincache_lock<\/b>\n    ( string $key\n   [, bool $isglobal = false\n  ] )","desc":"\n   Obtains an exclusive lock on a given key. The execution of the current script will be blocked until the \n   lock can be obtained. Once the lock is obtained, the other scripts that try to request the lock by using the same \n   key will be blocked, until the current script releases the lock by using  wincache_unlock().\n  "},"wincache_ocache_fileinfo":{"version":"(PECL wincache >= 1.0.0)","shortdesc":"\n   Retrieves information about files cached in the opcode cache\n  ","syntax":"\n   array <b>wincache_ocache_fileinfo<\/b>\n    ([ bool $summaryonly = false\n  ] )","desc":"\n   Retrieves information about opcode cache content and its usage.\n  "},"wincache_ocache_meminfo":{"version":"(PECL wincache >= 1.0.0)","shortdesc":"\n   Retrieves information about opcode cache memory usage\n  ","syntax":"\n   array <b>wincache_ocache_meminfo<\/b>\n    ( void\n   )","desc":"\n   Retrieves information about memory usage by opcode cache.\n  "},"wincache_refresh_if_changed":{"version":"(PECL wincache >= 1.0.0)","shortdesc":"\n   Refreshes the cache entries for the cached files\n  ","syntax":"\n   bool <b>wincache_refresh_if_changed<\/b>\n    ([ array $files\n  ] )","desc":"\n   Refreshes the cache entries for the files, whose names were passed in the input argument. \n   If no argument is specified then refreshes all the entries in the cache.\n  "},"wincache_rplist_fileinfo":{"version":"(PECL wincache >= 1.0.0)","shortdesc":"\n   Retrieves information about resolve file path cache\n  ","syntax":"\n   array <b>wincache_rplist_fileinfo<\/b>\n    ([ bool $summaryonly = false\n  ] )","desc":"\n   Retrieves information about cached mappings between relative file paths \n   and corresponding absolute file paths.\n  "},"wincache_rplist_meminfo":{"version":"(PECL wincache >= 1.0.0)","shortdesc":"\n   Retrieves information about memory usage by the resolve file path cache\n  ","syntax":"\n   array <b>wincache_rplist_meminfo<\/b>\n    ( void\n   )","desc":"\n   Retrieves information about memory usage by resolve file path cache.\n  "},"wincache_scache_info":{"version":"(PECL wincache >= 1.1.0)","shortdesc":"\n   Retrieves information about files cached in the session cache\n  ","syntax":"\n   array <b>wincache_scache_info<\/b>\n    ([ bool $summaryonly = false\n  ] )","desc":"\n   Retrieves information about session cache content and its usage.\n  "},"wincache_scache_meminfo":{"version":"(PECL wincache >= 1.1.0)","shortdesc":"\n   Retrieves information about session cache memory usage\n  ","syntax":"\n   array <b>wincache_scache_meminfo<\/b>\n    ( void\n   )","desc":"\n   Retrieves information about memory usage by session cache.\n  "},"wincache_ucache_add":{"version":"(PECL wincache >= 1.1.0)","shortdesc":"\n   Adds a variable in user cache only if variable does not already exist in the cache\n  ","syntax":"\n   bool <b>wincache_ucache_add<\/b>\n    ( string $key\n   , mixed $value\n   [, int $ttl = 0\n  ] )\n\n   bool <b>wincache_ucache_add<\/b>\n    ( array $values\n   [, mixed $unused\n   [, int $ttl = 0\n  ]] )\n","desc":"\n   Adds a variable in user cache, only if this variable doesn't already exist in the cache. \n   The added variable remains in the user cache unless its time to live expires or it is \n   deleted by using  wincache_ucache_delete() or  wincache_ucache_clear() functions.\n  "},"wincache_ucache_cas":{"version":"(PECL wincache >= 1.1.0)","shortdesc":"\n   Compares the variable with old value and assigns new value to it\n  ","syntax":"\n   bool <b>wincache_ucache_cas<\/b>\n    ( string $key\n   , int $old_value\n   , int $new_value\n   )","desc":"\n   Compares the variable associated with the key with old_value \n   and if it matches then assigns the new_value to it.\n  "},"wincache_ucache_clear":{"version":"(PECL wincache >= 1.1.0)","shortdesc":"\n   Deletes entire content of the user cache\n  ","syntax":"\n   bool <b>wincache_ucache_clear<\/b>\n    ( void\n   )","desc":"\n   Clears\/deletes all the values stored in the user cache.\n  "},"wincache_ucache_dec":{"version":"(PECL wincache >= 1.1.0)","shortdesc":"\n   Decrements the value associated with the key\n  ","syntax":"\n   mixed <b>wincache_ucache_dec<\/b>\n    ( string $key\n   [, int $dec_by = 1\n   [, bool &$success\n  ]] )","desc":"\n   Decrements the value associated with the key by 1 or as specified \n   by dec_by.\n  "},"wincache_ucache_delete":{"version":"(PECL wincache >= 1.1.0)","shortdesc":"\n   Deletes variables from the user cache\n  ","syntax":"\n   bool <b>wincache_ucache_delete<\/b>\n    ( mixed $key\n   )","desc":"\n   Deletes the elements in the user cache pointed by key.\n  "},"wincache_ucache_exists":{"version":"(PECL wincache >= 1.1.0)","shortdesc":"\n   Checks if a variable exists in the user cache\n  ","syntax":"\n   bool <b>wincache_ucache_exists<\/b>\n    ( string $key\n   )","desc":"\n   Checks if a variable with the key exists in the user cache or not.\n  "},"wincache_ucache_get":{"version":"(PECL wincache >= 1.1.0)","shortdesc":"\n   Gets a variable stored in the user cache\n  ","syntax":"\n   mixed <b>wincache_ucache_get<\/b>\n    ( mixed $key\n   [, bool &$success\n  ] )","desc":"\n   Gets a variable stored in the user cache.\n  "},"wincache_ucache_inc":{"version":"(PECL wincache >= 1.1.0)","shortdesc":"\n   Increments the value associated with the key\n  ","syntax":"\n   mixed <b>wincache_ucache_inc<\/b>\n    ( string $key\n   [, int $inc_by = 1\n   [, bool &$success\n  ]] )","desc":"\n   Increments the value associated with the key by 1 or as specified \n   by inc_by.\n  "},"wincache_ucache_info":{"version":"(PECL wincache >= 1.1.0)","shortdesc":"\n   Retrieves information about data stored in the user cache\n  ","syntax":"\n   array <b>wincache_ucache_info<\/b>\n    ([ bool $summaryonly = false\n   [, string $key\n  ]] )","desc":"\n   Retrieves information about data stored in the user cache.\n  "},"wincache_ucache_meminfo":{"version":"(PECL wincache >= 1.1.0)","shortdesc":"\n   Retrieves information about user cache memory usage\n  ","syntax":"\n   array <b>wincache_ucache_meminfo<\/b>\n    ( void\n   )","desc":"\n   Retrieves information about memory usage by user cache.\n  "},"wincache_ucache_set":{"version":"(PECL wincache >= 1.1.0)","shortdesc":"\n   Adds a variable in user cache and overwrites a variable if it already exists in the cache\n  ","syntax":"\n   bool <b>wincache_ucache_set<\/b>\n    ( mixed $key\n   , mixed $value\n   [, int $ttl = 0\n  ] )\n\n   bool <b>wincache_ucache_set<\/b>\n    ( array $values\n   [, mixed $unused\n   [, int $ttl = 0\n  ]] )\n","desc":"\n   Adds a variable in user cache. Overwrites a variable if it already exists in the cache. \n   The added or updated variable remains in the user cache unless its time to live expires or it is \n   deleted by using  wincache_ucache_delete() or  wincache_ucache_clear() functions.\n  "},"wincache_unlock":{"version":"(PECL wincache >= 1.1.0)","shortdesc":"\n   Releases an exclusive lock on a given key\n  ","syntax":"\n   bool <b>wincache_unlock<\/b>\n    ( string $key\n   )","desc":"\n   Releases an exclusive lock that was obtained on a given key by using  wincache_lock(). \n   If any other process was blocked waiting for the lock on this key, that process will be able to obtain \n   the lock.\n  "},"wordwrap":{"version":"(PHP 4 >= 4.0.2, PHP 5)","shortdesc":"\u041f\u0435\u0440\u0435\u043d\u043e\u0441\u0438\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u043f\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432","syntax":"\n   string <b>wordwrap<\/b>\n    ( string $str\n   [, int $width = 75\n   [, string $break = \"\\n\"\n   [, bool $cut = false\n  ]]] )","desc":"\n   \u041f\u0435\u0440\u0435\u043d\u043e\u0441\u0438\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u043f\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.\n  "},"xattr_get":{"version":"(PECL xattr >= 0.9.0)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u044b\u0445 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432 \u0444\u0430\u0439\u043b\u0430\n  ","syntax":"\n   string <b>xattr_get<\/b>\n    ( string $filename\n   , string $name\n   [, int $flags = 0\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u043e\u0433\u043e \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430 \u0444\u0430\u0439\u043b\u0430.\n  "},"xattr_list":{"version":"(PECL xattr >= 0.9.0)","shortdesc":"\n   \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0441\u043f\u0438\u0441\u043a\u0430 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u044b\u0445 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432 \u0444\u0430\u0439\u043b\u0430\n  ","syntax":"\n   array <b>xattr_list<\/b>\n    ( string $filename\n   [, int $flags = 0\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u043c\u0451\u043d \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u044b\u0445 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432 \u0444\u0430\u0439\u043b\u0430. \n  "},"xattr_remove":{"version":"(PECL xattr >= 0.9.0)","shortdesc":"\n   \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u044b\u0445 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432 \u0444\u0430\u0439\u043b\u0430\n  ","syntax":"\n   bool <b>xattr_remove<\/b>\n    ( string $filename\n   , string $name\n   [, int $flags = 0\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u044b\u0439 \u0430\u0442\u0440\u0438\u0431\u0443\u0442 \u0444\u0430\u0439\u043b\u0430.\n  "},"xattr_set":{"version":"(PECL xattr >= 0.9.0)","shortdesc":"\n   \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u044b\u0445 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432 \u0444\u0430\u0439\u043b\u0430\n  ","syntax":"\n   bool <b>xattr_set<\/b>\n    ( string $filename\n   , string $name\n   , string $value\n   [, int $flags = 0\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u044b\u0439 \u0430\u0442\u0440\u0438\u0431\u0443\u0442 \u0444\u0430\u0439\u043b\u0430.\n  "},"xattr_supported":{"version":"(PECL xattr >= 1.0.0)","shortdesc":"\n   \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u044b\u0445 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432\n  ","syntax":"\n   bool <b>xattr_supported<\/b>\n    ( string $filename\n   [, int $flags = 0\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u043b\u0438 \u0444\u0430\u0439\u043b\u043e\u0432\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0430\u044f \u0444\u0430\u0439\u043b, \n   \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u044b\u0435 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b. \u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043f\u0440\u0430\u0432\u043e \u043d\u0430 \u0447\u0442\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430.\n  "},"xdiff_file_bdiff_size":{"version":"(PECL xdiff >= 1.5.0)","shortdesc":"Read a size of file created by applying a binary diff","syntax":"\n   int <b>xdiff_file_bdiff_size<\/b>\n    ( string $file\n   )","desc":"\n   Returns a size of a result file that would be created after applying binary patch from file\n   file to the original file.\n  "},"xdiff_file_bdiff":{"version":"(PECL xdiff >= 1.5.0)","shortdesc":"Make binary diff of two files","syntax":"\n   bool <b>xdiff_file_bdiff<\/b>\n    ( string $old_file\n   , string $new_file\n   , string $dest\n   )","desc":"\n   Makes a binary diff of two files and stores the result in a patch file.\n   This function works with both text and binary files. Resulting patch\n   file can be later applied using  xdiff_file_bpatch()\/ xdiff_string_bpatch().\n  "},"xdiff_file_bpatch":{"version":"(PECL xdiff >= 1.5.0)","shortdesc":"Patch a file with a binary diff","syntax":"\n   bool <b>xdiff_file_bpatch<\/b>\n    ( string $file\n   , string $patch\n   , string $dest\n   )","desc":"\n   Patches a file with a binary\n   patch and stores the result in a file dest. \n   This function accepts patches created both via  xdiff_file_bdiff() \n   and  xdiff_file_rabdiff() functions or their string counterparts.\n  "},"xdiff_file_diff_binary":{"version":"(PECL xdiff >= 0.2.0)","shortdesc":"Alias of xdiff_file_bdiff","syntax":"\n   bool <b>xdiff_file_diff_binary<\/b>\n    ( string $old_file\n   , string $new_file\n   , string $dest\n   )","desc":"\n   Makes a binary diff of two files and stores the result in a patch file.\n   This function works with both text and binary files. Resulting patch\n   file can be later applied using  xdiff_file_bpatch().\n  "},"xdiff_file_diff":{"version":"(PECL xdiff >= 0.2.0)","shortdesc":"Make unified diff of two files","syntax":"\n   bool <b>xdiff_file_diff<\/b>\n    ( string $old_file\n   , string $new_file\n   , string $dest\n   [, int $context = 3\n   [, bool $minimal = false\n  ]] )","desc":"\n   Makes an unified diff containing differences between old_file and\n   new_file and stores it in dest file. The\n   resulting file is human-readable. An optional context parameter\n   specifies how many lines of context should be added around each change.\n   Setting minimal parameter to true will result in outputting the shortest\n   patch file possible (can take a long time). \n  "},"xdiff_file_merge3":{"version":"(PECL xdiff >= 0.2.0)","shortdesc":"Merge 3 files into one","syntax":"\n   mixed <b>xdiff_file_merge3<\/b>\n    ( string $old_file\n   , string $new_file1\n   , string $new_file2\n   , string $dest\n   )","desc":"\n   Merges three files into one and stores the result in a file dest. \n   The old_file is an original version while new_file1\n   and new_file2 are modified versions of an original.   \n  "},"xdiff_file_patch_binary":{"version":"(PECL xdiff >= 0.2.0)","shortdesc":"Alias of xdiff_file_bpatch","syntax":"\n   bool <b>xdiff_file_patch_binary<\/b>\n    ( string $file\n   , string $patch\n   , string $dest\n   )","desc":"\n   Patches a file with a binary\n   patch and stores the result in a file dest. \n   This function accepts patches created both via  xdiff_file_bdiff() \n   or  xdiff_file_rabdiff() functions or their string counterparts.\n  "},"xdiff_file_patch":{"version":"(PECL xdiff >= 0.2.0)","shortdesc":"Patch a file with an unified diff","syntax":"\n   mixed <b>xdiff_file_patch<\/b>\n    ( string $file\n   , string $patch\n   , string $dest\n   [, int $flags = DIFF_PATCH_NORMAL\n  ] )","desc":"\n   Patches a file with a patch and stores the result in a file.\n   patch has to be an unified diff created by \n    xdiff_file_diff()\/ xdiff_string_diff() function. \n   An optional flags parameter specifies mode of operation.\n  "},"xdiff_file_rabdiff":{"version":"(PECL xdiff >= 1.5.0)","shortdesc":"Make binary diff of two files using the Rabin's polynomial fingerprinting algorithm","syntax":"\n   bool <b>xdiff_file_rabdiff<\/b>\n    ( string $old_file\n   , string $new_file\n   , string $dest\n   )","desc":"\n   Makes a binary diff of two files and stores the result in a patch file.\n   The difference between this function and  xdiff_file_bdiff() is different\n   algorithm used which should result in faster execution and smaller diff produced.\n   This function works with both text and binary files. Resulting patch\n   file can be later applied using  xdiff_file_bpatch()\/ xdiff_string_bpatch().\n  "},"xdiff_string_bdiff_size":{"version":"(PECL xdiff >= 1.5.0)","shortdesc":"Read a size of file created by applying a binary diff","syntax":"\n   int <b>xdiff_string_bdiff_size<\/b>\n    ( string $patch\n   )","desc":"\n   Returns a size of a result file that would be created after applying binary patch to\n   the original file.\n  "},"xdiff_string_bdiff":{"version":"(PECL xdiff >= 1.5.0)","shortdesc":"Make binary diff of two strings","syntax":"\n   string <b>xdiff_string_bdiff<\/b>\n    ( string $old_data\n   , string $new_data\n   )","desc":"\n   Makes a binary diff of two strings and returns the result.\n   This function works with both text and binary data. Resulting patch\n   can be later applied using  xdiff_string_bpatch()\/ xdiff_file_bpatch().\n  "},"xdiff_string_bpatch":{"version":"(PECL xdiff >= 1.5.0)","shortdesc":"Patch a string with a binary diff","syntax":"\n   string <b>xdiff_string_bpatch<\/b>\n    ( string $str\n   , string $patch\n   )","desc":"\n   Patches a string str with a binary patch.\n   This function accepts patches created both via  xdiff_string_bdiff() \n   and  xdiff_string_rabdiff() functions or their file counterparts.\n  "},"xdiff_string_diff_binary":{"version":"(PECL xdiff >= 0.2.0)","shortdesc":"Alias of xdiff_string_bdiff","syntax":"\n   string xdiff_string_bdiff\n    ( string $old_data\n   , string $new_data\n   )","desc":"\n   Makes a binary diff of two strings and returns the result.\n   This function works with both text and binary data. Resulting patch\n   can be later applied using  xdiff_string_bpatch()\/ xdiff_file_bpatch().\n  "},"xdiff_string_diff":{"version":"(PECL xdiff >= 0.2.0)","shortdesc":"Make unified diff of two strings","syntax":"\n   string <b>xdiff_string_diff<\/b>\n    ( string $old_data\n   , string $new_data\n   [, int $context = 3\n   [, bool $minimal = false\n  ]] )","desc":"\n   Makes an unified diff containing differences between old_data string and\n   new_data string and returns it. The resulting diff is human-readable. \n   An optional context parameter specifies how many lines of context should be\n   added around each change. Setting minimal parameter \n   to true will result in outputting the shortest patch file possible (can take a long time). \n  "},"xdiff_string_merge3":{"version":"(PECL xdiff >= 0.2.0)","shortdesc":"Merge 3 strings into one","syntax":"\n   mixed <b>xdiff_string_merge3<\/b>\n    ( string $old_data\n   , string $new_data1\n   , string $new_data2\n   [, string &$error\n  ] )","desc":"\n   Merges three strings into one and returns the result.\n   The old_data is an original version of data \n   while new_file1 and new_file2 are modified \n   versions of an original. An optional error is used to pass any\n   rejected parts during merging process.\n  "},"xdiff_string_patch_binary":{"version":"(PECL xdiff >= 0.2.0)","shortdesc":"Alias of xdiff_string_bpatch","syntax":"\n   string <b>xdiff_string_patch_binary<\/b>\n    ( string $str\n   , string $patch\n   )","desc":"\n   Patches a string str with a binary patch.\n   This function accepts patches created both via  xdiff_string_bdiff() \n   and  xdiff_string_rabdiff() functions or their file counterparts.\n  "},"xdiff_string_patch":{"version":"(PECL xdiff >= 0.2.0)","shortdesc":"Patch a string with an unified diff","syntax":"\n   string <b>xdiff_string_patch<\/b>\n    ( string $str\n   , string $patch\n   [, int $flags\n   [, string &$error\n  ]] )","desc":"\n   Patches a str string with an unified patch in patch parameter \n   and returns the result. patch has to be an unified diff created by \n    xdiff_file_diff()\/ xdiff_string_diff() function. \n   An optional flags parameter specifies mode of operation. Any\n   rejected parts of the patch will be stored inside error variable if \n   it is provided.\n  "},"xdiff_string_rabdiff":{"version":"(PECL xdiff >= 1.5.0)","shortdesc":"Make binary diff of two strings using the Rabin's polynomial fingerprinting algorithm","syntax":"\n   string xdiff_string_bdiff\n    ( string $old_data\n   , string $new_data\n   )","desc":"\n   Makes a binary diff of two strings and returns the result.\n   The difference between this function and  xdiff_string_bdiff() is different\n   algorithm used which should result in faster execution and smaller diff produced.\n   This function works with both text and binary data. Resulting patch\n   can be later applied using  xdiff_string_bpatch()\/ xdiff_file_bpatch().\n  "},"xhprof_disable":{"version":"(PECL xhprof >= 0.9.0)","shortdesc":"Stops xhprof profiler","syntax":"\n   array <b>xhprof_disable<\/b>\n    ( void\n   )","desc":"\n   Stops the profiler, and returns xhprof data from the run.\n  "},"xhprof_enable":{"version":"(PECL xhprof >= 0.9.0)","shortdesc":"Start xhprof profiler","syntax":"\n   void <b>xhprof_enable<\/b>\n    ([ int $flags = 0\n   [, array $options\n  ]] )","desc":"\n   Start xhprof profiling.\n  "},"xhprof_sample_disable":{"version":"(PECL xhprof >= 0.9.0)","shortdesc":"Stops xhprof sample profiler","syntax":"\n   array <b>xhprof_sample_disable<\/b>\n    ( void\n   )","desc":"\n   Stops the sample mode xhprof profiler, and \n  "},"xhprof_sample_enable":{"version":"(PECL xhprof >= 0.9.0)","shortdesc":"Start XHProf profiling in sampling mode","syntax":"\n   void <b>xhprof_sample_enable<\/b>\n    ( void\n   )","desc":"\n   Starts profiling in sample mode, which is a lighter weight version\n   of  xhprof_enable(). The sampling interval is\n   0.1 seconds, and samples record the full function call stack. The\n   main use case is when lower overhead is required when doing\n   performance monitoring and diagnostics.\n  "},"xml_error_string":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u043e\u0448\u0438\u0431\u043a\u0438 XML \u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430","syntax":"\n   string <b>xml_error_string<\/b>\n    ( int $code\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438 XML \u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430 \u0432 \n   \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u043c \u043a\u043e\u0434\u043e\u043c \u043e\u0448\u0438\u0431\u043a\u0438 code.\n  "},"xml_get_current_byte_index":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0434\u043b\u044f XML \u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430 \u0431\u0430\u0439\u0442\u043e\u0432\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441","syntax":"\n   int <b>xml_get_current_byte_index<\/b>\n    ( resource $parser\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e XML \u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430 \u0431\u0430\u0439\u0442\u043e\u0432\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441.\n  "},"xml_get_current_column_number":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043e\u0442 XML \u043f\u0430\u0440\u0441\u0435\u0440\u0430 \u043d\u043e\u043c\u0435\u0440 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u0430\n  ","syntax":"\n   int <b>xml_get_current_column_number<\/b>\n    ( resource $parser\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043d\u043e\u043c\u0435\u0440 \u0441\u0442\u043e\u043b\u0431\u0446\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e XML \u043f\u0430\u0440\u0441\u0435\u0440\u0430.\n  "},"xml_get_current_line_number":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043e\u0442 XML-\u043f\u0430\u0440\u0441\u0435\u0440\u0430 \u043d\u043e\u043c\u0435\u0440 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0438","syntax":"\n   int <b>xml_get_current_line_number<\/b>\n    ( resource $parser\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043d\u043e\u043c\u0435\u0440 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e XML-\u043f\u0430\u0440\u0441\u0435\u0440\u0430.\n  "},"xml_get_error_code":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043a\u043e\u0434 \u043e\u0448\u0438\u0431\u043a\u0438 XML-\u043f\u0430\u0440\u0441\u0435\u0440\u0430","syntax":"\n   int <b>xml_get_error_code<\/b>\n    ( resource $parser\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043a\u043e\u0434 \u043e\u0448\u0438\u0431\u043a\u0438 XML-\u043f\u0430\u0440\u0441\u0435\u0440\u0430.\n  "},"xml_parse_into_struct":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0420\u0430\u0437\u0431\u043e\u0440 XML \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043f\u043e\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432","syntax":"\n   int <b>xml_parse_into_struct<\/b>\n    ( resource $parser\n   , string $data\n   , array &$values\n   [, array &$index\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0440\u0430\u0437\u0431\u0438\u0440\u0430\u0435\u0442 XML \u0441\u0442\u0440\u043e\u043a\u0443 \u0438 \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 2 \u043c\u0430\u0441\u0441\u0438\u0432\u0430. \u041c\u0430\u0441\u0441\u0438\u0432\n   index \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u043d\u0430 \u0440\u0430\u0437\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0432 \n   \u043c\u0430\u0441\u0441\u0438\u0432\u0435 values. \u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b, \u0437\u0430\u0434\u0430\u044e\u0449\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u044b, \u0434\u043e\u043b\u0436\u043d\u044b\n   \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435.\n  "},"xml_parse":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u0440\u0430\u0437\u0431\u043e\u0440 XML \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430","syntax":"\n   int <b>xml_parse<\/b>\n    ( resource $parser\n   , string $data\n   [, bool $is_final = false\n  ] )","desc":"\n    xml_parse() \u0440\u0430\u0437\u0431\u0438\u0440\u0430\u0435\u0442 XML \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442. \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438\n   \u0437\u0430\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0441\u043e\u0431\u044b\u0442\u0438\u0439 \u0432\u044b\u0437\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0441\u0442\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0437, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e.\n  "},"xml_parser_create_ns":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 XML \u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430 \u0441 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u043e\u0439 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432 \u0438\u043c\u0435\u043d","syntax":"\n   resource <b>xml_parser_create_ns<\/b>\n    ([ string $encoding\n   [, string $separator = ':'\n  ]] )","desc":"\n    xml_parser_create_ns() \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 XML \u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440 \u0441\n   \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u043e\u0439 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432 \u0438\u043c\u0435\u043d \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0441\u044b\u043b\u0430\u044e\u0449\u0438\u0439\u0441\u044f \u043d\u0430 \u043d\u0435\u0433\u043e \u0440\u0435\u0441\u0443\u0440\u0441,\n   \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432 \u0434\u0440\u0443\u0433\u0438\u0445 XML \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u0445.\n  "},"xml_parser_create":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 XML \u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430","syntax":"\n   resource <b>xml_parser_create<\/b>\n    ([ string $encoding\n  ] )","desc":"\n    xml_parser_create() \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 XML \u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440 \u0438\n   \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0441\u044b\u043b\u0430\u044e\u0449\u0438\u0439\u0441\u044f \u043d\u0430 \u043d\u0435\u0433\u043e \u0440\u0435\u0441\u0443\u0440\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432 \u0434\u0440\u0443\u0433\u0438\u0445\n   XML \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u0445.\n  "},"xml_parser_free":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0435\u043d\u0438\u0435 XML \u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430","syntax":"\n   bool <b>xml_parser_free<\/b>\n    ( resource $parser\n   )","desc":"\n   \u041e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u0435\u0442 \u043f\u0430\u043c\u044f\u0442\u044c, \u0437\u0430\u043d\u044f\u0442\u0443\u044e XML \u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u043e\u043c parser.\n  "},"xml_parser_get_option":{"version":"(PHP 4, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 XML \u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430","syntax":"\n   mixed <b>xml_parser_get_option<\/b>\n    ( resource $parser\n   , int $option\n   )","desc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 XML \u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430.\n  "},"xml_parser_set_option":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 XML \u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430","syntax":"\n   bool <b>xml_parser_set_option<\/b>\n    ( resource $parser\n   , int $option\n   , mixed $value\n   )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 XML \u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430.\n  "},"xml_set_character_data_handler":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 \u0441\u0438\u043c\u0432\u043e\u043b\u044c\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445","syntax":"\n   bool <b>xml_set_character_data_handler<\/b>\n    ( resource $parser\n   , callable $handler\n   )\n\n         handler\n         ( resource $parser\n        , string $data\n        )\n","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441\u0438\u043c\u0432\u043e\u043b\u044c\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e XML \u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430\n   parser.\n  "},"xml_set_default_handler":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e","syntax":"\n   bool <b>xml_set_default_handler<\/b>\n    ( resource $parser\n   , callable $handler\n   )\n\n         handler\n         ( resource $parser\n        , string $data\n        )\n","desc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0434\u043b\u044f XML \u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430\n   parser.\n  "},"xml_set_element_handler":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0438 \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432","syntax":"\n   bool <b>xml_set_element_handler<\/b>\n    ( resource $parser\n   , callable $start_element_handler\n   , callable $end_element_handler\n   )\n\n         start_element_handler\n         ( resource $parser\n        , string $name\n        , array $attribs\n        )\n\n         end_element_handler\n         ( resource $parser\n        , string $name\n        )\n","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0434\u043b\u044f XML \u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430\n   parser. start_element_handler\n   \u0438 end_element_handler - \u0441\u0442\u0440\u043e\u043a\u0438, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0435 \u0438\u043c\u0435\u043d\u0430\n   \u0444\u0443\u043d\u043a\u0446\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b \u043d\u0430 \u043c\u043e\u043c\u0435\u043d\u0442 \u0432\u044b\u0437\u043e\u0432\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    xml_parse() \u0438\u0437 \u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430 parser.\n  "},"xml_set_end_namespace_decl_handler":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 \u0432\u044b\u0445\u043e\u0434\u0430 \u0437\u0430 \u043f\u0440\u0435\u0434\u0435\u043b\u044b \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430 \u0438\u043c\u0435\u043d","syntax":"\n   bool <b>xml_set_end_namespace_decl_handler<\/b>\n    ( resource $parser\n   , callable $handler\n   )\n\n         handler\n         ( resource $parser\n        , string $prefix\n        )\n","desc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u0432\u044b\u0445\u043e\u0434\u0435 \u0437\u0430 \u043f\u0440\u0435\u0434\u0435\u043b\u044b \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f\n   \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430 \u0438\u043c\u0435\u043d. \u042d\u0442\u043e\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \n   \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430 \u0438\u043c\u0435\u043d \u043f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e \u043a\u0430\u043a \u043e\u0442\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\n   \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u044d\u0442\u043e \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u043e \u0438\u043c\u0435\u043d \u0431\u044b\u043b\u043e \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u043e.\n  "},"xml_set_external_entity_ref_handler":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 \u0432\u043d\u0435\u0448\u043d\u0438\u0445 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439","syntax":"\n   bool <b>xml_set_external_entity_ref_handler<\/b>\n    ( resource $parser\n   , callable $handler\n   )\n\n         handler\n         ( resource $parser\n        , string $open_entity_names\n        , string $base\n        , string $system_id\n        , string $public_id\n        )\n","desc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0432\u043d\u0435\u0448\u043d\u0438\u0445 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439 \u0434\u043b\u044f XML \u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430\n   parser.\n  "},"xml_set_notation_decl_handler":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u0443\u0441\u043b\u043e\u0432\u043d\u044b\u0445 \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439","syntax":"\n   bool <b>xml_set_notation_decl_handler<\/b>\n    ( resource $parser\n   , callable $handler\n   )\n\n         handler\n         ( resource $parser\n        , string $notation_name\n        , string $base\n        , string $system_id\n        , string $public_id\n        )\n","desc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0434\u043b\u044f XML \u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430\n   parser.\n  "},"xml_set_object":{"version":"(PHP 4, PHP 5)","shortdesc":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 XML \u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430 \u0432\u043d\u0443\u0442\u0440\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u0430","syntax":"\n   bool <b>xml_set_object<\/b>\n    ( resource $parser\n   , object &$object\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c parser \u0432\u043d\u0443\u0442\u0440\u0438\n   \u043e\u0431\u044a\u0435\u043a\u0442\u0430 object. \u0412\u0441\u0435 callback-\u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c\n   \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438  xml_set_element_handler() \n   \u0438 \u0442.\u043f. \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043a\u0430\u043a \u043c\u0435\u0442\u043e\u0434\u044b \u043e\u0431\u044a\u0435\u043a\u0442\u0430 object.\n  "},"xml_set_processing_instruction_handler":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0439 \u043f\u0440\u0435\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430 (PI)\n  ","syntax":"\n   bool <b>xml_set_processing_instruction_handler<\/b>\n    ( resource $parser\n   , callable $handler\n   )\n\n         handler\n         ( resource $parser\n        , string $target\n        , string $data\n        )\n","desc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0439 \u043f\u0440\u0435\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430 (PI) \u0434\u043b\u044f XML \u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430.\n   parser.\n  "},"xml_set_start_namespace_decl_handler":{"version":"(PHP 4 >= 4.0.5, PHP 5)","shortdesc":"\n   \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 \u0432\u0445\u043e\u0434\u0430 \u0432 \u043f\u0440\u0435\u0434\u0435\u043b\u044b \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430 \u0438\u043c\u0435\u043d\n  ","syntax":"\n   bool <b>xml_set_start_namespace_decl_handler<\/b>\n    ( resource $parser\n   , callable $handler\n   )\n\n         handler\n         ( resource $parser\n        , string $prefix\n        , string $uri\n        )\n","desc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u0432\u0445\u043e\u0434\u0430 \u0432 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u043e \u0438\u043c\u0435\u043d. \u0422\u043e \u0435\u0441\u0442\u044c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\n   \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440 \u043d\u0430\u0445\u043e\u0434\u0438\u0442 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430 \u0438\u043c\u0435\u043d. \u041f\u043e\u0434\u043e\u0431\u043d\u044b\u0435 \n   \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u0432 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u044e\u0449\u0438\u0445 \u0442\u044d\u0433\u0430\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432. \u042d\u0442\u043e\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\n   \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0434\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 \u0442\u044d\u0433\u0430.\n  "},"xml_set_unparsed_entity_decl_handler":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 \u043d\u0435\u0440\u0430\u0437\u043e\u0431\u0440\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439\n  ","syntax":"\n   bool <b>xml_set_unparsed_entity_decl_handler<\/b>\n    ( resource $parser\n   , callable $handler\n   )\n\n         handler\n         ( resource $parser\n        , string $entity_name\n        , string $base\n        , string $system_id\n        , string $public_id\n        , string $notation_name\n        )\n","desc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043d\u0435\u0440\u0430\u0437\u043e\u0431\u0440\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439 \u0434\u043b\u044f XML \n   \u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430 parser.\n  "},"xmlrpc_decode_request":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0414\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 XML \u0432 \u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0435 \u0442\u0438\u043f\u044b PHP","syntax":"\n   mixed <b>xmlrpc_decode_request<\/b>\n    ( string $xml\n   , string &$method\n   [, string $encoding\n  ] )","desc":""},"xmlrpc_decode":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0414\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 XML \u0432 \u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0435 \u0442\u0438\u043f\u044b PHP","syntax":"\n   mixed <b>xmlrpc_decode<\/b>\n    ( string $xml\n   [, string $encoding = \"iso-8859-1\"\n  ] )","desc":""},"xmlrpc_encode_request":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 XML \u0434\u043b\u044f \u043c\u0435\u0442\u043e\u0434\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430","syntax":"\n   string <b>xmlrpc_encode_request<\/b>\n    ( string $method\n   , mixed $params\n   [, array $output_options\n  ] )","desc":""},"xmlrpc_encode":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 XML \u0434\u043b\u044f PHP \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f","syntax":"\n   string <b>xmlrpc_encode<\/b>\n    ( mixed $value\n   )","desc":""},"xmlrpc_get_type":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 XML-RPC \u0442\u0438\u043f \u0434\u043b\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f PHP","syntax":"\n   string <b>xmlrpc_get_type<\/b>\n    ( mixed $value\n   )","desc":""},"xmlrpc_is_fault":{"version":"(PHP 4 >= 4.3.0, PHP 5)","shortdesc":"\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043c\u0430\u0441\u0441\u0438\u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043c \u043e\u0448\u0438\u0431\u043a\u0438 XMLRPC","syntax":"\n   bool <b>xmlrpc_is_fault<\/b>\n    ( array $arg\n   )","desc":""},"xmlrpc_parse_method_descriptions":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0414\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 XML \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0439 \u043c\u0435\u0442\u043e\u0434\u043e\u0432","syntax":"\n   array <b>xmlrpc_parse_method_descriptions<\/b>\n    ( string $xml\n   )","desc":""},"xmlrpc_server_add_introspection_data":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u0441\u0430\u043c\u043e\u0430\u043d\u0430\u043b\u0438\u0437\u0430","syntax":"\n   int <b>xmlrpc_server_add_introspection_data<\/b>\n    ( resource $server\n   , array $desc\n   )","desc":""},"xmlrpc_server_call_method":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0420\u0430\u0437\u0431\u0438\u0440\u0430\u0435\u0442 XML \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u0432\u044b\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u044b","syntax":"\n   string <b>xmlrpc_server_call_method<\/b>\n    ( resource $server\n   , string $xml\n   , mixed $user_data\n   [, array $output_options\n  ] )","desc":""},"xmlrpc_server_create":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0451\u0442 XML-RPC \u0441\u0435\u0440\u0432\u0435\u0440","syntax":"\n   resource <b>xmlrpc_server_create<\/b>\n    ( void\n   )","desc":""},"xmlrpc_server_destroy":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0423\u043d\u0438\u0447\u0442\u043e\u0436\u0430\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u044b\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u044b","syntax":"\n   int <b>xmlrpc_server_destroy<\/b>\n    ( resource $server\n   )","desc":""},"xmlrpc_server_register_introspection_callback":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e PHP \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438","syntax":"\n   bool <b>xmlrpc_server_register_introspection_callback<\/b>\n    ( resource $server\n   , string $function\n   )","desc":""},"xmlrpc_server_register_method":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e PHP \u043a \u043c\u0435\u0442\u043e\u0434\u0443 \u0440\u0435\u0441\u0443\u0440\u0441\u0430, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u043c\u0443 method_name","syntax":"\n   bool <b>xmlrpc_server_register_method<\/b>\n    ( resource $server\n   , string $method_name\n   , string $function\n   )","desc":""},"xmlrpc_set_type":{"version":"(PHP 4 >= 4.1.0, PHP 5)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0442\u0438\u043f XML-RPC, base64 \u0438\u043b\u0438 datetime \u0434\u043b\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u043a\u0438 PHP","syntax":"\n   bool <b>xmlrpc_set_type<\/b>\n    ( string &$value\n   , string $type\n   )","desc":"\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 XML-RPC \u0442\u0438\u043f, base64 \u0438\u043b\u0438 datetime \u0434\u043b\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u043a\u0438 PHP.\n  "},"XMLWriter::endAttribute\nxmlwriter_end_attribute\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u0430\u0442\u0440\u0438\u0431\u0443\u0442","syntax":"\n   bool XMLWriter::endAttribute\n    ( void\n   )\n\n   bool xmlwriter_end_attribute\n    ( resource $xmlwriter\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0417\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0430\u0442\u0440\u0438\u0431\u0443\u0442.\n  \n"},"XMLWriter::endCData\nxmlwriter_end_cdata\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0441\u0435\u043a\u0446\u0438\u044e CDATA","syntax":"\n   bool XMLWriter::endCData\n    ( void\n   )\n\n   bool xmlwriter_end_cdata\n    ( resource $xmlwriter\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0417\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0441\u0435\u043a\u0446\u0438\u044e CDATA.\n  \n"},"XMLWriter::endComment\nxmlwriter_end_comment\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 1.0.0)","shortdesc":"\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439","syntax":"\n   bool XMLWriter::endComment\n    ( void\n   )\n\n   bool xmlwriter_end_comment\n    ( resource $xmlwriter\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0417\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043a\u043e\u043c\u043c\u0435\u0442\u0430\u0440\u0438\u0439.\n  \n"},"XMLWriter::endDocument\nxmlwriter_end_document\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442","syntax":"\n   bool XMLWriter::endDocument\n    ( void\n   )\n\n   bool xmlwriter_end_document\n    ( resource $xmlwriter\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0417\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442.\n  \n"},"XMLWriter::endDTDAttlist\nxmlwriter_end_dtd_attlist\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0438\u0439 DTD","syntax":"\n   bool XMLWriter::endDTDAttlist\n    ( void\n   )\n\n   bool xmlwriter_end_dtd_attlist\n    ( resource $xmlwriter\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0417\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432 DTD \u0434\u043b\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430.\n  \n"},"XMLWriter::endDTDElement\nxmlwriter_end_dtd_element\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 DTD","syntax":"\n   bool XMLWriter::endDTDElement\n    ( void\n   )\n\n   bool xmlwriter_end_dtd_element\n    ( resource $xmlwriter\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0417\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 DTD.\n  \n"},"XMLWriter::endDTDEntity\nxmlwriter_end_dtd_entity\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0437\u0430\u043f\u0438\u0441\u044c DTD","syntax":"\n   bool XMLWriter::endDTDEntity\n    ( void\n   )\n\n   bool xmlwriter_end_dtd_entity\n    ( resource $xmlwriter\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0417\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0437\u0430\u043f\u0438\u0441\u044c DTD.\n  \n"},"XMLWriter::endDTD\nxmlwriter_end_dtd\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0438\u0439 DTD","syntax":"\n   bool XMLWriter::endDTD\n    ( void\n   )\n\n   bool xmlwriter_end_dtd\n    ( resource $xmlwriter\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0417\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u0441\u0435\u043a\u0446\u0438\u044e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0442\u0438\u043f\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 (DTD).\n  \n"},"XMLWriter::endElement\nxmlwriter_end_element\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442","syntax":"\n   bool XMLWriter::endElement\n    ( void\n   )\n\n   bool xmlwriter_end_element\n    ( resource $xmlwriter\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0417\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442.\n  \n"},"XMLWriter::endPI\nxmlwriter_end_pi\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 (PI)","syntax":"\n   bool XMLWriter::endPI\n    ( void\n   )\n\n   bool xmlwriter_end_pi\n    ( resource $xmlwriter\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0417\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438.\n  \n"},"XMLWriter::flush\nxmlwriter_flush\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 1.0.0)","shortdesc":"\u0421\u0431\u0440\u043e\u0441\u0438\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0431\u0443\u0444\u0435\u0440","syntax":"\n   mixed XMLWriter::flush\n    ([ bool $empty = true\n  ] )\n\n   mixed xmlwriter_flush\n    ( resource $xmlwriter\n   [, bool $empty = true\n  ] )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0421\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0431\u0443\u0444\u0435\u0440.\n  \n"},"XMLWriter::fullEndElement\nxmlwriter_full_end_element\n":{"version":"(PHP 5 >= 5.2.0, PECL xmlwriter >= 2.0.4)","shortdesc":"\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442","syntax":"\n   bool XMLWriter::fullEndElement\n    ( void\n   )\n\n   bool xmlwriter_full_end_element\n    ( resource $xmlwriter\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0417\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 XML \u044d\u043b\u0435\u043c\u0435\u043d\u0442. \u0417\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u0442\u0435\u0433, \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043f\u0443\u0441\u0442\u043e\u0439.\n  \n"},"XMLWriter::openMemory\nxmlwriter_open_memory\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 XMLWriter, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043f\u0430\u043c\u044f\u0442\u044c \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u043e\u0433\u043e \u0432\u044b\u0432\u043e\u0434\u0430","syntax":"\n   bool XMLWriter::openMemory\n    ( void\n   )\n\n   resource xmlwriter_open_memory\n    ( void\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 XMLWriter, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043f\u0430\u043c\u044f\u0442\u044c \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u043e\u0433\u043e \u0432\u044b\u0432\u043e\u0434\u0430.\n  \n"},"XMLWriter::openURI\nxmlwriter_open_uri\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 XMLWriter, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0439 URI \u0434\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430","syntax":"\n   bool XMLWriter::openURI\n    ( string $uri\n   )\n\n   resource xmlwriter_open_uri\n    ( string $uri\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u043d\u043e\u0432\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 XMLWriter, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f uri \u0434\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430.  \n  \n"},"XMLWriter::outputMemory\nxmlwriter_output_memory\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0442\u0438\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0431\u0443\u0444\u0435\u0440","syntax":"\n   string XMLWriter::outputMemory\n    ([ bool $flush = true\n  ] )\n\n   string xmlwriter_output_memory\n    ( resource $xmlwriter\n   [, bool $flush = true\n  ] )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0431\u0443\u0444\u0435\u0440.\n  \n"},"XMLWriter::setIndentString\nxmlwriter_set_indent_string\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u0443\u044e \u0434\u043b\u044f \u043e\u0442\u0441\u0442\u0443\u043f\u043e\u0432","syntax":"\n   bool XMLWriter::setIndentString\n    ( string $indentString\n   )\n\n   bool xmlwriter_set_indent_string\n    ( resource $xmlwriter\n   , string $indentString\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u043e\u0442\u0441\u0442\u0443\u043f\u0430 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\/\u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430\n   \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0438\u0440\u0443\u044e\u0449\u0435\u043c XML.   \n  \n"},"XMLWriter::setIndent\nxmlwriter_set_indent\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0438\u043b\u0438 \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u043e\u0442\u0441\u0442\u0443\u043f\u044b","syntax":"\n   bool XMLWriter::setIndent\n    ( bool $indent\n   )\n\n   bool xmlwriter_set_indent\n    ( resource $xmlwriter\n   , bool $indent\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0438\u043b\u0438 \u043e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043e\u0442\u0441\u0442\u0443\u043f\u044b.\n  \n"},"XMLWriter::startAttributeNS\nxmlwriter_start_attribute_ns\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u0430\u0442\u0440\u0438\u0431\u0443\u0442 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430 \u0438\u043c\u0435\u043d","syntax":"\n   bool XMLWriter::startAttributeNS\n    ( string $prefix\n   , string $name\n   , string $uri\n   )\n\n   bool xmlwriter_start_attribute_ns\n    ( resource $xmlwriter\n   , string $prefix\n   , string $name\n   , string $uri\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u041d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u0430\u0442\u0440\u0438\u0431\u0443\u0442 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430 \u0438\u043c\u0435\u043d.\n  \n"},"XMLWriter::startAttribute\nxmlwriter_start_attribute\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0439 \u0430\u0442\u0440\u0438\u0431\u0443\u0442","syntax":"\n   bool XMLWriter::startAttribute\n    ( string $name\n   )\n\n   bool xmlwriter_start_attribute\n    ( resource $xmlwriter\n   , string $name\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u041d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u0430\u0442\u0440\u0438\u0431\u0443\u0442.\n  \n"},"XMLWriter::startCData\nxmlwriter_start_cdata\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0439 \u0442\u044d\u0433 CDATA","syntax":"\n   bool XMLWriter::startCData\n    ( void\n   )\n\n   bool xmlwriter_start_cdata\n    ( resource $xmlwriter\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u041d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 CDATA.\n  \n"},"XMLWriter::startComment\nxmlwriter_start_comment\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 1.0.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439","syntax":"\n   bool XMLWriter::startComment\n    ( void\n   )\n\n   bool xmlwriter_start_comment\n    ( resource $xmlwriter\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u041d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439.\n  \n"},"XMLWriter::startDocument\nxmlwriter_start_document\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0442\u044d\u0433 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430","syntax":"\n   bool XMLWriter::startDocument\n    ([ string $version = 1.0\n   [, string $encoding = NULL\n   [, string $standalone\n  ]]] )\n\n   bool xmlwriter_start_document\n    ( resource $xmlwriter\n   [, string $version = 1.0\n   [, string $encoding = NULL\n   [, string $standalone\n  ]]] )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u041d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442.\n  \n"},"XMLWriter::startDTDAttlist\nxmlwriter_start_dtd_attlist\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432 DTD","syntax":"\n   bool XMLWriter::startDTDAttlist\n    ( string $name\n   )\n\n   bool xmlwriter_start_dtd_attlist\n    ( resource $xmlwriter\n   , string $name\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0421\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432 DTD.\n  \n"},"XMLWriter::startDTDElement\nxmlwriter_start_dtd_element\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 DTD","syntax":"\n   bool XMLWriter::startDTDElement\n    ( string $qualifiedName\n   )\n\n   bool xmlwriter_start_dtd_element\n    ( resource $xmlwriter\n   , string $qualifiedName\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u041d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 DTD.\n  \n"},"XMLWriter::startDTDEntity\nxmlwriter_start_dtd_entity\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0443\u044e \u0437\u0430\u043f\u0438\u0441\u044c DTD","syntax":"\n   bool XMLWriter::startDTDEntity\n    ( string $name\n   , bool $isparam\n   )\n\n   bool xmlwriter_start_dtd_entity\n    ( resource $xmlwriter\n   , string $name\n   , bool $isparam\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u041d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u044c DTD.\n  \n"},"XMLWriter::startDTD\nxmlwriter_start_dtd\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 DTD \u0442\u044d\u0433","syntax":"\n   bool XMLWriter::startDTD\n    ( string $qualifiedName\n   [, string $publicId\n   [, string $systemId\n  ]] )\n\n   bool xmlwriter_start_dtd\n    ( resource $xmlwriter\n   , string $qualifiedName\n   [, string $publicId\n   [, string $systemId\n  ]] )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u041d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 DTD.\n  \n"},"XMLWriter::startElementNS\nxmlwriter_start_element_ns\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0439 \u0442\u0435\u0433 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430 \u0438\u043c\u0435\u043d","syntax":"\n   bool XMLWriter::startElementNS\n    ( string $prefix\n   , string $name\n   , string $uri\n   )\n\n   bool xmlwriter_start_element_ns\n    ( resource $xmlwriter\n   , string $prefix\n   , string $name\n   , string $uri\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u041d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430 \u0438\u043c\u0435\u043d.\n  \n"},"XMLWriter::startElement\nxmlwriter_start_element\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u0442\u044d\u0433 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430","syntax":"\n   bool XMLWriter::startElement\n    ( string $name\n   )\n\n   bool xmlwriter_start_element\n    ( resource $xmlwriter\n   , string $name\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u041d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442.\n  \n"},"XMLWriter::startPI\nxmlwriter_start_pi\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0439 \u0442\u044d\u0433 PI","syntax":"\n   bool XMLWriter::startPI\n    ( string $target\n   )\n\n   bool xmlwriter_start_pi\n    ( resource $xmlwriter\n   , string $target\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u041d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u0442\u0435\u0433 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 (PI).\n  \n"},"XMLWriter::text\nxmlwriter_text\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0417\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0442\u0435\u043a\u0441\u0442","syntax":"\n   bool XMLWriter::text\n    ( string $content\n   )\n\n   bool xmlwriter_text\n    ( resource $xmlwriter\n   , string $content\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0417\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0442\u0435\u043a\u0441\u0442.\n  \n"},"XMLWriter::writeAttributeNS\nxmlwriter_write_attribute_ns\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0417\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u043e\u043b\u043d\u044b\u0439 \u0430\u0442\u0440\u0438\u0431\u0443\u0442 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430 \u0438\u043c\u0435\u043d","syntax":"\n   bool XMLWriter::writeAttributeNS\n    ( string $prefix\n   , string $name\n   , string $uri\n   , string $content\n   )\n\n   bool xmlwriter_write_attribute_ns\n    ( resource $xmlwriter\n   , string $prefix\n   , string $name\n   , string $uri\n   , string $content\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0417\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u043d\u044b\u0439 \u0430\u0442\u0440\u0438\u0431\u0443\u0442 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430 \u0438\u043c\u0435\u043d.\n  \n"},"XMLWriter::writeAttribute\nxmlwriter_write_attribute\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0417\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u043e\u043b\u043d\u044b\u0439 \u0430\u0442\u0440\u0438\u0431\u0443\u0442","syntax":"\n   bool XMLWriter::writeAttribute\n    ( string $name\n   , string $value\n   )\n\n   bool xmlwriter_write_attribute\n    ( resource $xmlwriter\n   , string $name\n   , string $value\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0417\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u043d\u044b\u0439 \u0430\u0442\u0440\u0438\u0431\u0443\u0442.\n  \n"},"XMLWriter::writeCData\nxmlwriter_write_cdata\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0417\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u043e\u043b\u043d\u044b\u0439 \u0442\u044d\u0433 CDATA","syntax":"\n   bool XMLWriter::writeCData\n    ( string $content\n   )\n\n   bool xmlwriter_write_cdata\n    ( resource $xmlwriter\n   , string $content\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0417\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u043d\u044b\u0439 \u0442\u044d\u0433 CDATA.\n  \n"},"XMLWriter::writeComment\nxmlwriter_write_comment\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0417\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u043e\u043b\u043d\u044b\u0439 \u0442\u044d\u0433 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f","syntax":"\n   bool XMLWriter::writeComment\n    ( string $content\n   )\n\n   bool xmlwriter_write_comment\n    ( resource $xmlwriter\n   , string $content\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0417\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u043d\u044b\u0439 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439.\n  \n"},"XMLWriter::writeDTDAttlist\nxmlwriter_write_dtd_attlist\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0417\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u043e\u043b\u043d\u044b\u0439 \u0442\u044d\u0433 DTD AttList","syntax":"\n   bool XMLWriter::writeDTDAttlist\n    ( string $name\n   , string $content\n   )\n\n   bool xmlwriter_write_dtd_attlist\n    ( resource $xmlwriter\n   , string $name\n   , string $content\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0417\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432 DTD.\n  \n"},"XMLWriter::writeDTDElement\nxmlwriter_write_dtd_element\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0417\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u043e\u043b\u043d\u044b\u0439 \u0442\u044d\u0433 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 DTD","syntax":"\n   bool XMLWriter::writeDTDElement\n    ( string $name\n   , string $content\n   )\n\n   bool xmlwriter_write_dtd_element\n    ( resource $xmlwriter\n   , string $name\n   , string $content\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0417\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u043d\u044b\u0439 \u0442\u044d\u0433 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 DTD.\n  \n"},"XMLWriter::writeDTDEntity\nxmlwriter_write_dtd_entity\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0417\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u043e\u043b\u043d\u044b\u0439 \u0442\u044d\u0433 DTD \u0437\u0430\u043f\u0438\u0441\u0438","syntax":"\n   bool XMLWriter::writeDTDEntity\n    ( string $name\n   , string $content\n   , bool $pe\n   , string $pubid\n   , string $sysid\n   , string $ndataid\n   )\n\n   bool xmlwriter_write_dtd_entity\n    ( resource $xmlwriter\n   , string $name\n   , string $content\n   , bool $pe\n   , string $pubid\n   , string $sysid\n   , string $ndataid\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0417\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u043d\u0443\u044e DTD \u0437\u0430\u043f\u0438\u0441\u044c.\n  \n"},"XMLWriter::writeDTD\nxmlwriter_write_dtd\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0417\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u043e\u043b\u043d\u044b\u0439 \u0442\u044d\u0433 DTD","syntax":"\n   bool XMLWriter::writeDTD\n    ( string $name\n   [, string $publicId\n   [, string $systemId\n   [, string $subset\n  ]]] )\n\n   bool xmlwriter_write_dtd\n    ( resource $xmlwriter\n   , string $name\n   [, string $publicId\n   [, string $systemId\n   [, string $subset\n  ]]] )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0417\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u043d\u044b\u0439 \u0442\u044d\u0433 DTD.\n  \n"},"XMLWriter::writeElementNS\nxmlwriter_write_element_ns\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0417\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u043e\u043b\u043d\u043e\u0435 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u043e \u0438\u043c\u0435\u043d \u0442\u0435\u0433\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430","syntax":"\n   bool XMLWriter::writeElementNS\n    ( string $prefix\n   , string $name\n   , string $uri\n   [, string $content\n  ] )\n\n   bool xmlwriter_write_element_ns\n    ( resource $xmlwriter\n   , string $prefix\n   , string $name\n   , string $uri\n   [, string $content\n  ] )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0417\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u043d\u043e\u0435 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u043e \u0438\u043c\u0435\u043d \u0442\u0435\u0433\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430.\n  \n"},"XMLWriter::writeElement\nxmlwriter_write_element\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0417\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u043e\u043b\u043d\u044b\u0439 \u0442\u0435\u0433 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430","syntax":"\n   bool XMLWriter::writeElement\n    ( string $name\n   [, string $content\n  ] )\n\n   bool xmlwriter_write_element\n    ( resource $xmlwriter\n   , string $name\n   [, string $content\n  ] )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0417\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u043d\u044b\u0439 \u0442\u0435\u0433 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430.\n  \n"},"XMLWriter::writePI\nxmlwriter_write_pi\n":{"version":"(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)","shortdesc":"\u0417\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 (PI)","syntax":"\n   bool XMLWriter::writePI\n    ( string $target\n   , string $content\n   )\n\n   bool xmlwriter_write_pi\n    ( resource $xmlwriter\n   , string $target\n   , string $content\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u0417\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438.   \n  \n"},"XMLWriter::writeRaw\nxmlwriter_write_raw\n":{"version":"(PHP 5 >= 5.2.0, PECL xmlwriter >= 2.0.4)","shortdesc":"\u041f\u0438\u0448\u0435\u0442 \u043d\u0435\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0439 XML-\u0442\u0435\u043a\u0441\u0442","syntax":"\n   bool XMLWriter::writeRaw\n    ( string $content\n   )\n\n   bool xmlwriter_write_raw\n    ( resource $xmlwriter\n   , string $content\n   )\n","desc":"\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c\n\n   \u041f\u0438\u0448\u0435\u0442 \u043d\u0435\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0439 XML-\u0442\u0435\u043a\u0441\u0442.\n  \n"},"xslt_backend_info":{"version":"(PHP 4 >= 4.3.0)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u0445, \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u0438 \u043a\u043e\u043c\u043f\u0438\u043b\u044f\u0446\u0438\u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f \n   (backend)\n  ","syntax":"\n   string <b>xslt_backend_info<\/b>\n    ( void\n   )","desc":"\n    xslt_backend_info() \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u0445, \n   \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u0438 \u043a\u043e\u043c\u043f\u0438\u043b\u044f\u0446\u0438\u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f (backend).\n  "},"xslt_backend_name":{"version":"(PHP 4 >= 4.3.0)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f\n  ","syntax":"\n   string <b>xslt_backend_name<\/b>\n    ( void\n   )","desc":"\n    xslt_backend_name() \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438\u043c\u044f \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f (backend).\n  "},"xslt_backend_version":{"version":"(PHP 4 >= 4.3.0)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u043e\u043c\u0435\u0440 \u0432\u0435\u0440\u0441\u0438\u0438 Sablotron\n  ","syntax":"\n   string <b>xslt_backend_version<\/b>\n    ( void\n   )","desc":"\n    xslt_backend_version() \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043d\u043e\u043c\u0435\u0440 \u0432\u0435\u0440\u0441\u0438\u0438\n   Sablotron.\n  "},"xslt_create":{"version":"(PHP 4 >= 4.0.3)","shortdesc":"\n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 XSLT-\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\n  ","syntax":"\n   resource <b>xslt_create<\/b>\n    ( void\n   )","desc":"\n   \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 XSLT-\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0439 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 XSLT \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438, \u0438\n   \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0435\u0433\u043e \u0440\u0435\u0441\u0443\u0440\u0441.\n  "},"xslt_errno":{"version":"(PHP 4 >= 4.0.3)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u0434 \u043e\u0448\u0438\u0431\u043a\u0438","syntax":"\n   int <b>xslt_errno<\/b>\n    ( resource $xh\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u0434 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043e\u0448\u0438\u0431\u043a\u0438, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u0435\u0434\u0448\u0435\u0439 \u0432 \u0440\u0430\u0431\u043e\u0442\u0435 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \n   XSLT \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430.\n  "},"xslt_error":{"version":"(PHP 4 >= 4.0.3)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435\n  ","syntax":"\n   string <b>xslt_error<\/b>\n    ( resource $xh\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0443\u044e \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043e\u0448\u0438\u0431\u043a\u0438, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u0435\u0434\u0448\u0435\u0439 \u0432\n   \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435 \u0440\u0430\u0431\u043e\u0442\u044b XSLT-\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430.\n  "},"xslt_free":{"version":"(PHP 4 >= 4.0.3)","shortdesc":"\n   \u041e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0435\u043d\u0438\u0435 XSLT-\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430\n  ","syntax":"\n   void <b>xslt_free<\/b>\n    ( resource $xh\n   )","desc":"\n   \u041e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u0435\u0442 \u0440\u0435\u0441\u0443\u0440\u0441, \u0437\u0430\u043d\u044f\u0442\u044b\u0439 XSLT-\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u043e\u043c.\n  "},"xslt_getopt":{"version":"(PHP 4 >= 4.3.0)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e XSLT-\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430\n  ","syntax":"\n   int <b>xslt_getopt<\/b>\n    ( resource $processor\n   )","desc":"\n    xslt_getopt() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a\n   XSLT-\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430 processor.\n  "},"xslt_process":{"version":"(PHP 4 >= 4.0.3)","shortdesc":"\n   \u0417\u0430\u043f\u0443\u0441\u043a XSLT \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f\n  ","syntax":"\n   mixed <b>xslt_process<\/b>\n    ( resource $xh\n   , string $xmlcontainer\n   , string $xslcontainer\n   [, string $resultcontainer\n   [, array $arguments\n   [, array $parameters\n  ]]] )","desc":"\n    xslt_process() - \u0433\u043b\u0430\u0432\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f\n   XSLT. \u041e\u043d\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c XSLT\n   \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043a \u043b\u044e\u0431\u043e\u043c\u0443 \u0442\u0438\u043f\u0443 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 - \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432. \u042d\u0442\u043e\n   \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e \u0431\u0443\u0444\u0435\u0440\u043e\u0432 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432 - \u043a\u043e\u043d\u0446\u0435\u043f\u0446\u0438\u044f, \u0432\u0437\u044f\u0442\u0430\u044f\n   \u0438\u0437 Sablotron XSLT \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430\n   (\u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u044d\u0442\u043e \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e XSLT\n   \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440). \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u044b - \u0444\u0430\u0439\u043b\u044b \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0434\u043b\u044f \n   \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f.\n  "},"xslt_set_base":{"version":"(PHP 4 >= 4.0.5)","shortdesc":"\n   \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0431\u0430\u0437\u043e\u0432\u043e\u0433\u043e URI \u0434\u043b\u044f \u0432\u0441\u0435\u0445 XSLT \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0439\n  ","syntax":"\n   void <b>xslt_set_base<\/b>\n    ( resource $xh\n   , string $uri\n   )","desc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0431\u0430\u0437\u043e\u0432\u043e\u0433\u043e URI \u0434\u043b\u044f \u0432\u0441\u0435\u0445 XSLT\n   \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0439. \u042d\u0442\u043e\u0442 URI \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0432 Xpath \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f\u0445 \u0434\u043b\u044f \u0440\u0430\u0437\u0431\u043e\u0440\u0430\n   document() \u0438 \u0434\u0440\u0443\u0433\u0438\u0445 \u043a\u043e\u043c\u0430\u043d\u0434, \u0438\u043c\u0435\u044e\u0449\u0438\u0445 \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u0432\u043d\u0435\u0448\u043d\u0438\u043c \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0430\u043c. \u0422\u0430\u043a\u0436\u0435 \u043e\u043d\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u044f URI \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432\n   <xsl:include> \u0438\n   <xsl:import>.\n  "},"xslt_set_encoding":{"version":"(PHP 4 >= 4.0.5)","shortdesc":"\n   \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 \u0434\u043b\u044f \u0440\u0430\u0437\u0431\u043e\u0440\u0430 XML \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432\n  ","syntax":"\n   void <b>xslt_set_encoding<\/b>\n    ( resource $xh\n   , string $encoding\n   )","desc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 XSLT \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0439. \u041f\u0440\u0438\n   \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u0434\u043b\u044f XSLT \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\n   Sablotron \u044d\u0442\u0430 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430, \u0435\u0441\u043b\u0438\n   Sablotron \u043a\u043e\u043c\u043f\u0438\u043b\u0438\u0440\u043e\u0432\u0430\u043b\u0441\u044f \u0441 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u043e\u0439 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043e\u043a.\n  "},"xslt_set_error_handler":{"version":"(PHP 4 >= 4.0.4)","shortdesc":"\n   \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a \u0434\u043b\u044f XSLT-\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430\n  ","syntax":"\n   void <b>xslt_set_error_handler<\/b>\n    ( resource $xh\n   , mixed $handler\n   )\n\n         error_handler\n         ( resource $xh\n        , int $error_level\n        , int $error_code\n        , array $messages\n        )\n","desc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043e\u0448\u0438\u0431\u043e\u043a \u0434\u043b\u044f XSLT-\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430,\n   \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c xh. \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0431\u0443\u0434\u0435\u0442\n   \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u0441\u043b\u0443\u0447\u0430\u0435\u0442 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043e\u043a \u0432 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435\n   XSLT \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f (\u0442\u0430\u043a\u0436\u0435 \u043e\u043d\u0430 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u0440\u0438\n   \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f\u0445).\n  "},"xslt_set_log":{"version":"(PHP 4 >= 4.0.6)","shortdesc":"\n   \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 \u0436\u0443\u0440\u043d\u0430\u043b\u0430 \u0434\u043b\u044f \u0437\u0430\u043f\u0438\u0441\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 XSLT \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430\n  ","syntax":"\n   void <b>xslt_set_log<\/b>\n    ( resource $xh\n   [, mixed $log\n  ] )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0437\u0430\u0434\u0430\u0442\u044c \u0444\u0430\u0439\u043b, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0443\u0442 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f\n   XSLT-\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f\n   XSLT-\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430 \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0442\u0441\u044f \u043e\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0430\u0445, \u043e\u043d\u0438\n   \u043d\u0435 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f\u043c\u0438 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0430\u0445, \u043d\u043e \u0442\u0430\u043a\u0436\u0435 \u0437\u0430\u0432\u0438\u0441\u044f\u0442 \u043e\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f\n   XSLT-\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430. \u042d\u0442\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043f\u043e\u043b\u0435\u0437\u043d\u044b \u0434\u043b\u044f\n   \u043e\u0442\u043b\u0430\u0434\u043a\u0438 XSLT \u0432 \u0441\u043b\u0443\u0447\u0430\u044f\u0445, \u043a\u043e\u0433\u0434\u0430 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442\n   \u043d\u0435\u043d\u0430\u0434\u043b\u0435\u0436\u0430\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c.\n  "},"xslt_set_object":{"version":"(PHP 4 >= 4.3.0)","shortdesc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0431\u0443\u0434\u0443\u0442 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b callback-\u0444\u0443\u043d\u043a\u0446\u0438\u0438\n  ","syntax":"\n   bool <b>xslt_set_object<\/b>\n    ( resource $processor\n   , object &$obj\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c processor \u0432\u043d\u0443\u0442\u0440\u0438\n   \u043e\u0431\u044a\u0435\u043a\u0442\u0430 object \u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u0441\u0435 callback-\u0444\u0443\u043d\u043a\u0446\u0438\u0438\n   \u043a\u0430\u043a \u043c\u0435\u0442\u043e\u0434\u044b \u044d\u0442\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430.\n  "},"xslt_set_sax_handler":{"version":"(PHP 4 >= 4.0.3)","shortdesc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 SAX \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0434\u043b\u044f XSLT-\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430\n  ","syntax":"\n   void <b>xslt_set_sax_handler<\/b>\n    ( resource $xh\n   , array $handlers\n   )","desc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 SAX \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e XSLT-\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430\n   xh. \n  "},"xslt_set_sax_handlers":{"version":"(PHP 4 >= 4.0.6)","shortdesc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 SAX \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u0432\u044b\u0437\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u0440\u0430\u0437\u0431\u043e\u0440\u0430 XML \u0434\u043e\u043a\u0443\u043c\u043d\u0435\u043d\u0442\u0430\n  ","syntax":"\n   void <b>xslt_set_sax_handlers<\/b>\n    ( resource $processor\n   , array $handlers\n   )\n\n           start_doc\n           ( resource $processor\n          )\n\n           end_doc\n           ( resource $processor\n          )\n\n           start_element\n           ( resource $processor\n          , string $name\n          , array $attributes\n          )\n\n           end_element\n           ( resource $processor\n          , string $name\n          )\n\n           start_namespace\n           ( resource $processor\n          , string $prefix\n          , string $uri\n          )\n\n           end_namespace\n           ( resource $processor\n          , string $prefix\n          )\n\n           comment\n           ( resource $processor\n          , string $contents\n          )\n\n           pi\n           ( resource $processor\n          , string $target\n          , string $contents\n          )\n\n           characters\n           ( resource $processor\n          , string $contents\n          )\n","desc":"\n    xslt_set_sax_handlers() \u0437\u0430\u0434\u0430\u0435\u0442 SAX \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \n   handlers \u0434\u043b\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0438 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0440\u0435\u0441\u0443\u0440\u0441\u0430\n   XSLT-\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430 processor.\n  "},"xslt_set_scheme_handler":{"version":"(PHP 4 >= 4.0.5)","shortdesc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u0441\u0445\u0435\u043c\u044b \u0434\u043b\u044f XSLT-\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430\n  ","syntax":"\n   void <b>xslt_set_scheme_handler<\/b>\n    ( resource $xh\n   , array $handlers\n   )","desc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u0441\u0445\u0435\u043c\u044b \u0434\u043b\u044f \u0440\u0435\u0441\u0443\u0440\u0441\u0430 XSLT-\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430\n   xh. \n  "},"xslt_set_scheme_handlers":{"version":"(PHP 4 >= 4.0.6)","shortdesc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u0441\u0445\u0435\u043c\u044b \u0434\u043b\u044f XSLT-\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430\n  ","syntax":"\n   void <b>xslt_set_scheme_handlers<\/b>\n    ( resource $xh\n   , array $handlers\n   )","desc":"\n   \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u0441\u0445\u0435\u043c\u044b (XPath \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438) \u0434\u043b\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430.\n  "},"xslt_setopt":{"version":"(PHP 4 >= 4.3.0)","shortdesc":"\n   \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a XSLT-\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430\n  ","syntax":"\n   mixed <b>xslt_setopt<\/b>\n    ( resource $processor\n   , int $newmask\n   )","desc":"\n    xslt_setopt() \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f\n   \u043c\u0430\u0441\u043a\u0443 newmask, \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e XSLT-\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430\n   processor.\n  "},"yaml_emit_file":{"version":"(PECL yaml >= 0.5.0)","shortdesc":"\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 YAML-\u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u0444\u0430\u0439\u043b","syntax":"\n   bool <b>yaml_emit_file<\/b>\n    ( string $filename\n   , mixed $data\n   [, int $encoding = YAML_ANY_ENCODING\n   [, int $linebreak = YAML_ANY_BREAK\n   [, array $callbacks\n  ]]] )","desc":"\n   \u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 YAML-\u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0438\u0437 \u0434\u0430\u043d\u043d\u044b\u0445 data \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\n   \u0432 filename.\n  "},"yaml_emit":{"version":"(PECL yaml >= 0.5.0)","shortdesc":"Returns the YAML representation of a value","syntax":"\n   string <b>yaml_emit<\/b>\n    ( mixed $data\n   [, int $encoding = YAML_ANY_ENCODING\n   [, int $linebreak = YAML_ANY_BREAK\n   [, array $callbacks\n  ]]] )","desc":"\n   Generate a YAML representation of the provided data.\n  "},"yaml_parse_file":{"version":"(PECL yaml >= 0.4.0)","shortdesc":"Parse a YAML stream from a file","syntax":"\n   mixed <b>yaml_parse_file<\/b>\n    ( string $filename\n   [, int $pos = 0\n   [, int &$ndocs\n   [, array $callbacks\n  ]]] )","desc":"\n   Convert all or part of a YAML document stream read from a file to a PHP variable.\n  "},"yaml_parse_url":{"version":"(PECL yaml >= 0.4.0)","shortdesc":"Parse a Yaml stream from a URL","syntax":"\n   mixed <b>yaml_parse_url<\/b>\n    ( string $url\n   [, int $pos = 0\n   [, int &$ndocs\n   [, array $callbacks\n  ]]] )","desc":"\n   Convert all or part of a YAML document stream read from a URL to a PHP variable.\n  "},"yaml_parse":{"version":"(PECL yaml >= 0.4.0)","shortdesc":"Parse a YAML stream","syntax":"\n   mixed <b>yaml_parse<\/b>\n    ( string $input\n   [, int $pos = 0\n   [, int &$ndocs\n   [, array $callbacks\n  ]]] )","desc":"\n   Convert all or part of a YAML document stream to a PHP variable.\n  "},"yaz_addinfo":{"version":"(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u0448\u0438\u0431\u043a\u0438","syntax":"\n   string <b>yaz_addinfo<\/b>\n    ( resource $id\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043a \n   \u0441\u0435\u0440\u0432\u0435\u0440\u0443.\n  "},"yaz_ccl_conf":{"version":"(PHP 4 >= 4.0.5, PECL yaz >= 0.9.0)","shortdesc":"\u041a\u043e\u0444\u0438\u0433\u0443\u0440\u0438\u0440\u0443\u0435\u0442 CCL-\u043f\u0430\u0440\u0441\u0435\u0440","syntax":"\n   void <b>yaz_ccl_conf<\/b>\n    ( resource $id\n   , array $config\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0438\u0440\u0443\u0435\u0442 CCL-\u043f\u0430\u0440\u0441\u0435\u0440 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f\u043c\u0438 \n   \u0442\u043e\u0447\u0435\u043a \u0434\u043e\u0441\u0442\u0443\u043f\u0430 (CCL-\u043a\u0432\u0430\u043b\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u043e\u0432) \u0438 \u0438\u0445 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0432 RPN.\n  "},"yaz_ccl_parse":{"version":"(PHP 4 >= 4.0.5, PECL yaz >= 0.9.0)","shortdesc":"Invoke CCL Parser","syntax":"\n   bool <b>yaz_ccl_parse<\/b>\n    ( resource $id\n   , string $query\n   , array &$result\n   )","desc":"\n   This function invokes a CCL parser. It converts a given CCL FIND query to\n   an RPN query which may be passed to the  yaz_search() \n   function to perform a search.\n  "},"yaz_close":{"version":"(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 YAZ","syntax":"\n   bool <b>yaz_close<\/b>\n    ( resource $id\n   )","desc":"\n   \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c\u043e\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c id.\n  "},"yaz_connect":{"version":"(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)","shortdesc":"\n   \u041f\u043e\u0434\u0433\u043e\u0442\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c Z39.50\n  ","syntax":"\n   mixed <b>yaz_connect<\/b>\n    ( string $zurl\n   [, mixed $options\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0445\u0430 \u0438 \u043d\u043e\u043b\u044c\n   \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u0448\u0438\u0431\u043a\u0438.\n  "},"yaz_database":{"version":"(PHP 4 >= 4.0.6, PECL yaz >= 0.9.0)","shortdesc":"\n   Specifies the databases within a session\n  ","syntax":"\n   bool <b>yaz_database<\/b>\n    ( resource $id\n   , string $databases\n   )","desc":"\n   This function allows you to change databases within a session by \n   specifying one or more databases to be used in search, retrieval, etc.\n   - overriding databases specified in call to \n    yaz_connect().\n  "},"yaz_element":{"version":"(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)","shortdesc":"\n   Specifies Element-Set Name for retrieval\n  ","syntax":"\n   bool <b>yaz_element<\/b>\n    ( resource $id\n   , string $elementset\n   )","desc":"\n   This function sets the element set name for retrieval.\n  "},"yaz_errno":{"version":"(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)","shortdesc":"Returns error number","syntax":"\n   int <b>yaz_errno<\/b>\n    ( resource $id\n   )","desc":"\n   Returns an error number for the server (last request) identified by\n   id.\n  "},"yaz_error":{"version":"(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)","shortdesc":"Returns error description","syntax":"\n   string <b>yaz_error<\/b>\n    ( resource $id\n   )","desc":"\n    yaz_error() returns an English text message\n   corresponding to the last error number as returned by\n    yaz_errno().\n  "},"yaz_es_result":{"version":"(PHP 4 >= 4.2.0, PECL yaz >= 0.9.0)","shortdesc":"\n   Inspects Extended Services Result\n  ","syntax":"\n   array <b>yaz_es_result<\/b>\n    ( resource $id\n   )","desc":"\n   This function inspects the last returned Extended Service\n   result from a server. An Extended Service is  initiated\n   by either  yaz_item_order() or\n    yaz_es().\n  "},"yaz_es":{"version":"(PECL yaz >= 0.9.0)","shortdesc":"\n   Prepares for an Extended Service Request\n  ","syntax":"\n   void <b>yaz_es<\/b>\n    ( \n    resource $id\n   \n   , \n    string $type\n   \n   , \n    array $args\n   \n   )","desc":"\n   This function prepares for an Extended Service Request.\n   Extended Services is family of various Z39.50 facilities, such\n   as Record Update, Item Order, Database administration etc.\n  "},"yaz_get_option":{"version":"(PECL yaz >= 0.9.0)","shortdesc":"Returns value of option for connection","syntax":"\n   string <b>yaz_get_option<\/b>\n    ( resource $id\n   , string $name\n   )","desc":"\n   Returns the value of the option specified with name.\n  "},"yaz_hits":{"version":"(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)","shortdesc":"Returns number of hits for last search","syntax":"\n   int <b>yaz_hits<\/b>\n    ( resource $id\n   [, array &$searchresult\n  ] )","desc":"\n    yaz_hits() returns the number of hits for the last\n   search. \n  "},"yaz_itemorder":{"version":"(PHP 4 >= 4.0.5, PECL yaz >= 0.9.0)","shortdesc":"\n   Prepares for Z39.50 Item Order with an ILL-Request package\n  ","syntax":"\n   void <b>yaz_itemorder<\/b>\n    ( resource $id\n   , array $args\n   )","desc":"\n   This function prepares for an Extended Services request using the\n   Profile for the Use of Z39.50 Item Order Extended Service to\n   Transport ILL (Profile\/1). See \u00bb\u00a0this\n   and the \u00bb\u00a0specification.\n  "},"yaz_present":{"version":"(PHP 4 >= 4.0.5, PECL yaz >= 0.9.0)","shortdesc":"\n   Prepares for retrieval (Z39.50 present)\n  ","syntax":"\n   bool <b>yaz_present<\/b>\n    ( resource $id\n   )","desc":"\n   This function prepares for retrieval of records after a successful search.\n  "},"yaz_range":{"version":"(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)","shortdesc":"\n   Specifies a range of records to retrieve\n  ","syntax":"\n   void <b>yaz_range<\/b>\n    ( resource $id\n   , int $start\n   , int $number\n   )","desc":"\n   Specifies a range of records to retrieve.\n  "},"yaz_record":{"version":"(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)","shortdesc":"Returns a record","syntax":"\n   string <b>yaz_record<\/b>\n    ( resource $id\n   , int $pos\n   , string $type\n   )","desc":"\n   The  yaz_record() function inspects a record in the\n   current result set at the position specified by parameter\n   pos. \n  "},"yaz_scan_result":{"version":"(PHP 4 >= 4.0.5, PECL yaz >= 0.9.0)","shortdesc":"Returns Scan Response result","syntax":"\n   array <b>yaz_scan_result<\/b>\n    ( resource $id\n   [, array &$result\n  ] )","desc":"\n    yaz_scan_result() returns terms and associated\n   information as received from the server in the last performed\n    yaz_scan().\n  "},"yaz_scan":{"version":"(PHP 4 >= 4.0.5, PECL yaz >= 0.9.0)","shortdesc":"Prepares for a scan","syntax":"\n   void <b>yaz_scan<\/b>\n    ( resource $id\n   , string $type\n   , string $startterm\n   [, array $flags\n  ] )","desc":"\n   This function prepares for a Z39.50 Scan Request on the specified \n   connection.\n  "},"yaz_schema":{"version":"(PHP 4 >= 4.2.0, PECL yaz >= 0.9.0)","shortdesc":"\n   Specifies schema for retrieval\n  ","syntax":"\n   void <b>yaz_schema<\/b>\n    ( resource $id\n   , string $schema\n   )","desc":"\n    yaz_schema() specifies the schema for retrieval.\n  "},"yaz_search":{"version":"(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)","shortdesc":"Prepares for a search","syntax":"\n   bool <b>yaz_search<\/b>\n    ( resource $id\n   , string $type\n   , string $query\n   )","desc":"\n    yaz_search() prepares for a search on the given \n   connection.\n  "},"yaz_set_option":{"version":"(PECL yaz >= 0.9.0)","shortdesc":"Sets one or more options for connection","syntax":"\n   void <b>yaz_set_option<\/b>\n    ( resource $id\n   , string $name\n   , string $value\n   )\n\n   void <b>yaz_set_option<\/b>\n    ( resource $id\n   , array $options\n   )\n","desc":"\n   Sets one or more options on the given connection.\n  "},"yaz_sort":{"version":"(PHP 4 >= 4.0.7, PECL yaz >= 0.9.0)","shortdesc":"\u0417\u0430\u0434\u0430\u0435\u0442 \u043a\u0440\u0438\u0442\u0435\u0440\u0438\u0439 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438","syntax":"\n   void <b>yaz_sort<\/b>\n    ( resource $id\n   , string $criteria\n   )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0437\u0430\u0434\u0430\u0435\u0442 \u043a\u0440\u0438\u0442\u0435\u0440\u0438\u0439 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438 \u0438 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0443 \u043f\u043e Z39.50.\n  "},"yaz_syntax":{"version":"(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)","shortdesc":"\n   \u0417\u0430\u0434\u0430\u0435\u0442 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0438\u0442\u0430\u0435\u043c\u044b\u0439 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441 \u0434\u043b\u044f \u0438\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u043c\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438\n  ","syntax":"\n   void <b>yaz_syntax<\/b>\n    ( resource $id\n   , string $syntax\n   )","desc":"\n    yaz_syntax() \u0437\u0430\u0434\u0430\u0435\u0442 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0438\u0442\u0430\u0435\u043c\u044b\u0439 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441 \u0434\u043b\u044f \u0438\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u043c\u043e\u0439\n   \u0437\u0430\u043f\u0438\u0441\u0438\n  "},"yaz_wait":{"version":"(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)","shortdesc":"\u041e\u0436\u0438\u0434\u0430\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 Z39.50 \u0441\u0435\u0440\u0432\u0435\u0440\u0430\u043c\u0438","syntax":"\n   mixed <b>yaz_wait<\/b>\n    ([ array &$options\n  ] )","desc":"\n   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0441\u0435\u0442\u0435\u0432\u043e\u0435 (\u0431\u043b\u043e\u043a\u0438\u0440\u0443\u044e\u0449\u0435\u0435) \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0434\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430,\n   \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438\n    yaz_connect(),  yaz_search(), \n    yaz_present(),  yaz_scan() and \n    yaz_itemorder().\n  "},"yp_all":{"version":"(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5)","shortdesc":"Traverse the map and call a function on each entry","syntax":"\n   void <b>yp_all<\/b>\n    ( string $domain\n   , string $map\n   , string $callback\n   )","desc":"\n   "},"yp_cat":{"version":"(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5)","shortdesc":"Return an array containing the entire map","syntax":"\n   array <b>yp_cat<\/b>\n    ( string $domain\n   , string $map\n   )","desc":"\n   Returns all map entries.\n  "},"yp_err_string":{"version":"(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5)","shortdesc":"Returns the error string associated with the given error code","syntax":"\n   string <b>yp_err_string<\/b>\n    ( int $errorcode\n   )","desc":"\n   Returns the error message associated with the given error code.\n   Useful to indicate what exactly went wrong.\n  "},"yp_errno":{"version":"(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5)","shortdesc":"Returns the error code of the previous operation","syntax":"\n   int <b>yp_errno<\/b>\n    ( void\n   )","desc":"\n   Returns the error code of the previous operation.\n  "},"yp_first":{"version":"(PHP 4, PHP 5 <= 5.0.5)","shortdesc":"Returns the first key-value pair from the named map","syntax":"\n   array <b>yp_first<\/b>\n    ( string $domain\n   , string $map\n   )","desc":"\n   Gets the first key-value pair from the named map\n   in the named domain.\n  "},"yp_get_default_domain":{"version":"(PHP 4, PHP 5 <= 5.0.5)","shortdesc":"Fetches the machine's default NIS domain","syntax":"\n   string <b>yp_get_default_domain<\/b>\n    ( void\n   )","desc":"\n   Returns the default domain of the node. Can be used as the domain\n   parameter for successive NIS calls.\n  "},"yp_master":{"version":"(PHP 4, PHP 5 <= 5.0.5)","shortdesc":"Returns the machine name of the master NIS server for a map","syntax":"\n   string <b>yp_master<\/b>\n    ( string $domain\n   , string $map\n   )","desc":"\n   Returns the machine name of the master NIS server for a\n   map.\n  "},"yp_match":{"version":"(PHP 4, PHP 5 <= 5.0.5)","shortdesc":"Returns the matched line","syntax":"\n   string <b>yp_match<\/b>\n    ( string $domain\n   , string $map\n   , string $key\n   )","desc":"\n   Returns the value associated with the passed key\n   out of the specified map. \n  "},"yp_next":{"version":"(PHP 4, PHP 5 <= 5.0.5)","shortdesc":"Returns the next key-value pair in the named map","syntax":"\n   array <b>yp_next<\/b>\n    ( string $domain\n   , string $map\n   , string $key\n   )","desc":"\n   Returns the next key-value pair in the named map\n   after the specified key.\n  "},"yp_order":{"version":"(PHP 4, PHP 5 <= 5.0.5)","shortdesc":"Returns the order number for a map","syntax":"\n   int <b>yp_order<\/b>\n    ( string $domain\n   , string $map\n   )","desc":"\n   Gets the order number for a map.\n  "},"zend_logo_guid":{"version":"(PHP 4, PHP 5 < 5.5)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 Zend guid","syntax":"\n   string <b>zend_logo_guid<\/b>\n    ( void\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 ID, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0443\u0436\u0435\u043d \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043b\u043e\u0433\u043e\u0442\u0438\u043f\u0430\n   Zend, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435.\n  "},"zend_thread_id":{"version":"(PHP 5)","shortdesc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u043e\u0442\u043e\u043a\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f\n  ","syntax":"\n   int <b>zend_thread_id<\/b>\n    ( void\n   )","desc":"\n   \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u043e\u0442\u043e\u043a\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f.\n  "},"zend_version":{"version":"(PHP 4, PHP 5)","shortdesc":"\n   \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0432\u0435\u0440\u0441\u0438\u044e Zend \u0434\u0432\u0438\u0436\u043a\u0430\n  ","syntax":"\n   string <b>zend_version<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c \u0432\u0435\u0440\u0441\u0438\u0438 \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0449\u0435\u0433\u043e \u0432 \n   \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u044f\u0434\u0440\u0430 Zend Engine.\n  "},"zip_close":{"version":"(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 ZIP-\u0430\u0440\u0445\u0438\u0432\u0430","syntax":"\n   void <b>zip_close<\/b>\n    ( resource $zip\n   )","desc":"\n   \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 ZIP-\u0430\u0440\u0445\u0438\u0432\u0430.\n  "},"zip_entry_close":{"version":"(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)","shortdesc":"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438","syntax":"\n   bool <b>zip_entry_close<\/b>\n    ( resource $zip_entry\n   )","desc":"\n   \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438.\n  "},"zip_entry_compressedsize":{"version":"(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0436\u0430\u0442\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0444\u0430\u0439\u043b\u0430 \u0434\u043b\u044f \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438","syntax":"\n   int <b>zip_entry_compressedsize<\/b>\n    ( resource $zip_entry\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0436\u0430\u0442\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438.\n  "},"zip_entry_compressionmethod":{"version":"(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0435\u0442\u043e\u0434 \u0441\u0436\u0430\u0442\u0438\u044f \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438","syntax":"\n   string <b>zip_entry_compressionmethod<\/b>\n    ( resource $zip_entry\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0435\u0442\u043e\u0434 \u0441\u0436\u0430\u0442\u0438\u044f \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438,\n   \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0432 zip_entry.\n  "},"zip_entry_filesize":{"version":"(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0444\u0430\u0439\u043b\u0430 \u0434\u043b\u044f \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438","syntax":"\n   int <b>zip_entry_filesize<\/b>\n    ( resource $zip_entry\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438.\n  "},"zip_entry_name":{"version":"(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)","shortdesc":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438\u043c\u044f \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438","syntax":"\n   string <b>zip_entry_name<\/b>\n    ( resource $zip_entry\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438.\n  "},"zip_entry_open":{"version":"(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)","shortdesc":"\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e \u0434\u043b\u044f \u0447\u0442\u0435\u043d\u0438\u044f","syntax":"\n   bool <b>zip_entry_open<\/b>      \n    ( resource $zip\n   , resource $zip_entry\n   [, string $mode\n  ] )","desc":"\n   \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e, \u0432\u0445\u043e\u0434\u044f\u0449\u0443\u044e \u0432 ZIP-\u0430\u0440\u0445\u0438\u0432, \u0434\u043b\u044f \u0447\u0442\u0435\u043d\u0438\u044f.\n  "},"zip_entry_read":{"version":"(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)","shortdesc":"\u0427\u0438\u0442\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u0433\u043e \u0440\u0430\u043d\u0435\u0435 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438","syntax":"\n   string <b>zip_entry_read<\/b>\n    ( resource $zip_entry\n   [, int $length\n  ] )","desc":"\n   \u0427\u0438\u0442\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u0433\u043e \u0440\u0430\u043d\u0435\u0435 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438.\n  "},"zip_open":{"version":"(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)","shortdesc":"\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 ZIP-\u0430\u0440\u0445\u0438\u0432","syntax":"\n   resource <b>zip_open<\/b>\n    ( string $filename\n   )","desc":"\n   \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 ZIP-\u0430\u0440\u0445\u0438\u0432 \u0434\u043b\u044f \u0447\u0442\u0435\u043d\u0438\u044f.\n  "},"zip_read":{"version":"(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)","shortdesc":"\u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0437\u0430\u043f\u0438\u0441\u044c \u0432 ZIP-\u0430\u0440\u0445\u0438\u0432\u0435","syntax":"\n   resource <b>zip_read<\/b>\n    ( resource $zip\n   )","desc":"\n   \u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0437\u0430\u043f\u0438\u0441\u044c \u0432 ZIP-\u0430\u0440\u0445\u0438\u0432\u0435.\n  "},"zlib_decode":{"version":"(PHP 5 >= 5.4.0)","shortdesc":"\u0420\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u043b\u044e\u0431\u044b\u0435 raw\/gzip\/zlib \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435","syntax":"\n   string <b>zlib_decode<\/b>\n    ( string $data\n   [, string $max_decoded_len\n  ] )","desc":"\n   \u0420\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u043b\u044e\u0431\u044b\u0435 raw\/gzip\/zlib \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435.\n  "},"zlib_encode":{"version":"(PHP 5 >= 5.4.0)","shortdesc":"\u0417\u0430\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c","syntax":"\n   string <b>zlib_encode<\/b>\n    ( string $data\n   , string $encoding\n   [, string $level = -1\n  ] )","desc":"\n   \u0421\u0436\u0438\u043c\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c.\n  "},"zlib_get_coding_type":{"version":"(PHP 4 >= 4.3.2, PHP 5)","shortdesc":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u043e\u0441\u043e\u0431 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0439 \u0434\u043b\u044f \u0441\u0436\u0430\u0442\u0438\u044f \u0432\u044b\u0432\u043e\u0434\u0430","syntax":"\n   string <b>zlib_get_coding_type<\/b>\n    ( void\n   )","desc":"\n   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u043e\u0441\u043e\u0431 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0439 \u0434\u043b\u044f \u0441\u0436\u0430\u0442\u0438\u044f \u0432\u044b\u0432\u043e\u0434\u0430.\n  "}};
